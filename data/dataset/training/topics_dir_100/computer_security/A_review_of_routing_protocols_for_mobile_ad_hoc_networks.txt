University of Wollongong
Research Online
Faculty of Engineering and Information Sciences -
Papers Faculty of Engineering and Information Sciences
2004
A review of routing protocols for mobile ad hoc
networks
Mehran Abolhasan
University of Wollongong, mehran.abolhasan@uts.edu.au
Tadeusz Wysocki
University of Wollongong, wysocki@uow.edu.au
Eryk Dutkiewicz
Motorola Australia Research Centre, eryk@uow.edu.au
Research Online is the open access institutional repository for the University of Wollongong. For further information contact the UOW Library:
research-pubs@uow.edu.au
Publication Details
Abolhasan, M., Wysocki, T. & Dutkiewicz, E. (2004). A review of routing protocols for mobile ad hoc networks. Ad Hoc Networks, 2
(1), 1-22.
A review of routing protocols for mobile ad hoc networks
Abstract
The 1990s have seen a rapid growth of research interests in mobile ad hoc networking. The infrastructureless
and the dynamic nature of these networks demands new set of networking strategies to be implemented in
order to provide efficient end-to-end communication. This, along with the diverse application of these
networks in many different scenarios such as battlefield and disaster recovery, have seen MANETs being
researched by many different organisations and institutes. MANETs employ the traditional TCP/IP structure
to provide end-to-end communication between nodes. However, due to their mobility and the limited
resource in wireless networks, each layer in the TCP/IP model require redefinition or modifications to
function efficiently in MANETs. One interesting research area in MANET is routing. Routing in the MANETs
is a challenging task and has received a tremendous amount of attention from researches. This has led to
development of many different routing protocols for MANETs, and each author of each proposed protocol
argues that the strategy proposed provides an improvement over a number of different strategies considered in
the literature for a given network scenario. Therefore, it is quite difficult to determine which protocols may
perform best under a number of different network scenarios, such as increasing node density and traffic. In
this paper, we provide an overview of a wide range of routing protocols proposed in the literature. We also
provide a performance comparison of all routing protocols and suggest which protocols may perform best in
large networks.
Keywords
protocols, ad, hoc, review, routing, mobile, networks
Disciplines
Engineering | Science and Technology Studies
Publication Details
Abolhasan, M., Wysocki, T. & Dutkiewicz, E. (2004). A review of routing protocols for mobile ad hoc
networks. Ad Hoc Networks, 2 (1), 1-22.
This journal article is available at Research Online: http://ro.uow.edu.au/eispapers/1158
A review of routing protocols for mobile ad hoc networks 
 
Mehran Abolhasan
a, 
Tadeusz Wysocki
a, 
Eryk Dutkiewicz
b, 
 
a
 Telecommunication and Information Research Institute, University of Wollongong, Wollongong, NSW 2522, 
Australia 
b
 Motorola Australia Research Centre, 12 Lord St., Botany, NSW 2525, Australia 
 
Abstract 
The 1990s have seen a rapid growth of research interests in mobile ad hoc networking. The infrastructureless and the 
dynamic nature of these networks demands new set of networking strategies to be implemented in order to provide 
efficient end-to-end communication. This, along with the diverse application of these networks in many different 
scenarios such as battlefield and disaster recovery, have seen MANETs being researched by many different 
organisations and institutes. MANETs employ the traditional TCP/IP structure to provide end-to-end communication 
between nodes. However, due to their mobility and the limited resource in wireless networks, each layer in the TCP/IP 
model require redefinition or modifications to function efficiently in MANETs. One interesting research area in 
MANET is routing. Routing in the MANETs is a challenging task and has received a tremendous amount of attention 
from researches. This has led to development of many different routing protocols for MANETs, and each author of 
each proposed protocol argues that the strategy proposed provides an improvement over a number of different 
strategies considered in the literature for a given network scenario. Therefore, it is quite difficult to determine which 
protocols may perform best under a number of different network scenarios, such as increasing node density and traffic. 
In this paper, we provide an overview of a wide range of routing protocols proposed in the literature. We also provide 
a performance comparison of all routing protocols and suggest which protocols may perform best in large networks. 
 
Keywords: Mobile ad hoc networks; Routing protocols review 
 
 
  
1. Classification of current routing protocols 
The limited resources in MANETs have made designing of an efficient and reliable routing strategy a very challenging 
problem. An intelligent routing strategy is required to efficiently use the limited resources while at the same time 
being adaptable to the changing network conditions such as: network size, traffic density and network partitioning. In 
parallel with this, the routing protocol may need to provide different levels of QoS to different types of applications 
and users. 
Prior to the increased interests in wireless networking, in wired networks two main algorithms were used. These 
algorithms are commonly referred to as the link-state and distance vector algorithms. In link-state routing, each node 
maintains an up-to-date view of the network by periodically broadcasting the link-state costs of its neighbouring nodes 
to all other nodes using a flooding strategy. When each node receive an update packet, they update their view of the 
network and their link-state information by applying a shortest-path algorithm to choose the next hop node for each 
destination. In distance-vector routing, for every destination x, each node i maintains a set of distances D
x
ij where j 
ranges over the neighbours of node i. Node i selects a neighbour, k, to be the next hop for x if D
x
ik=minj{D
x
ij}. This 
allows each node to select the shortest path to each destination. The distance-vector information is updated at each 
node by a periodical dissemination of the current estimate of the shortest distance to every node [31]. The traditional 
link-state and distance-vector algorithm do not scale in large MANETs. This is because periodic or frequent route 
updates in large networks may consume significant part of the available bandwidth, increase channel contention and 
may require each node to frequently recharge their power supply. 
To overcome the problems associated with the link-state and distance-vector algorithms a number of routing protocols 
have been proposed for MANETs. These protocols can be classified into three different groups: global/proactive, on-
demand/reactive and hybrid. In proactive routing protocols, the routes to all the destination (or parts of the network) 
are determined at the start up, and maintained by using a periodic route update process. In reactive protocols, routes 
are determined when they are required by the source using a route discovery process. Hybrid routing protocols 
combine the basic properties of the first two classes of protocols into one. That is, they are both reactive and proactive 
in nature. Each group has a number of different routing strategies, which employ a flat or a hierarchical routing 
structure. 
2. Proactive routing protocols 
In proactive routing protocols, each node maintains routing information to every other node (or nodes located in a 
specific part) in the network. The routing information is usually kept in a number of different tables. These tables are 
periodically updated and/or if the network topology changes. The difference between these protocols exist in the way 
the routing information is updated,
1
 detected and the type of information kept at each routing table. Furthermore, each 
routing protocol may maintain different number of tables. This section describes a number of different proactive 
protocols and makes a performance comparison between them. That is illustrated in Table 1 and Table 2. Note that the 
performance metrics represent the worst case scenario for each routing protocol. 
Table 1. Basic characteristics of proactive routing protocols 
Protocol RS Number of tables 
Frequency of 
updates 
HM 
Critical 
nodes 
Characteristic feature 
DSDV F 2 
Periodic and as 
required 
Yes No Loop free 
WRP F 4 Periodic Yes No 
Loop freedom using predecessor 
info. 
GSR F 3 and a list
a
 Periodic and local
b
 No No Localised updates 
FSR F Same as GSR Periodic and local
b
 No No Controlled frequency of updates 
STAR H 1 and a 5 lists Conditional
c
 No No 
Employs LORA and/or ORA. 
Minimize CO 
DREAM F 1 Mobility based No No 
Controlled rate of updates by 
mobility and distance 
MMWN H Maintains a database Conditional No Yes, LM LORA and minimized CO 
CGSR H 2 Periodic No 
Yes, 
Clusterhead 
Clusterheads exchange routing 
information 
HSR H 
2 (link-state table and 
location management)
d
 
Periodic, within 
each subnet 
No 
Yes, 
Clusterhead 
Low CO and Hierarchical 
structure 
OLSR F 
3 (Routing, neighbour 
and topology table) 
Periodic Yes No Reduces CO using MPR 
TBRPF F 1 Table, 4 lists 
Periodic and 
differential 
Yes 
Yes, Parent 
node 
Broadcasting topology updates 
over a spanning tree 
R=routing structure; HM=hello message; H=hierarchical; F=flat; CO=control overhead; LORA=least overhead 
routing approach; ORA=optimum routing approach; LM=location manager. 
a
 GSR also has a list of all available neighbours. 
b
 In GSR and FSR link-state is periodically exchanged with neighbouring nodes. 
c
 In conditional update methods, the updates occur if a particular event occurs. 
d
 Number of link-state tables may vary according to the number of logical levels. 
 
Table 2. Complexity comparison of proactive routing protocols 
Protocol CT MO CO Advantages/disadvantages 
DSDV O(D·I) O(N) O(N) Loop free/high overhead 
WRP O(h) O(N
2
) O(N) Loop free/memory overhead 
GSR O(D·I) O(N
2
) O(N) 
Localized updates/high memory 
overhead 
FSR O(D·I) O(N
2
) O(N) 
Reduces CO/high memory overhead, 
reduced accuracy 
STAR O(D) O(N
2
) O(N) 
Low CO/high MO and processing 
overhead 
DREAM O(N·I) O(N) O(N) Low CO and MO/requires a GPS 
MMWN O(2D) O(N) O(X+E) 
Low CO/mobility management and 
cluster maintenance 
CGSR O(D) O(2N) O(N) 
Reduced CO/cluster formation and 
maintenance 
HSR O(D) O(N
2
·L)+O(S)+O(N/S)+O(N/n) O(n·L)/I+O(1)/J Low CO/location management 
OLSR O(D·I) O(N
2
) O(N
2
) 
Reduced CO and contention/2-hop 
neighbour knowledge required 
TBRPF 
O(D) or D+2 for 
link failure 
O(N
2
)+O(N)+O(N+V) O(N
2
) Low CO/High MO 
CT=convergence time; MO=memory overhead; CO=control overhead; (1)=indicates that a fixed number of update 
tables is transmitted; V=number of neighbouring nodes; N=number of nodes in the network; n=average number of 
logical nodes in the cluster; I=average update interval; D=diameter of the network; S=number of virtual IP subnets; 
h=height of the routing tree; X=total number of LMs (each cluster has an LM); J=nodes to home agent registration 
interval; L=number of hierarchical level. 
 
2.1. Destination-sequenced distance vector (DSDV) 
The DSDV algorithm [27] is a modification of DBF [3, 10], which guarantees loop free routes. It provides a single 
path to a destination, which is selected using the distance vector shortest path routing algorithm. In order to reduce the 
amount of overhead transmitted through the network, two types of update packets are used. These are referred to as a 
“full dump” and “incremental” packets. The full dump packet carries all the available routing information and the 
incremental packet carries only the information changed since the last full dump. The incremental update messages are 
sent more frequently than the full dump packets. However, DSDV still introduces large amounts of overhead to the 
network due to the requirement of the periodic update messages, and the overhead grows according to O(N
2
). 
Therefore the protocol will not scale in large network since a large portion of the network bandwidth is used in the 
updating procedures. 
2.2. Wireless routing protocol (WRP) 
The WRP protocol [22] also guarantees loops freedom and it avoids temporary routing loops by using the predecessor 
information. However, WRP requires each node to maintain four routing tables. This introduces a significant amount 
of memory overhead at each node as the size of the network increases. Another disadvantage of WRP is that it ensures 
connectivity through the use of hello messages. These hello messages are exchanged between neighbouring nodes 
whenever there is no recent packet transmission. This will also consume a significant amount of bandwidth and power 
as each node is required to stay active at all times (i.e. they cannot enter sleep mode to conserve their power). 
2.3. Global state routing (GSR) 
The GSR protocol [5] is based on the traditional Link State algorithm. However, GSR has improved the way 
information is disseminated in Link State algorithm by restricting the update messages between intermediate nodes 
only. In GSR, each node maintains a link state table based on the up-to-date information received from neighbouring 
nodes, and periodically exchanges its link state information with neighbouring nodes only. This has significantly 
reduced the number of control message transmitted through the network. However, the size of update messages is 
relatively large, and as the size of the network grows they will get even larger. Therefore, a considerable amount of 
bandwidth is consumed by these update messages. 
2.4. Fisheye state routing (FSR) 
The FSR protocol [12] is the descendent of GSR. FSR reduces the size of the update messages in GSR by updating the 
network information for nearby nodes at a higher frequency than for the remote nodes, which lie outside the fisheye 
scope. This makes FSR more scalable to large networks than the protocols described so far in this section. However, 
scalability comes at the price of reduced accuracy. This is because as mobility increases the routes to remote 
destination become less accurate. This can be overcome by making the frequency at which updates are sent to remote 
destinations proportional to the level of mobility. This is discussed in more detail in Section 3. 
2.5. Source-tree adaptive routing (STAR) 
The STAR protocol [11] is also based on the link state algorithm. Each router maintains a source tree, which is a set of 
links containing the preferred paths to destinations. This protocol has significantly reduced the amount of routing 
overhead disseminated into the network by using a least overhead routing approach (LORA), to exchange routing 
information. It also supports optimum routing approach (ORA) if required. This approach eliminated the periodic 
updating procedure present in the Link State algorithm by making update dissemination conditional. As a result the 
Link State updates are exchanged only when certain event occurs. Therefore STAR will scale well in large network 
since it has significantly reduced the bandwidth consumption for the routing updates while at the same time reducing 
latency by using predetermined routes. However, this protocol may have significant memory and processing 
overheads in large and highly mobile networks, because each node is required to maintain a partial topology graph of 
the network (it is determined from the source tree reported by its neighbours), which may change frequently as the 
neighbours keep reporting different source trees. 
2.6. Distance routing effect algorithm for mobility (DREAM) 
The DREAM routing protocol [2] employs a different approach to routing when compared to the routing protocols 
described so far. In DREAM, each node knows its geographical coordinates through a GPS. These coordinates are 
periodically exchanged between each node and stored in a routing table (called a location table). The advantage of 
exchanging location information is that it consumes significantly less bandwidth than exchanging complete link state 
or distance vector information, which means that it is more scalable. In DREAM, routing overhead is further reduced, 
by making the frequency at which update messages are disseminated proportional to mobility and the distance effect. 
This means that stationary nodes do not need to send any update messages. 
2.7. Multimedia support in mobile wireless networks (MMWN) 
In MMWN routing protocol [20] the network is maintained using a clustering hierarchy. Each cluster has two types of 
mobile nodes: switches and endpoints. Each cluster also has location manager (LM), which performs the location 
management for each cluster (see Fig. 1). All information in MMWN is stored in a dynamically distributed database. 
The advantage of MMWN is that only LMs perform location updating and location finding, which means that routing 
overhead is significantly reduced when compared to the traditional table driven algorithms (such as DSDV and WRP). 
However, location management is closely related to the hierarchical structure of the network, making the location 
finding and updating very complex. This is because in the location finding and updating process, messages have to 
travel through the hierarchical tree of the LMs. Also the changes in the hierarchical cluster membership of LMs will 
also affect the hierarchical management tree and introduce a complex consistency management. This feature 
introduces implementation problems, which are difficult to overcome [26].
 
Fig. 1. An example of clustering hierarchy in MMWN.
2.8. Cluster-head gateway switch routing (CGSR)
CGSR [6] is another hierarchical routing protocol where the nodes are grouped into cluster. Howe
scheme used here is simpler than MMWN. In CGSR, there is no need to maintain a cluster hierarchy (which is 
required in MMWN). Instead, each cluster is maintained with a cluster
manage all the other nodes within the cluster (see Fig. 2). This node controls the transmission medium and all inter
cluster communications occur through this node. The advantage of this protocol is that each node only maintains 
routes to its cluster-head, which means that ro
through all the network. However, there are significant overheads associated with maintaining clusters. This is 
because each node needs to periodically broadcast its cluster member table an
updates. 
  
 
 
 
 
-head, which is a mobile node elected to 
uting overheads are lower compared to flooding routing information 
d update its table based on the received 
ver the addressing 
-
 
 
Fig. 2. Illustration of a typical cluster-based network.
2.9. Hierarchical state routing (HSR) 
HSR [26] is also based on the traditional Link State algorithm. However, unlike the other link state based
described so far, HSR maintains a hierarchical addressing and topology map. Clustering algorithm such as CGSR can 
be used to organise the nodes with close proximity into clusters. Each cluster has three types of nodes: a cluster
node which acts as a local coordinator for each node, Gateway nodes which are nodes that lie in two different clusters, 
and internal nodes that are all the other nodes in each cluster. All nodes have a unique ID, which is typically the MAC 
address for each node. The nodes within each cluster broadcast their link information to each other. In HSR, each node 
also has a hierarchical ID (HID), which is a sequence of the MAC addresses from the top hierarchy to the source node. 
For example (see Fig. 3) the HID of node 8 is 
any destination in the network. For example, consider sending a packet from node 8 to node 3. Node 8 had a HID of 
〈2,2,8〉 and node 3 has a HID of 〈4,4,3
the packet to node 4, which is the top hierarchy of node 3. Node 2 and 4 form a “virtual link”, which is the path 
〈2,9,5,6,4〉. Node 4 will then send the packet to node 3. Logical clustering provides a logical relationsh
the cluster-head at a higher level. Here, the nodes are assigned logical address of the form 
the logical node 2 in the level 2 of Fig. 3 has a logical address 
links, which form a “tunnel” between lower level clusters. Logical nodes exchange logical link information as well as 
a summary information of the lower level clusters. The logical link state information is then flooded down to the lower 
levels. The physical nodes at the lowest level will then have a “hierarchical” topology of the network. The advantage 
of HSR over other hierarchical routing protocols (such as MMWN) is the separation of mobility management from the 
physical hierarchy. This is done via Home Agents. 
 
〈2,2,8〉. The HID can be used to send a packet from any source to 
〉. The packet is first sent to node 2 (top of hierarchy). Node 2 then sends 
〈2,2〉. The logical nodes are connected via logical 
This protocol also has far less control overhead when compared to 
 algorithm 
-head 
ip between 
<subnet,host>. For example 
GSR and FSR. However, this protocol (similar to any other cluster based protocol) introduces extra overheads to the 
network from cluster formation and maintenance. 
 
Fig. 3. An example of HSR topology. 
2.10. Optimised link state routing (OLSR) 
OLSR [16] is a point-to-point routing protocol based on the traditional link-state algorithm. In this strategy, each node 
maintains topology information about the network by periodically exchanging link-state messages. The novelty of 
OLSR is that it minimises the size of each control message and the number of rebroadcasting nodes during each route 
update by employing multipoint replaying (MPR) strategy. To do this, during each topology update, each node in the 
network selects a set of neighbouring nodes to retransmit its packets. This set of nodes is called the multipoint relays 
of that node. Any node which is not in the set can read and process each packet but do not retransmit. To select the 
MPRs, each node periodically broadcasts a list of its one hop neighbours using hello messages. From the list of nodes 
in the hello messages, each node selects a subset of one hop neighbours, which covers all of its two hop neighbours. 
For example, in Fig. 4, node A can select nodes B, C, K and N to be the MPR nodes. Since these nodes cover all the 
nodes, which are two hops away. Each node determines an optimal route (in terms of hops) to every known 
destination using its topology information (from the topology table and neighbouring table), and stores this 
information in a routing table. Therefore, routes to every destination are immediately available when data transmission 
begins. 
 
Fig. 4. Multipoint relays. 
2.11. Topology broadcast reverse path forwarding (TBRPF) 
TBRPF [4] is another link-state based routing protocol, which performs hop-by-hop routing. The protocol uses the 
concept of reverse-path forwarding (RPF) to disseminate its update packets in the reverse direction along the spanning 
tree, which is made up of the minimum-hop path from the nodes leading to the source of the update message. In this 
routing strategy, each node calculates a source tree, which provides a path to all reachable destinations. This is done 
by applying a modified version of Dijkstra’s algorithm on the partial topology information stored in their topology 
table. In TBRPF, each node minimises overhead by reporting only part of their source tree to their neighbours. The 
reportable part of each source tree is exchanged with neighbouring nodes by periodic and differential hello messages. 
The differential hello messages only report the changes of the status of the neighbouring nodes. As a result, the hello 
messages in TBRPF are smaller than in protocols which report the complete link-state information. 
2.12. Summary of proactive routing 
In summary, most flat routed global routing protocols do not scale very well. This is because their updating procedure 
consumes a significant amount of network bandwidth. From the flat routed protocols discussed in this section, OLSR 
may scale the best. This increase in scalability is achieved by reducing the number of rebroadcasting nodes through 
the use of multipoint relaying, which elects only a number of neighbouring nodes to rebroadcast the message. This 
clearly has the advantage of reducing, channel contention and the number of control packet travelling through the 
network when compared to strategies which use blind or pure flooding where all nodes rebroadcast the messages. The 
DREAM routing protocol also has scalability potential since it has significantly reduced the amount of overhead 
transmitted through the network, by exchanging location information rather than complete (or partial) link state 
information. The hierarchically routed global routing protocols will scale better most of the flat routed protocols, since 
they have introduced a structure to the network, which control the amount of overhead transmitted through the 
network. This is done by allowing only selected nodes such as a clusterhead can rebroadcast control information. The 
common disadvantage associated with all the hierarchical protocols is mobility management. Mobility management 
introduces unnecessary overhead to the network (such as extra processing overheads for cluster formation and 
maintenance). 
3. Reactive routing protocols 
On-demand routing protocols were designed to reduce the overheads in proactive protocols by maintaining 
information for active routes only. This means that routes are determined and maintained for nodes that require to send 
data to a particular destination. Route discovery usually occurs by flooding a route request packets through the 
network. When a node with a route to the destination (or the destination itself) is reached a route reply is sent back to 
the source node using link reversal if the route request has travelled through bi-directional links or by piggy-backing 
the route in a route reply packet via flooding. Therefore, the route discovery overhead (in the worst case scenario) will 
grow by
2
 O(N+M) when link reversal is possible and O(2N) for uni-directional links. 
Reactive protocols can be classified into two categories: source routing and hop-by-hop routing. In Source routed on-
demand protocols [19] and [33], each data packets carry the complete source to destination address. Therefore, each 
intermediate node forwards these packets according to the information kept in the header of each packet. This means 
that the intermediate nodes do not need to maintain up-to-date routing information for each active route in order to 
forward the packet towards the destination. Furthermore, nodes do not need to maintain neighbour connectivity 
through periodic beaconing messages. The major drawback with source routing protocols is that in large networks 
they do not perform well. This is due to two main reasons; firstly as the number of intermediate nodes in each route 
grows, then so does the probability of route failure. To show this let P(f)=a·n, where P(f) is the probability of route 
failure, a is the probability of a link failure and n is the number of intermediate nodes in a route. From this,
3
 it can be 
seen that as n→∞, then P(f)→∞. Secondly, as the number of intermediate nodes in each route grows, then the amount 
of overhead carried in each header of each data packet will grow as well. Therefore, in large networks with significant 
levels of multihoping and high levels of mobility, these protocols may not scale well. In hop-by-hop routing (also 
known as point-to-point routing) [8], each data packet only carries the destination address and the next hop address. 
Therefore, each intermediate node in the path to the destination uses its routing table to forward each data packet 
towards the destination. The advantage of this strategy is that routes are adaptable to the dynamically changing 
environment of MANETs, since each node can update its routing table when they receiver fresher topology 
information and hence forward the data packets over fresher and better routes. Using fresher routes also means that 
fewer route recalculations are required during data transmission. The disadvantage of this strategy is that each 
intermediate node must must store and maintain routing information for each active route and each node may require 
to be aware of their surrounding neighbours through the use of beaconing messages. 
A number of different reactive routing protocols have been proposed to increase the performance of reactive routing. 
This section describes a number of these strategies and makes a performance comparison between them. Table 3 
provide the summary of the characteristic feature of each strategy and Table 4 provides a theoretical performance 
evaluation. Note that the performance metrics represent the worst case scenario for each routing protocol. 
Table 3. Basic characteristics of reactive routing protocols 
Protocol RS 
Multiple 
routes 
Beacons 
Route metric 
method 
Route 
maintained in 
Route reconfiguration 
strategy 
AODV F No 
Yes, hello 
messages 
Freshest & SP RT 
Erase route then SN or local 
route repair 
Protocol RS 
Multiple 
routes 
Beacons 
Route metric 
method 
Route 
maintained in 
Route reconfiguration 
strategy 
DSR F Yes No 
 
SP, or next available 
in RC 
RC Erase route the SN 
ROAM F Yes No SP RT Erase route &
a
 
LMR F Yes No SP, or next available RT Link reversal & Route repair 
TORA F Yes No SP, or next available RT Link reversal & Route repair 
ABR F No Yes 
Strongest 
Associativity & SP 
&
b
 
RT LBQ 
SSA F No Yes 
Strongest signal 
strength & stability 
RT Erase route then SN 
RDMAR F No No 
Shortest relative 
distance or SP 
RT Erase route then SN 
LAR F Yes No SP RC Erase route then SN 
ARA F Yes No SP RT 
Use alternate route or back 
track until a route is found 
FORP F No No RET & stability RT 
A Flow_HANDOFF used to 
use alternate route 
CBRP H No No 
First available route 
(first fit) 
RT at cluster 
head 
Erase route then SN & local 
route repair 
RS=routing structure; H=hierarchical; F=flat; RT=route table; RC=route cache; RET=route expiration time; 
SP=shortest path; SN=source notification; LBQ=localised broadcast query. 
a Start a diffusing search if a successor is available, else send a query with infinite metric. 
b Route relaying load and cumulative forwarding delay. 
 
 
 
 
Table 4. Complexity comparison of reactive routing protocols 
Protocol TC[RD] TC[RM] CC[RD] CC[RM] Advantage Disadvantage 
AODV O(2D) O(2D) O(2N) O(2N) 
Adaptable to highly 
dynamic topologies 
Scalability problems, large delays, 
hello messages 
DSR O(2D) O(2D) O(2N) O(2N) 
Multiple routes, 
Promiscuous 
overhearing 
Scalability problems due to source 
routing and flooding, large delays 
ROAM O(D) O(A) O(|E|) O(6GA) 
Elimination of search-
to-infinity problem. 
Large CO in highly mobile 
environments 
LMR O(2D) O(2D) O(2N) O(2A) Multiple routes Temporary routing loops 
TORA O(2D) O(2D) O(2N) O(2A) Multiple routes Temporary routing loops 
ABR O(D+P) O(B+P) O(N+R) O(A+R) Route stability Scalability problems 
SSA O(D+P) O(B+P) O(N+R) O(A+R) Route stability 
Scalability problems, large delays 
during route failure and 
reconstruction 
RDMAR O(2S) O(2S) O(2M) O(2M) 
Localised route 
discovery 
Flooding used if there is no prior 
communication between nodes 
LAR O(2S) O(2S) O(2M) O(2M) 
Localised route 
discovery 
Based on source routing, flooding 
is used if no location information 
is available 
ARA O(D+P) O(D+P) O(N+R) O(A+R) 
Low overhead, small 
control packet size 
Flooding based route discovery 
process 
FORP O(D+P) O(D+P) O(N+R) O(N+R) 
Employees a route 
failure minimisation 
technique 
Flooding based route disovery 
process 
CBRP O(2D) O(2B) O(2X) O(2A) 
Only cluster-heads 
exchange routing 
information 
Cluster maintenance, temporary 
loops 
TC=time complexity; CC=communication complexity; RD=route discovery; RM=route maintenance; 
CO=control overhead; D=diameter of the network; N=number of nodes in the network; A=number of affected 
nodes; B=diameter of the affected area; G=maximum degree of the router; S=diameter of the nodes in the 
localised region; M=number of nodes in the localised region; X=number of clusters (each cluster has one 
cluster-head); R=number of nodes forming the route reply path, RREP, BANT or FLow_SETUP; P=diameter 
of the directed path of the RREP, BANT or FLow_SETUP; |E|=number of edges in the network. 
 
3.1. Ad hoc on-demand distance vector (AODV) 
The AODV [8] routing protocol is based on DSDV and DSR [19] algorithm. It uses the periodic beaconing and 
sequence numbering procedure of DSDV and a similar route discovery procedure as in DSR. However, there are two 
major differences between DSR and AODV. The most distinguishing difference is that in DSR each packet carries full 
routing information, whereas in AODV the packets carry the destination address. This means that AODV has 
potentially less routing overheads than DSR. The other difference is that the route replies in DSR carry the address of 
every node along the route, whereas in AODV the route replies only carry the destination IP address and the sequence 
number. The advantage of AODV is that it is adaptable to highly dynamic networks. However, node may experience 
large delays during route construction, and link failure may initiate another route discovery, which introduces extra 
delays and consumes more bandwidth as the size of the network increases. 
3.2. Dynamic source routing (DSR) 
As stated earlier, the DSR protocol requires each packet to carry the full address (every hop in the route), from source 
to the destination. This means that the protocol will not be very effective in large networks, as the amount of overhead 
carried in the packet will continue to increase as the network diameter increases. Therefore in highly dynamic and 
large networks the overhead may consume most of the bandwidth. However, this protocol has a number of advantages 
over routing protocols such as AODV, LMR [7] and TORA [25], and in small to moderately size networks (perhaps 
up to a few hundred nodes), this protocol may perform better. An advantage of DSR is that nodes can store multiple 
routes in their route cache, which means that the source node can check its route cache for a valid route before 
initiating route discovery, and if a valid route is found there is no need for route discovery. This is very beneficial in 
network with low mobility. Since they routes stored in the route cache will be valid longer. Another advantage of DSR 
is that it does not require any periodic beaconing (or hello message exchanges), therefore nodes can enter sleep node 
to conserve their power. This also saves a considerable amount of bandwidth in the network. 
3.3. Routing on-demand acyclic multi-path (ROAM) 
The ROAM [29] routing protocol uses internodal coordination along directed acyclic subgraphs, which is derived 
from the routers’ distance to destination. This operation is referred to as a “diffusing computation”. The advantage of 
this protocol is that it eliminates the search-to-infinity problem present in some of the on-demand routing protocols by 
stopping multiple flood searches when the required destination is no longer reachable. Another advantage is that each 
router maintains entries (in a route table) for destinations, which flow data packets through them (i.e. the router is a 
node which completes/or connects a router to the destination). This reduces significant amount of storage space and 
bandwidth needed to maintain an up-to-date routing table. Another novelty of ROAM is that each time the distance of 
a router to a destination changes by more than a defined threshold, it broadcasts update messages to its neighbouring 
nodes, as described earlier. Although this has the benefit of increasing the network connectivity, in highly dynamic 
networks it may prevent nodes entering sleep mode to conserve power. 
3.4. Light-weight mobile routing (LMR) 
The LMR protocol is another on-demand routing protocol, which uses a flooding technique to determine its routes. 
The nodes in LMR maintain multiple routes to each required destination. This increases the reliability of the protocol 
by allowing nodes to select the next available route to a particular destination without initiating a route discovery 
procedure. Another advantage of this protocol is that each node only maintains routing information to their 
neighbours. This means avoids extra delays and storage overheads associated with maintaining complete routes. 
However, LMR may produce temporary invalid routes, which introduces extra delays in determining a correct loop. 
3.5. Temporally ordered routing algorithm (TORA) 
The TORA routing protocol is based on the LMR protocol. It uses similar link reversal and route repair procedure as 
in LMR, and also the creation of a DAGs, which is similar to the query/reply process used in LMR [30]. Therefore, it 
also has the same benefits as LMR. The advantage of TORA is that it has reduced the far-reaching control messages to 
a set of neighbouring nodes, where the topology change has occurred. Another advantage of TORA is that it also 
supports multicasting, however this is not incorporated into its basic operation. TORA can be used in conjunction with 
lightweight adaptive multicast algorithm (LAM) to provide multicasting. The disadvantage of TORA is that the 
algorithm may also produce temporary invalid routes as in LMR. 
3.6. Associativity-based routing (ABR) 
ABR [33] is another source initiated routing protocol, which also uses a query-reply technique to determine routes to 
the required destinations. However, in ABR route selection is primarily based on stability. To select stable route each 
node maintains an associativity tick with their neighbours, and the links with higher associativity tick are selected in 
preference to the once with lower associativity tick. However, although this may not lead to the shortest path to the 
destination, the routes tend to last longer. Therefore, fewer route reconstructions are needed, and more bandwidth will 
be available for data transmission. The disadvantage of ABR is that it requires periodic beaconing to determine the 
degree of associativity of the links. This beaconing requirement requires all nodes to stay active at all time, which may 
result in additional power consumption. Another disadvantage is that it does not maintain multiple routes or a route 
cache, which means that alternate routes will not be immediately available, and a route discovery will be required 
using link failure. However, ABR has to some degree compensated for not having multiple routes by initiating a 
localised route discovery procedure (i.e. LBQ). 
3.7. Signal stability adaptive (SSA) 
SSA [9] is a descendent of ABR. However, SSA selects routes based on signal strength and location stability rather 
than using an associativity tick. As in ABR, the routes selected in SSA may not result in the shortest path to the 
destination. However, they tend to live longer, which means fewer route reconstructions are needed. One disadvantage 
of SSA when compared to DSR and AODV is that intermediate nodes cannot reply to route requests sent toward a 
destination, which may potentially create long delays before a route can be discovered. This is because the destination 
is responsible for selecting the route for data transfer. Another disadvantage of SSA is no attempt is made to repair 
routes at the point where the link failure occurs (i.e. such as an LBQ in ABR). In SSA the reconstruction occurs at the 
source. This may introduce extra delays, since the source must be notified of the broken like before another one can be 
found. 
3.8. Relative distance micro-discovery ad hoc routing (RDMAR) 
RDMR [1] attempts to minimise the routing overheads by calculating the distance between the source and the 
destination and therefore limiting each route request packet to certain number of hops (as described earlier). This 
means that the route discovery procedure can be confined to localised region (i.e. in will not have a global affect). 
RDMR also uses the same technique when link failures occurs (i.e. route maintenance). Thus conserving a significant 
amount of bandwidth and battery power. Another advantage of RDMR is that it does not require a location aided 
technology (such as a GPS) to determine the routing patterns. However, the relative-distance micro-discovery 
procedure can only be applied if the source and the destinations have communicated previously. If no previous 
communication record is available for a particular source and destination, then the protocol will behave in the same 
manner as the flooding algorithms (i.e. route discovery will have a global affect). 
3.9. Location-aided routing (LAR) 
LAR [21] is based on flooding algorithms (such as DSR). However, LAR attempts to reduce the routing overheads 
present in the traditional flooding algorithm by using location information. This protocol assumes that each node 
knows its location through a GPS. Two different LAR scheme were proposed in [21], the first scheme calculates a 
request zone which defines a boundary where the route request packets can travel to reach the required destination. 
The second method stores the coordinates of the destination in the route request packets. These packets can only travel 
in the direction where the relative distance to the destination becomes smaller as they travel from one hop to another. 
Both methods limit the control overhead transmitted through the network and hence conserve bandwidth. They will 
also determine the shortest path (in most cases) to the destination, since the route request packets travel away from the 
source and towards the destination. The disadvantage of this protocol is that each node is required to carry a GPS. 
Another disadvantage is (especially for the first method), that protocols may behave similar to flooding protocols (e.g. 
DSR and AODV) in highly mobile networks. 
3.10. Ant-colony-based routing algorithm (ARA) 
ARA [13] attempt to reduce routing overheads by adopting the food searching behaviour of ants. When ants search for 
food they start from their nest and walk towards the food, while leaving behind a transient trail called pheromone. This 
indicated the path that has been taken by the ant and allows others to follow, until the pheromone disappears. Similar 
to AODV and DSR, ARA is also made up of two phases (route discovery and route maintenance). During route 
discovery a Forwarding ANT (FANT) is propagated through the network (similar to a RREQ). At each hop, each node 
calculate a pheromone value depending on how many number of hops the FANT has taken to reach them. The nodes 
then forward the FANT to their neighbours. Once the destination is reached, it creates a Backward ANT (BANT), and 
returns it to the source. When the source receives the BANT from the destination node, a path is determined and data 
packet dissemination begins. To maintain each route, each time a data packet travels between intermediate nodes the 
pheromone value is increased. Otherwise the pheromone value is decreased overtime until it expires. To repair a 
broken link, the nodes firstly check their routing table, if no route is found they inform their neighbours for an 
alternate route. If the neighbours do have a route they inform their neighbours by backtracking. If the source node is 
reached and no route is found, a new route discovery process is initiated. The advantage of this strategy is that the size 
of each FANT and BANT is small, which means the amount of overhead per control packet introduced in the network 
is minimised. However, the route discovery process it based on flooding, which means that the protocol may have 
scalability problems as the number of nodes and flows in the network grows. 
3.11. Flow oriented routing protocol (FORP) 
FORP [32] Attempt to reduce the effect of link failure due to mobility during data transmission by predicting when a 
route is going to be broken and therefore using an alternate link before route failure is experienced. To do this, when a 
node requires a route to a particular destination and a route is not already available, a Flow_REQ message is 
broadcasted through the network in a similar manner to a Route Request in DSR. However, in FORP, each node that 
receives a Flow_REQ calculates a Link Expiration Time (LET) with the previous hop (using a GPS) and appends this 
value to the Flow_REQ packet which is then rebroadcasted. When a Flow_REQ packet reaches the destination, a 
Route Expiration Time (RET) is calculated using the minimum of all the LETs for each node in the route and a 
Flow_SETUP packet is sent back toward the source. During data transmission, each intermediate node append their 
LET to the data packet. This allows the destination to predict when a link failure could occur. When the destination 
determines that a route is about to expire, a Flow_HANDOFF message is generated and propagated via flooding 
(similar to a Flow_REQ). Therefore, when the source receives a Flow_HANDOFF message, it can determine the best 
route to handoff the flow based on the given information (such as RET and hop count, etc) in the Flow_HANDOFF 
packet. The source the sends a Flow_SETUp message along the newly chosen route. The advantage of this strategy 
compared to other on-demand routing protocols described so far is that it minimises the disruptions of real time 
sessions due to mobility by attempting to maintain constant flow of data. However, since it is based on pure flooding, 
the protocol may experience scalability problems in large networks. 
3.12. Cluster-based routing protocol (CBRP) 
Unlike the on-demand routing protocols described so far. In CBRP [17] the nodes are organised in a hierarchy. As 
most hierarchical protocols described in the previous section, the nodes in CBRP or grouped into clusters. Each cluster 
has a cluster-head, which coordinates the data transmission within the cluster and to other clusters. The advantage of 
CBRP is that only cluster heads exchange routing information, therefore the number of control overhead transmitted 
through the network is far less than the traditional flooding methods. However, as in any other hierarchical routing 
protocol, there are overheads associated with cluster formation and maintenance. The protocol also suffers from 
temporary routing loops. This is because some nodes may carry inconsistent topology information due to long 
propagation delay. 
3.13. Summary of reactive routing 
Generally, most on-demand routing protocols have the same routing cost when considering the worst-case scenario. 
This is due to their fundamental routing nature, as they all follow similar route discovery and maintenance procedure. 
For example, protocols such as RDMR and LAR have the same cost as the traditional flooding algorithm in the worst-
case scenario. The worst-case scenario applies to most routing protocols when there is no previous communication 
between the source and the destination. This is usually the case during the initial stages (i.e. when a node comes on-
line). As the nodes stay longer on, they are able to update their routing tables/caches and become more aware of their 
surroundings. Some protocols take advantage of this more than the others. For example, in DSR when a route to a 
destination has expired in the route cache, the protocol initiates a network wide flooding search to find an alternate 
route. This is not the case for LAR or RDMR where the route history is used to control the route discovery procedure 
by localising the route requests to a calculated region. Clearly, this is more advantageous in large networks, since 
more bandwidth is available there for data transmission. Another method used to minimise the number of control 
packets is to select routes based on their stability. In ABR and SSR the destination nodes select routes based on their 
stability. ABR also allows shortest path route selection to be used during the route selection at the destination (but 
only secondary to stability), which means that shorter delays may be experienced in ABR during data transmission 
than in SSR. These protocols may perform better than the purely shortest path selection based routing protocols such 
as DSR. However, they may experience scalability problem in large network since each packet is required to carry the 
full destination address. This is because the probability of a node in a selected route becoming invalid will increase by 
O(a·n), where “a” is the probability of the route failing at a node and “n” is the number of nodes in the route. 
Therefore, these protocols are only suitable for small to medium size networks. Reduction in control overhead can be 
obtained by introducing a hierarchical structure to the network. CBRP is a hierarchical on-demand routing protocol, 
which attempts to minimise control overheads disseminated into the network by breaking the network into clusters. 
During the route discovery phase, cluster-heads (rather than each intermediate node) exchange routing information. 
This significantly reduces the control overhead disseminated into the network when compared to the flooding 
algorithms. In highly mobile networks, CBRP may incur significant amount of processing overheads during cluster 
formation/maintenance. This protocol suffers from temporary invalid routes as the destination nodes travel from one 
cluster to another. Therefore, this protocol is suitable for medium size networks with slow to moderate mobility. The 
protocol may also best perform in scenarios with group mobility where the nodes within a cluster are more likely to 
stay together. 
4. Hybrid routing protocols 
Hybrid routing protocols are a new generation of protocol, which are both proactive and reactive in nature. These 
protocols are designed to increase scalability by allowing nodes with close proximity to work together to form some 
sort of a backbone to reduce the route discovery overheads. This is mostly achieved by proactively maintaining routes 
to nearby nodes and determining routes to far away nodes using a route discovery strategy. Most hybrid protocols 
proposed to date are zone-based, which means that the network is partitioned or seen as a number of zones by each 
node. Others group nodes into trees or clusters. This section describes a number of different hybrid routing protocol 
proposed for MANETs. Furthermore, it provides a theoretical performance comparison between the described 
strategies. The discussion on the performance comparison is based on Table 5 and Table 6. Note that, Table 5 provides 
the summary of the characteristic feature of each strategy and Table 6 provides a theoretical performance evaluation. 
The performance metrics presented illustrates the worst case scenario for each routing protocol. 
Table 5. Basic characteristics of hybrid routing protocols 
Protocol RS Multiple routes Bc Route metric method 
Route 
maintained in 
Route reconfiguration 
strategy 
ZRP F No Yes SP 
Intrazone and 
interzone tables 
Route repair at point of 
failure and SN
a
 
ZHLS H 
Yes, if more than 
one virtual link 
exists 
No 
SP or next available 
virtual link 
Intrazone and 
interzone tables 
Location request
b
 
SLURP H 
Yes, depending on if 
a leading node is 
found by MFR 
No 
MFR for interzone 
forwarding. DSR for 
intrazone routing 
location cache 
and a node_list 
SN, then location 
discovery 
DST H Yes, if available No 
Forwarding using the tree 
neighbours and the 
bridges using shuttling 
Route tables 
Holding time
c
 or 
shuttling 
DDR H 
Yes, it alternate 
gateway nodes are 
available 
Yes Stable routing 
Intrazone and 
interzone table 
SN, then source 
initiates a new path 
discovery 
RS=routing structure; H=hierarchical; F=flat; SP=shortest path; SN=source notification; Bc=beacons. 
a The source may or may not be notified. 
b A location request will be sent if the zone ID of a node changes. 
c Packets are held for a short period of time during which the nodes attempts to route the packet directly to the 
destination. 
 
Table 6. Complexity comparison of hybrid routing protocols 
Protocol TC[RD] TC[RM] CC[RD] CC[RM] Advantage Disadvantage 
ZRP 
Intra: 
O(I)/Inter: 
O(2D) 
O(I)/O(2D) O(ZN)/O(N+V) O(ZN)/O(N+V) 
Reduce 
retransmissions 
Overlapping 
zones 
ZHLS 
Intra: 
O(I)/Inter: 
O(I)/O(D) O(N/M)/O(N+V) O(N/M)
a
/O(N+V) 
Reduction of 
SPF, low CO 
Static zone map 
required 
Protocol TC[RD] TC[RM] CC[RD] CC[RM] Advantage Disadvantage 
O(D) 
SLURP 
Intra: 
O(2ZD)/Inter: 
O(2D)
b
 
O(2ZD/O(2D) O(2N/M)/O(2Y) O(2N/M)/O(2Y) 
Location 
discovery using 
home regions 
Static zone map 
required 
DST 
Intra: 
O(ZD)/Inter: 
O(D) 
O(ZD)/O(D) O(ZN)/O(N) O(ZN)/O(N) 
Reduce 
retransmissions 
Root node 
DDR 
Intra: 
O(I)/Inter: 
O(2D) 
O(I)/O(2D) O(ZN)/O(N+V) O(ZN)/O(N+V) 
No zone map or 
zone coordinator 
Preferred 
neighbours may 
become 
bottlenecks 
TC=time complexity; CC=communication complexity; RD=route discovery; RM=route maintenance; 
I=periodic update interval; N=number of nodes in the network; M=number of zones or cluster in the network; 
ZN=number of nodes in a zone, cluster or tree; ZD=diameter of a zone, cluster or tree; Y=number of nodes in 
the path to the home region; V=number of nodes on the route reply path; SPF=single point of failure; 
CO=control overhead. 
a In ZHLS, the intrazone is maintained proactively. Therefore, a fixed number of updates are sent at a fixed 
interval. 
b In SLURP, in the worst-case scenario, the source node and the home region of the destination are on the 
opposite edges of the network. 
4.1. Zone routing protocol (ZRP) 
In ZRP [14], the nodes have a routing zone, which defines a range (in hops) that each node is required to maintain 
network connectivity proactively. Therefore, for nodes within the routing zone, routes are immediately available. For 
nodes that lie outside the routing zone, routes are determined on-demand (i.e. reactively), and it can use any on-
demand routing protocol to determine a route to the required destination. The advantage of this protocol is that it has 
significantly reduced the amount of communication overhead when compared to pure proactive protocols. It also has 
reduced the delays associated with pure reactive protocols such as DSR, by allowing routes to be discovered faster. 
This is because, to determine a route to a node outside the routing zone, the routing only has to travel to a node which 
lies on the boundaries (edge of the routing zone) of the required destination. Since the boundary node would 
proactively maintain routes to the destination (i.e. the boundary nodes can complete the route from the source to the 
destination by sending a reply back to the source with the required routing address). The disadvantage of ZRP is that 
for large values of routing zone the protocol can behave like a pure proactive protocol, while for small values it 
behaves like a reactive protocol. 
4.2. Zone-based hierarchical link state (ZHLS) 
Unlike ZRP, ZHLS [18] routing protocol employs hierarchical structure. In ZHLS, the network is divided into non-
overlapping zones, and each node has a node ID and a zone ID, which is calculated using a GPS. The hierarchical 
topology is made up of two levels: node level topology and zone level topology, as described previously. In ZHLS 
location management has been simplified. This is because no cluster-head or location manager is used to coordinate 
the data transmission. This means there is no processing overhead associated with cluster-head or Location Manager 
selection when compared to HSR, MMWN and CGSR protocols. This also means that a single point of failure and 
traffic bottlenecks can be avoided. Another advantage of ZHLS is that it has reduced the communication overheads 
when compared to pure reactive protocols such as DSR and AODV. In ZHLS, when a route to a remote destination is 
required (i.e. the destination is in another zone), the source node broadcast a zone-level location request to all other 
zones, which generates significantly lower overhead when compared to the flooding approach in reactive protocols. 
Another advantage of ZHLS is that the routing path is adaptable to the changing topology since only the node ID and 
the zone ID of the destination is required for routing. This means that no further location search is required as long as 
the destination does not migrate to another zone. However, in reactive protocols any intermediate link breakage would 
invalidate the route and may initiate another route discovery procedure. The Disadvantage of ZHLS is that all nodes 
must have a preprogrammed static zone map in order to function. This may not feasible in applications where the 
geographical boundary of the network is dynamic. Nevertheless, it is highly adaptable to dynamic topologies and it 
generates far less overhead than pure reactive protocols, which means that it may scale well to large networks. 
4.3. Scalable location update routing protocol (SLURP) 
Similar to ZLHS, in SLURP [34] the nodes are organised into a number of non-overlapping zones. However SLURP 
further reduces the cost of maintaining routing information by eliminating a global route discovery. This is achieved 
by assigning a home region for each node in the network. The home region for each node is one specific zone (or 
region), which is determined using a static mapping function, f(NodeID)→regionID, where f is a many-to-one 
function that is static and known to all nodes. An example of a function that can perform the static zone mapping is 
f(NodeID)=g(NodeID)modK[34], where g(NodeID) is a random number generating function that uses the node ID as 
the seed and output a large number, and k is the total number of home regions in the network. Now since the node ID 
of each node is constant (i.e. a MAC address), then the function will always calculate the same home region. 
Therefore, all nodes can determine the home region for each node using this function provided they have their node 
ID. Each node maintains its current location (current zone) with the home region by unicasting a location update 
message towards its home region. Once the location update packet reaches the home region, it is broadcasted to all the 
nodes in the home region. Hence, to determine the current location of any node, each node can unicast a 
location_discovery packet to the required nodes home region (or the area surrounding the home region) in order to 
find its current location. Once the location is found, the source can start sending data towards the destination using the 
most forward with fixed radius (MFR) geographical forwarding algorithm. When a data packet reaches the region in 
which the destination lies, then source routing
4
 is used to get the data packet to the destination. The disadvantage of 
SLURP is that it also relies on a preprogrammed static zone map (as does ZHLS). 
4.4. Distributed spanning trees based routing protocol (DST) 
As mentioned earlier, in DST [28] the nodes in the network are grouped into a number of trees. Each tree has two 
types of nodes; route node, and internal node. The root controls the structure of the tree and whether the tree can 
merge with another tree, and the rest of the nodes within each tree are the regular nodes. Each node can be in one three 
different states; router, merge and configure depending on the type of task that it trying to perform. To determine a 
route DST proposes two different routing strategies; hybrid tree-flooding (HFT) and distributed spanning tree 
shuttling (DST). In HTF, control packets are sent to all the neighbours and adjoining bridges in the spanning tree, 
where each packet is held for a period of time called holding time. The idea behind the holding time is that as 
connectivity increases, and the network becomes more stable, it might be useful to buffer and route packets when the 
network connectivity is increased over time. In DST, the control packets are disseminated from the source are 
rebroadcasted along the tree edges. When a control reaches down to a leaf node, it is sent up the tree until it reaches a 
certain height referred to as the shuttling level. When the shuttling level is reached, the control packet can be sent 
down the tree or to the adjoining bridges. The main disadvantage of the DST algorithm is that it relies on a root node 
to configure the tree, which creates a single point of failure. Furthermore, the holding time used to buffer the packets 
may introduce extra delays in to the network. 
4.5. Distributed dynamic routing (DDR) 
DDR [24] is also a tree-based routing protocol. However, unlike DST, in DDR the trees do not require a root node. In 
this strategy tree are constructed using periodic beaconing messages which is exchanged by neighbouring nodes only. 
The trees in the network form a forest, which is connected together via gateway nodes (i.e. nodes which are in 
transmission range but belong to different trees). Each tree in the forest forms a zone which is assigned a zone ID by 
running a zone naming algorithm. Furthermore, since each node can only belong to a single zone (or tree), then the 
network can be also seen as a number of non-overlapping zones. The DDR algorithm consists of six phases: preferred 
neighbour election, forest construction, intra-tree clustering, inter-tree clustering, zone naming and zone partitioning. 
Each of these phases are executed based on information received in the beacon messages. During the initialisation 
phase, each node starts in the preferred neighbour election phase. The preferred neighbour of a node is a node that has 
the most number of neighbours. After this, a forest is constructed by connecting each node to their preferred 
neighbour. Next, the intra-tree clustering algorithm is initiated to determine the structure of the zone
5
 (or the tree) and 
to build up the intra-zone routing table. This is then followed by the execution of the inter-tree algorithm to determine 
the connectivity with the neighbouring zones. Each zone is then assigned a name by running the zone naming 
algorithm and the network is partitioned into a number of non-overlapping zones. To determine routes, hybrid ad hoc 
routing protocols (HARP) [23] to work on top of DDR. HARP uses the intra-zone and inter-zone routing tables 
created by DDR to determine a stable path between the source and the destination. The advantage of DDR is that 
unlike ZHLS, it does not rely on a static zone map to perform routing and it does not require a root node or a 
clusterhead to coordinate data and control packet transmission between different nodes and zones. However, the nodes 
that have been selected as preferred neighbours may become performance bottlenecks. This is because they would 
transmit more routing and data packets than every other nodes. This means that these nodes would require more 
recharging as they will have less sleep time than other nodes. Furthermore, if a node is a preferred neighbour for many 
of its neighbours, many nodes may want to communicate with it. This means that channel contention would increase 
around the preferred neighbour, which would result in larger delays experienced by all neighbouring nodes before they 
can reserve the medium. In networks with high traffic, this may also result in significant reduction in throughput, due 
to packets being dropped when buffers become full. 
4.6. Summary of hybrid routing 
Hybrid routing protocols have the potential to provide higher scalability than pure reactive or proactive protocols. This 
is because they attempt to minimise the number of rebroadcasting nodes by defining a structure (or some sort of a 
backbone), which allows the nodes to work together in order organise how routing is to be performed. By working 
together the best or the most suitable nodes can be used to perform route discovery. For example, in ZHLS only the 
nodes which lead to the gateway nodes the interzone route discovery packets. Collaboration between nodes can also 
help in maintaining routing information much longer. For example, in SLURP, the nodes within each region (or zone) 
work together to maintain location information about the nodes which are assigned to that region (i.e. their home 
region). This may potentially eliminate the need for flooding, since the nodes know exactly where to look for a 
destination every time. Another novelty of hybrid routing protocols is that they attempt to eliminate single point of 
failures and creating bottleneck nodes in the network. This is achieved by allowing any number of nodes to perform 
routing or data forwarding if the preferred path becomes unavailable. 
5. Conclusions 
In this paper three categories of unicast routing protocols (some have multicast capability) where introduced (Table 7). 
The global routing protocols, which are derived mainly from the traditional link state or distance vector algorithm, 
maintain network connectivity proactively, and the on-demand routing protocols determine routes when they are 
needed. The hybrid routing protocols employ both reactive and proactive properties by maintaining intra-zone 
information proactively and inter-zone information reactively. By looking at performance metrics and characteristics 
of all categories of routing protocols, a number of conclusions can be made for each category. In global routing flat 
addressing can be simple to implement, however it may not scale very well for large networks [15]. In order to make 
flat addressing more efficient, the number of routing overheads introduced in the networks must be reduced. One way 
to do this is to use a device such a GPS. For example, in the DREAM routing protocol, node only exchange location 
information (coordinates) rather than complete link state or distance vector information. Another way to reduce 
routing overheads is by using conditional updates rather than periodic ones. For example in the STAR routing 
protocol, updates occur based on three conditions (as described earlier). The global routing schemes, which use 
hierarchical addressing, have reduced the routing overheads introduced to the networks by introducing a structure, 
which localises the update message propagation. However, the current problem with these schemes is location 
management, which also introduces significant overheads to the network. In on-demand routing protocols, the 
flooding-based routing protocols such as DSR and AODV will also have scalability problems. In order to increase 
scalability, the route discovery and route maintenance must be controlled. This can be achieved by localising the 
control message propagation to a defined region where the destination exists or where the link has been broken. For 
example, in the LAR1 routing protocol, which also uses a GPS, the route request packets propagate in the request zone 
only, and in the ABR routing protocol a localised broadcast query (LBQ) is initiated when a link goes down. Hybrid 
routing protocols such as the ZHLS and SLURP may also perform well in large networks. The advantage of these 
protocols over other hierarchical routing protocols is that they have a simplified location management due to using a 
GPS and do not use a cluster-head to coordinate data transmission, which means that a single point of failure and 
performance bottlenecks can be avoided. Another advantage of these protocols is that they are highly adaptable to 
changing topology since only the node ID and zone ID of the destination is required for routing to occur. The ZRP 
routing protocol is another hybrid routing protocol described earlier, which is designed to increase the scalability of 
MANETs. The advantage of this protocol is that it maintains a strong network connectivity (proactively) within the 
routing zones while determining remote route (outside the routing zone) quicker than flooding. Another advantage of 
the ZRP is that it can incorporate other protocols to improve its performance. For example, it can use LAR1 for inter-
zone routing. 
Table 7. Overall comparison of all routing categories 
Routing class Proactive Reactive Hybrid 
Routing 
structure 
Both flat and hierarchical 
structures are available 
Mostly flat, execpt CBRP Mostly hierarchical 
Availability of 
route 
Always available
a
 Determined when needed 
Depends on the location of 
the destination 
Control traffic 
volume 
Usually high, attempt at 
reduction is made. E.g., 
OLSR, TBRPF 
Lower than Global routing and 
further improved using GPS. E.g., 
LAR 
Mostly, lower than 
proactive and reactive 
Periodic 
updates 
Yes, However some may 
use conditional. E.g., 
STAR 
Not required. However some nodes 
may require periodic beacons. E.g., 
ABR 
Usually used inside each 
zone, or between gateways 
Handling 
effects of 
mobility 
Usually updates occur at 
fixed intervals. DREAM 
alters periodic updates 
based on mobility 
ABR introduced LBQ. ROAM 
employs threshold updates. AODV 
uses local route discovery 
Usually more than one path 
may be available. Single 
point of failures are reduced 
by working as a group. 
Storage 
requirements 
High 
Depends on the number of routes 
kept or required. Usually lower 
than proactive protocols 
Usually depends on the size 
of each cluster or zone may 
become as large as 
proactive protocols if 
clusters are big 
Delay level 
Small routes are 
predetermined 
Higher than proactive 
For local
b
 destinations 
small. Interzone may be as 
large as reactive protocols 
Scalability Usually up to 100 nodes. Source routing protocols up to few Designed for up to 1000 or 
Routing class Proactive Reactive Hybrid 
level
c
 OLSR and TBRPF may 
scale higher 
hundred nodes. Point-to-point may 
scale higher. Also depends on the 
level of traffic and the levels of 
multihopping 
more nodes 
a If the nodes are reachable. 
b Local destinations represents the nodes that are in the same zone or cluster as the source. For remote, they 
are in different clusters. 
c The ability to perform efficient routing for up to an approximate number of nodes. 
References 
1. G. Aggelou, R. Tafazolli, RDMAR: a bandwidth-efficient routing protocol for mobile ad hoc networks, in: 
ACM International Workshop on Wireless Mobile Multimedia (WoWMoM), 1999, pp. 26–33. 
2. S. Basagni, I. Chlamtac, V.R. Syrotivk, B.A. Woodward, A distance effect algorithm for mobility (DREAM), 
in: Proceedings of the Fourth Annual ACM/IEEE International Conference on Mobile Computing and 
Networking (Mobicom’98), Dallas, TX, 1998. 
3. R.E. Bellman, Dynamic Programming, Princeton University Press, Princeton, NJ (1957). 
4. B. Bellur, R.G. Ogier, F.L Templin, Topology broadcast based on reverse-path forwarding routing protocol 
(tbrpf), in: Internet Draft, draft-ietf-manet-tbrpf-06.txt, work in progress, 2003. 
5. T.-W. Chen, M. Gerla, Global state routing: a new routing scheme for ad-hoc wireless networks, in: 
Proceedings of the IEEE ICC, 1998. 
6. C.-C. Chiang, Routing in clustered multihop mobile wireless networks with fading channel, in: Proceedings of 
IEEE SICON, April 1997, pp. 197–211. 
7. M.S. Corson, A. Ephremides, A distributed routing algorithm for mobile wireless networks, ACM/Baltzer 
Wireless Networks, 1 (1) (1995), pp. 61–81. 
8. S. Das, C. Perkins, E. Royer, Ad hoc on demand distance vector (AODV) routing, Internet Draft, draft-ietf-
manet-aodv-11.txt, work in progress, 2002. 
9. R. Dube, C. Rais, K. Wang, S. Tripathi, Signal stability based adaptive routing (ssa) for ad hoc mobile 
networks,  IEEE Personal Communication, 4 (1) (1997), pp. 36–45. 
10. L.R. Ford, D.R. Fulkerson, Flows in Networks, Princeton University Press, Princeton, NJ (1962). 
11. J.J. Garcia-Luna-Aceves, C. Marcelo Spohn, Source-tree routing in wireless networks, in: Proceedings of the 
Seventh Annual International Conference on Network Protocols Toronto, Canada, October 1999, p. 273. 
12. M. Gerla, Fisheye state routing protocol (FSR) for ad hoc networks, Internet Draft, draft-ietf-manet-aodv-
03.txt, work in progress, 2002. 
13. M. Günes, U. Sorges, I. Bouazizi, Ara––the ant-colony based routing algorithm for manets, in: ICPP 
workshop on Ad Hoc Networks (IWAHN 2002), August 2002, pp. 79–85.  
14. Z.J. Hass, R. Pearlman, Zone routing protocol for ad-hoc networks, Internet Draft, draft-ietf-manet-zrp-02.txt, 
work in progress, 1999.  
15. A. Iwata, C. Chiang, G. Pei, M. Gerla, T. Chen, Scalable routing strategies for multi-hop ad hoc wireless 
networks, IEEE Journal on Selected Areas in Communcations, 17 (8) (1999), pp. 1369–1379. 
16. P. Jacquet, P. Muhlethaler, T. Clausen, A. Laouiti, A. Qayyum, L. Viennot, Optimized link state routing 
protocol for ad hoc networks, IEEE INMIC, Pakistan, 2001. 
17. M. Jiang, J. Ji, Y.C. Tay, Cluster based routing protocol, Internet Draft, draft-ietf-manet-cbrp-spec-01.txt, 
work in progress, 1999. 
18. M. Joa-Ng, I.-T. Lu, A peer-to-peer zone-based two-level link state routing for mobile ad hoc networks, IEEE 
Journal on Selected Areas in Communications, 17 (8) (1999), pp. 1415–1425. 
19. D. Johnson, D. Maltz, J. Jetcheva, The dynamic source routing protocol for mobile ad hoc networks, Internet 
Draft, draft-ietf-manet-dsr-07.txt, work in progress, 2002. 
20. K.K. Kasera, R. Ramanathan, A location management protocol for hierarchically organised multihop mobile 
wireless networks, in: Proceedings of the IEEE ICUPC’97, San Diego, CA, October 1997, pp. 158–162. 
21. Y.-B. Ko, N.H. Vaidya, Location-aided routing (LAR) in mobile ad hoc networks, in: Proceedings of the 
Fourth Annual ACM/IEEE International Conference on Mobile Computing and Networking (Mobicom’98), 
Dallas, TX, 1998. 
22. S. Murthy J.J. Garcia-Luna-Aceves, A routing protocol for packet radio networks, in: Proceedings of the First 
Annual ACM International Conference on Mobile Computing and Networking, Berkeley, CA, 1995, pp. 86–
95. 
23. N. Nikaein, C. Bonnet, N. Nikaein, Harp-hybrid ad hoc routing protocol, in: Proceedings of IST: International 
Symposium on Telecommunications, September 1–3 Tehran, Iran, 2001. 
24. N. Nikaein, H. Laboid, C. Bonnet, Distributed dynamic routing algorithm (ddr) for mobile ad hoc networks, 
in: Proceedings of the MobiHOC 2000: First Annual Workshop on Mobile Ad Hoc Networking and 
Computing, 2000. 
25. V.D. Park, M.S. Corson, A highly adaptive distributed routing algorithm for mobile wireless networks, in: 
Proceedings of INFOCOM, April 1997. 
26. G. Pei, M. Gerla, X. Hong, C. Chiang, A wireless hierarchical routing protocol with group mobility, in: 
Proceedings of Wireless Communications and Networking, New Orleans, 1999. 
27. C.E. Perkins, T.J. Watson, Highly dynamic destination sequenced distance vector routing (DSDV) for mobile 
computers, in: ACM SIGCOMM’94 Conference on Communications Architectures, London, UK, 1994. 
28. S. Radhakrishnan, N.S.V Rao, G. Racherla, C.N. Sekharan, S.G. Batsell, DST––A routing protocol for ad hoc 
networks using distributed spanning trees, in: IEEE Wireless Communications and Networking Conference, 
New Orleans, 1999. 
29. J. Raju, J. Garcia-Luna-Aceves, A new approach to on-demand loop-free multipath routing, in: Proceedings of 
the 8th Annual IEEE International Conference on Computer Communications and Networks (ICCCN), 
Boston, MA, October 1999, pp. 522–527. 
30. E.M. Royer, C.-K. Toh, A review of current routing protocols for ad hoc mobile wireless networks, IEEE 
Personal Communications, 6 (2) (1999), pp. 46–55. 
31. A. Udaya Shankar, C. Alaettinoglu, I. Matta, K. Dussa-Zieger, Performance comparison of routing protocols 
using MaRS: distance-vector versus link-state, in: Proceedings of the 1992 ACM SIGMETRICS and 
PERFORMANCE ’92 Int’l. Conf. on Measurement and Modeling of Computer Systems, Newport, RI, USA, 
1–5 June 1992, p. 181. 
32. W. Su, M. Gerla, Ipv6 flow handoff in ad-hoc wireless networks using mobility prediction, in: IEEE Global 
Communications Conference, Rio de Janeiro, Brazil, December 1999, pp. 271–275. 
33. C. Toh, A novel distributed routing protocol to support ad-hoc mobile computing, in: IEEE 15th Annual 
International Phoenix Conf., 1996, pp. 480–486. 
34. S.-C. Woo, S. Singh, Scalable routing protocol for ad hoc networks, Wireless Networks, 7 (5) (2001), pp. 
513–529. 
 
Notes 
1
. Route update strategies are discussed further in Section 3. 
2
. N=number of nodes in the network, M=number of nodes in the reply path, T=number of source/destination 
pairs. 
3
. Assuming that the intermediate nodes have a probability of a link failure of a>0. 
4
. In this protocol DSR is used as a source routing protocol. 
5
. The terms tree and zone are used interchangeably. 

