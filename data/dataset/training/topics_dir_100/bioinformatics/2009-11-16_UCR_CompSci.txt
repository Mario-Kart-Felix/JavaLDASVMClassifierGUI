Open questions in bioinformatics and 
computational biology from an evolutionary 
and molecular biology perspective
Jason Stajich
Assistant Professor of Bioinformatics & Bioinformaticist
Plant Pathology and Microbiology
University of California, Riverside
Outline
• Where and what is the data?
• Big data is here, Bigger data is coming.
• Current approaches
• What are the problems?
• Efficient searching in large data sets
• Ease of interfacing with data to support genomics research - software, databases, and 
UI development
• Finding signal in the datasets - statistical and computational methods
• Managing the data - TBs of data from the sequencing.
• Other more biologically focused research areas.
Sequencing has been a driving force
• DNA sequencing and analysis has been the bread and butter of bioinformatics and 
computational biology for genomics and evolutionary research
• Human Genome project - USD $3B (1991 dollars)
• Typically sequencing costs have been converging towards $0.01 a nucleotide base -
inexpensive but still limiting for large-scale questions
• New sequencing techniques have dropped the costs by orders of magnitude
• Techniques for searching data - There has always been speed vs sensitivity tradeoffs
• Initially developed with heuristics tuned towards the 103 - 106 sequence sized databases
• Previously software, computational resources required specialized centers - less the case 
now
http://www.ncbi.nlm.nih.gov/Genbank/genbankstats.html
16 B bases 2007-2008
Human genome = 
3B bases
http://www.politigenomics.com/next-generation-sequencing-informatics
15 Gb in 5 days
1-3 Gb / day / machine!
for CURRENT technologies
~$8000 for human 
genome number of 
bases

396 B
“...bringing its total to 89 
[GA II machines]”
Cheaper sequencing is leading to democratized genome 
science. Everyone* can do it
*With $USD 500K http://bit.ly/5zNBk

Tools for Bioinformatics and Comparative Genomics
• Interfacing with the data (flat text and binary files, databases, web resources)
• BioPerl is a toolkit for bioinformatics data processing 
• Parsers for common file formats
• Visualization of some kinds of genomic data - basis for genome browser
• Genome Browsers to see genomic context information, important for visualizing high 
density data like 2nd-generation sequencing (RNA-Seq, ChIP-Seq)
• Community web resources for information sharing
• Social networking challenges to get scientists to share information with attribution
Genome Browser data integration - Gbrowse
300k 310k 320k 330k
Ncra_OR74A_chrIV_contig7.20
DNA_GCContent
% gc
NCBI genes (Broad called)
NCU04433
sulfate permease II CYS-14
NCU04432
hypothetical protein
NCU04431
related to endo-1; 3-beta-glucanase
NCU04430
related to aminopeptidase Y precursor; vacuolar
NCU04429
conserved hypothetical protein
NCU04428
related to spindle assembly checkpoint protein
NCU04426
related to cyclin-supressing protein kinase
NCU04425
putative protein
NCU04427
conserved hypothetical protein
NCU04424
related to regulator of chromatin
PASA updated NCBI/Broad genes
NCU04433
[pasa:asmbl_9431,status:12],[pasa:asmbl_9432,status:12]
NCU04432[pasa:asmbl_9429,status:12],[pasa:asmbl_9430,status:12]
[pasa:asmbl_9436,status:12],[pasa:asmbl_9437,status:12],[pasa:asmbl_9438,status:12],[pasa:asmbl_9439,status:12]
[pasa:asmbl_9433,status:12],[pasa:asmbl_9434,status:12],[pasa:asmbl_9435,status:12]
[pasa:asmbl_9445,status:12],[pasa:asmbl_9446,status:12]
[pasa:asmbl_9443,status:12],[pasa:asmbl_9444,status:12]
NCU04424
[pasa:asmbl_9440,status:12],[pasa:asmbl_9441,status:12],[pasa:asmbl_9442,status:12]
Named Genes (Radford laboratory)
tRNA{phe}-9
cys-14 gh16-3
miRNA Solexa histogram
miRNA
K4dime ChIP-Seq histogram (SOAP)
K4dime_Solexa
K9met3 ChIP-Seq histogram (SOAP)
K9met3
Stajich et al, unpublished
Smith, Freitag, et al unpublished
Gbrowse - Stein et al 2002
fungalgenomes.org/genomes
Central dogma of eukaryotic 
biology
Introns
splicing to form mRNA
Genomic DNA
Ribosome
Protein
mRNA
mRNA
ExonExonExon
In
tr
o
n
pre-mRNA
Genomic DNA
Protein
In
tr
o
n
Information flow in the cell - Central Dogma
• DNA (4 bases, {A,C,G,T}) transcribed into
• RNA (4 bases, {A,C,G,U}) translated into
• Protein (20 amino acid residues, {A,C,D,E,F,G,H,I,K,L,M,N,P,Q,R,S,T,V,W,Y}) by triplets 
(codons) of RNAs
UCA -> Serine (S)
AUG -> Methionine (M)
• 3 stop codons (UGA, UAA,UAG) in most species
• As always in Biology, there are exceptions! 
Some species use different stop codons. The codon table (codon -> AA) is not the same for 
all species, the mitochondria has different codon table.
The Sequence DB Search problem
Query
Generates
Scores
Figure 6: Searching with human ATP-ase, similarity scores
opt E()
< 20 17 0:= one = represents 22 library sequences
22 0 0:
24 0 0:
26 2 0:=
28 7 3:*
30 7 18:*
32 45 68:===*
34 166 184:========*
36 337 379:================ *
38 581 626:=========================== *
40 869 873:=======================================*
42 1009 1067:============================================== *
44 1276 1177:=====================================================*====
46 1253 1198:======================================================*==
48 1199 1147:====================================================*==
50 1032 1047:===============================================*
52 949 920:=========================================*==
54 838 786:===================================*===
56 578 657:=========================== *
58 467 539:====================== *
60 393 437:================== *
62 339 350:===============*
64 276 278:============*
66 214 220:=========*
68 188 173:=======*=
70 140 136:======*
72 131 106:====*=
74 88 83:===*
76 71 64:==*=
78 48 50:==*
80 43 39:=*
82 38 30:=*
84 27 24:=*
86 21 18:*
88 15 14:*
90 17 11:*
92 7 8:* :=======* = represents 1 library sequence
94 22 7:* :======*===============
96 3 5:* :=== *
98 8 4:* :===*====
100 6 3:* :==*===
102 5 2:* :=*===
104 9 2:* :=*=======
106 4 1:* :*===
108 5 1:* :*====
110 4 1:* :*===
112 4 1:* :*===
114 4 1:* :*===
116 6 0:= *======
118 1 0:= *=
>120 32 0:== *================================
11
E-value
Pairwise 
alignment
For each 
sequence
Database
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Figure 11: An alignment path matrix
A C G T
A
C
G
G
T
DNA sequences, dynamic programming algorithms are available that can calculate the optimal score in
O(MN) steps. This efficiency is achieved by determining the optimal score for each prefix of each string,
and then extending each prefix by considering the three paths that can be used to extend an alignment:
(1) by extending the alignment by one residue in each sequence; (2) by extending the alignment by one
residue in the first sequence and aligning it with a gap in the second; or (3) extending the alignment by
one residue in the second sequence and aligning it with a gap in the first. This decision must be made for
each of the MN prefixes of sequences of lengthM and N.
The first algorithm for comparing protein sequences (Needleman & Wunsch, 1970) calculates a
“global” similarity score. A simplified global algorithm is shown in Fig. 12. Since a global algorithm
requires that the alignment extend from the beginning to the end of the alignment, it is sufficient to report
the score in the lower right (S(M,N)) of the scoring matrix.
Local alignment algorithms must consider alignments that begin and end at each of theMN positions
in the alignment matrix. Despite this added complexity, they only add two additional steps to the global
alignment algorithm. Since every possible starting position must be considered, similarity scores cannot
fall below zero and a 0 term is added to the max comparison in Fig. 12. Since they can end at any
position in the matrix, the best score must be saved at each step. In practice, global and local comparison
algorithms require the same amount of computation.
26
Sequence alignment 
algorithms
• String matching to find common substrings
• Allowing for mismatches (mutations) and 
gaps (insertions/deletions)
• Dynamic Programming solution
• Needleman-Wunsch - Global Alignments; 
Smith-Waterman - Local alignments 
(SSEARCH, GGSEARCH; water, needle)
• Speedups by looking for common words 
(KTUPLES - 2-7) to seed the alignment start
• Basically what happens in BLAST, FASTA
• Heursitics typically employ a fixed insertion 
penalty and cutoffs on low scores so that 
DP matrix is sparse.
Pearson, ISMB 2000
Sequence alignment algorithms and complexity
Table 9: Algorithms for comparing protein and DNA sequences
algorithm value scoring gap time
calculated matrix penalty required
Needleman- global similarity arbitrary penalty/gap O(n2) Needleman and
Wunsch q Wunsch, 1970
Sellers (global) distance unity penalty/residue O(n2) Sellers, 1974
rk
Smith- local similarity Ŝi j < 0.0 affine O(n2) Smith and Waterman, 1981
Waterman q+ rk Gotoh, 1982
FASTA approx. local Ŝi j < 0.0 limited gap size O(n2)/K Lipman and Pearson, 1985
similarity q+ rk Pearson and Lipman, 1988
BLASTP maximum Ŝi j < 0.0 multiple O(n2)/K Altshul et al., 1990
segment score segments
a variety of related and unrelated proteins.
Rigorous sequence comparison algorithms, like the Smith-Waterman algorithm, require time propor-
tional to O(mN), where m is the length of the query sequence and N is the number of amino acids in
the protein sequence library. Modern high-performance unix workstations can compare a 300 residue
protein sequence (human opsin) to the 40,000 entry, 15,000,000 amino acid Swiss-Prot 31 database in
less than 10 minutes.
Although very rapid3 algorithms are available for calculating optimal global similarity scores be-
tween two sequences, particularly with unit cost scores, such algorithms are rarely appropriate for bio-
logical sequence comparison. Unit cost algorithms must discard the substantial biochemical information
encoded in the PAM250 matrix. Most rapid optimal algorithms calculate only global similarities; such
comparisons are not useful for DNA sequence comparison because the “ends” required for a global se-
quence comparison are usually arbitrary.
2O(Nd), where N is the length of a sequence and d is the number of differences between the two sequences.
23
Pearson, ISMB 2000
Figure 13: Heuristic strategies for sequence comparison
C G V P A I Q P V L S G L S R I V N G E
Smith-Waterman
A
I
A
V
V
G
L
Q
P
V
T
A
S
S
A
A
P
N
P
FASTA
BLAST
time:  10:00 min
time:  2:00 min
time: 20 sec
28
Figure 13: Heuristic strategies for sequence comparison
C G V P A I Q P V L S G L S R I V N G E
Smith-Waterman
A
I
A
V
V
G
L
Q
P
V
T
A
S
S
A
A
P
N
P
FASTA
BLAST
time:  10:00 min
time:  2:00 min
time: 20 sec
28
Heuristic algorithms for DP 
searching for sequence 
similarities
Figure 13: Heuristic strategies for sequence comparison
C G V P A I Q P V L S G L S R I V N G E
Smith-Waterman
A
I
A
V
V
G
L
Q
P
V
T
A
S
S
A
A
P
N
P
FASTA
BLAST
time:  10:00 min
time:  2:00 min
time: 20 sec
28
Figure 13: Heuristic strategies for sequence comparison
C G V P A I Q P V L S G L S R I V N G E
Smith-Waterman
A
I
A
V
V
G
L
Q
P
V
T
A
S
S
A
A
P
N
P
FASTA
BLAST
time:  10:00 min
time:  2:00 min
time: 20 sec
28
Pearson, ISMB 2000
Variants on the alignment theme
• HMMER (v1, v2) - Profile Hidden Markov Model where sequences are compared to a profile 
of a multiple sequence alignment and probability that HMM could have emitted query 
sequence is assessed.
• MUMMER - suffix trees, longest increasing subsequence, and Smith-Waterman DP
• BLAT - big hash tables to find exact matching or patterns (ie 24 out a 28bp word) in O(1) 
and string them together. For nearly identical sequences
• For protein sequence alignments - HMMER3 is a game changer.
• Speed is now basically as fast as BLAST in some cases. New (today!) HMMER3.0b3 is 
multithread and MPI enabled
The need for speed
• Acceleration of current algorithms
• Hardware acceleration with GPUs and FPGAs
• TimeLogic, Paracel (defunct)
• SIMD acceleration
• SSEARCH using striped Smith-Waterman on x86 (SSE2)
• Embarrassingly Parallel problem!
• MPI and PVM enabled to split up searches on a cluster, and recombined the score 
distribution at the end to assess E-value
SSEARCH on par with BLAST! Farrar, Bioinformatics 2007
Large numbers of genome sequences
• 1000+ Bacterial and Archeal genomes
• 100s of fungal genomes
• 10s of animal and plant genomes
• 10s of other eukaryotes
• Coming online
• 1000 human genome project - http://1000genomes.org
• 1001 Arabidopsis genomes - http://1001genomes.org
• 1000 Drosophila genomes - http://dpgp.org
• 15,000 vertebrate genome project (propsed)
http://bit.ly/2ruuhM
Metagenomics
The coming storm: what 
to do with all this data?
• Can use the more sensitive tools on 
larger datasets.
• Datasets are of course getting larger. 
Challenge Moore’s law? Producing 
data faster.
• Need to get more efficient in how 
the data is processed, organized, 
and accessed
• Not discussing the storage and data 
management challenges
The Sequence DB Search problem
Query
Generates
Scores
Figure 6: Searching with human ATP-ase, similarity scores
opt E()
< 20 17 0:= one = represents 22 library sequences
22 0 0:
24 0 0:
26 2 0:=
28 7 3:*
30 7 18:*
32 45 68:===*
34 166 184:========*
36 337 379:================ *
38 581 626:=========================== *
40 869 873:=======================================*
42 1009 1067:============================================== *
44 1276 1177:=====================================================*====
46 1253 1198:======================================================*==
48 1199 1147:====================================================*==
50 1032 1047:===============================================*
52 949 920:=========================================*==
54 838 786:===================================*===
56 578 657:=========================== *
58 467 539:====================== *
60 393 437:================== *
62 339 350:===============*
64 276 278:============*
66 214 220:=========*
68 188 173:=======*=
70 140 136:======*
72 131 106:====*=
74 88 83:===*
76 71 64:==*=
78 48 50:==*
80 43 39:=*
82 38 30:=*
84 27 24:=*
86 21 18:*
88 15 14:*
90 17 11:*
92 7 8:* :=======* = represents 1 library sequence
94 22 7:* :======*===============
96 3 5:* :=== *
98 8 4:* :===*====
100 6 3:* :==*===
102 5 2:* :=*===
104 9 2:* :=*=======
106 4 1:* :*===
108 5 1:* :*====
110 4 1:* :*===
112 4 1:* :*===
114 4 1:* :*===
116 6 0:= *======
118 1 0:= *=
>120 32 0:== *================================
11
E-value
Pairwise 
alignment
For each 
sequence
Database
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
Sequence
1000Xs 
more
Next Generation Sequencing data challenges
• Where did you come from?
Map all the reads (10-30M tags of length 25 - 
120 bp) against the genome
With mismatch/gaps.
Soln: Hashing, Suffix trees, Burrows-Wheeler 
Transformation. BowTie, MAQ, SOAP, BWA
• Find the errors, mutations, insertions or 
deletions, or copy number variation.
Align reads to the genome, but confidently call 
the differences between the sample and 
reference as real variations.
Soln: Some bayesian approaches that factor 
quality and number of sequences that support it.  
Shortcut is heuristic: 3+ reads that agree = 
believable. Can condition on number of agreeing 
reads.  Mosaik, MAQ
• Genomic Assembly. 
Make contiguous sequence stretches by putting 
jigsaw back together (30 - 120bp reads, 
sometimes paired).  
Soln: Best solutions are graph based -but many 
paths through the data so lots of memory 
required. Velvet, ABYSS
• Show me your genes!
Align transcript pieces (short-reads from RNA-
Seq) to the genome, but with large gaps for 
introns.
Soln: Allow partial alignments and stitch together 
those that are paired, extra points for occurring 
at a splice-site and having multiple independent 
reads that agree. BowTie+TopHat/CuffLinks
Jacob Appelbaum & Donald Knuth Demonstrate 
The Recursive Homeboys Principle
Evolutionary questions
•Gene content changes
•Gene order evolution
•Evolutionary relationships between organisms (branching order)
•Evolutionary Rates
Comparing gene content among species
• Identification of the same genes found in each species
• Use similar searches to find significant ones - pairwise problem is fairly straightforward
• Combining these for multiple species where missing data is allowed (gene loss) or additional 
data (gene duplication) makes the problem harder.
• Typical methods cluster into Orthologous groups by similarity cutoff, but transitive property 
is not always met (A similar to B, B similar to C, not always the case that A and C are 
significant similar or homologous).
• Variations on theme using Markov Clustering (MCL) have been applied with some 
success.
• Other approaches include phylogenetic (tree building) for putative clusters to sort out 
relationships, but is also fraught with false positives and computation complexity.
Clustering with MCL http://micans.org/mcl
Ortholog and paralog finding still active areas
• De novo identification identification of families still has many false positives. Dynamic 
adjustment of parameters based on sequence length, evolutionary rates, etc may help 
refine clusters better.
• As more genomes are produced, how can we re-build ortholog sets incrementally?
• Use HMMs of ortholog sets as searching database to improve sensitivity
Gene order evolution
• Comparing order of the genes in 
different organisms.
• Conservation of order is referred to 
as synteny
• Why is it important? Shared synteny 
suggests between different 
organisms suggests it is the 
ancestral state. If it has been 
preserved over time, maybe a 
functional reason
• Also useful for inferring 
corresponding (orthologous) genes 
in different species
38
A
B
C
Figure 3.2: Identification of monotopoorthologous segments by Mercator. The long grey
bars represent segments from three genomes, colored rectangles denote anchors within these
segments, and lines incident to anchors represent hits (an arrowhead indicates that the other
anchor is not within the shown segments). High-scoring hits are shown as solid lines, while
weaker hits are drawn as dotted lines. (A) Repetitive anchors (black) are marked and
three-cliques (blue and red) are identified. (B) Runs formed by the red and blue anchors
are identified and edges inconsistent with these runs are filtered. (C) Two-cliques and
cliques including anchors previously considered repetitive are discovered and included into
runs.
Synteny blocks
• Identifying regions that have shared 
history
• Identify anchors, consider ordering 
of anchors in each organism
• Allow for insertions and deletions
• Find longest common “substring” of 
genes.
• Genes in a block found in different 
species may be orthologous
Phylogenetic Trees
• Represents evolutionary history of 
organism
• Can be used with binary character 
traits or DNA or protein sequences
• Constructed by a calculation of the 
distance between the taxa
• Bayesian and maximum likelihood 
approaches as well as simpler 
distance-only (neighbor-joining) and 
parsimony approaches to represent 
the data.
Tree building future 
problems
• How do we assemble very large 
trees?
In pieces and stitch together?
All in one go with huge distributed 
systems?
• Very much an active area of research 
Need more efficient algorithms and 
hardware acceleration approaches.  
• NSF funded CIPRES have been on 
algorithmic improvements -for large 
number of taxa from Tree of Life 
project data.
• Tree Viz is also important area - how 
do we represent the large amount of 
data? Dynamically and interactively? 
Evolutionary rates
• Calculate evolutionary rates as 
amount of change in a sequence as 
compared to others
• If the amount of change is greater in 
some branches suggests interesting 
phenomenon -identify by comparing 
the relative rates.
• Statistical tests for whether rates are 
significantly different. Can apply to 
protein loci and genome alignments.
• Open questions: inferring rates in 
the first place still a hard problem 
and quite slow. Methods that 
efficiently scan whole genome of 
alignments still need work.
4563G33 4563633 4564333 4564433 4564733 4564833 4564H33 4564533 4564;33 4564I33
!"#$%&'%$()*$(&&()+,-.(/")0$%#')12
!"#
<J/* 67<
73<
"23%45*
!=>35577
#$$%"&'()*+)(,%-./*%0#.#%1!"#
(&?@A)48667
(&?@A)48668
=&8&>,(?@0#.#%'+5,7&5
C'(&(D(&?@A)48667E&:(:#&D48F
06,*72)8*%97(,8*1(:+7;487()8<
4
3B5
3
'9(&:*%-&
Nc  TTCCTTACCAGCAGCCCCGGCCGTCGCCCCGCTCTTTCGACCCACGATGTTGTC---GAT
Nt  TTCCTTACCAGCAGCCCCGGCCGTCGCCCCGCTCTTTCGACTCACGATGTTGTC---GAT
Nd  TTCCTGACCAGCAGCCCCGGCCGTCGCCCCGCTCTTTCGACCCACGATGTTCTC---GAT
Sm  TTCCTTACCAGCAGCCCCGGCCGTCGCCCCGCGCTCTCGACTCACGATGTTGTC---GAC
Pa  TTCTTGACCAGCAGCCCAGGACGCCATCCAGCACT---GACCCACCTTGATGTCCAAGAT
Cg  TTCCTCACCAGCAGCCCTGGGCGCCACCCGGCTCTGTCGTCGCA---TGACGTCAAAGAT
    *** * *********** ** ** *  ** ** **   * * **   **   **   ** 
Comparing conservation profiles
human
chimp
orangutan
gibbon
colobus monkey
vervet
baboon
macaque
dusky titi
owl monkey
marmoset
squirrel monkey
mouse lemur
galago
tree shrew
rat
mouse
guinea pig
ground squirrel
rabbit
cow
cat
dog
horse
flying fox
little brown bat
horseshoe bat
hedgehog
shrew
armadillo
tenrec
elephant
rock hyrax
opossum
platypus
chicken
0.1 subst/site
False Positive Rate
3 bp 10 bp
LRT
SCORE
T
ru
e
 P
o
s
it
iv
e
 R
a
te
Figure 3: Subtree ROC curves.
28
 Cold Spring Harbor Laboratory Press on November 10, 2009 - Published by genome.cshlp.orgDownloaded from 
Pollard et al, Genome Res, 2009
chr18:
Primate El
Mammal El
Vertebrate El
27160000 27165000 27170000 27175000 27180000
UCSC Genes Based on RefSeq, UniProt, GenBank, CCDS and Comparative Genomics
Vertebrate Multiz Alignment & Conservation (44 Species)
Primate Basewise Conservation by PhyloP
Placental Mammal Basewise Conservation by PhyloP
Vertebrate Basewise Conservation by PhyloP
Primate Conservation by PhastCons
Placental Mammal Conservation by PhastCons
Vertebrate Conservation by PhastCons
Multiz Alignments of 44 Vertebrates
DSG1
Primate Cons
2 _
-2 _
0 -
Mammal Cons
2 _
-2 _
0 -
Vertebrate Cons
2 _
-2 _
0 -
Primate Cons
1 _
0 _
Mammal Cons
1 _
0 _
Vertebrate Cons
1 _
0 _
A
Simultaneously identifying slow and 
rapidly evolving regions in the human 
genome
Pollard et al, Genome Res, 2009
More open areas in computational biology
• Image processing - decoding visual images into computable data
Microscopy images for phenotypes (trait) analyses:
 How big is that neuron cell? After I apply this drug?
Patterns of gene expression through staining and visualization - what is the pattern?
• Protein 3-D structure analysis and prediction
Molecular dynamic simulations to take 1D protein sequence to 2D and 3D sequence 
structure predictions. Predictions are still very poor - using hints of known sub-sequences 
and their folding pattern. {Folding@Home}
• RNA structure prediction
Identification of the secondary structure of sequences via thermodynamic and base-pairing 
rules. Finding real versus artifact and comparing this to sequence conservation.
Still more
• Gene network reconstruction from time series data
How do genes function together and are dependent on each other.
• Gene identification and annotation
Use of computation and experimental data to define the regions of the genome which are 
transcribed into genes
• Gene function prediction
Using the known annotation of function of some genes can we infer the function of others 
using ontologies of gene function and phylogenetic relatedness of the genes and species
For more information
http://lab.stajich.org
http://bioperl.org
http://bioinfo.ucr.edu

