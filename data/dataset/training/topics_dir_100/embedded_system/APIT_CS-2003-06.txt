Range-Free Localization Schemes for Large Scale  
Sensor Networks1  
 
Tian He, Chengdu Huang, Brian M. Blum, John A. Stankovic, Tarek Abdelzaher 
 
Department of Computer Science, University of Virginia 
151 Engineer's Way, P.O. Box 400740, Charlottesville, Virginia 22904-4740, USA 
{TianHe, ch4pp, bmb5v, Stankovic, Zaher}@cs.virginia.edu 
 
ABSTRACT 
Wireless Sensor Networks have been proposed for a multitude of 
location-dependent applications.  For such systems, the cost and 
limitations of the hardware on sensing nodes prevent the use of 
range-based localization schemes that depend on absolute point-
to-point distance estimates.  Because coarse accuracy is sufficient 
for most sensor network applications, solutions in range-free 
localization are being pursued as a cost-effective alternative to 
more expensive range-based approaches.  In this paper, we 
present APIT, a novel localization algorithm that is range-free.  
We show that our APIT scheme performs best when an irregular 
radio pattern and random node placement are considered, and low 
communication overhead is desired.  We compare our work via 
extensive simulation, with three state-of-the-art range-free 
localization schemes to identify the preferable system 
configurations of each.  In addition, we study the effect of 
location error on routing and tracking performance.  We show that 
routing performance and tracking accuracy are not significantly 
affected by localization error when the error is less than 0.4 times 
the communication radio radius. 
Categories and Subject Descriptors 
C.2. [Computer Communication Networks]: Network Protocols  
General Terms 
Algorithms, Performance, Design 
Keywords 
Localization, Positioning, Location discovery, Sensor Networks1 
                                                                
1  
1. INTRODUCTION 
Wireless Sensor Networks (WSNs) distinguish themselves from 
other traditional wireless or wired networks through sensor and 
actuator based interaction with the environment.  Such networks 
have been proposed for various applications including search and 
rescue, disaster relief, target tracking, and smart environments.  
The inherent characteristics of these sensor networks make a 
node’s location an important part of their state.  For such 
networks, location is being used (i) to identify the location at 
which sensor readings originate, (for example, identifying a 
target’s position during tracking, providing the location of an 
earthquake survivor buried underneath rubble during disaster 
relief operations)  (ii) in novel communication protocols that route 
to geographical areas instead of IDs ([13], [16], [17], [19], [35]), 
and (iii) when providing other location based services ( such as 
sensing coverage [36] and location directory service [20] to 
provide medical information about a nearby patient in a smart 
hospital).  In addition to the applications and protocols mentioned, 
continued research in WSNs will serve to invent and identify 
many additional protocols and applications, many of which will 
likely depend on location aware sensing devices. 
Many localization algorithms for sensor networks have been 
proposed to provide per-node location information.  With regard 
to the mechanisms used for estimating location, we divide these 
localization protocols into two categories: range-based and 
range-free.  The former is defined by protocols that use absolute 
point-to-point distance estimates (range) or angle estimates for 
calculating location.  The latter makes no assumption about the 
availability or validity of such information.  Because of the 
hardware limitations of WSN devices, solutions in range-free 
localization are being pursued as a cost-effective alternative to 
more expensive range-based approaches.  
This paper makes three major contributions to the localization 
problem in WSNs.  First, we propose a novel range-free algorithm, 
called APIT, with enhanced performance under realistic system 
configurations.  Second, though many different protocols 
[3][22][26] have been proposed to solve the localization problem 
in a range-free context, no prior work has been done to compare 
them in realistic settings.  This paper is the first to provide a 
realistic and detailed quantitative comparison of existing range-
free algorithms to determine the system configurations under 
which each is optimized.  We perform such a study to serve as a 
guide for future research.  Third, no attempt has previously been 
made to broadly study the impact of location error on various 
location-dependent applications and protocols.  This paper 
This work was supported in part by NSF grant CCR-0098269, the 
MURI award N00014-01-1-0576 from ONR, and the DAPRPA IXO 
office under the NEST project (grant number F336615-01-C-1905). 
 
 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not made or distributed for profit or commercial advantage and that 
copies bear this notice and the full citation on the first page. To copy 
otherwise, or republish, to post on servers or to redistribute to lists, 
requires prior specific permission and/or a fee. 
MobiCom ’03, September 14-19, 2003, San Diego, California, USA 
Copyright 2003 ACM 1-58113-753-2/03/0009…$5.00. 
 
provides insight into the effect of localization accuracy on 
application performance degradation and identifies bounds on the 
estimation error tolerated by applications. 
The remainder of the paper is organized as follows:  Section 2 
discusses previous work in localization for sensor networks. 
Section 3 describes APIT.  Section 4 gives brief descriptions of 
three other state-of-the-art range-free protocols to which we 
compare our work.  Section 5 describes our simulation.  Section 6 
follows with a detailed performance comparison of the four range-
free localization algorithms described.  Section 7 further 
investigates the impact of localization error on various location-
dependent applications and protocols such as routing and target 
tracking.  Finally, we conclude in Section 8. 
 
2. STATE OF THE ART 
Many existing systems and protocols attempt to solve the 
problem of determining a node’s location within its environment.  
The approaches taken to solve this localization problem differ in 
the assumptions that they make about their respective network and 
device capabilities.  These include assumptions about device 
hardware, signal propagation models, timing and energy 
requirements, network makeup (homogeneous vs. heterogeneous), 
the nature of the environment (indoor vs. outdoor), node or 
beacon density, time synchronization of devices, communication 
costs, error requirements, and device mobility.  In this section, we 
discuss prior work in localization with regard to these network 
characteristics, device restrictions, and application requirements.  
We divide our discussion into two subsections where we present 
both range-based and range-free solutions.. 
2.1 Range-Based Localization Schemes 
Time of Arrival (TOA) technology is commonly used as a 
means of obtaining range information via signal propagation time.  
The most basic localization system to use TOA techniques is GPS 
[33].  GPS systems require expensive and energy-consuming 
electronics to precisely synchronize with a satellite’s clock.  With 
hardware limitations and the inherent energy constraints of sensor 
network devices, GPS and other TOA technology present a costly 
solution for localization in wireless sensor networks.      
The Time Difference of Arrival (TDOA) technique for ranging 
(estimating the distance between two communicating nodes) has 
been widely proposed as a necessary ingredient in localization 
solutions for wireless sensor networks.  While many 
infrastructure-based systems have been proposed that use TDOA 
[1][12][28], additional work such as AHLos ([30][31]) has 
employed such technology in infrastructure-free sensor networks.  
Like TOA technology, TDOA also relies on extensive hardware 
that is expensive and energy consuming, making it less suitable 
for low-power sensor network devices.  In addition, TDOA 
techniques using ultrasound require dense deployment (numerous 
anchors distributed uniformly) as ultrasound signals usually only 
propagate 20-30 feet.   
To augment and complement TDOA and TOA technologies, an 
Angle of Arrival (AOA) technique has been proposed that allows 
nodes to estimate and map relative angles between neighbors [27].  
Similar to TOA and TDOA, AOA estimates require additional 
hardware too expensive to be used in large scale sensor networks.     
Received Signal Strength Indicator (RSSI) technology such as 
RADAR [1] and SpotOn [15] has been proposed for hardware-
constrained systems.  In RSSI techniques, either theoretical or 
empirical models are used to translate signal strength into distance 
estimates.  For RF systems [1][15], problems such as multi-path 
fading, background interference, and irregular signal propagation 
characteristics (shown in an empirical study of this technology 
[10]) make range estimates inaccurate.  Work to mitigate such 
errors such as robust range estimation ([11]), two-phase 
refinement positioning ([29], [31]), and parameter calibration 
([34]) have been proposed to take advantage of averaging, 
smoothing, and alternate hybrid techniques to reduce error to 
within some acceptable limit.  While solutions based on RSSI 
have demonstrated efficacy in simulation and in a controlled 
laboratory environment, the premise that distance can be 
determined based on signal strength, propagation patterns, and 
fading models remains questionable, creating a demand for 
alternate localization solutions that work independent of this 
assumption.        
2.2 Range-Free Localization Schemes 
In sensor networks and other distributed systems, errors can 
often be masked through fault tolerance, redundancy, aggregation, 
or by other means.  Depending on the behavior and requirements 
of protocols using location information, varying granularities of 
error may be appropriate from system to system.  Acknowledging 
that the cost of hardware required by range-based solutions may 
be inappropriate in relation to the required location precision, 
researchers have sought alternate range-free solutions to the 
localization problem in sensor networks. 
In [3], a heterogeneous network containing powerful nodes 
with established location information is considered.  In this work, 
anchors beacon their position to neighbors that keep an account of 
all received beacons.  Using this proximity information, a simple 
centroid model is applied to estimate the listening nodes’ location.  
We refer to this protocol as the Centroid algorithm.   
An alternate solution, DV-HOP [26] assumes a heterogeneous 
network consisting of sensing nodes and anchors.  Instead of 
single hop broadcasts, anchors flood their location throughout the 
network maintaining a running hop-count at each node along the 
way.  Nodes calculate their position based on the received anchor 
locations, the hop-count from the corresponding anchor, and the 
average-distance per hop; a value obtained through anchor 
communication.  Like DV-Hop, an Amorphous Positioning 
algorithm proposed in [22] uses offline hop-distance estimations, 
improving location estimates through neighbor information 
exchange. 
 These range-free techniques are described in more depth in 
section 4, and are used in our analysis for comparison with our 
work. 
 
3. APIT LOCALIZATION SCHEME 
In this section, we describe our novel area-based range-free 
localization scheme, which we call APIT.  APIT requires a 
heterogeneous network of sensing devices where a small 
percentage of these devices (percentages vary depending on 
network and node density) are equipped with high-powered 
transmitters and location information obtained via GPS or some 
other mechanism.  We refer to these location-equipped devices as 
anchors.  Using beacons from these anchors, APIT employs a 
novel area-based approach to perform location estimation by 
isolating the environment into triangular regions between 
beaconing nodes (Figure 1).  A node’s presence inside or outside 
of these triangular regions allows a node to narrow down the area 
in which it can potentially reside.  By utilizing combinations of 
anchor positions, the diameter of the estimated area in which a 
node resides can be reduced, to provide a good location estimate.  
 
 
Figure 1: Area-based APIT Algorithm Overview 
3.1 Main Algorithm  
The theoretical method used to narrow down the possible area 
in which a target node resides is called the Point-In-Triangulation 
Test (PIT).  In this test, a node chooses three anchors from all 
audible anchors (anchors from which a beacon was received) and 
tests whether it is inside the triangle formed by connecting these 
three anchors.  APIT repeats this PIT test with different audible 
anchor combinations until all combinations are exhausted or the 
required accuracy is achieved.  At this point, APIT calculates the 
center of gravity (COG) of the intersection of all of the triangles 
in which a node resides to determine its estimated position.  
The APIT algorithm can be broken down into four steps: 1) 
Beacon exchange, 2) PIT Testing, 3) APIT aggregation and 4) 
COG calculation.  These steps are performed at individual nodes 
in a purely distributed fashion.  Before providing a detailed 
description of each of these steps, we first present the basic 
pseudo code for our algorithm: 
 
 Receive location beacons (Xi,Yi)  from N anchors.  
InsideSet = Φ  // the set of triangles in which I reside 
For (each triangle Ti ∈ )(3
N
 triangles) { 
    If (Point-In-Triangle-Test (Ti) == TRUE) 
InsideSet = InsideSet ∪ { Ti } 
   If( accuracy(InsideSet) > enough ) break; 
} 
 /* Center of gravity (COG ) calculation */ 
Estimated Position = COG ( ∩Ti ∈ InsideSet); 
 
We note that the size of InsideSet grows cubically with the 
number of anchor beacons heard.  For example, with 30 audible 
beacons in a sensor network of 1,500 nodes, the radio region will 
be divided by 4,060 triangles into small pieces.  If the PIT tests 
render correct inside/outside decisions, each decision will narrow 
down the area in which a target node can possibly reside, making 
the final error small.  In the next two sections, we describe the 
perfect PIT test and discuss the infeasibility of performing this test 
in a WSN.  We then introduce a practical approximation to this 
perfect PIT test, applicable to our work. 
 
3.2 Perfect PIT Test  
In this section, we provide a perfect, albeit theoretical, solution 
to the following problem: For three given anchors:  A(ax,ay), 
B(bx,by), C(cx,cy), determine whether a point M with an unknown 
position is inside triangle ∆ABC or not. 
  
Propositions I: If M is inside triangle ∆ABC, when M is shifted in 
any direction, the new position must be nearer to ( further from) 
at least one anchor A, B or C. (Figure 2A)  
 
Proposition II: If M is outside triangle ∆ABC, when M is shifted, 
there must exist a direction in which the position of M is further 
from or closer to  all three anchors A, B and C. (Figure 2B).   
 
Figure 2: Propositions I and II 
Propositions I and II are intuitively correct (the formal proofs 
are in appendix A).  Accordingly, the Perfect PIT test 
methodology derived from propositions I and II is as follows:  
 
Perfect P.I.T Test Theory: If there exists a direction such that a 
point adjacent to M is further/closer to points A, B, and C 
simultaneously, then M is outside of ∆ABC.  Otherwise, M is 
inside ∆ABC.  
 
The Perfect P.I.T test is guaranteed to be correct in deciding 
whether a point M is inside triangle ∆ABC.  However, there are 
two major issues when performing this in a WSN: 
• How does a node recognize directions of departure from an 
anchor without moving? 
• How to exhaustively test all possible directions in which 
node M might depart/approach vertexes A, B, C 
simultaneously? 
We address these issues in the next section. 
 
3.3 Approximation of the Perfect PIT Test 
The Perfect P.I.T. test is infeasible in practice; however, we can 
still obtain a very high level of accuracy by an approximation 
method introduced in this section.   
3.3.1 Departure Test  
In previous work [1][15], researchers have assumed a circular, 
or otherwise well-defined, mathematical or empirical model such 
as a log-normal attenuation model for radio propagation 
characteristics that describes the relationship between the signal 
strength degradation and the distance a radio signal travels.  
However, according to a recent empirical study by D. Ganesan at 
UCLA [10], this assumption does not hold well in practice.  In 
our work, we make a much weaker assumption about radio 
propagation characteristics.  We assume that in a certain 
propagation direction, defined to be within a narrow angle from 
the sending anchor (Figure 3), the received signal strength is 
monotonically decreasing in an environment without obstacles.  
This simply says that in a given direction, the further away a node 
is from the anchor, the weaker the received signal strength will be.  
Through signal strength comparisons between neighboring nodes, 
this assumption allows a node to determine whether a neighboring 
node is closer to a given anchor.  
Departure Test Definition: Test whether M is further away from 
anchor A than N.  
 
Figure 3: Departure Test  
 
In addition to gathering evidence drawn from prior empirical 
studies of WSNs [10], we checked the validity of our assumption 
on Berkeley’s MICA mote testbed in an obstruction free 
laboratory environment.  In this experiment, we incrementally 
increased the distance between sending (anchor) and receiving 
motes.  Figure 4 shows the measured signal strength of 40 
beacons from a single anchor at varying distances. 
300
350
400
450
500
550
600
1 5 9 13 17 21 25 29 33 37
Beacon Sequence Number
S
ig
n
al
 S
tr
en
g
th
 (
m
v)
1 Foot
5 Feet
10 Feet
15 Feet
 
Figure 4: Signal Strength at Different Distances 
We conclude from Figure 4 that our assumption of 
monotonically decreasing signal strength in a given direction is 
usually valid.  For example, the signal strength readings shown in 
Figure 4 are usually about 560 mv at one-foot, and about 510 mv 
at five-feet.  However, we note that there are various points on the 
graph where this signal strength property is violated due to burst 
disturbance effects.  Two approaches to minimize the effect of 
such disturbances include taking a running average of the signal 
strength over time and using our robust aggregation, a technique 
discussed further in section 3.4.  
It should be noted that our scheme does not make any 
assumptions about the correlation between absolute distance and 
signal strength; hence, we consider our scheme a range-free 
solution.  More importantly, though we use radio signal 
comparisons throughout the paper, our scheme can actually work 
with any system, so long as it can support a form of the departure 
test. 
3.3.2 Approximate PIT Test  
To perform PIT testing in sensor networks without requiring 
that nodes move, we define an Approximate PIT Test (APIT) that 
takes advantage of the relatively high node density of these 
networks (usually with connectivity above 6).  The basic idea 
behind the APIT test is to use neighbor information, exchanged 
via beaconing, to emulate the node movement in the Perfect PIT 
test.  The APIT test is formally described below. 
 
Figure 5: Approximate P.I.T Test 
Approximate P.I.T Test: If no neighbor of M is further 
from/closer to all three anchors A, B and C simultaneously, M 
assumes that it is inside triangle ∆ABC.  Otherwise, M assumes it 
resides outside this triangle. 
 
We further explain the APIT test through an example.  Figure 
5A presents a scenario where none of M’s neighbors, 1, 2, 3 or 4, 
is further from/closer to all three anchors A, B and C 
simultaneously.  In this scenario, M will assume that it is inside 
the triangle ∆ABC according to the definition.  The other scenario 
is shown in Figure 5B, where neighbor 3 will report to node M 
that it is further away from A, B, and C than M.  This allows M to 
assume it resides outside of triangle ∆ABC. 
 
Figure 6: Error Scenarios for the APIT Test. 
 
Because APIT can only evaluate a finite number of directions 
(the number of neighbors), APIT can make an incorrect decision.  
The two scenarios where incorrect decisions are made are 
depicted in Figure 6.  In Figure 6A, we show what we deem 
InToOut error, where the node is inside the triangle, but concludes 
based on the APIT test that it is outside the triangle.  This can 
happen when M is near the edge of the triangle, while some of 
M’s neighbors (3 in this case) are outside the triangle and further 
from all points ABC, in relation to node M.  As a result, M 
mistakenly thinks it is outside of triangle ABC due to this edge 
effect.  On the other hand, the irregular placement of neighbors 
can result in OutToIn error.  Figure 6B depicts a scenario where 
M is outside of triangle ABC and none of its neighbors is further 
from/closer to all three anchors, A, B and C, simultaneously.  This 
makes M mistakenly assume it is inside triangle ABC.    
Fortunately, from experimentation, we find that the percentage 
of APIT tests exhibiting such an error is relatively small (14% in 
the worst case).  Figure 7 demonstrates this error percentage as a 
function of node density.  When node density increases, APIT can 
evaluate more directions, considerably reducing OutToInError 
(Figure 6B).  On the other hand, InToOutError will slightly 
increase due to the increased chance of edge effects. 
0%
2%
4%
6%
8%
10%
12%
14%
16%
6 8 10 12 14 16 18 20 22 24
Node Density Per Radio Range
E
rr
or
P
er
ce
n
ta
g
e
OutToInErrorPercentage
InToOutErrorPercentage
 
 Figure 7: APIT Error under Varying Node Densities 
3.4 APIT Aggregation 
Once the individual APIT tests finish, APIT aggregates the 
results (inside/outside decisions among which some may be 
incorrect) through a grid SCAN algorithm (Figure 8).  In this 
algorithm, a grid array is used to represent the maximum area in 
which a node will likely reside.  In our experiments, the length of 
a grid side is set to 0.1R, to guarantee that estimation accuracy is 
not noticeably compromised. 
 
Figure 8: SCAN Approach 
For each APIT inside decision (a decision where the APIT test 
determines the node is inside a particular region) the values of the 
grid regions over which the corresponding triangle resides are 
incremented.  For an outside decision, the grid area is similarly 
decremented.  Once all triangular regions are computed, the 
resulting information is used to find the maximum overlapping 
area (e.g. the grid area with value 2 in Figure 8), which is then 
used to calculate the center of gravity for position estimation.   
The pseudo code for APIT aggregation is as follows: 
For (each triangle Ti ∈ )(3
N
 triangles) {   
           If (APIT(Ti) == Out ) AddNegtiveTriangle(Ti); 
           If (APIT(Ti) == In ) AddPositiveTriangle(Ti);  
};    
   Find the area with Max values; 
 APIT aggregation is a robust approach that can mask errors in 
individual APIT tests.  As we know from Figure 7, the majority 
(more than 85% in the worst case) of APIT tests are correct.  With 
limited error, the correct decisions build up on the grid and the 
small number of errors only serves as a slight disturbance to the 
final estimation. 
3.5 A Walk through the APIT Algorithm 
In this section, we present an example to further explain our 
APIT algorithm. 
 
1. Having received beacons from anchors A, B, and C, each 
node maintains a table (Anchor ID, Location, Signal Strength) 
for each anchor heard (Figure 9). 
 
Node M Node 1
1mv5623C
3mv3145B
2mv2020A
SS(X,Y)
3mv5623C
2mv3145B
1mv2020A
SS(X,Y)
 
Figure 9: Table of heard Anchors 
 
2. Each node beacons once to exchange anchor tables with its 
neighbors.  These tables are merged at every node to maintain 
neighborhood state (Figure 10). 
 
 
Figure 10: Combined Table 
 
3. APIT runs on every column of the node’s table to determine 
whether a neighboring node exists that has consistently 
larger/smaller signal strengths from the three anchors A, B 
and C2.  If such a neighbor is found, M assumes that it is 
outside triangle ABC.  If no such neighbor is found, M 
assumes it is inside this region. 
 
4. Each node repeats step 3 for varying combinations of three 
anchors.  (Note: we only demonstrate 1 combination of three 
anchors in this example). 
 
5. The algorithm described in Section 3.4 is then used to 
determine the area with maximum overlap.  
 
6. Finally, the center of gravity of this area is used as the final 
location estimation. 
                                                                
2 No P.I.T. test is performed when neighboring nodes do not share 
three common anchor points. 
3.6 APIT Performance Analysis 
We consider a static senor network with N anchors and M 
nodes.  Since APIT requires each anchor and node to broadcast 
once, the communication overhead of our APIT algorithm is N+M 
under collision-free situation.  We have proven (see authors for 
proof) that if a target node can receive beacons from K anchors, 
the maximum number of polygons partitioned by these anchors 
can be achieved by placing all anchors on a convex curve.  This 
anchor placement creates (K-1)(K-2)/2 + K(K-1)(K-2)(K-3)/24 
partitions.  Assuming the nominal anchor radio range is R, the 
average size of each partition is then:  
3)/242)(K1)(K K(K2)/2 1)(K(K
R
−−−+−−
2π  
It should be noted that the above formula only indirectly 
reflects the upper bound performance of the Perfect PIT test.  
APIT has less accuracy due to approximation as we will show in 
our evaluations.   
By using our SCAN algorithm during APIT aggregation, we 
bound the computational complexity of the APIT algorithm by 
O(L) (L is the number of APIT tests and each test only requires 
several comparisons).  If we use a geometric algorithm to perform 
APIT aggregation precisely, the computational complexity will be 
O(L2).  
In a mobile sensor network, periodic beaconing is a 
straightforward solution to maintain the current anchor and node 
positions. A more sophisticated method to minimize localization 
cost under such a network is left as future work. 
3.7 Key Observations 
We note several key observations here to justify the use of our 
APIT algorithm in sensor networks. 
• Redundancy and high node density are the key positive 
characteristics of sensor networks over traditional ad hoc 
networks.  By exploiting this redundancy, aggregated 
decisions can provide good accuracy during location 
estimation, regardless of the fact that information obtained 
by an individual test is coarse and error prone. 
• In order to obtain high redundancy without increasing 
deployment costs, we can use a single moving anchor that 
sends out beacons at different locations to localize all nodes 
inside a sensor network.  
 
4. RANGE-FREE SCHEMES 
In this section, we briefly describe the key features of three 
state-of-the-art range-free localization algorithms studied in our 
simulation.  These algorithms are implemented in accordance with 
the published design; with the exception of a few enhancements, 
made to ensure that our comparison is as fair as possible.  The 
protocols discussed include: 
 
• Centroid Scheme [3] by N.Bulusu  and J. Heidemann  
• DV-Hop Scheme [26] by D.Niculescu and B. Nath  
• Amorphous Scheme [22] [23] by R. Nagpal  
 
In addition to the aforementioned range-free algorithms, we 
implement an oracle version of APIT that uses the Perfect PIT 
Test defined in Section 3.2.  For completeness, we provide brief 
descriptions of these algorithms.  More details can be found in [3], 
[22], and [26].    
4.1 Centroid Localization 
N. Bulusu and J. Heidemann [3] proposed a range-free, 
proximity-based, coarse grained localization algorithm, that uses 
anchor beacons, containing location information (Xi,Yi), to 
estimate node position.  After receiving these beacons, a node 
estimates its location using the following centroid formula: 





 ++++=
N
YY
N
XX
YX NNestest
LL 11 ,),(  
The distinguished advantage of this Centroid localization 
scheme is its simplicity and ease of implementation.  In a later 
publication [4], N. Bulusu augments his work by suggesting a 
novel density adaptive algorithm (HEAP) for placing additional 
anchors to reduce estimation error.  Because HEAP requires 
additional data dissemination and incremental beacon deployment, 
while other schemes under consideration only use ad hoc 
deployment, we do not include this later work in our simulations.  
4.2 DV-Hop localization 
DV-Hop localization is proposed by D. Niculescu and B. Nath 
in the Navigate project [25].  DV-Hop localization uses a 
mechanism that is similar to classical distance vector routing.  In 
this work, one anchor broadcasts a beacon to be flooded 
throughout the network containing the anchors location with a 
hop-count parameter initialized to one. Each receiving node 
maintains the minimum counter value per anchor of all beacons it 
receives and ignores those beacons with higher hop-count values.  
Beacons are flooded outward with hop-count values incremented 
at every intermediate hop.  Through this mechanism, all nodes in 
the network (including other anchors) get the shortest distance, in 
hops, to every anchor.  The hop count for a single anchor A, 
generated by simulation, is shown in Figure 11. 
 
 
Figure 11: Anchor Beacon Propagation Phase   
 
In order to convert hop count into physical distance, the system 
estimates the average distance per hop without range-based 
techniques.  Anchors perform this task by obtaining location and 
hop count information for all other anchors inside the network.  
The average single hop distance is then estimated by anchor i 
using the following formula: 
∑
∑ −+−=
j
jiji
i h
yyxx
HopSize
22 )()(
 
In this formula, (xj,yj) is the location of anchor j, and hj is the 
distance, in hops, from anchor j to anchor i.  Once calculated, 
anchors propagate the estimated HopSize information out to the 
nearby nodes. 
Once a node can calculate the distance estimation to more than 
3 anchors in the plane, it uses triangulation (multilateration) to 
estimate its location.  Theoretically, if errors exist in the distance 
estimation, the more anchors a node can hear the more precise 
localization will be.   
4.3 Amorphous localization  
The Amorphous Localization algorithm [22], proposed 
independently from DV-Hop, uses a similar algorithm for 
estimating position.  First, like DV-Hop, each node obtains the 
hop distance to distributed anchors through beacon propagation. 
Once anchor estimates are collected, the hop distance 
estimation is obtained through local averaging.  Each node 
collects neighboring nodes’ hop distance estimates and computes 
an average of all its neighbors’ values.  Half of the radio range is 
then deducted from this average to compensate for error caused by 
low resolution.  
The Amorphous Localization algorithm takes a different 
approach from the DV-Hop algorithm to estimate the average 
distance of a single hop.  This work assumes that the density of 
the network, nlocal, is known a priori, so that it can calculate 
HopSize offline in accordance with the Kleinrock and Slivester 
formula [18]: 
)1(
1
1
1arccos 2
dteerHopSize
ttt
n
n
local
local ∫−




 −−−− −+= π  
Finally, after obtaining the estimated distances to three anchors, 
triangulation is used to estimate a node’s location. 
4.3.1 Amorphous Localization Enhancement3 
By using only three anchors, Nagpal suggests in [22] a critical 
minimum average neighborhood size of 15, imposed to obtain 
good accuracy.  As shown in the APIT algorithm, increasing 
estimation redundancy reduces estimation error.  We, therefore, 
argue that the same design philosophy can be applied to [22].  By 
increasing the number of anchors used in their estimation, we can 
effectively reduce the critical minimum average neighborhood 
requirement from 15 nodes per communication area, to 6, under 
uniform node placement (Figure 12) without reducing estimation 
accuracy (this number would be 8 for random node placement). 
This enhancement uses work done by Jan Beutel [2] in the 
Picoradio Project at UC Berkeley.  A minimum mean square error 
(MMSE) algorithm triangulates node positions based on the 
locations of multiple anchors (in this case more than 3), and 
associates distances between each anchor and the target node.  
                                                                
3 A recent publication [23] in ISPN’03 by Nagpal etc. makes a 
similar enhancement to the one we propose here. 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
3 4 5 6 7 8 9 10 11 12
Anchor Heard
E
st
ia
m
ti
o
n
 E
rr
o
r 
(R
)
NeighborSize 4
NeighborSize 6
NeighborSize 8
NeighborSize 10
NeighborSize 12
NeighborSize 16
Figure 12: Phase Transition in the DV-Based Algorithm 
Using this enhancement, we show that the Amorphous 
algorithm can actually work in a sparsely connected network.  
Increasing the number of anchors participating in multilateration 
can dramatically reduce the required level of network connectivity.  
In Figure 12, we see that when 3 anchors are used, the estimation 
error (normalized to units of node radio range R) is large, 
regardless of the level of connectivity.  By increasing the number 
of anchors to 5, we obtain better precision than that with 3 
anchors, when the levels of connectivity as low as 6.     
More importantly, Figure 12 shows two kinds of phase 
transitions that occur.  First, when the neighbor size exceeds 8, 
increasing the number of anchors participating in multilateration 
brings down the estimation error below half of the radio range, a 
bound tolerated by the applications we studied in section 7.  
Second, the estimation accuracy increases dramatically as the 
number of anchors heard increases to 6.  However, after that, 
continuing to increase the number of anchors heard only slightly 
increases precision.  In accordance with Figure 12, for DV-based 
algorithms, in order to confine the average estimation error to 
reside within half of the radio range, we suggest that both the 
neighborhood size, and the number of anchors used in 
multilateration, remain about 8~10.  We argue that it is not quite 
cost-effective to further increase node density or the number of 
anchors used in multilateration for better accuracy after these 
phase transition points.   
4.4 Perfect PIT algorithm  
As previously mentioned, the precision of our APIT algorithm 
is highly dependent on the correctness of the APIT Test.  To 
obtain boundary conditions for a best estimate in our localization 
scheme, we simulate a perfect PIT algorithm that utilizes an oracle. 
This oracle can guarantee correctness when determining whether a 
node resides within the triangular region created by the three 
anchors.  We use this as a precise bound on our APIT algorithm    
 
5. SIMULATION SETTINGS  
This section describes the simulation settings we use in our 
evaluation. 
5.1 Radio Model  
Some previous work in localization assumes that a perfect 
circular radio model exists.  As stated before, empirical studies 
[10] on real testbeds have shown that this assumption is invalid 
for WSNs.  To ensure that our evaluation is as true to reality as 
possible, we use a more general radio model in our evaluation.  
Specifically, we assume a model with an upper and lower bound 
on signal propagation (Figure 13).  Beyond the upper bound, all 
nodes are out of communication range; and within the lower 
bound, every node is guaranteed to be within communication 
range.  If the distance between a pair of nodes is between these 
two boundaries, three scenarios are possible: 1) symmetric 
communication.  2) uni-directional asymmetric communication, 
and 3) no communication.   
 
 DOI = 0.05     DOI = 0.2 
Figure 13: Irregular Radio Pattern 
The parameter DOI is used to denote the irregularity of the 
radio pattern.  It is defined as the maximum radio range variation 
per unit degree change in the direction of radio propagation.  
When the DOI is set to zero, there is no range variation, resulting 
in a perfectly circular radio model.  To get a better idea of how 
this DOI parameter affects signal propagation characteristics, 
Figure 13 shows the radio patterns generated in simulation with 
DOI values set to 0.05 and 0.2 respectively. 
 
5.2 Placement Model 
In our simulations, nodes and anchors are distributed in a 
rectangular terrain in accordance with predefined densities.  Two 
common placement strategies are investigated, namely random 
and uniform.  
•  Random placement: it distributes all nodes and anchors 
randomly throughout the terrain.   
• Uniform placement: the terrain is partitioned into grids and 
nodes and anchors are evenly divided amongst these grids 
(random distribution inside each grid).   
 
5.3 System Parameters 
In our experiments, we study several system-wide parameters 
that we feel directly affect estimation error in range-free 
localization algorithms.  A description of these parameters follows: 
 
• Node Density (ND): Average number of nodes per node 
radio area. 
• Anchors Heard (AH): Average number of Anchors heard by 
a node and used during estimation. 
• Anchor to Node Range Ratio (ANR): The average distance 
an anchor beacon travels divided by the average distance a 
regular node signal travels.  When this value equals one, the 
anchor and nodes have the same average radio range.  The 
larger this value, the fewer anchors required to maintain a 
desired AH value. 
•  Anchor Percentage (AP): The number of anchors divided by 
the total number of nodes.  This value can be derived from 
the three parameters described above using the formula:  
AP=AH/(AH+ND*ANR2). 
• Degree of Irregularity (DOI): DOI is defined in section 5.1 as 
an indicator of radio pattern irregularity.   
• GPS Error: In reality, GPS equipped anchors will render 
imprecise readings.  In our evaluation, this parameter is 
defined as the maximum possible distance from the real 
anchor position to the GPS estimated anchor position in units 
of node radio range (R). 
• Placement: Random and Uniform node/anchor placements 
are investigated in the evaluation.  
 
In the evaluation, all distances including error estimation are 
normalized to units of node radio range (R) to ensure generally 
applicable results. 
5.4 A Note about Comparisons  
The range-free localization algorithms studied in this paper 
share a common set of system parameters, and most of them are 
defined in a consistent way across the algorithms we analyze.  
However, due to different anchor beacon propagation methods 
utilized in different algorithms, the Anchor to Node Range Ratio 
(ANR) parameter varies between algorithms.  In the Centroid and 
APIT algorithms, direct communication between anchors and 
target nodes (nodes attempting to determine their location) is 
used.  In this case, ANR is set to the physical radio range ratio 
between anchor and target nodes.  In the Amorphous and DV-Hop 
algorithms studied, the physical radio range of anchors is the same 
as that of target nodes, and the ANR is set to the distance an 
anchor beacon can propagate in units of node radio range (R).  In 
our evaluation, we indicate any performance implications that 
result from this implementation difference.  
 
6. EVALUATION 
This section provides a detailed quantitative analysis comparing 
the performance of the range-free localization algorithms 
described in Sections 3 and 4.  The obvious metric for comparison 
when evaluating localization schemes is location estimation error.  
We have conducted a variety of experiments to cover a wide range 
of system configurations including varying 1) anchor density, 2) 
target node density, 3) radio range ratio (ANR), 4) radio 
propagation patterns, and 5) GPS error.  Because communication 
can have a significant impact on sensor network systems with low 
bandwidth, we also use communication overhead, in terms of 
number of beacons exchanged, as a telling secondary metric to 
evaluate the cost and performance of the localization schemes 
studied. 
Outside of studying the effect of certain parameters on 
localization error, we use default values of AH=16, ND=8, and 
ANR=10 (Anchor Percentage = 2%) in most of our experiments.  
These settings are in line with our expectation of future sensor 
network technology and facilitate comparisons between figures.  
In all of our graphs, each data point represents the average value 
of 600 trials with different random seeds and the 90% confidence 
intervals for the data are within 5~10% of the mean shown.  We 
note that for legibility reasons, we do not plot these confidence 
intervals in this paper.  Full experimental data can be obtained 
from the authors upon request. 
6.1 Localization Error when Varying AH 
In this experiment, we analyze the effect of varying the number 
of anchors heard (AH) at a node to determine its effect on 
localization error.   
0
1
2
3
4
5
6
7
8
3 7 11 15 19
Anchor Heard
E
st
im
at
io
n
 E
rr
o
r 
 (
R
) Centroid
Amorphous
DV-Hop
A.P.I.T
P.I.T.
 
A. AH=3~21, DOI=0, ANR = 10, ND = 8, Random 
0
0.5
1
1.5
2
2.5
10 14 18 22 26
Anchor Heard
E
st
im
at
io
n
 E
rr
o
r 
 (
R
)
Centroid
Amorphous
DV-Hop
A.P.I.T
P.I.T.
 
   B. AH=10~28, DOI=0, ANR = 10, ND = 8, Uniform 
0
0.5
1
1.5
2
2.5
10 14 18 22 26
Anchor Heard
E
st
im
at
io
n
 E
rr
o
r 
 (R
)
Centroid
Amorphous
DV-Hop
A.P.I.T
P.I.T.
 
     C. AH=10~28, DOI=0, ANR = 10, ND = 8, Random 
Figure 14: Error Varying AH 
Figure 14A shows that the overall estimation error decreases as 
the number of anchors heard increases.  However, it is important 
to note that different algorithms transition at different points in the 
graph.  For example, the Amorphous and DV-Hop schemes 
improve rapidly when AH is below 7, and are nearly insensitive to 
the addition of anchors above 7.  In contrast, the precision of 
APIT and the Centroid localization scheme constantly improve as 
AH is increased (Figure 14B and Figure 14C).  Our APIT 
algorithm performs worse than the Centroid algorithm when AH 
is below 8 due to the fact that the diameter of the divided area is 
not small enough.  This effect is significantly reduced by 
increasing AH values.  For larger AH values, APIT consistently 
outperforms the Centroid scheme.  Figure 14B extends AH to 
higher values in order to show estimation error below 0.6 R.  We 
note that our APIT algorithm requires only 12 anchors to reach 
the 0.6R level while the Centroid scheme requires 24.  Finally, 
Figure 14C presents the same experimental results for random 
node placement.  By comparing graphs B (uniform placement) 
and C (random placement), we show that the DV-Based algorithm 
is more sensitive to irregular node placement than both APIT and 
the Centroid scheme.  This is mainly due to the fact that HopSize 
estimation in the DV-Hop and Amorphous schemes, is less 
precise in non-isotropic deployment. 
6.2 Localization Error when Varying ND 
Figure 15 explores the effect of node density (ND) on the 
localization estimation accuracy.  For all but the Centroid 
algorithm, localization error decreases as the number of neighbors 
increases.  Since there is no interaction between nodes in the 
Centroid algorithm, we see nearly constant results while varying 
ND.  However, due to its relatively simple design, the Centroid 
localization scheme does not perform as well as the others. 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
6 10 14 18 22
Neighbor Number (connectivity)
E
st
im
at
io
n
 E
rr
o
r 
 (
R
)
Centroid Amorphous
DV-Hop A.P.I.T
 
A. DOI=0.1, ANR = 10, AH=16, Uniform 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
6 10 14 18 22
Neighbor Number (connectivity)
E
st
im
at
io
n
 E
rr
o
r 
 (
R
)
Centroid Amorphous
DV-Hop A.P.I.T
 
B.DOI=0.2, ANR = 10, AH=16, Uniform 
Figure 15: Error Varying ND 
Because the offline estimation of HopSize in the Amorphous 
algorithm has large error when the node density is small, the 
estimation error is large when the node density is below 10.  APIT 
and DV-Hop however, are robust to varying ND, and produce 
good results as long as the neighbor density remains above 6.  By 
comparing Figure 15A (DOI=0.1) and Figure 15B (DOI=0.2), we 
show that the DV-Based algorithms, especially the Amorphous 
algorithm, are more sensitive to irregular radio patterns than the 
APIT scheme.  This is mainly due to the fact that HopSize 
estimation in the previous schemes is less precise in the presence 
of irregular radio patterns.  However, it should be noted that DV-
Hop abates this error by online estimation. 
6.3 Localization Error when Varying ANR 
Section 6.1 demonstrated that a large number of anchors are 
desired for good estimation results.  The cost of having such a 
large percentage of anchors can be ameliorated by increasing the 
anchor radio range to which beacons travel.  This happens 
because larger beacon propagation distances mean less anchors 
required to achieve the same AH value.  For example, if an 
algorithm requires AH equal to the neighborhood node density 
(ND), we need 50% of the nodes to be anchors when the ANR 
equals one.  By increasing the ANR by a factor of 10, we can 
reduce the required anchor percentage to only 1%.  
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
1 5 9 13 17
Anchor Node Range Ratio
E
st
im
at
io
n
 E
rr
o
r 
 (
R
)
Centroid
Amorphous
DV-Hop
A.P.I.T
 
A. ND = 8, AD=16, DOI = 0.1, Uniform 
0
0.5
1
1.5
2
2.5
3
3.5
1 5 9 13 17
Anchor Node Range Ratio
E
st
im
at
io
n
 E
rr
o
r 
 (
R
)
Centroid
Amorphous
DV-Hop
A.P.I.T
 
B. ND = 8, AD=16, DOI = 0.1, Random 
Figure 16: Error under Different ANR 
The implication of this solution, as shown in Figure 16, is that 
estimation error increases as ANR increases.  This occurs because 
larger beacon propagation distances result in larger accumulated 
error.  We note from Figure 16 that while all algorithms possess 
this relationship, the estimation error of the Centroid algorithm 
increases more significantly with increased ANR, in comparison 
to the other three algorithms.  However, we also note that when 
the ANR is smaller than 3, APIT has a large InToOutErrorRatio 
due to the edge effect (described in Section 3.3.2).  In this system 
configuration, a Centroid algorithm has its advantages.  
From an alternate perspective, we show that we can increase 
accuracy by using a smaller ANR.  For example, the estimation 
error, shown in previous sections, can be reduced by about 
30~50% when we use an ANR value of 5 instead of 10.  However, 
this will increase the anchor percentage (AP) from 2% to 8%, 
requiring that more anchors be deployed.  
6.4 Localization Error when Varying DOI 
In this experiment, we investigate the impact of irregular radio 
patterns on the precision of localization estimation.  It is intuitive 
that irregular radio patterns can affect the network topologies 
resulting in irregular hop count distributions in the Amorphous 
and DV-Hop algorithms.  The HopSize formula, used in the 
Amorphous algorithm, assumes that radio patterns are perfectly 
circular.  We can see, in Figure 17, how this inaccurate estimate 
directly contributes to localization error as the DOI increases.  In 
contrast, the DV-Hop scheme estimates HopSize using online 
information exchanged between anchors.  This results in much 
better performance than the Amorphous algorithm, even though 
they are both DV-Based algorithms.  Because the Centroid and 
APIT algorithms do not depend on hop-count and HopSize 
estimations, and because the effect of DOI is abated by the 
aggregation of beaconed information, these algorithms are more 
robust than the Amorphous algorithm. 
0
0.5
1
1.5
2
2.5
3
3.5
0 0.1 0.2 0.3 0.4 0.5 0.6
Degree of irregularity
E
st
im
at
io
n
 E
rr
or
  (
R
) Centroid
Amorphous
DV-Hop
A.P.I.T
 
A. ANR = 10, ND = 8, AH=16, Uniform 
0
0.5
1
1.5
2
2.5
3
3.5
0 0.1 0.2 0.3 0.4 0.5 0.6
Degree of irregularity
E
st
im
at
io
n
 E
rr
o
r 
 (
R
)
Centroid
Amorphous
DV-Hop
A.P.I.T
 
B. ANR = 10, ND = 8, AH=16, Random 
Figure 17: Error under Varying DOI 
6.5 Localization Error when Varying GPS 
Error  
In other experiments, we consider the distinct possibility that 
the GPS or an alternative system, which provides anchor nodes 
with location information, is error prone.  Figure 18A and B 
demonstrate how initial location error at anchors directly affects 
the error of the range-free localization protocols studied.  In 
general, in all four schemes GPS error is abated considerably by 
utilizing location information from multiple anchors.  In the 
random error case (Figure 18A), we assume GPS error is isotropic; 
that is, the estimation error can occur in any direction.  In this 
situation, the error impact of GPS is very small.  We also see 
(Figure 18B) that when GPS error is biased (skewed in a 
particular direction) due to non-random factors, the estimation 
error of all schemes increases at a much slower rate than GPS 
error due to aggregation. 
0
0.2
0.4
0.6
0.8
1
0.1 0.3 0.5 0.7 0.9
GPS Error  (Unit R)
E
st
im
at
io
n
 E
rr
o
r 
 (
R
)
Centroid Amorphous
DV-Hop A.P.I.T
  
A.ANR = 10, ND = 8, AH=16, Uniform, Random Error 
0
0.2
0.4
0.6
0.8
1
1.2
0.1 0.3 0.5 0.7 0.9
GPS Error  (Unit R)
E
st
im
at
io
n
 E
rr
o
r 
 (
R
)
Centroid Amorphous
DV-Hop A.P.I.T
 
B. ANR = 10, ND = 8, AH=16, Uniform, Bias Error 
Figure 18: Error under Different GPS Error 
6.6 Communication Overhead for Varied AH 
0
5000
10000
15000
20000
25000
30000
10 15 18 23 26
Anchor Heard
# 
S
h
o
rt
-r
an
g
e 
B
ea
co
n
s
Centroid
Amorphous
DV-Hop
A.P.I.T
 
ANR=10, ND = 8, DOI = 0.1, Uniform 
Figure 19: Communication Overhead for Varied AH 
Figure 19 shows the results of experiments that test the 
communication overhead with regard to AH.  It is important to 
note that the Centroid and APIT schemes use long-range anchor 
beacons, while the Amorphous and DV-hop algorithms use short-
range beacons.  Considering that energy consumption 
quadratically increases with increased beacon range, in Figure 19 
we equate one long-range beacon to ANR2 short-range beacons.  
This means that one long-range beacon sent out by APIT is 
counted as 100 short-range beacons when ANR = 10.  Figure 19 
shows that without flood-based beacon propagation, the Centroid 
and APIT algorithms use much fewer beacons than DV-based 
algorithms.  For example, the APIT algorithm uses only about 
10% of the beacons that the DV-Hop scheme uses when AH is set 
to 16. 
Figure 19 also shows that APIT requires more beacons than the 
Centroid algorithm because of the neighborhood information 
exchange.  In addition, DV-Hop requires more beacons than the 
Amorphous algorithm because of additional online HopSize 
estimation requirements.  
It should be noted that the evaluation of communication 
overhead here assumes a collision-free environment. If taking the 
collision into account, we expect that Amorphous and DV-hop 
algorithms introduce even more control overhead because of the 
flooding required by those two schemes. 
6.7 Communication Overhead for Varied ND 
Figure 20 demonstrates the effect of neighborhood density on 
required communication for localization.  We can see from this 
graph that because there is no interaction between nodes in the 
Centroid scheme, the overhead stays constant.  Communication 
overhead in our APIT scheme does increase with increased node 
density; however, it does so at a much lower rate than the DV-
based schemes.  
0
5000
10000
15000
20000
25000
30000
6 11 15 18 22
Node Density (connectivity)
# 
S
h
o
rt
-r
an
g
e 
b
ea
co
n
s
Centroid
Amorphous
DV-Hop
A.P.I.T
 
ANR=10, AH = 16, DOI = 0.1, Uniform 
Figure 20: Overhead for Varied Node Density 
Drawing conclusions from Figure 19 and Figure 20, we argue 
that as far as the communication overhead is concerned, the DV-
Hop and Amorphous schemes are less suitable solutions for 
sensor networks with limited bandwidth when compared to the 
APIT and Centroid schemes.  This is due to the large number of 
beacons required in these schemes.  
6.8 Evaluation Summary 
In addition to the experiments previously discussed, we have 
conducted a variety of experiments to cover a varying range of 
system configurations.  These experiments help us better 
understand the situations where the different localization schemes 
considered are more or less appropriate than one another.  
Table 1 provides an overview of our results, and it can be used 
as a design guide for applying range-free schemes in WSN 
systems.  This table shows that no single algorithm works best 
under all scenarios, and that each localization algorithm has 
preferable system configurations.  Though the Centroid scheme 
has the largest estimation error, its performance remains 
independent of node density and it boasts the smallest 
communication overhead and simplicity of implementation.  
Although DV-Hop requires more communication beacons to 
perform online estimation, it is notably more robust than the 
Amorphous algorithm in HopSize estimation.  Finally, our APIT 
algorithm trumps the other algorithms when an irregular radio 
pattern and random node placement are considered, and low 
communication overhead is desired.  However, we acknowledge 
that APIT has more demanding requirements for both ANR values 
and the number of anchors used in localization. 
 
 Centroid DVHop Amorp. APIT 
Accuracy  Fair Good Good Good 
NodeDensity >0 >8 >8 >6 
AnchorHeard >10 >8 >8 >10 
ANR  >0 >0 >0 >3 
DOI Good Good Fair Good 
GPSError Good Good Fair Good 
Overhead Smallest Largest Large Small 
Table 1 Performance and requirements summary 
 
7. LOCALIZATION ERROR IMPACT 
In localization for WSNs, achieving better results (usually with 
regard to location accuracy) requires increasing the relative cost 
of the localization scheme via additional hardware, 
communication overhead, or the imposition of constraints and 
system requirements.  Although more accurate location 
information is preferable, the desired level of granularity should 
depend on a cost/benefit analysis of the protocols that utilize this 
information.  In this section, we investigate the impact of 
localization error on other communication protocols and proposed 
sensor network applications.  Designers of sensor network 
systems with certain performance requirements can use this 
analysis to aid in their architectural design and in setting system 
parameters.  Although requirements are expected to vary between 
deployments, we found that in the general case for the protocols 
studied, performance degradation is moderate and tolerable when 
the average localization error is less than 0.4R. 
 
7.1 Routing Performance 
A localization service is critical for location-based routing 
protocols such as GF [24], GPSR [17], LAR [19] and GAF [35].  
In these protocols, individual nodes make routing decisions based 
on knowledge of their geographic location.  While most work in 
location-based routing assumes perfect location information, the 
fact is that erroneous location estimates are virtually impossible to 
avoid.  Problems arise as error in the location service can 
influence location-based routing to choose the best next hop (the 
neighbor closest to the destination), or can make a node 
inadvertently think that the packet could not be routed because no 
neighbors are closer to the final destination. 
To investigate the impact of localization error on routing, we 
studied the GF [24] routing protocol under the low traffic network 
conditions so that network congestion does not influence our 
results. Our baseline is “perfect localization”, the protocol where 
every sensor node knows its correct physical location. 
Figure 21 shows the delivery ratio (the percentages of packets 
that reach destination over all packets sent) with regard to node 
density for various levels of location error.  From this graph, we 
can see that for average localization errors of 0.2 and 0.4 times the 
node radio range, the delivery ratios of GF are very close to the 
baseline (no error).  Beyond these numbers, the results diminish 
with increased error; a trend that could be problematic and costly 
depending on the implemented architecture, reliability semantics, 
tolerance of message loss, and application requirements.  For 
example, when localization error is the same as the node radio 
range, even with high node density (20 nodes per radio range), the 
delivery ratio still falls below 60%. 
 
0%
20%
40%
60%
80%
100%
6 8 10 12 14 16 18 20
Node Density 
D
el
iv
er
y 
R
at
io No Error
0.2R
0.4R
0.6R
0.8R
1.0R
 
Figure 21: Delivery ratio with different localization errors, 
changing node density 
0%
10%
20%
30%
40%
50%
6 8 10 12 14 16 18 20
Node Density
p
at
h
 le
ng
th
 in
cr
ea
se
0.2R
0.4R
0.6R
0.8R
1.0R
 
Figure 22: Path length overhead with different localization 
errors under varying node density 
Another metric affected by localization error is the route path 
length.  In Figure 22 we measure the hop count increase (in 
percentage) due to location error to assess the cost in 
communication overhead of this error.  We see from this graph 
that for low localization error (less than 0.4R), this routing 
overhead remains moderate (<15%).  However, as was the case 
for the delivery ratio metric, when localization error grows 
beyond 0.4R, the routing overhead increases to as high as 45%.  
We also note that this trend occurs regardless of the network node 
density, a fact that was not true for our previous metric. 
We acknowledge that here we only chose GF as the 
representative protocol, and an in depth study about localization's 
impact on various routing protocols and its implications on design 
of location-dependent system is left as future work. 
7.2 Target Estimation Performance 
Many of the most frequently proposed applications for WSNs 
utilize target position estimations for tracking, search and rescue, 
or other means.  In these proposed applications, when a target is 
identified, some combination of the nodes that sensed that target 
report their location to a centralized node (leader or base station).  
This node then performs aggregation on the received data to 
estimate the actual location of the target.  Because target 
information could be used for locating survivors during a disaster, 
or identifying an enemy’s position for strategic planning, the 
accuracy of this estimation is crucial to the application that uses it.  
Intuitively an increase in localization error will directly lead to 
target estimation error.  To better understand the degree to which 
this error will propagate to other protocols, we investigate average 
estimation error under different node densities for varying degrees 
of location error.  For these experiments, we use a simple and 
widely used target estimation algorithm: the average x and y 
coordinates of all reporting nodes4 are taken as the target location 
estimation.  We set the sensing range equal to the node radio 
range so that the node density is equivalent to the average number 
of sensors involved in target estimation.  The results of various 
experiments are depicted in Figure 23.  This graph shows that 
target estimation error due to location error is dampened during 
the aggregation process.  As before, our baseline occurs when no 
localization error exists.  Aside from showing varying degrees of 
estimation error with respect to node location error, Figure 23 also 
shows that the absolute target estimation error decreases with 
increased node density.  For example, with localization error is 
equal to 1.0R, and node density reaches 12 nodes per radio range, 
the estimation error is only about 67% as large as when the node 
density is 6.  From this chart we see that more nodes participating 
in estimation results in more random estimation error being 
ameliorated through aggregation. 
0
0.1
0.2
0.3
0.4
0.5
6 8 10 12 14 16 18 20 22 24
Node Density
A
vg
 E
st
im
at
io
n
 E
rr
o
r 
(R
)
No Error
0.2R
0.4R
0.6R
0.8R
1.0R
 
Figure 23: Target estimation error with different localization 
errors under varying node density 
 
7.3 Object Tracking Performance 
We further evaluate the performance of target estimation by 
simulating a tracking application that uses estimation in context.  
In this experiment, a mobile evader randomly walks around the 
specified terrain while a pursuer attempts to catch it.  In this 
simple experiment, the pursuer is informed of the current location 
of the evader periodically via sensing nodes in the terrain that 
detect the evader, coordinate to estimate the targets position with 
regard to their own positions, and periodically report this result to 
the mobile pursuer.  When receiving a report, the pursuer 
                                                                
4  Nodes report when they sense the event of interest in the 
environment. 
readjusts its direction in an attempt to intercept the evader.  When 
the pursuer comes within the node communication radius of the 
evader, the evader is considered caught and the simulation ends.  
For this experiment, we compare the average tracking time (the 
time from pursuer take-off to when the evader is caught) under 
different localization errors, to the tracking time in the case of no 
localization error.  Figure 24 shows normalized tracking time in 
relation to the pursuer speed for various degrees of localization 
error. 
100%
110%
120%
130%
140%
5 6 7 8 9 10
Pursuer speed (units/sec)
N
o
rm
al
iz
ed
 t
ra
ck
in
g
 t
im
e 0.4R
0.6R
0.8R
1.0R
 
Figure 24: Normalized tracking time with different 
localization errors varying pursuer speed.  Terrain size 
1000x1000 units, Radio range = 40units, density = 8 nodes per 
radio circle.  Evader speed = 5 units /second 
From Figure 24 we can see that the tracking time overhead 
decreases with increased pursuer speeds.  More importantly, 
Figure 24 shows that tracking time increases as localization error 
increases.  This result implies that it is important for tracking 
applications with real-time requirements to take localization error 
into consideration.  For example, when the average localization 
error is known to be 0.8R, and the Pursuer speed is 5 units per 
second, the Pursuer requires 30% more time in comparison to the 
ideal situation in which no localization error exists.  To reduce 
this overhead to 10%, either the pursuer’s speed must be 
increased to 10 units per second, or we must reduce the estimation 
error to 0.4R.  Again, Figure 24 shows that 0.4R is a tolerable 
bound for estimation error since tracking time only increases by 
7% in the worst case. 
8. CONCLUSION 
Given the inherent constrains of the sensor devices envisioned 
and the estimation accuracy desired by location-dependent 
applications, range-free localization schemes are regarded as a 
cost-effective and sufficient solution for localization in sensor 
networks.  From our extensive comparison study, we identify 
preferable system configurations of four different recently 
proposed range-free localization schemes as a design guideline for 
further research.  In particular, an APIT scheme, proposed in this 
paper, performs best when irregular radio patterns and random 
node placement are considered, and low communication overhead 
is desired.  Moreover, we provide insight on how localization 
error affects a variety of location-dependent applications.  These 
results show that the accuracy provided by the range-free schemes 
considered is sufficient to support various applications in sensor 
networks with only slight performance degradation.  
REFERENCES 
[1] P. Bahl and V. N. Padmanabhan, RADAR: An In-Building 
RF-Based User Location and Tracking System, In 
Proceedings of the IEEE INFOCOM ‘00, March 2000. 
[2] J. Beutel, Geolocation in a PicoRadio Environment, M.S. 
Thesis, ETH Zurich, Electronics Laboratory, Dec. 1999. 
[3] N. Bulusu, J. Heidemann and D. Estrin, GPS-less Low Cost 
Outdoor Localization for Very Small Devices, IEEE 
Personal Communications Magazine, 7(5):28-34, October 
2000. 
[4] N. Bulusu, J. Heidemann and D. Estrin, Density Adaptive 
Algorithms for Beacon Placement in Wireless Sensor 
Networks, In IEEE  ICDCS ’01, Phoenix, AZ, April 2001.  
[5] N. Bulusu, J. Heidemann, D. Estrin and T. Tran, Self-
configuring Localization Systems: Design and Experimental 
Evaluation , ACM Transactions on Embedded Computing 
Systems (TECS), Special Issue on Networked Embedded 
Computing, 2003. 
[6] J. Caffery, Jr. A New Approach to the Geometry of TOA 
Location, In IEEE Vehicular Technology Conference (VTC), 
Boston, Mass, September 2000. 
[7]  S. Capkun, M. Hamdi and J.P. Hubaux, GPS-Free 
Positioning in Mobile Ad-Hoc Networks, In Proceedings of 
HICCSS ’01, Maui, Hawaii, January 2001. 
[8] L. Doherty, L. E. Ghaoui and K. S. J. Pister, Convex Position 
Estimation in Wireless Sensor Networks, In Proceedings of 
the IEEE INFOCOM ‘01, Anchorage, AK, April 2001. 
[9] D. Estrin, R. Govindan, J. Heidemann and S. Kumar, Next 
Century Challenges: Scalable Coordination in Sensor 
Networks,In Proceedings of  MOBICOM ‘99, Seattle, 
Washington, 1999. 
[10] D. Ganesan, B. Krishnamachari, A. Woo, D. Culler, D. 
Estrin and S. Wicker, Complex Behavior at Scale: An 
Experimental Study of Low-Power Wireless Sensor 
Networks, Technical Report UCLA/CSD-TR 02-0013, 2002. 
[11] L. Girod and D. Estrin, Robust Range Estimation using 
Acoustic and Multimodal Sensing, In Proceedings of  IROS 
‘01, Maui, Hawaii, October 2001. 
[12] A. Harter, A. Hopper and P. Steggles, A. Ward and P. 
Webster, The anatomy of a context-aware application, In 
Proceedings of MOBICOM ‘99,  Seattle, Washington, 1999. 
[13] T. He, J. A. Stankovic, C. Lu, and T. F. Abdelzaher, SPEED: 
A Stateless Protocol for Real-Time Communication in 
Sensor Networks, In Proceedings of IEEE ICDCS ’03, 
Providence, RI, May 2003.  
[14] J. Hightower and G. Boriello, Location Systems for 
Ubiquitous Computing, IEEE Computer, 34(8):57-66, 
August 2001. 
[15] J. Hightower, G. Boriello and R. Want, SpotON: An indoor 
3D Location Sensing Technology Based on RF Signal 
Strength, University of Washington CSE Report #2000-02-02, 
February 2000. 
[16] X. Hong, K. Xu, and M. Gerla, Scalable routing protocols 
for mobile ad hoc networks, IEEE Network magazine, vol 16, 
No. 4, 2002. 
[17] B. Karp and H. T. Kung, GPSR: Greedy Perimeter Stateless 
Routing for Wireless Networks, In Proceedings of 
MOBICOM ’00, New York, August 2000. 
[18] L.Kleinrock and J.Slivester, Optimum transmission radii for 
packet radio networks or why six is a magic number, In 
proceedings of  national  Telecomm conference,  Pages 
4.3.1-4.3.5, 1978 
[19] Y. B. Ko and N. H. Vaidya, Location-Aided Routing (LAR) 
in Mobile Ad Hoc Networks, In Proceedings of 
MOBICOM ’98, Dallas, TX, 1998. 
[20] J. Li, J. Jannotti, D. S. J. De Couto, D. Karger and R. Morris, 
A Scalable Location Service for Geographic Ad-Hoc Routing, 
In Proceedings of MOBICOM ’00, New York, August 2000. 
[21] MICA Sensor Board Information, http://www.xbow.com 
[22] R. Nagpal, Organizing a Global Coordinate System from 
Local Information on an Amorphous Computer, A.I. Memo 
1666, MIT A.I. Laboratory, August 1999.   
[23] R. Nagpal, H. Shrobe, J. Bachrach, Organizing a Global 
Coordinate System from Local Information on an Ad Hoc 
Sensor Network, In the 2nd International Workshop on 
Information Processing in Sensor Networks (IPSN '03), Palo 
Alto, April, 2003. 
[24] J. C. Navas and T. Imielinski, Geographic Addressing and 
Routing, In Proceedings of MOBICOM ’97, Budapest, 
Hungary, September 26, 1997. 
[25] D. Nicolescu and B. Nath, Ad-Hoc Positioning Systems 
(APS), In Proceedings of IEEE GLOBECOM ‘01, November 
2001. 
[26] D. Niculescu and B. Nath, DV Based Positioning in Ad hoc 
Networks, In Journal of Telecommunication Systems, 2003.  
[27] D. Niculescu and B. Nath, Ad Hoc Positioning System (APS) 
using AoA, INFOCOM’ 03, San Francisco, CA,2003 
[28] N. B. Priyantha, A. Chakraborty and H. Balakrishnan, The 
Cricket Location-Support System, In Proceedings of 
MOBICOM ’00, New York, August 2000. 
[29] C. Savarese, J. Rabay and K. Langendoen, Robust 
Positioning Algorithms for Distributed Ad-Hoc Wireless 
Sensor Networks, USENIX Technical Annual Conference, 
Monterey, CA, June 2002. 
[30] A. Savvides, C. C. Han and M. B. Srivastava, Dynamic Fine-
Grained Localization in Ad-Hoc Networks of Sensors, In 
Proceedings of  MOBICOM ’01, 2001, Rome, Italy, July 
2001. 
[31] A. Savvides, H. Park and M. Srivastava, The Bits and Flops 
of the N-Hop Multilateration Primitive for Node 
Localization Problems, In First ACM International 
Workshop on Wireless Sensor Networks and Application, 
Atlanta, GA, September 2002. 
[32] R. Want, A. Hopper, V. Falcao and J. Gibbons, The Active 
Badge Location System, ACM Transactions on Information 
Systems, January 1992. 
[33] B. H. Wellenhoff, H. Lichtenegger and J. Collins, Global 
Positions System: Theory and Practice, Fourth Edition. 
Springer Verlag, 1997. 
[34] K. Whitehouse and D. Culler, Calibration as Parameter 
Estimation in Sensor Networks, In First ACM International 
Workshop on Wireless Sensor Networks and Application, 
Atlanta GA, September 2002. 
[35] Y. Xu, J. Heidemann and D. Estrin, Geography-informed 
Energy Conservation for Ad Hoc Routing , In Proceedings of  
MOBICOM ’01, Rome, Italy, July 2001. 
[36] T. Yan, T. He, J. A. Stankovic, Differentiated Surveillance 
Service for Sensor Networks, In Proceeding of First ACM 
Conference on Embedded Networked Sensor Systems 
(SenSys 2003), Los Angeles, CA 2003. 
 
APPENDIX A: 
 
Figure 25:  Proofs for Propositions 
Proof of Proposition I: 
We first prove that M' is closer to at least one vertex than M. As 
shown in Figure 25A, let M move a short distance to another 
point M’ which is also within the ABC∆ .  Consider the different 
cases: 
 
Case 1: M’ is on one of the three line segments AM, BM or CM.  
Without loss of generality (WLOG), we can say that M’ is on BM, 
call it M’1.  Clearly, BM’1 < BM, i.e., the point moves towards B 
– hence proved. 
 
Case 2: M’ is in one of ABM∆ , BCM∆ or ACM∆ .  WLOG let 
M’ be in BCM∆ .  From M, draw a line perpendicular to BC that 
meets BC at D. 
Case 2.1: M’ is on MD.  Let us call this point M’2.  Since 
DM’2 < DM, by Pythagorean Theorem, BM’2 < BM, i.e., the 
point moves towards B – hence proved. 
Case 2.2: M’ is in BDM∆ or CDM∆ .  Again, WLOG, let M’ 
be in CDM∆ .  Call it M’3.  Now, draw the circum-circle of 
CDM∆ (A circle that passes through three vertices C,D and M).  
Note that CM is the diameter of this circle and M’3 is an 
interior point.  Obviously, CM’3 < CM, i.e., the point moves 
towards C – hence proved 
 
Second, by drawing three line segments AM’, BM’ and CM’, 
we prove symmetrically that M is closer to at least one vertex than 
M’, hence M’ is further from at least one vertex than M. 
 
Proof of Proposition II: 
As shown in Figure 25B, we prove this proposition by 
construction.  For any point M exterior to ABC∆ , there is always 
an edge connecting two vertices of the triangle such that the third 
vertex lies on one side of the edge while M is on the other. 
WLOG, we can assume that BC to be such an edge. From M draw 
a perpendicular line to BC meeting it at D. Choose M’ to be a 
point on line DM below M. By Pythagorean Theorem, AM<AM’, 
BM<BM’ and CM<CM’, hence proved. 
 

