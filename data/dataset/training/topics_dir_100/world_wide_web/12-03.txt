An Evolution of Computer Science Research∗
Apirak Hoonlor, Boleslaw K. Szymanski, Mohammed J. Zaki, and James Thompson
Abstract
Over the past two decades, Computer Science (CS) has continued to grow as a
research field. There are several studies that examine trends and emerging topics in
CS research or the impact of papers on the field. In contrast, in this article, we take a
closer look at the entire CS research in the past two decades by analyzing the data on
publications in the ACM Digital Library and IEEE Xplore, and the grants awarded
by the National Science Foundation (NSF). We identify trends, bursty topics, and
interesting inter-relationships between NSF awards and CS publications, finding, for
example, that if an uncommonly high frequency of a specific topic is observed in
publications, the funding for this topic is usually increased. We also analyze CS
researchers and communities, finding that only a small fraction of authors attribute
their work to the same research area for a long period of time, reflecting for instance
the emphasis on novelty (use of new keywords) and typical academic research teams
(with core faculty and more rapid turnover of students and postdocs). Finally, our
work highlights the dynamic research landscape in CS, with its focus constantly
moving to new challenges arising from new technological developments. Computer
science is atypical science in that its universe evolves quickly, with a speed that
is unprecedented even for engineers. Naturally, researchers follow the evolution of
their artifacts by adjusting their research interests. We want to capture this vibrant
co-evolution in this paper.
1 Introduction
Computer science is a rapidly expanding research field fueled by emerging application
domains and ever-improving hardware and software that eliminate old bottlenecks, but
create new challenges and opportunities for CS research. Accordingly, the number of
research papers published in CS conferences and journals has been rapidly increasing
for the past two decades. With growing emphasis on externally funded research in
most universities, scientific research is increasingly influenced by the funding oppor-
tunities. Although many funded programs are developed in close collaboration with
leading researchers, we aimed to identify more precisely relationships between funding
and publications related to new topics.
There are numerous papers already published that track research trends, analyze the
impact of a particular paper on the development of the field or a topic, and study the
∗First Report: 03/2012, Latest Revision: 09/2013
1
relations between different research fields. There have also been studies in social networks
investigating the overlap and evolution of social communities around a field or a topic.
In this paper, we are interested in learning about the evolution of Computer Science
research communities, the trends in CS research, and the impact of funding on those
trends. We collected data on proposals for grants supported by the National Science
Foundation (NSF) and CS publications appearing in the ACM and IEEE publication
databases. We used various methodologies to analyze research communities, research
trends, and relation between awarded grants and changes in communities and trends.
Within the Computer Science research communities, we also analyzed the connections
between each research topics. We highlight the interesting trends discovered by our
analysis.
1. While the number of CS publications continue to grow in every field, data from the
ACM Digital Library and IEEE Xplore show that in the last decade the proportion
of research done in mathematics of computing has decreased considerably. On the
other hand, the proportion of publications on information system such as data
mining, machine learning, and world wide web is increasing recently.
2. The term most used in an abstract is algorithm, which is not surprising as it is
a fundamental CS topic. The next three topics in popularity are neural network,
database, and Internet, indicating the recent major research interests.
3. Cloud computing, social media, and social network have strong upward trends
within the last five years. However, we have found that two-year publication
proportion trend is always followed by the reverse in the subsequent year.
4. A burst of new keywords in grants generally precedes their burst in publications;
less than 1/3 of new keywords burst in publications first, reflecting the importance
of funding for success of new CS fields.
5. While typical research community in Computer Science contains 5 to 6 members,
its membership constantly changes. After four years, only one or two core people
in the initial research group remain, which is consistent with the university setting
in which one or two faculty members supervise a group of three to five postdocs
and graduate students.
6. A typical scientist’s research focus changes in roughly a 10-year cycle and often
includes a once-in-a-career dramatic shift, likely in response to evolving technology
creating new CS fields.
The rest of the paper is organized as follow. We discuss related work in Section 2.
In Sections, 3 and 4, we introduce our datasets and the methods used in our analysis,
respectively. We present and explain our observations in Section 5. Finally, we provide
conclusions in Section 6.
2
2 Related Work
Trend analysis has been actively researched for a long time and applied to many types of
datasets ranging from medical data [20], to weather information [18] and stock markets
[7]. Many publications track research trends, analyze the impact of a particular paper
on the development of a field or a topic, and study the relationships between different
research fields. The Web of Science [21] collected data since 1900 on nearly 50 million
publications in multiple scientific disciplines. It analyzed this data at various levels of
detail by looking at the overall trends and patterns of emerging fields of research, and
the influence of an individual paper on related research areas. Over the past decade,
besides the Web of Science, there have also been studies in social networks investigating
the overlap and evolution of social communities around a field or a topic. In [22, 23],
the authors explore methods and visualizations for scientific research landscape and
analyze the impact of each research area quantified by the collective cross-disciplinary
citations of each paper. Porter and Rafols [19] analyze the citation information to
find the evidence of collaboration across fields in scientific research. Other examples
of such analysis are the network models for studying the structure of the social science
collaboration network [17], and the analysis of women’s authorship in CS publications
in the ACM digital library [4].
Several studies have focused challenges, directions, and landscapes in specific CS
fields [2, 11], and on specific CS topics [12, 25]. Chen [3] reported the studies of the
international intellectual landscape based partly on the publication data in nanotechnol-
ogy from Thomson Science Citation Index. The data was analyzed from various angles
such as who the contributors of the paper were and from which country, what funding
programs were active in such country and for those contributors, and what economic
advantages each country offered for technology development. The studied found that
researchers from US has published the most papers on nanotechnology, while China has
largest increment in publications as it rose to the second place in contribution, even
though the research in China did not begin until after 1991.
Other research related to our work focuses on social networks, especially on the
topic of evolution and overlapping of social communities. Goldberg et al. [9] identify
overlapping communities using a locally optimal algorithm. The algorithm can recover
overlapping communities from a large network, such as LiveJournal network, without
performing a global analysis on the network. Lancichinetti et al. [14] propose another
locally optimal algorithm using a fitness function that discovers overlapping communities
and their hidden hierarchical structures. Other related topics emerge from studies of
overlapping of social communities. Sun et al. [26] present a Dirichlet process mixture
model that can recover the evolution of communities over time. Goldberg et al. [10]
introduced a dynamic algorithm that recovered chains of evolutionary communities.
3
3 Datasets
We used the ACM, IEEE, and NSF datasets from which we collected data on publications
from 1990 to 2010. The National Science Foundation (NSF) records before 1990 were
incomplete (such as lacking abstracts). Only 10% of publications in ACM and IEEE
datasets were published before 1990. So, our time range covers nearly all publications
in those datasets.
1. ACM Dataset: ACM Digital Library [1] contains the record of articles published
with ACM and its affiliated organizations. For this dataset, we extracted the num-
ber of papers listed in top categories of the 1998 ACM Computing Classification
System (CCS) (see the CSS at http://www.acm.org/about/class/1998/). We ex-
cluded the General Literature category because it includes too many non-research
topics such as biography, reference, etc. The ACM dataset contains authors, title,
abstract, year, publication venue, author-defined keywords, and ACM classification
categories for each of the 116, 003 articles published between the year 1990 and
2010. We used ACM CCS and the author-defined keywords to respectively study
the broader and static versus the finer and dynamic views of the CS landscape and
trends. Only the author-defined keywords were used to identify the relationships
between researchers, yielding smaller research groups than using ACM CCS would.
2. IEEE Dataset: For the IEEE dataset, the topics were extracted from 16 Wikipedia
articles on CS research areas identified in the main Wikipedia CS article, since it
does not have the same topic classification system as the ACM dataset. Over four
hundred research topics in Computer Sciences are used as queries to extract paper
abstracts from 1990 to 2010. The research topics included major research areas
such as artificial intelligence, computer architecture, and computer engineering, as
well as the branches of those major areas such as compilers, computer security,
image processing and machine learning. The full list of queries is included in the
supplementary material. We queried IEEE Xplore digital library [8] to retrieve all
the conference papers whose abstracts contain at least one of the query terms. The
title, paper id, the conference name, year of publications, list of authors, and the
abstract are collected for each retrieved paper. Note that if the retrieved paper
does not contain both its abstract and conference name, we ignore that paper. A
total of 458, 385 papers were extracted.
3. NSF Dataset: NSF made the information on the awarded grants available online
via its website www.nsf.gov. We collected the proposals of grants awarded by
all directorates in NSF supporting CS research (the detailed list is provided in
the supplementary material). From year 1990 to 2010, we collected the award
number, title, start date, and abstract for each grant (records without abstracts
were ignored). In total, 21, 687 awarded grants were retrieved.
For ACM and IEEE datasets, we created two data indexes: (i) authors and their
publications venues, and (ii) papers and their keywords/topics.
4
Figure 1: The number of records found each year between 1990 and 2010 in the ACM
and IEEE datasets.
Fig. 1 shows that the IEEE and ACM datasets display about 11% yearly growth in
the number of publication from 1990 to 2010, (the difference in the the last two years is
caused by partial availability of data on non-ACM publications in the ACM dataset).
4 Methodologies
Using sequence mining [28], network extraction and visualization [22], bursty words de-
tection [15], clustering with bursty keywords [13], and network evolution [10], we investi-
gate: (i) changes over time in the computer science research landscape, (ii) interactions
of CS research communities, (iii) similarities and dissimilarities between research topics,
and (iv) the impact of funding on publications, and vice versa. The term “bursty key-
words” in this context refers to keywords appearing with uncommonly high frequency
during some intervals; such intervals may include multiple spikes of a keyword’s fre-
quency, as defined in Section 4.0.2. Note that such interval may include multiple spikes
of a keyword frequency. The key software and methodologies used in this paper are Map
Generator, Bursty Words, Trend Analysis, Sequence Mining, and Network Evolution.
4.0.1 Map Generator
For IEEE and ACM datasets, we created a weighted undirected graph to represent the
inter-connectivity of research topics in Computer Science for every year from 1980 to
2010. The nodes of the graph are research topics. For IEEE dataset, the weight of the
edge between nodes A and B is the number of abstracts that mention both topics. For
5
ACM dataset, the number of papers that contain both A and B as keywords was used
as the weight of the link between them. To analyze the community structure in the
network of Computer Science research, we used the map generator [6] which is a Flash
applet using the map equation [22] to find the sub-networks of the given network. The
map equation is a random walk based network clustering method. Essentially, nodes are
clustered together if they are visited together in many walks. This allows us to detect (i)
which topic areas are the bridges between major research fields, (ii) which topics receive
the most attentions and from which fields, and (iii) how the clusters evolve from one
year to the next.
4.0.2 Burstiness Score and Bursty Period
A bursty period is defined as the maximum sum segment – the period whose total
burstiness score is greater than zero [15]. We used the burstiness score defined in equation
1 proposed by [15] to find the bursty score of each word at each time step.
Burst(w, t) =
( |dt : w ∈ dt|
|d : w ∈ d|
− 1
T
)
(1)
where w is the keyword/topic of interest, t is a time period, dt is a document created
during time t, d is any document, and T is the total time over which documents were
created. The burstiness score measures how often w is in t compared to its occurrences in
T . A positive score implies that w appears more often during the “bursty period” t than
over the total time T . A negative score says otherwise. Finally, the maximal segments
of burstiness scores in the sequence of documents are recovered using the linear-time
maximum sum algorithm by Ruzzo and Tompa [24, 15]. We selected ten research topics
with the highest number of publications. In other words, we tried to find the hottest
research topics related to the top research topics at their peaks. We used these burstiness
and bursty periods to find the time periods during which a keyword is bursty, i.e., when
its burstiness score is greater than a predefined threshold.
We also used these notions to extract the following: “given a word a, what is its
bursty period, and which keywords associated with it are also bursty in such period?”.
Essentially, the patterns that we want to extract are the correlated terms (a,B) where
B is the set of bursty words in the bursty periods of a. To do that, we first need to find
the bursty periods of a. Then, for each bursty period, we find words bursty in it.
4.0.3 Trend Analysis
To quantify the trends, we look at how fast each keyword grows and which direction it
is heading using linear regression that measured the relationship between the number of
publications and the time of publications. Then, we created linear trend lines for each
keyword frequency and a linear model for the normalized data from the last 21 years
and the last five years. We labeled the keyword as “up” trend, if its estimated trend line
has the slope greater than zero and as “down” trend, otherwise. We extracted the up
6
and down trends from the keywords with at least 100 document frequency from ACM
and IEEE datasets.
4.0.4 Sequence Mining
Frequent sequences are mined using the cSpade program [28] that allows for multiple
constraints: length and width limitations on the sequences, minimum and maximum
gap constraints on consecutive sequence elements, time window on allowable sequences,
and item constraints. For ACM dataset, we created two sets of data. First one contains
the list of authors’ publication venues from the list shown in supplementary material
E. The second is the list of authors’ major research field according to ACM Computing
Classification System.
4.0.5 Network Evolution
Tracking evolution of such communities requires identifying all evolutionary sequences
of communities in a dynamically changing social network. A Sub-network (cluster) dis-
covered in the CS research network by graph clustering algorithm can be considered a
community. For our datasets, there are two interesting questions related to the tracking
of communities: (i) “how do the research communities in Computer Science evolve over
time?”, and (ii) “how do the research topics in Computer Science themselves evolve over
time?”. For the first question, we created the research-community network by looking at
the connections between authors, and author-defined keywords, i.e., if two authors use
the same author-defined keyword, then the link between them is of weight one. For the
second question, we created the research-topic network by looking at the connections
between author-defined keywords, and papers, i.e., if two keywords appear in the same
paper, then they have a link of weight one between them. To track evolutions of these
communities, we used the framework for analyzing the evolution of social communities
developed by [10]. The framework searches for the link between communities in con-
secutive time-steps. A link is formed between two communities if their intersection is
non-empty and the similarity between them is higher than a certain threshold.
5 Results and discussions
5.1 Landscapes of Computer Science research
We looked at the evolution of the landscape of Computer Science research from 1990 to
2010. Figure 2 shows the number of papers listed under each category from 1990 to 2010.
With the exception of the last two years, the number of publications in each category
increased each year. Many ACM records from 2009 to 2010, collected during the spring
of 2011, did not have ACM classification categories, and thus were excluded from our
study. This explains the drop in the number of records for the last two years seen for
the ACM study. Figure 3 shows the ratio of publications listed under each category for
the 1990 - 2010 period. We looked closer at individual research areas, by looking at
7
Figure 2: A landscape of Computer Science research between 1990 and 2010 from the
ACM dataset.
Figure 3: Another view of landscape of Computer Science research between 1990 and
2010 from the ACM dataset.
8
their occurrences in each decade. Table 1 and Table 2 show the author-defined keywords
whose occurrence changed drastically in the past two decades. From Figure 3, after 1994
the number of publication in mathematics of computing category shrunk considerably
compared to other categories. From the table the Table 1, the author-defined keywords
that contributed to this drop were control theory and logic. We attributed this drop
to shift of focus from general issues to challenges specific to an area with which such
publications are increasingly associated. In contrast, publications in information systems
continually accelerated their growth. Figure 3 shows that the growth of publications in
information systems category continued to increase in comparison to other categories.
Table 2 confirms that the author-defined keywords used increasingly frequently were
Internet-related, such as XML, Internet, web services, and semantic web.
Table 1: The list of author-defined keywords in the papers in mathematics of computing
category, whose occurrence dropped by at least half from the 1990s to 2000s.
Keyword 1990s 2000s
robust control 208 93
discrete-time systems 84 40
control theory 87 36
design of algorithms 83 29
singular perturbations 75 34
fuzzy topology 72 24
viscosity solutions 61 27
approximate reasoning 63 25
nonlinear control systems 69 9
membership functions 52 24
feedback control 53 22
expert systems 51 22
atm 52 19
calculus of variations 52 18
time-varying systems 45 20
linear complementarity problem 45 20
state feedback 52 13
algebra 41 18
fuzzy relations 40 17
quasi-newton methods 39 18
For IEEE dataset, Figure 4 contains the area plot of the number of papers, whose
abstract mentioned the major Computer Science research topics from 1990 to 2010.
Those topics and their corresponding conferences extracted from Wikipedia are listed in
supplementary material E. For IEEE dataset, similar to the ACM dataset, the fastest
growing research area was information science and information retrieval. Figure 5 con-
tains the percentage of publications whose abstracts mentioned the major Computer
9
Table 2: The list of Author-defined Keywords in the papers in Information Systems
category, whose occurrence at least double from the 1990s in 2000s.
Keyword 1990s 2000s
data mining 106 1847
information retrieval 243 1226
XML 22 889
evaluation 63 842
clustering 37 792
internet 197 609
web services 2 801
visualization 104 682
usability 73 672
semantic web 0 730
collaboration 101 594
virtual reality 147 539
design 61 545
ontology 16 582
machine learning 59 527
privacy 28 555
information visualization 92 469
classification 41 516
ubiquitous computing 40 508
security 58 480
Science research topics from 1990 to 2010.
To better see the impact of information systems, we extracted the top 25 research
topics from the ACM and IEEE datasets, as shown in Table 3. We quantified the
results in two ways: Document Frequency (DF) and Term Frequency - Inverse Document
Frequency (TFIDF). DF of term/keyword k is the number of documents that contains
it. TFIDF of term k is the sum of tf-idf weights of term/keyword k over all documents.
The tf-idf weight of k in document d is defined as
nk,d∑
w∈d nw,d
· log |D|
|j : k ∈ dj |
where |D| is the number of documents, and nk,d is the number of times k appears in d For
ACM dataset, Table 2 indicates that most publications in collaboration, data mining,
information retrieval, machine learning, privacy, and XML appeared from 2000 to 2010.
These research topics are also in both lists in Table 3, showing a remarkable research
trend in Computer Science. The terms Internet and world wide web did not appear in
any publication until 1995, but the related topics were present since early 1990. During
the 1990− 1997 period, 376 NSF grants and nine IEEE papers mentioned NSFNET in
10
Figure 4: A landscape of Computer Science research between 1990 and 2010 from IEEE
dataset.
Figure 5: Another view of the landscape of Computer Science research between 1990
and 2010 from IEEE dataset.
11
Figure 6: The 1995 clusters of research network in (a) Security cluster, and (b) in
Multimedia cluster (edge thickness represents strength of interaction).
(a) Security Cluster: 1995
security
mobility
video
anonymity
tool
usability
human factor
multicast
audio
collaboration
information technology
testing
authentication
debugging
analysis
(b) Multimedia Cluster: 1995
multimedia
database
synchronization
speech recognition
hypermedia
user interface
world wide web
hypertext
information security
www
information visualization
reinforcement learning
internet
information retrieval
performance analysis
digital libraries
architecture
network security
their abstracts, but only two ACM papers used it as their keyword. Other terms such
as net, prodigy, point-to-point, and inter-networking also appeared in the NSF dataset
before 1995. Moreover, prodigy was bursty over the 1991 − 1992 period and TCP/IP
over the 1990 − 1993 period. Figure 6 shows the research topic sub-networks created
from ACM by Map Generator [6] for security and multimedia in 1995. Figure 7, shows
the research topic sub-networks created from ACM by Map Generator for world wide
web and Internet in 2001. Both figures show that, in 1995, world wide web was used
as a keyword associated mostly with multimedia and information visualization, whereas
information retrieval was used mostly with Internet. However, by the early 2000s, world
wide web was used mostly with data mining and information retrieval, while Internet
was mostly associated with network, protocol and routing. More recently, privacy and
security have become important for world wide web, while semantic web, web 2.0, web
service and XML have become major Internet topics In the IEEE dataset, database,
Internet, information system, XML, telecommunications, data mining and HTML also
appear in one or both of the lists in Table 3.
5.2 Bursty Period Analysis
To evaluate the influence of research funding on publications, or the reverse direction,
we extracted bursty periods of author-defined keywords from ACM and NSF datasets
as well as from IEEE and NSF datasets. We used the author-defined keywords because
only the ACM records are classified using CCS. For each pair of datasets, we analyzed
in which dataset a keyword’s bursty period begins first, and how long it takes for the
keyword to become bursty in the other dataset. In cases with more than one bursty
period, we also looked at the keyword’s burstiness score in each bursty period. We then
12
Figure 7: The 2001 clusters of research network in (a) World Wide Web cluster, and (b)
Internet cluster (edge thickness represents strength of interaction).
(a) World Wide Web Cluster: 2001
world wide web
user study
tracking
security
classification
personalization
e-commerce
interface design
grid
usability
human-computer interaction
hypermedia
privacy
trust
data structure
anonymity
data mining
clustering
collaborative filtering
approximation
information retrieval
web search
search
text mining
recommender system
genetic programming
association rule
context
hypertext
sampling
(b) Internet Cluster: 2001
internet
protocol
routing
wireless network
architecture
network
modularity
information security simulation
fpga
qos
manet
mobile ad hoc network
placement
cache
tabulated the percentage cases in which the later burstiness scores increase, decrease, or
stay unchanged. We identified the changes if there were bursty periods in both datasets
in a pair.
For the ACM-NSF pair, if a keyword became bursty in ACM, it became bursty in
NSF 2.4 years later on average, but in the reverse case, the average delay was 4.8 years.
This shows that if a new area is initiated by NSF, the increase in publications is delayed
by the time researchers need to obtain grants and start research leading to a publication.
If the keywords were bursty in both datasets, in 75% of such cases the keyword became
bursty in the NSF dataset before it did in the ACM dataset, showing that NSF funding
often increases interest in the supported areas. The reverse was true for about 16− 17%
of the cases. Examples of bursts appearing first in the NSF dataset are data mining and
search engine that became bursty in 1999 for NSF and in 2000 for ACM. The reverse
cases include bioinformatics (2003 in ACM and 2004 in NSF) and semantic web (2004
in ACM and 2006 in NSF).
Tables 4 and 5 show the burst period comparison on the top 10 most frequent key-
words that are bursty in NSF dataset before they are bursty in the ACM and IEEE
datasets, respectively. It should be noted that Tables 4 and 5 contained results of bursty
period analysis performed on the normalized data, while Tables 6 and 7 contain the raw
data analysis. Since the number of publications increased every year, an increment in
the publications in each area is positive, yet certain areas may lose their share of overall
publication. Such discrepancy between two types of analysis can recover a period when
a research topic is seemingly bursty in the raw data but only because of the overall
publication increased.
For ACM-NSF pair, 20 words out of the top 25 most frequent words according to the
document frequency became bursty first in NSF dataset. Algorithm and performance
13
evaluation are two keywords which were not bursty in the NSF dataset, while web service
and Internet were bursty in ACM dataset first (2004 and 1997, respectively), and in NSF
later (2008, 2000). Computational complexity became bursty in both dataset in 2000.
For the IEEE-NSF pair, a keyword that is first bursty in IEEE becomes bursty in
NSF 3.4 years later on average. In the reverse case, the average delay was 5.7 years.
The difference between these two delays and its reason are the same as in the ACM
dataset. Yet, both delays are by one year longer than in the ACM-NSF pair, which
we conjecture result from a larger ratio of computer engineering topics in IEEE than in
ACM, and presumably due to a larger fraction of support for IEEE publications coming
from non-NSF source.
If a keyword was bursty in both datasets, 68% of the time the keyword became
bursty in the NSF dataset first, again consistently with the ACM dataset. The reverse
was true for 16% of the time. Table 5 has one extra column titled NSF-L that shows
the last bursty year in NSF dataset for the keywords that were bursty in both datasets.
Only internet (in 2000) and telecommunications (in 1995) became bursty at the same
time in both dataset. A few keywords that became bursty in the IEEE dataset first are
real-time database (1994 versus 1999 for NSF), procedural programming (1992 versus
1993), and neurobiological (1996 versus 2001). Interestingly, peer-to-peer network was
bursty in IEEE dataset from 2003 to 2010 but never in the NSF dataset, which may
indicate that the corresponding challenges were funded mostly from non-NSF sources.
Other interesting keywords that did not appear on the top 10 keywords in the Table
5, but were bursty in the NSF dataset first are assembly language (1990 versus 1993),
Bayesian network (2001 versus 2004) and computational geometry (1991 versus 1993).
We also analyzed the NSF dataset versus IEEE or ACM datasets and vice versa.
For each such pair and each year from 1990 to 2010, we searched for the year in which
the number of entries changed compared to any of the previous four years in the first
database. For each such change, we searched in the other dataset for a change in any
of the next four years. The relative change values ranged from -0.5 to 0.5, which we
grouped into bins of size 0.1. We counted the frequency of the change in one dataset
followed by a change in the other.
For the NSF dataset versus either ACM or IEEE dataset, a 10% or larger increase
in the number of NSF grants awarded for a given topic from the previous few years
was followed by an increase (with 75% probability) in the number of published papers
on this topic of at least 10% in the next three years and 20% in the next four years.
Topics with such an increase include data mining, information extraction, and wireless
network. On the other hand, an increase of 10% in the number of published papers in a
given topic in the ACM data set was followed with a 75% probability of increase (usually
less than 10%) in the number of NSF grant awarded on the same topic. Examples are
e-government, groupware, and knowledge management.
For a keyword in NSF with multiple bursty periods, the following bursty period had
a higher/lower/equal burstiness score in 37%/51%/12% of the cases. For IEEE, it was
29%/64%/7%, respectively, while for ACM, it was 12%/85%/4%. However, for inter-
leaved or overlapped bursty periods in the NSF and IEEE datasets, if the bursty period
14
was first in the IEEE dataset, the following NSF bursty period had a higher/lower/equal
burstiness score in 31%/22%/47% of the cases. In the reverse case, it was 36%/10%/55%.
The same analysis of the NSF and ACM datasets shows that the following NSF bursty
period had higher/lower/equal burstiness score for 38%/14%/48% of the cases while in
the reverse case, for the following ACM bursty period those numbers were 8%/8%/84%.
The reason for a large percentage of equal burstiness scores is that a bursty period
in one dataset was often a subset of the bursty period in another. Burstiness scores
tend to decrease in the periods following a bursty period in the NSF dataset. Since
novelty is highly valued in publications, authors tend to stress new aspects of their
work in abstracts and keywords, contributing to the observed pattern. Yet during an
NSF burstiness period, publication burstiness scores were more likely to increase than
decrease, confirming that sustained NSF funding is essential for maintaining interest in
the given topic.
The burstiest periods are shown in Table 6 for the ACM dataset and in Table 7
for the IEEE dataset. Further analysis identifies for each bursty period, associated
keywords burst together. For example, in Table 6, wireless sensor networks (WSN) is
temporally related to simulation, security and clustering in the order of bursty periods.
This order corresponds to the temporal evolution of WSN research area that initially
focused on simulations of networks, then on security issues and finally on clustering
algorithms. Another conclusion from this table is that data mining is more broadly used
than information retrieval since the former is used in computational science, web mining,
time series mining and security, while the latter is used mainly in the web related topics.
Text mining is temporally related to both information retrieval and data mining.
Multiple bursty periods for a keyword contain interesting temporally correlated
terms. For example, there are three bursty periods for the keyword “scheduling”:
1990 − 1991, 1999 − 1999, and 2001 − 2006. In 1999, scheduling correlated (list in the
order of burstiness ranking) with genetic algorithms, parallel processing, performance
evaluation, embedded systems, approximation algorithm, multimedia, quality of service,
optimization, and heuristics. In the period 2001 − 2006, such keywords, listed in the
same order, were approximation algorithms, multimedia, online algorithms, real-time,
embedded systems, fairness, multiprocessor, quality of service, and genetic algorithms.
Hence, initially, both real-time systems and parallel processing were related to schedul-
ing, later expanding to genetic algorithms and embedded systems. In the last few years
of its bursty periods, scheduling correlated also with multimedia, online algorithm, and
fairness. An alternative look at such links done via the co-reference document frequency
instead of the burstiness score is shown in Table 8 for the ACM dataset and Table 9 for
the IEEE dataset.
15
5.3 Trend Analysis
This section analyzes research trends using the linear regression trend line and changing
popularity of topics based on fraction of papers containing a given keyword in each year.
We generated a trend line for each keyword fraction and used its slope for ranking. We
fitted the trend lines to data from the preceding two to six years in order to predict
keyword fractions for the following year. For the IEEE, ACM and NSF datasets, we
found that the more data we have, the better the prediction we got, as shown in Table
10.
In all datasets, we observed that if a trend based on two years of data has a positive
slope, i.e., the fraction of publications increased from the previous to the current year,
then the subsequent year fraction declines. We also used the trend line based on the
NSF dataset to predict fractions for the following year in the ACM and IEEE datasets.
The results show that this is a poor predictor, as is using the ACM and IEEE trends
to predict the number of grants awarded by NSF. The accuracy on all these models was
less than 50%.
The top 20 up and down trends for the last 21 years (1990-2010) and 5 years (2006-
2010) are shown in Figures 8 and 9, respectively for the ACM dataset, and in Fig-
ures 10 and 11 for the IEEE datasets. In contrast to ACM dataset, IEEE dataset did
not show significant decrease between the top and the bottom trends because research
topics appeared in the abstract over a longer period of time than that for the author-
defined keywords. Further, we used the list of Computer Science conferences (provided
in the Supplementary Materials section) to categorize each paper in the IEEE and ACM
datasets. The growth in different areas cannot be statistically compared because of
vast differences in the number of conferences in each field, and the number of papers
published in each conference. Nevertheless, Figures 14 and 12 show a growth of about
11% experienced by most CS publications. In the figure, each topic represents a set
of CS conferences. This is in contrast to Figure 1 that uses the ACM classification or
IEEE Xplore keywords. Also, we do not see the same drop in the number of records for
the ACM dataset, since every record contains the publication venue. For instance, if a
conference is on security and OS, we indexed all the papers published in that conference
under both the security and OS topics.
5.4 Network of Computer Science Research
Since we looked back over the period 1990−2010, we were able to monitor when connec-
tions between two fields occurred or changed. We extracted two sets of keywords, those
that have never appeared in the same article, and those that have appeared in at least 5
articles every year. For IEEE dataset, we performed an analysis on the Algorithm topic
first. Then, we removed the algorithm node from the network because this term is used
in almost every CS research paper to describe how data are processed. Hence, keeping
16
se
cu
ri
ty
 
da
ta
 m
in
in
g 
pr
iv
ac
y 
w
ir
el
es
s 
se
ns
or
 n
et
. 
cl
us
te
ri
ng
 
xm
l 
ev
al
ua
ti
on
 
se
ns
or
 n
et
w
or
ks
 
w
eb
 s
er
vi
ce
s 
si
m
ul
at
io
n 
vi
su
al
iz
at
io
n 
ja
va
 
co
lla
bo
ra
ti
on
 
fp
ga
 
se
m
an
ti
c 
w
eb
 
on
to
lo
gy
 
qo
s 
gr
id
 c
om
pu
ti
ng
 
so
ci
al
 n
et
w
or
ks
 
in
fo
rm
at
io
n 
re
tr
ie
va
l 
ne
ur
al
 n
et
w
or
ks
 
di
st
ri
bu
te
d 
sy
st
em
s 
op
ti
m
al
 c
on
tr
ol
 
co
m
pu
ta
ti
on
al
 g
eo
m
et
ry
 
an
al
ys
is
 o
f a
lg
or
it
hm
s 
ro
bu
st
 c
on
tr
ol
 
co
nc
ur
re
nc
y 
co
nt
ro
l 
ad
a 
st
ab
ili
ty
 
pa
ra
lle
l p
ro
gr
am
m
in
g 
ex
pe
rt
 s
ys
te
m
s 
pa
tt
er
n 
re
co
gn
it
io
n 
da
ta
 s
tr
uc
tu
re
s 
di
st
ri
bu
te
d 
pr
oc
es
si
ng
 
pe
rf
or
m
an
ce
 e
va
lu
at
io
n 
pa
ra
lle
l a
lg
or
it
hm
s 
fo
rm
al
 s
pe
ci
fic
at
io
n 
fa
ul
t 
to
le
ra
nt
 c
om
pu
ti
ng
 
co
m
pu
ta
ti
on
al
 c
om
pl
ex
it
y 
pa
ra
lle
l p
ro
ce
ss
in
g 
-0.0008
-0.0006
-0.0004
-0.0002
0
0.0002
0.0004
0.0006
0.0008
Top 20 Trends 
Bottom 20 Trends 
Figure 8: The top and bottom 20 trends 1990 - 2010 from the ACM dataset.
cl
ou
d 
co
m
pu
ti
ng
 
so
ci
al
 n
et
w
or
ks
 
so
ci
al
 m
ed
ia
 
pr
iv
ac
y 
de
si
gn
 
re
co
m
m
en
de
r 
sy
st
em
s 
co
lla
bo
ra
ti
on
 
fp
ga
 
us
er
 e
xp
er
ie
nc
e 
vi
rt
ua
liz
at
io
n 
w
ir
el
es
s 
se
ns
or
 n
et
w
or
ks
 
w
ik
ip
ed
ia
 
vi
su
al
iz
at
io
n 
ev
al
ua
ti
on
 
w
eb
 2
.0
 
co
lla
bo
ra
ti
ve
 fi
lt
er
in
g 
se
ar
ch
 
ch
ild
re
n 
su
st
ai
na
bi
lit
y 
pe
rf
or
m
an
ce
 
in
te
rn
et
 
fa
ul
t 
to
le
ra
nc
e 
ap
pr
ox
im
at
io
n 
al
go
ri
th
m
s 
cr
yp
to
gr
ap
hy
 
op
ti
m
al
 c
on
tr
ol
 
ne
ur
al
 n
et
w
or
k 
fin
it
e 
el
em
en
ts
 
sc
he
du
lin
g 
co
m
pu
ta
ti
on
al
 c
om
pl
ex
it
y 
xm
l 
w
eb
 s
er
vi
ce
s 
qu
al
it
y 
of
 s
er
vi
ce
 
w
ir
el
es
s 
ne
tw
or
ks
 
st
ab
ili
ty
 
se
ns
or
 n
et
w
or
ks
 
02
.3
0.
yy
 
ge
ne
ti
c 
al
go
ri
th
m
s 
gr
id
 c
om
pu
ti
ng
 
ad
 h
oc
 n
et
w
or
ks
 
ne
ur
al
 n
et
w
or
ks
 
-0.001
-0.0005
0
0.0005
0.001
0.0015
0.002
0.0025
Top 20 Trends 
Bottom 20 Trends 
Figure 9: The top and bottom 20 trends 2006 - 2010 from the ACM dataset.
17
 in
te
rn
et
 
 s
en
so
r 
ne
tw
or
k 
 c
lu
st
er
in
g 
 s
up
po
rt
 v
ec
to
r 
m
ac
hi
ne
 
 d
at
a 
m
in
in
g 
 x
m
l 
 r
eg
re
ss
io
n 
 w
ir
el
es
s 
ne
tw
or
k 
 s
en
si
ng
 
 m
ac
hi
ne
 le
ar
ni
ng
 
 n
et
w
or
k 
 c
lu
st
er
in
g 
al
go
ri
th
m
 
 in
tr
us
io
n 
de
te
ct
io
n 
 p
ri
nc
ip
al
 c
om
po
ne
nt
 a
na
ly
si
s 
 g
ri
d 
co
m
pu
ti
ng
 
 c
ry
pt
og
ra
ph
y 
 in
fo
rm
at
io
n 
sy
st
em
 
 d
at
a 
tr
an
sm
is
si
on
 
 m
on
te
 c
ar
lo
 
 in
fo
rm
at
io
n 
re
tr
ie
va
l 
 d
is
tr
ib
ut
ed
 p
ro
ce
ss
in
g 
 d
at
a 
st
ru
ct
ur
es
 
 d
at
a 
co
m
pr
es
si
on
 
 o
bj
ec
t 
or
ie
nt
ed
 p
ro
gr
am
m
in
g 
 k
no
w
le
dg
e 
re
pr
es
en
ta
ti
on
 
 p
at
te
rn
 r
ec
og
ni
ti
on
 
 n
et
w
or
k 
ar
ch
it
ec
tu
re
 
 o
pe
ra
ti
ng
 s
ys
te
m
 
 a
rt
ifi
ci
al
 in
te
lli
ge
nc
e 
 d
is
tr
ib
ut
ed
 s
ys
te
m
 
 c
on
cu
rr
en
cy
 
 p
ro
gr
am
m
in
g 
la
ng
ua
ge
 
 p
ar
al
le
l p
ro
ce
ss
in
g 
 t
el
ec
om
m
un
ic
at
io
ns
 
 d
ig
it
al
 s
ig
na
l p
ro
ce
ss
in
g 
 m
ic
ro
pr
oc
es
so
r 
 in
te
gr
at
ed
 c
ir
cu
it
 
 d
at
ab
as
e 
 n
eu
ra
l n
et
w
or
k 
 a
lg
or
it
hm
 
-0.01000
-0.00800
-0.00600
-0.00400
-0.00200
0.00000
0.00200
0.00400
0 5 10 15 20 25 30 35 40 45
Top 20 Trends 
Bottom 20 Trends 
Figure 10: The top and bottom 20 trends 1990 - 2010 from the IEEE dataset.
 n
et
w
or
k 
 s
en
si
ng
 
 d
at
ab
as
e 
 r
eg
re
ss
io
n 
 c
lo
ud
 c
om
pu
ti
ng
 
 c
lu
st
er
in
g 
 in
fo
rm
at
io
n 
sy
st
em
 
 s
up
po
rt
 v
ec
to
r 
m
ac
hi
ne
 
 n
eu
ra
l n
et
w
or
k 
 d
at
a 
m
in
in
g 
 n
et
w
or
k 
m
od
el
 
 m
ac
hi
ne
 le
ar
ni
ng
 
 d
at
a 
tr
an
sm
is
si
on
 
 c
lu
st
er
in
g 
al
go
ri
th
m
 
 fa
ct
or
 a
na
ly
si
s 
 v
ir
tu
al
 m
ac
hi
ne
 
 im
ag
e 
pr
oc
es
si
ng
 
 d
iff
er
en
ti
al
 e
vo
lu
ti
on
 
 fi
ni
te
 e
le
m
en
t 
m
et
ho
d 
 c
om
pu
te
r 
vi
si
on
 
 n
et
w
or
k 
ar
ch
it
ec
tu
re
 
 e
rr
or
 c
or
re
ct
io
n 
 s
of
tw
ar
e 
en
gi
ne
er
in
g 
 r
ei
nf
or
ce
m
en
t 
le
ar
ni
ng
 
 s
of
tw
ar
e 
ag
en
ts
 
 m
ic
ro
el
ec
tr
on
ic
s 
 g
en
et
ic
 a
lg
or
it
hm
 
 fi
ni
te
 d
iff
er
en
ce
 
 x
m
l 
 in
te
gr
at
ed
 c
ir
cu
it
 
 t
el
ec
om
m
un
ic
at
io
ns
 
 u
bi
qu
it
ou
s 
co
m
pu
ti
ng
 
 v
hd
l 
 m
ic
ro
pr
oc
es
so
r 
 d
is
tr
ib
ut
ed
 s
ys
te
m
 
 g
ri
d 
co
m
pu
ti
ng
 
 in
te
rn
et
 
 d
ig
it
al
 s
ig
na
l p
ro
ce
ss
in
g 
 m
on
te
 c
ar
lo
 
 a
lg
or
it
hm
 
-0.03500
-0.03000
-0.02500
-0.02000
-0.01500
-0.01000
-0.00500
0.00000
0.00500
0.01000
0 5 10 15 20 25 30 35 40 45
Top 20 Trends 
Bottom 20 Trends 
Figure 11: The top and bottom 20 trends 2006 - 2010 from the IEEE dataset.
18
Figure 12: A landscape of Computer Science research fields 1990 - 2010 based on the raw
number (frequencies) of publications for each keyword each year for the ACM dataset.
Figure 13: A landscape of Computer Science research fields from 1990 to 2010 based on
the percentage of publications for each keyword each year for the ACM dataset.
19
Figure 14: A landscape of Computer Science research fields from 1990 to 2010 based on
the raw number (frequencies) of publications for each keyword each year for the IEEE
dataset.
Figure 15: A landscape of Computer Science research fields from 1990 to 2010 based on
the percentage of publications for each keyword each year for the IEEE dataset
20
algorithm as a node greatly reduced the degree of separation between other research
topics and created a central node dominating other research topics.
Form 1990 to 2010, algorithm, database and neural network were the most frequent
CS research topics. 311 other CS research topics have been mentioned along with algo-
rithm at least once in the past 21 years. 78 of those are persistent (i.e., they co-appear
with algorithm every year from 1990 to 2010). Out of 408 CS research topics, 286 have
been mentioned with database but only 32 of them are persistent topics. 254 topics had
appeared with neural network, but only 39 were persistent. The top five persistent topics
for database are relational database, distributed database, database management, query
language, and database design, while for neural network, they are pattern recognition,
regression, supervised learning, reinforcement learning, and robotics. Besides the three
most frequent topics, 11 others had persistent connections with multiple research topics
every year 1990−2010. Those are programming language, artificial intelligence, cluster-
ing, image processing, computer vision, network, distributed system, pattern recognition,
robotics, software engineering, and integrated circuit. Also during 1990− 2010, 87 other
research topics, such as image analysis, data transmission, and operating system are
linked every year with up to three of the mentioned 14 topics.
In ACM networks using author-defined keywords, no persistent link appeared during
1990−2010. This reinforces the earlier message that while a certain research topic may be
important enough to be mentioned in the abstract, it may not represent the article’s key
research contributions. Another example of lack of link persistence is the neural network
node in both IEEE and ACM networks. In IEEE networks, neural network is listed as a
central node, a node with the highest total weight of its edges, almost every year. Yet in
ACM networks, it never achieved this status. This is also the case with algorithm and
database topics. In early 1990s, user interface, scheduling and multimedia were research
topics that were connected to many CS research fields. In late 1990s, such interests
shifted to world wide web, information retrieval, and computer supported cooperative
work. Throughout the 2000s, the areas most connected to others were design, usability,
and security. The mid 2000s saw strong interest in sensor network and later in wireless
sensor network.
We performed clustering on the yearly network of keywords in the ACM dataset in
which a keyword can appear in multiple clusters. Using the clusters, we measured the
similarity between keywords k and a as
Number of clusters with a and k
Number of clusters with a
In combination with network connectivity, we found a list of terms clustered together
between 2006 and 2010, but have not been connected in at least 1% of documents [28].
We examined the top ten frequent words at various degree of separation. The results
are shown in Tables 11, 12, and 13. From 2006 to 2010, simulation had been clustered
with many keywords in database research such as data integration, data warehouse,
and relational database. Yet these words were either not used, or rarely used, by the
authors to describe their research in simulation. Instead, simulation was clustered with
information retrieval, feature selection, and filtering. It was also clustered with various
21
other topics related to data mining, machine learning, and artificial intelligence, but it
was not used directly to describe the same research project often enough. Data mining
has rarely been used to describe the research related to mobile networks and its related
research topics.
5.5 Researchers in Computer Science
We used the cSpade sequence mining algorithm [28] to analyze sequences of publications
in the same major research category by the same author. We required at most a one
year gap in publication dates and appearance in at least 1% of documents. We recorded
the maximum length of publication sequences in the same category. We measured the
percentage of change in the number of publications of a given author after the first year
in each category. From all the authors whose publications were in the same categories, we
calculated the half-life time (the time it took for the number of authors who continued
publishing papers in the category to reduce by half). For the first analysis, we used
the ACM CCS to identify major research categories as reported in Table 14. Next, we
performed the same analysis using the lists of conferences under six Computer Science
categories listed in the first column of Table 16. Both Tables 14 and 16 show that most of
the time the researchers published their article in an category and then quickly dropped
this category. Yet, the rates of publication growth differed in each category.
From Table 14, the results indicate a relatively short half-life time as well as a high
first year drop rate, especially for computer application, computing milieu, and data
keywords, indicating that authors in these categories either became briefly involved in
multiple research topics, or briefly collaborated with someone else from these categories.
The researchers in computer systems organization, computing methodologies, and infor-
mation systems tend to remain active in these categories for a longer time. Under ACM
CCS major categories, data category included data structures, data storage represen-
tation, data encryption, coding and information theory, and files. Even if we increased
the gap between publication to at most four years, there was still as high as 69% drop
rate after the first publication, making data one of the rarest category for an author to
continue to publish their work in. From Table 16, the data indicates that it is hard for
researchers to be able to publish in Artificial Intelligence and Programming Language
year after year, which is not the case in Human Computer Interaction. Even though the
research took longer in Artificial Intelligence, the researchers working in this category
remain active in it the longest, followed by researchers in human computer interaction
category.
Note that while researchers can continue to publish in one area for a long time, the
area itself evolves and may cover different topics in different time periods as demon-
strated above. For example, HCI focused mainly on interaction design, visual design,
and computer-supported cooperative work in 1990s, while it covered augmented real-
ity, computer vision, human factor, and ubiquitous computing in early 2000s, to finally
shift to social media, learning, computer-mediated communications, and tangible user
interface in late 2000s. Also, an author may publish a paper in a different conference
not listed in Wikipedia but the same pattern is observed in data in Tables 16, 17, 18,
22
and 19. Although such data may be incomplete, they do show similar trend as those in
Tables 14 and 14, where we used the pre-defined classification system, where each paper
collected from ACM Digital library must be listed under.
To investigate further, we selected four prominent CS researchers, analyzed their pub-
lications using our approach and discussed the results with them. Prof. Jack Dongarra
of the University of Tennessee, Knoxville, is renowned for developing high performance
linear algebra software packages for various systems, yet his interests have evolved over
time. In 1980s, he worked on parallel algorithms for linear equation routines and linear
algebra subprograms. In early 1990s, he focused on parallel solutions for eigenvalue prob-
lems and numerical software libraries for high performance systems. From late 1990s
to the 2000s, he worked on high performance linear algebra packages for multi-core sys-
tems. More recently, he has also focused on performance of grid computing. Overall,
his research interests continuously evolve in response to challenges created by new com-
puter technologies. Another researcher in this area, Prof. Francis Berman of Rensselaer
Polytechnic Institute, Troy, NY, characterized her work in 1980s as “top-down mathe-
matical modeling” of mapping and scheduling problems. In early 1990s, her papers used
such keywords as data-driven, performance, and algorithms. From late 1990s to mid-
2000s, she focused on grid computing from a “bottom up” perspective: application-level
scheduling/rescheduling, job distribution, and performance. She described this evolution
as a broadening and branching approach. Over the last decade she has made a major
shift to large scale cyber-infrastructure and data preservation 1.
In the early 1990s, Prof. George Cybenko of Darthmouth College, Hanover, NH,
studied the HPC systems and classification by neural networks. In the late 1990s, his
focus shifted to mobile agents, mobile networks, and simulations. In early 2000s, he
worked on target tracking, analyzing data, extracting information from web, and wire-
less networks. Over the past 10 years, he has investigated privacy and security issues,
including cyber-security. Prof. Cybenko commented that he investigates each subject
“in 5 year (more or less) phases” and then he “discovers open field often related to
previous work.” One exception was a major shift in 1992 related to moving from one
university to another. As a final example, Prof. James A. Hendler of Rensselaer Poly-
technic Institute, Troy, NY, has worked in Artificial Intelligence since the late 1980s. His
major shift was from planning and web intelligence to semantic web. From late 1980s to
early 1990s, his work focused on planning in AI, and later on agents, real-time systems,
and web technology. In the 2000s, he mainly focused on semantic web and most recently
also on large data and social networks.
Overall, faculty research interests typically evolve every five to 10 years by broadening
the scope and branching into new applications, as well as responsing to technological
innovations. Less frequently, usually once in a career, there is a major shift to a new
area.
1However, “cyber-infrastructure” and “data preservation” did not show up as her keywords because
the relevant publications are too new to be in our databases.
23
Figure 16: Distribution of the length of evolutionary chains showing number of years a
slowly evolving research community remains continuously active based on the ACM and
IEEE datasets.
5.6 Communities of Researchers in Computer Science
Using the framework for analyzing the evolution of social communities developed by
[10], we tracked the evolution of CS researcher communities by searching for overlapping
communities over consecutive time-periods. We used the networks of authors represented
as a bipartite graph in which each node representing a paper has edges to all nodes
representing this paper’s authors. Specifically, if an author wrote a paper, then there
is an edge between the author and the paper. The results are shown in Table 20 and
Figure 16. The figure plots the number of communities that survived from one year
to another in the ACM and IEEE datasets. The table shows the average evolutionary
chain length, the average cluster size, the average size of intersections of two to four
consecutive clusters, and the average relative density. It is measured as the combined
weight of all edges with both endpoints in the cluster divided by the combined weight
of all edges with at least one endpoint in the cluster. The recovered clusters had high
average density of 0.8 for both datasets. The average length of the evolutionary chain is
4.5 years, while there are about two core researchers in each cluster. This is consistent
with the typical university team consisting of one or two stable faculty and three to five
graduate students and postdocs that join and leave continuously. Every four years or
so, only a few stable researchers are left from the original research group.
24
6 Concluding Remarks
Computer Science is a large and ever changing research discipline. A majority of the
publications mention the keyword algorithms, which is not surprising. However, interest-
ingly, most abstracts mention one or more topics related to database, neural networks,
and Internet. The data also showed that the world wide web has become a very attrac-
tive source of data and application testbeds. Since its creation, it has attracted various
researchers working on data mining, information retrieval, cloud computing, and net-
works. Most of the research related to Internet has been done since 2000, even though
its concept was introduced shortly after the standardization of TCP/IP protocol suite
in the early 1980s. Web pages evolved from simple text written in mark-up languages
such as HTML and XML to semantic web, where ontologies have been one of the key
components for information retrieval by both humans and machines.
While the overall trends give us a clear picture of which direction each topic is taking,
the fraction of publications on each topic oscillates from year to year to the point that
the direction of change in this fraction in one year is reversed in the subsequent year.
The same is true for the number of grants awarded for each topic in each year. Since
novelty is highly prized in publications and grant applications, authors tend to stress
novel aspects of their work in abstracts and keywords, contributing to the observed
pattern. We also found a strong indication of money preceding research, because if a
research topic burst in terms of NSF grants first, it is likely to burst in publications
within a few years. The opposite pattern is at least twice less frequent. The data also
indicates that while funding is not the key in the initial growth in a CS research topic,
it is essential for maintaining the research momentum.
Looking from the researcher side, we can see that most authors only manage to get
publication in each field at most once a year. Moreover, the authors tend to publish their
work in the same major research category for at most a few years. Only a small fraction
of researchers continues to publish in the same field year after year for a long time. This
agrees well with the model of an academic research team in which permanent faculty
represent only a small fraction of the entire team of faculty, students, and postdocs, with
the latter changing topics after leaving a team. Moreover, a faculty member is often
active in more than one area. Finally, since novelty is highly valued in publications,
authors tend to pursue new directions in their research, which is reflected in a paper’s
abstract and keywords, further contributing to the observed pattern.
Acknowledgment
The authors thank Fran Berman and Jim Hendler of RPI, George Cybenko of Dart-
mouth, and Jack Dongarra of UTK for discussions on the evolution of their research
interests. This research was sponsored by the Army Research Laboratory and was ac-
complished under Cooperative Agreement Number W911NF-09-2-0053. The views and
conclusions contained in this document are those of the authors and should not be in-
terpreted as representing the official policies, either expressed or implied, of the Army
25
Research Laboratory or the U.S. Government. The U.S. Government is authorized to re-
produce and distribute reprints for Government purposes notwithstanding any copyright
notation here on.
References
[1] ACM Digital Library, http://dl.acm.org
[2] Rakesh Agrawal, Anastasia Ailamaki, Philip A. Bernstein, Eric A. Brewer, Michael
J. Carey, Surajit Chaudhuri, AnHai Doan, Daniela Florescu, Michael J. Franklin,
Hector Garcia-Molina, Johannes Gehrke, Le Gruenwald, Laura M. Haas, Alon Y.
Halevy, Joseph M. Hellerstein, Yannis E. Ioannidis, Hank F. Korth, Donald Koss-
mann, Samuel Madden, Roger Magoulas, Beng Chin Ooi, Tim O’Reilly, Raghu Ra-
makrishnan, Sunita Sarawagi, Michael Stonebraker, Alexander S. Szalay, and Ger-
hard Weikum, The Claremont Report on Database Research, Communications of the
ACM, vol. 52(6):56–65, Jun. 2009.
[3] Hsinchun Chen, AI and Global Science and Technology Assessment, IEEE Intelligent
Systems, vol 24(4): 68 – 88, Jul.-Aug. 2009.
[4] J. M. Cohoon, S. Nigai, and J. Kaye, Gender and Computing Conference Papers,
Communications of the ACM, vol. 54(8):72–80, Aug. 2011.
[5] DBLP XML records, http://dblp.uni-trier.de/xml/
[6] D. Edler and M. Rosvall (2010), The Map Generator software package, online at
http://www.mapequation.org.
[7] Eugene F. Fama, The Behavior of Stock-Market Prices, Journal of Business, vol.
38(1):34–105, Jan. 1965.
[8] IEEE Xplore, http://ieeexplore.ieee.org/Xplore/
[9] M. Goldberg, S. Kelly, M. Magdon-Ismail, K. Mertsalov, and W. A. Wallace, Over-
lapping Communities in Social Networks,
[10] M. Goldberg, M. Magdon-Ismail, S. Nambirajan, and J. Thompson, Tracking and
Predicting Evolution of Social Communities, 3rd IEEE International Conference on
Social Computing, Boston, MA, October 2011.
[11] Mary Hall, David Padua, and Keshav Pingali, Compiler Research: The Next 50
Years, Communications of the ACM, vol. 52(2): 60 – 67, Feb. 2009.
[12] Jim Hendler, and Time Berners-Lee, From the Semantic Web to social machines:
A research challenge for AI on the World Wide Web, Artificial Intelligence (2009),
doi:10.1016/j.artint.2009.11.010.
26
[13] A. Hoonlor, B. K. Szymanski, M. J. Zaki, and V. Chaoji, Document clustering with
bursty information, Computing and Informatics, 31(6): 1533–1555, 2012.
[14] A. Lancichinetti, S. Fortunato, and J. Kertész, Detecting the overlapping and hier-
archical community structure in complex networks, New Journal of Physics, vol. 11
(2009) 033015, [Online] Available: http://www.njp.org/doi:10.1088/1367-2630/
11/3/033015. Date Last Accessed Jul. 28, 2011.
[15] T. Lappas, B. Arai, M. Platakis, D. Kotsakos, and D. Gunopulos, On Burstiness-
Aware Search for Document Sequences, In Proceedings of the 15th ACM SIGKDD
international conference on Knowledge discovery and data mining, Paris, France,
2009, pp. 477–486.
[16] Michael Ley, DBLP - Some Lessons Learned, VLDB 2009, August 24-28, 2009,
Lyon, France.
[17] James Moody, The Structure of a Social Science Collaboration Network: Disci-
plinary Cohesion from 1963 to 1999, American Sociological Review, vol. 69: 213–238,
Apr. 2004.
[18] Ronald P. Neilson, High-Resolution Climatic Analysis and Southwest Biogeography,
Science, vol. 232(4746): 27–34, Apr. 1986.
[19] Alan L. Porter, and Ismael Rafols, Is science becoming more interdisciplinary? Mea-
suring and mapping six research fields over time, Scientometrics, vol. 81(3): 719–745,
2009.
[20] Mark H Reacher, Anita Shah, David M Livermore, Martin C J Wale, Catriona
Graham, Alan P Johnson, Hilary Heine, Marjorie A Monnickendam, Keith F Barker,
Dorothy James, and Robert C George, Bacteraemia and antibiotic resistance of its
pathogens reported in England and Wales between 1990 and 1998: trend analysis,
BMJ, vol. 320(7229): 213–216, Jan. 2000.
[21] Thomson Reuters, Web of Science, [Online] available: http://thomsonreuters.
com/products\_services/science/science\_products/a-z/web\_of\
_science/, Date Last Accessed 07/27/2011.
[22] M. Rosvall and C. Bergstrom, Maps of Information Flow Reveal Community Struc-
ture in Complex Networks, PNAS 105, 1118 (2008).
[23] M. Rosvall and C. Bergstrom, Mapping Change in Large Networks, PLoS One, vol.
5(1): e8694, Jan. 2010.
[24] W. L. Ruzzo and M. Tompa, A linear time algorithm for finding all maximal scoring
subsequences, In Proceedings of the Seventh International Conference on Intelligent
Systems for Molecular Biology, 1999.
27
[25] Mazeiar Salehie, and Ladan Tahvildari, Self-Adaptive Software: Landscape and Re-
search Challenges, ACM Transactions on Autonomous and Adaptive Systems, vol.
4(2), article 14, 2009.
[26] Y. Sun, J. Tang, J. Han, M. Gupta, and B. Zhao, Community evolution detection in
dynamic heterogeneous information networks, In Proceedings 2010 KDD Workshop
on Mining and Learning with Graphs, 2010.
[27] X. Wang and A. McCallum, Topics over Time: A Non-Markov Continuous-Time
Model of Topical Trends, Conference on Knowledge Discovery and Data Mining
(KDD) 2006.
[28] Mohammed J. Zaki, Sequences Mining in Categorical Domains: Incorporating Con-
straints, In 9th ACM International Conference on Information and Knowledge Man-
agement. Nov 2000.
[29] List of Computer Science Conference, [Online] available: http://en.wikipedia.
org/wiki/List\_of\_computer\_science\_conferences
28
Supplementary Materials
A Research Topic Tracked In IEEE Dataset
A.1 A
abstract state machine, adaptive system, algorithm, ambient intelligence, analytical
database, anti virus software, applied statistics, artificial immune, artificial intelligence,
artificial life, assembly language, association rule, automata theory, automated deduc-
tion, automated theorem proving, autonomous system, axiomatic semantics.
A.2 B
bayesian network, behavior based robotic, behavioral experiment, binary decision dia-
gram, bioinformatics, bionics, boolean algebra, brain imaging
A.3 C
categorical sequence, chemical computer, cholesky decomposition, classification algo-
rithm, cloud computing, cluster analysis, cluster computing, clustering, clustering algo-
rithm, code generation, coding theory, cognitive linguistics, cognitive robotic, cognitive
science, combinational logic, communication network, comparative genomics, compet-
itive learning, compiler construction, compiler design, compiler technology, compiler,
computability theory, computation complexity theory, computation theory, computa-
tional biology, computational chemistry, computational evolutionary biology, compu-
tational fluid dynamics, computational geometry, computational linguistics, computa-
tional mathematics, computational modeling, computational neuroscience, computa-
tional physics, computational science, computational theory, computer algorithm, com-
puter architecture, computer arithmetic, computer cluster, computer engineering, com-
puter graphics, computer insecurity, computer multitasking, computer network, com-
puter programming, computer security, computer vision, computer visualization, con-
currency, concurrent computing, constraint database, constraint logic programming, con-
straint satisfaction problem, content based image retrieval, context aware pervasive sys-
tems, context switch, cooperative multitasking, cryptanalysis, cryptographic primitive,
cryptography, cryptosystem, cultural algorithm, cup design
A.4 D
data analysis, data compression, data hierarchy, data intervention, data mining, data
mining agent, data prefetching, data security, data stream management system, data
structures, data transmission, data warehouse, database, database centric architecture,
database design, database management system, database model, database query lan-
guage, dataflow architecture, datapath, decision tree, declarative language, declarative
programming, denotational semantics, deterministic automata, differential evolution,
29
digital communication, digital image processing, digital logic, digital organism, dig-
ital signal processing, directory service, distributed artificial intelligence, distributed
computing, distributed data management, distributed database, distributed file system,
distributed memory system, distributed networking, distributed processing, distributed
system, document management system, document oriented database, drug discovery,
dynamic semantics
A.5 E
eigenvalue decomposition, end-user database, ensemble learning, entity relationship, er-
ror correction, error management method, evolutionary computation, explanation based
learning, external database, extrapolation
A.6 F
facial animation, factor analysis, finite difference, finite element method, finite state ma-
chine, finite volume method, firewall, flat model, flow networks, formal method, formal
semantics, formal verification, functional analysis, functional programming, fuzzy logic
A.7 G
garbage collection, gaussian elimination, gene expression, gene finding, genetic algo-
rithm, genetic programming, genome annotation, genome assembly, geometric modeling,
gram schmidt process, graph algorithm, graph database, graph drawing, graph search
algorithm, graph theory, grid computing
A.8 H
hardware architecture, hardware description language, hardware verification, harmony
search, harvard architecture, heap management, heterogeneous database system, hierar-
chical model, HTML, human centered computing, human computer interaction, hyper-
media database
A.9 I
image analysis, image processing, imperative programming, inductive logic program-
ming, information extraction, information retrieval, information science, information
system, information theory, instruction level parallelism, integrated circuit, interface
agent, internet, internet network, interpolation, intrusion detection
A.10 K
karnaugh maps, knowledge discovery, knowledge representation, knowledge spaces
30
A.11 L
lagrange multiplier, lambda calculus, learnable evolution model, learning classifier sys-
tem, linear bounded automata, linear programming, local area network, logic families,
logic gate, logic minimization, logic programming, logic program construction, logic sim-
ulation, logical effort, longest path problem
A.12 M
machine learning, machine vision, markup languages, matrix decomposition, memory hi-
erarchies, memory management, metaprogramming, microarchitecture, microcontroller,
microelectronics, microkernel, microprocessor, mimd multiprocessing, minimum span-
ning tree, misd multiprocessing, mobile computing, monte carlo, motion planning, mo-
tor control, multi-core computing, multi agent, multicore computing, multiprocessing,
multithreaded programming
A.13 N
named entity recognition, natotechnology, natural language processing, network, net-
work architecture, network model, network theory, neural computation, neural network,
neurobiological, nondeterministic automata, numerical analysis, numerical integration,
numerical method, numerical ordinary differential equation, numerical partial differential
equation, numerical recipes
A.14 O
object database model, object model, object oriented programming, object recognition,
object relational model, ontology language, operating system, operational database, op-
erational semantics, optical character recognition, optical flow estimation
A.15 P
parallel computing, parallel processing, parallel systems, pattern recognition, peer to
peer network, planning scheduling, pose estimation, predicting sequences, predictive
analysis, preemptive multitasking, principal component analysis, procedural program-
ming, process management, processor symmetry, profiling practices, program analysis,
programming language, protein expression analysis, protein interaction, protein struc-
ture alignment, protein structure prediction, public key cryptography, public key en-
cryption, pushdown automata
A.16 Q
quantum computer, quasi monte carlo, query language, query optimization
31
A.17 R
real time database, real valued sequence, reference database, regression, regular expres-
sion, regulation analysis, reinforcement learning, relational database, relational engine,
relational model, robotics, root finding algorithm, routing algorithm, run book automa-
tion
A.18 S
scalar processor, secure coding, secure operating system, security architecture, self or-
ganization, sensing, sensor network, sentient computing, sequence alignment, sequence
analysis, sequential logic, shortest path problem, signal transmission, simd multipro-
cessing, simplex method, singular value decomposition, sisd multiprocessing, social en-
gineering, software agents, software engineering, software process management, software
semantic, spatial data mining, spectral image compression, sql, sql engine, standard li-
brary, state space search, static semantic, storage engine, stream processing, strongly
connected components, structured data analysis, supervised learning, support vector
machine, symbolic numerica computation, symmetric key cryptography, system archi-
tecture
A.19 T
task computing, telecommunications, temporal data mining, text mining, texture map-
ping, theoretical linguistic, transaction engine, transparent latch, traveling salesman
problem, truth table, turing machine, type safety, type system, type theory
A.20 U
ubiquitous computing, unsupervised learning
A.21 V
vector processor, very large database, vhdl, virtual file system, virtual machine, virtual
memory, virtual reality, volumetric visualization
A.22 W
wearable computer, web mining, wide area network, wireless network
A.23 X
XML
32
B Research Topic Tracked In ACM Dataset
B.1 A-C
awareness, bioinformatics, children, classification, cloud computing, clustering, code
generation, collaboration, collaborative filtering, communication, compiler, complex-
ity, component, compression, computer science education, computer vision, computer-
mediated communication, concurrency, congestion control, constraint, context, context-
awareness, coordination, creativity, cryptography, cs1, cscw, curriculum
B.2 D-E
data mining, data stream, data structure, database, debugging, design, design pattern,
digital libraries, distributed algorithm, distributed computing, distributed system, dy-
namic programming, e-commerce, e-government, e-learning, education, embedded sys-
tem, emotion, energy efficiency, ethnography, evaluation, evolutionary algorithm, evolu-
tionary computation, eye tracking
B.3 F-I
fault tolerance, feature selection, formal method, fpga, framework, game, game theory,
genetic algorithm, genetic programming, gesture, gi, grid computing, groupware, haptic,
hci, human factor, human-computer interaction, human-robot interaction, image pro-
cessing, image retrieval, indexing, information extraction, information retrieval, infor-
mation visualization, input device, interaction, interaction design, interaction technique,
interface, internet, interoperability, intrusion detection
B.4 J-M
java, knowledge management, learning, load balancing, localization, low power, machine
learning, management, manet, measurement, metadata, metric, middleware, mobile,
mobile ad hoc network, mobile computing, mobile device, mobile phone, mobility, model,
model checking, modeling, monitoring, multi-agent system, multicast, multimedia
B.5 N-P
natural language processing, navigation, network, neural network, ontologies, ontology,
operating system, optimization, p2p, parallel programming, participatory design, pat-
tern, pedagogy, peer-to-peer, perception, performance, performance analysis, perfor-
mance evaluation, personalization, pervasive computing, placement, prediction, privacy,
program analysis, programming, protocol, prototyping
B.6 Q-R
qos, quality of service, query processing, ranking, real-time, real-time system, recom-
mender system, refactoring, reinforcement learning, relevance feedback, reliability, rfid,
33
robotic, routing, scalability
B.7 S-T
scheduling, search, search engine, security, semantic, semantic web, sensor, sensor net-
work, simulation, social network, software architecture, software engineering, software
testing, speech recognition, static analysis, support vector machine, synchronization,
tangible interface, tangible user interface, tcp, testing, text mining, training, trust
B.8 U-Z
ubiquitous computing, uml, usability, user experience, user interface, user interface de-
sign, user studies, user study, user-centered design, verification, video, virtual environ-
ment, virtual machine, virtual reality, virtualization, visualization, vlsi, web, web 2.0,
web search, web service, wiki, wikipedia, wireless, wireless network, wireless sensor net-
work, workflow, world wide web, www, XML
C NSF Dataset
We collected the NSF data from all the awards from the dicretorates of NSF, listed
below.
1. Division of Computer and Communication Foundation (CCF)
2. Division of Computer and Network Systems (CNS)
3. Division of Information Systems (DIS)
4. Division of Electrical, Communications and Cyber Systems (ECCS)
5. Division of Information and Intelligent Systems (IIS)
6. National Center for Science and Engineering Statistics (NCSE)
7. Division of Experimental and Integrative Activities (EIA)
8. Directorate for Computer and Information Science and Engineering (CSE).
D ACM Computing Classification System
The listed of ACM Computing Classification System that we used to extract data from
ACM. We ignored general literature category because it consists of non-research-related
topics such as biography, introduction and reference.
1. hardware
2. computer systems organization
34
3. software
4. data
5. theory of computation
6. mathematics of computing
7. information systems
8. computing methodologies
9. computer applications
10. computing milieu
E The list of Computer Science conferences from [29]
The list of major computer research topics and their corresponding conferences are listed
in the table below. Note that Computing included research in concurrent computing,
distributed computing, and parallel computing.
35
T
a
b
le
3
:
T
o
p
2
5
K
ey
w
or
d
s
in
p
ap
er
s
in
cl
u
d
ed
in
th
e
A
C
M
an
d
IE
E
E
d
at
as
et
s.
#
IE
E
E
D
a
ta
se
t
A
C
M
D
at
as
et
W
o
rd
D
F
W
or
d
T
F
ID
F
W
or
d
D
F
W
or
d
T
F
ID
F
1
al
go
ri
th
m
1
42
54
0
al
go
ri
th
m
14
49
41
ge
n
et
ic
al
go
ri
th
m
24
87
se
cu
ri
ty
24
03
2
n
eu
ra
l
n
et
w
or
k
4
09
15
n
et
w
or
k
11
34
36
si
m
u
la
ti
on
24
20
sc
h
ed
u
li
n
g
24
01
3
d
at
a
b
as
e
2
39
34
d
at
ab
as
e
57
79
7
se
cu
ri
ty
23
24
d
at
a
m
in
in
g
23
46
4
in
te
rn
et
2
25
63
in
te
rn
et
51
62
6
n
eu
ra
l
n
et
w
or
k
22
55
op
ti
m
iz
at
io
n
22
21
5
cl
u
st
er
in
g
1
56
85
se
n
si
n
g
36
69
2
d
at
a
m
in
in
g
21
88
si
m
u
la
ti
on
21
26
6
im
a
ge
p
ro
ce
ss
in
g
1
08
26
cl
u
st
er
in
g
36
21
4
sc
h
ed
u
li
n
g
20
77
in
fo
rm
at
io
n
re
tr
ie
va
l
18
73
7
m
o
n
te
ca
rl
o
1
00
88
re
gr
es
si
on
27
63
9
op
ti
m
iz
at
io
n
20
23
cl
u
st
er
in
g
17
65
8
in
fo
rm
a
ti
o
n
sy
st
em
99
70
in
te
rp
ol
at
io
n
25
23
1
al
go
ri
th
m
18
08
co
m
p
.
co
m
p
le
x
it
y
16
19
9
n
et
w
o
rk
97
25
m
ic
ro
p
ro
ce
ss
or
18
67
9
cl
u
st
er
in
g
15
49
st
ab
il
it
y
16
25
10
se
n
si
n
g
96
99
te
le
co
m
m
u
n
ic
at
io
n
s
16
83
2
in
fo
rm
at
io
n
re
tr
ie
va
l
15
42
p
ri
va
cy
15
49
11
re
gr
es
si
on
90
90
X
M
L
16
77
0
w
ir
el
es
s
se
n
so
r
n
et
w
or
k
15
34
v
is
u
al
iz
at
io
n
15
11
12
fu
zz
y
lo
g
ic
81
69
ro
b
ot
ic
s
16
29
0
st
ab
il
it
y
14
19
X
M
L
14
90
13
se
n
so
r
n
et
w
o
rk
80
73
m
ic
ro
co
n
tr
ol
le
r
11
93
8
se
n
so
r
n
et
w
or
k
14
17
m
ac
h
in
e
le
ar
n
in
g
14
75
14
su
p
p
o
rt
ve
ct
o
r
m
a
ch
in
e
79
63
v
h
d
l
11
52
4
d
is
tr
ib
u
te
d
sy
st
em
13
33
ev
al
u
at
io
n
14
74
15
in
te
rp
o
la
ti
o
n
78
37
cr
y
p
to
gr
ap
h
y
94
29
w
eb
se
rv
ic
e
13
24
ro
u
ti
n
g
14
68
16
d
at
a
m
in
in
g
70
70
co
n
cu
rr
en
cy
90
41
p
er
fo
rm
an
ce
ev
al
.
12
94
p
er
fo
rm
an
ce
ev
al
.
14
31
17
d
is
tr
ib
u
te
d
sy
st
em
56
71
m
ic
ro
el
ec
tr
on
ic
s
86
66
v
is
u
al
iz
at
io
n
12
85
in
te
rn
et
14
13
18
p
at
te
rn
re
co
gn
it
io
n
56
23
co
m
p
il
er
71
96
co
m
p
.
co
m
p
le
x
it
y
12
85
cl
as
si
fi
ca
ti
on
13
68
19
ge
n
et
ic
al
go
ri
th
m
54
74
b
io
in
fo
rm
at
ic
s
53
17
in
te
rn
et
12
78
so
ft
w
ar
e
en
g.
13
28
20
d
a
ta
tr
a
n
sm
is
si
o
n
53
62
ex
tr
ap
ol
at
io
n
50
27
X
M
L
12
70
p
er
fo
rm
an
ce
12
95
21
d
ig
it
a
l
si
g
n
al
p
ro
ce
ss
in
g
52
16
H
T
M
L
45
88
p
ri
va
cy
12
44
fa
u
lt
to
le
ra
n
ce
12
88
22
X
M
L
51
61
d
at
ap
at
h
43
80
ev
al
u
at
io
n
12
35
p
ar
al
le
l
p
ro
ce
ss
in
g
12
68
23
so
ft
w
a
re
en
gi
n
ee
ri
n
g
50
85
sq
l
39
53
ap
p
ro
x
.
al
g.
12
31
ge
n
et
ic
al
go
ri
th
m
12
57
24
m
ic
ro
p
ro
ce
ss
o
r
49
63
fi
re
w
al
l
25
75
cl
as
si
fi
ca
ti
on
11
76
02
.3
0.
y
y
12
27
25
te
le
co
m
m
u
n
ic
a
ti
o
n
s
48
49
m
ic
ro
ar
ch
it
ec
tu
re
24
87
p
er
fo
rm
an
ce
11
73
m
u
lt
im
ed
ia
12
07
36
Table 4: The top 10 most frequent words that became bursty in the NSF dataset before
they did so in the ACM dataset.
Keywords NSF ACM
genetic algorithms 1996 2003
simulation 2000 2003
security 2001 2003
neural networks 1990 2002
data mining 1999 2002
scheduling 1992 2002
optimization 1997 2004
clustering 1992 2003
information retrieval 1999 2002
wireless sensor network 2004 2006
Table 5: The top 10 most frequent words that became bursty in the NSF dataset before
they did so in the IEEE dataset.
Keywords NSF IEEE NSF-L
algorithm 1990 2002 2001
neural network 1990 2006 2005
database 1997 2004 2004
clustering 1992 2004 2002
image processing 1994 2006 2006
monte carlo 1995 2003 2002
information system 1991 2006 2006
network 2002 2004 2004
sensing 2002 2004 2004
regression 1993 2005 2003
37
Table 6: The top 10 bursty correlated words, listed in the order of the bursty ranking,
in the burstiest period of the 10 most frequent words for the ACM dataset.
Keywords BP Top 10 Bursty keywords
security 2000 - wireless sensor networks, routing, sensor networks,
2010 web services, usability, grid computing, wireless
networks, peer-to-peer, static analysis, rfid
simulation 1996 - scheduling, optimization, visualization, wireless
2010 sensor networks, sensor networks, qos, wireless
networks, ad hoc networks, analysis, validation
data mining 2000 - genetic algorithms, privacy, bioinformatics, feature
2010 selection, time series, web mining, clustering,
security, pattern recognition, text mining
scheduling 1990 - real-time systems, parallel processing
1991
optimization 1992 - neural networks
1999
neural networks 1992 - learning, pattern recognition, optimization, fuzzy
2001 logic, stability
clustering 2002 - wireless sensor networks, visualization, data
2010 mining, classification, ad hoc networks, genetic
algorithms, text mining, neural networks, IR
IR 1999 - XML, semantic web, ontology, peer-to-peer
2010 text mining, information extraction, web search,
query expansion, evaluation, search engine
stability 1991 - robust control, adaptive control, nonlinear
1998 systems, robustness, bifurcation
genetic algorithms 1995 - scheduling, fuzzy logic, heuristics, clustering
2009 multi-objective optimization, simulated annealing,
neural networks, optimization, data mining
38
Table 7: The top 10 bursty correlated tracked topics, listed in the order of the bursty
ranking, in the burstiest period of the 10 most frequent tracked topics in the IEEE
dataset.
Keywords BP Top 10 Bursty keywords
algorithm 1990 - logic minimization, logic simulation, distributed processing,
2004 facial animation, virtual memory, sequential logic, truth
table, concurrency, digital logic, object oriented programming
neural network 1990 - parallel systems, computer architecture, data compression,
1999 constraint satisfaction problem, traveling salesman problem,
finite difference, object recognition, distributed processing,
optical character recognition, competitive learning
database 1990 - logic programming, integrated circuit, entity relationship,
1993 local area network, concurrency, parallel processing,
operating system, object oriented programming, type
system, programming language
internet 1998 - multi agent, computer security, hardware architecture,
2009 association rule, XML, security architecture, concurrency,
knowledge discovery, algorithm, grid computing
clustering 2003 - differential evolution, protein interaction, sensor network,
2010 artificial immune, bioinformatics, spatial data mining,
support vector machine, intrusion detection, genetic
programming, gene expression
image processing 1992 - data compression, data structures, network
1997 parallel processing
monte carlo 2000 - support vector machine, sensor network, wireless
2010 network, computer vision, bayesian network, robotics,
genetic algorithm, network, machine learning, sensing
information system 2007 - cloud computing, sensor network, cryptography, data
2010 transmission, process management, support vector machine,
data security, bioinformatics, ubiquitous computing,
network model
network 2006 - network theory, sensor network, data mining, principal
2010 component analysis, data analysis, clustering algorithm
graph theory, data transmission, virtual machine, regression
sensing 2006 - wireless network, network model, sensor network,
2010 microcontroller , support vector machine, data transmission,
principal component analysis, decision tree, monte carlo,
data mining
39
Table 8: The top 5 co-reference words, listed in the order of the bursty ranking, in the
burstiest period of the 10 most frequent words in the ACM dataset.
Keywords BP Top 10 Bursty keywords
security 2000 - privacy, authentication, cryptography,
2010 access control, trust
simulation 1996 - modeling, wireless networks, performance evaluation
2010 optimization, wireless sensor networks
data mining 2000 - clustering, association rules, classification,
2010 machine learning, knowledge discovery
scheduling 1990 - real-time systems, parallel processing, performance
1991 evaluation, load balancing, partitioning
optimization 1992 - genetic algorithms, neural networks, simulation,
1999 scheduling, algorithms
neural networks 1992 - fuzzy logic, genetic algorithms, learning,
2001 pattern recognition, machine learning
clustering 2002 - data mining, classification, visualization
2010 wireless sensor networks, genetic algorithms
IR 1999 - evaluation, natural language processing, machine
2010 learning, query expansion, text mining
stability 1991 - robustness, adaptive control, robust control
1998 convergence, nonlinear systems
genetic algorithms 1995 - optimization, neural networks, simulated
2009 annealing, heuristics, evolutionary computation
40
Table 9: The top top 5 co-reference tracked topics, listed in the order of the bursty
ranking, in the burstiest period of the 10 most frequent tracked topics in the IEEE
dataset.
Keywords BP Top 10 Bursty keywords
algorithm 1990 - neural network, clustering, database,
2004 image processing, genetic algorithm
neural network 1990 - algorithm, network model, pattern recognition,
1999 fuzzy logic, network architecture
database 1990 - algorithm, relational database, neural network,
1993 distributed database, concurrency
internet 1998 - algorithm, database, network, XML
2009 information system
clustering 2003 - algorithm, data mining, neural network,
2010 database, sensor network
image processing 1992 - algorithm, neural network, pattern recognition
1997 computer vision, digital image processing
monte carlo 2000 - algorithm, neural network, regression
2010 clustering, sensor network
information system 2007 - database, data mining, algorithm,
2010 internet, XML
network 2006 - neural network, algorithm, sensor network
2010 wireless network, network model
sensing 2006 - algorithm, information system, image processing,
2010 neural network, sensor network
Table 10: Trend Prediction.
Year ACM IEEE NSF
2 12.06% 21.68% 36.79%
3 49.54% 55.94% 64.51%
4 65.86% 65.49% 73.61%
5 72.21% 69.79% 74.63%
6 76.54% 70.28% 77.61%
41
T
a
b
le
1
1:
K
ey
w
o
rd
s
w
h
ic
h
w
er
e
cl
u
st
er
ed
w
it
h
th
e
sp
ec
ifi
ed
ke
y
w
or
d
s
ev
er
y
ti
m
e
fo
r
fi
ve
ye
ar
s
fr
om
20
06
to
20
10
K
ey
w
o
rd
S
im
il
a
r
ke
y
w
or
d
s
se
cu
ri
ty
N
o
n
e
si
m
u
la
ti
o
n
a
cc
es
s
co
n
tr
ol
,
an
n
o
ta
ti
on
,
a
sp
ec
t-
or
ie
n
te
d
p
ro
gr
am
m
in
g,
aw
ar
en
es
s,
cl
u
st
er
an
al
y
si
s,
co
m
p
re
ss
io
n
,
co
m
p
u
ta
ti
on
al
g
eo
m
et
ry
,
co
m
p
u
te
r
v
is
io
n
,
co
n
st
ra
in
ed
op
ti
m
iz
at
io
n
,
co
n
te
n
t-
b
as
ed
im
ag
e
re
tr
ie
va
l,
d
at
a
co
m
p
re
ss
io
n
,
d
at
a
in
te
gr
at
io
n
,
d
a
ta
st
re
am
,
d
at
a
w
ar
eh
o
u
se
,
d
ec
om
p
os
it
io
n
,
d
es
ig
n
p
at
te
rn
,
d
u
al
it
y,
ei
ge
n
va
lu
e,
em
b
ed
d
in
g,
em
ot
io
n
,
em
p
ir
ic
al
st
u
d
y,
en
tr
op
y,
er
ro
r
an
a
ly
si
s,
et
h
n
og
ra
p
h
y,
ey
e
tr
ac
k
in
g,
fe
at
u
re
ex
tr
ac
ti
on
,
fe
at
u
re
se
le
ct
io
n
,
fi
lt
er
in
g,
fi
n
it
e
fi
el
d
,
fi
x
ed
p
oi
n
t,
fu
n
ct
io
n
a
l
p
ro
gr
am
m
in
g,
g
ar
b
ag
e
co
ll
ec
ti
on
,
ge
st
u
re
,
gp
,
gr
ap
h
al
go
ri
th
m
,
gr
ou
p
w
ar
e,
h
y
p
er
te
x
t,
im
ag
e
re
tr
ie
va
l,
im
ag
e
se
gm
en
ta
ti
on
,
in
d
ex
in
g
,
in
fo
rm
at
io
n
ex
tr
ac
ti
on
,
in
n
ov
at
io
n
,
in
te
ra
ct
io
n
te
ch
n
iq
u
e,
ka
lm
an
fi
lt
er
,
k
n
ow
le
d
ge
d
is
co
ve
ry
,
lo
ca
l
se
a
rc
h
,
lo
w
-p
ow
er
,
m
em
or
y,
m
et
ad
at
a,
m
im
o,
m
ob
il
e,
m
on
te
ca
rl
o
si
m
u
la
ti
on
,
m
u
si
c,
n
at
u
ra
l
la
n
gu
ag
e
p
ro
ce
ss
in
g,
o
p
en
so
u
rc
e,
p
a
ra
ll
el
is
m
,
p
ar
ti
cl
e
sw
ar
m
op
ti
m
iz
at
io
n
,
p
ar
ti
ti
on
in
g,
p
at
te
rn
m
at
ch
in
g,
p
at
te
rn
re
co
gn
it
io
n
,
p
d
a,
p
er
so
n
a
li
za
ti
o
n
,
p
la
n
ar
g
ra
p
h
,
p
ri
n
ci
p
al
co
m
p
on
en
t
an
al
y
si
s,
p
ro
gr
am
an
al
y
si
s,
p
ro
gr
am
tr
an
sf
or
m
at
io
n
,
q
u
er
y
p
ro
ce
ss
in
g,
ra
n
d
o
m
w
al
k
,
ra
n
d
o
m
iz
ed
a
lg
or
it
h
m
,
ra
n
k
in
g,
rd
f,
re
gu
la
ri
za
ti
on
,
re
la
ti
on
al
d
at
ab
as
e,
se
ar
ch
en
gi
n
e,
se
lf
-o
rg
an
iz
in
g
m
ap
,
se
m
id
efi
n
it
e
p
ro
gr
am
m
in
g,
si
n
gu
la
r
va
lu
e
d
ec
om
p
os
it
io
n
,
so
a,
so
ft
w
ar
e
m
ai
n
te
n
an
ce
,
so
ft
w
ar
e
q
u
al
it
y,
st
ab
il
iz
at
io
n
,
st
a
n
d
ar
d
,
st
at
ic
an
a
ly
si
s,
su
p
p
or
t
ve
ct
or
m
ac
h
in
e,
sy
st
em
id
en
ti
fi
ca
ti
on
,
ta
n
gi
b
le
u
se
r
in
te
rf
ac
e,
te
x
t
m
in
in
g,
tr
ac
k
in
g,
tr
ia
n
gu
la
ti
on
,
ty
p
e
sy
st
em
,
u
se
r
ex
p
er
ie
n
ce
,
u
se
r
st
u
d
ie
s,
w
av
el
et
tr
an
sf
or
m
,
w
eb
ap
p
li
ca
ti
on
,
w
eb
m
in
in
g,
w
eb
se
ar
ch
,
w
ik
i
d
at
a
M
in
in
g
a
b
st
ra
ct
in
te
rp
re
ta
ti
on
,
a
cc
es
si
b
il
it
y,
ad
ap
ta
ti
on
,
ad
ap
ti
ve
co
n
tr
ol
,
ad
m
is
si
on
co
n
tr
ol
,
an
al
y
si
s
of
al
go
ri
th
m
,
an
im
at
io
n
,
a
sp
ec
t-
or
ie
n
te
d
p
ro
g
ra
m
m
in
g,
as
se
ss
m
en
t,
at
m
,
au
gm
en
te
d
re
al
it
y,
au
th
en
ti
ca
ti
on
,
aw
ar
en
es
s,
b
lu
et
o
ot
h
,
b
ro
ad
ca
st
,
b
ro
a
d
ca
st
in
g
,
c+
+
,
ca
ch
e,
ca
d
,
ca
se
st
u
d
y,
ch
il
d
re
n
,
cm
o,
co
d
e
ge
n
er
at
io
n
,
co
m
p
il
er
,
co
m
p
on
en
t,
co
m
p
u
te
r
ar
ch
it
ec
tu
re
,
co
m
p
u
te
r
g
ra
p
h
ic
s,
co
m
p
u
te
r
sc
ie
n
ce
ed
u
ca
ti
on
,
co
m
p
u
te
r-
m
ed
ia
te
d
co
m
m
u
n
ic
at
io
n
,
co
n
cu
rr
en
cy
,
co
n
cu
rr
en
cy
co
n
tr
ol
,
co
n
g
es
ti
on
co
n
tr
o
l,
co
n
n
ec
ti
v
it
y,
co
n
st
ra
in
ed
op
ti
m
iz
at
io
n
,
co
n
tr
ol
,
co
n
ve
rg
en
ce
,
co
or
d
in
at
io
n
,
cr
ea
ti
v
it
y,
cr
y
p
to
gr
ap
h
y,
cs
1,
d
a
ta
st
ru
ct
u
re
,
d
el
ay
,
d
iff
u
si
on
,
d
ig
it
al
si
gn
at
u
re
,
d
y
n
am
ic
,
d
y
n
am
ic
p
ro
gr
am
m
in
g,
ei
ge
n
va
lu
e,
em
b
ed
d
ed
sy
st
em
,
em
b
ed
d
in
g
,
em
ot
io
n
,
en
cr
y
p
ti
on
,
en
er
gy
,
er
ro
r
an
al
y
si
s,
et
h
n
og
ra
p
h
y,
ev
ol
u
ti
on
,
ey
e
tr
ac
k
in
g,
fa
ir
n
es
s,
fa
u
lt
-t
ol
er
an
ce
,
fi
n
it
e
el
em
en
t,
fi
n
it
e
el
em
en
t
m
et
h
o
d
,
fi
n
it
e
fi
el
d
,
fi
x
ed
p
oi
n
t,
fo
rm
al
sp
ec
ifi
ca
ti
on
,
fo
rm
al
ve
ri
fi
ca
ti
on
,
fp
ga
,
ga
rb
ag
e
co
ll
ec
ti
on
,
g
ro
u
p
w
a
re
,
h
ap
ti
c,
h
ig
h
-l
ev
el
sy
n
th
es
is
,
h
u
m
an
fa
ct
or
,
h
u
m
an
-r
ob
ot
in
te
ra
ct
io
n
,
id
en
ti
fi
ca
ti
on
,
im
ag
e
re
tr
ie
va
l,
im
p
le
m
en
ta
ti
on
,
in
n
ov
at
io
n
,
in
te
ra
ct
io
n
te
ch
n
iq
u
e,
in
te
rc
on
n
ec
t,
in
te
rc
on
n
ec
ti
on
n
et
w
or
k
,
in
te
rf
ac
e,
in
te
rp
ol
at
io
n
,
in
ve
rs
e
p
ro
b
le
m
,
ka
lm
a
n
fi
lt
er
,
lo
ca
l
se
ar
ch
,
lo
ca
li
za
ti
on
,
lo
w
p
ow
er
,
lo
w
-p
ow
er
,
lo
w
er
b
ou
n
d
,
m
ac
,
m
an
et
,
m
ed
iu
m
ac
ce
ss
co
n
tr
o
l,
m
em
or
y,
m
es
sa
ge
p
as
si
n
g,
m
im
o,
m
ob
il
e,
m
ob
il
e
ad
h
o
c
n
et
w
or
k
,
m
ob
il
e
ag
en
t,
m
ob
il
e
co
m
m
u
n
ic
at
io
n
,
m
ob
il
e
d
ev
ic
e,
m
ob
il
e
p
h
o
n
e,
m
o
d
u
la
ri
ty
,
m
p
i,
m
u
lt
ic
as
t,
m
u
lt
ip
ro
ce
ss
or
,
ob
je
ct
-o
ri
en
te
d
,
ob
je
ct
-o
ri
en
te
d
p
ro
gr
am
m
in
g,
of
d
m
,
o
p
er
a
ti
n
g
sy
st
em
,
o
p
ti
m
a
l
co
n
tr
ol
,
p
ar
al
le
l
p
ro
gr
am
m
in
g,
p
ar
am
et
er
es
ti
m
at
io
n
,
p
ar
ti
ci
p
at
or
y
d
es
ig
n
,
p
d
a,
p
ed
ag
og
y,
p
la
n
a
r
gr
ap
h
,
p
ow
er
,
p
ow
er
m
an
ag
em
en
t,
p
re
co
n
d
it
io
n
in
g,
p
ri
ci
n
g,
p
ro
ce
ss
al
ge
b
ra
,
p
ro
gr
am
an
al
y
si
s,
p
ro
gr
am
tr
an
sf
or
m
a
ti
o
n
,
p
ro
gr
am
m
in
g,
p
ro
gr
am
m
in
g
la
n
gu
ag
e,
p
ro
to
ty
p
in
g,
q
u
al
it
y,
rd
f,
re
al
-t
im
e,
re
fa
ct
or
in
g,
re
fi
n
em
en
t,
re
fl
ec
ti
on
,
re
p
li
ca
ti
on
,
re
q
u
ir
em
en
t,
re
q
u
ir
em
en
ts
en
gi
n
ee
ri
n
g,
re
so
u
rc
e
al
lo
ca
ti
on
,
re
u
se
,
ro
b
ot
ic
,
ro
b
u
st
co
n
tr
ol
,
ro
u
ti
n
g,
ro
u
ti
n
g
p
ro
to
co
l,
se
m
id
efi
n
it
e
p
ro
gr
am
m
in
g,
se
rv
ic
e,
sh
or
te
st
p
at
h
,
si
gn
al
p
ro
ce
ss
in
g,
so
c,
so
ft
w
ar
e
te
st
in
g,
sp
ec
ifi
ca
ti
on
,
st
a
b
il
iz
at
io
n
,
st
a
ti
c
a
n
al
y
si
s,
sy
n
ch
ro
n
iz
at
io
n
,
sy
n
th
es
is
,
sy
st
em
,
ta
n
gi
b
le
u
se
r
in
te
rf
ac
e,
tc
p
,
te
m
p
or
al
lo
gi
c,
th
ro
u
gh
p
u
t,
to
p
o
lo
gy
,
tr
ee
,
tr
ia
n
gu
la
ti
on
,
ty
p
e
sy
st
em
,
u
m
l,
u
se
r
ex
p
er
ie
n
ce
,
u
se
r
in
te
rf
ac
e
d
es
ig
n
,
u
se
r
st
u
d
ie
s,
va
li
d
at
io
n
,
v
ir
tu
al
en
v
ir
o
n
m
en
t,
v
ir
tu
a
l
m
a
ch
in
e,
v
ir
tu
al
iz
at
io
n
,
v
ls
i,
vo
ip
,
w
eb
ap
p
li
ca
ti
on
,
w
ik
i,
w
ir
el
es
s,
w
ir
el
es
s
co
m
m
u
n
ic
at
io
n
,
w
ir
el
es
s
m
es
h
n
et
w
or
k
,
w
la
n
42
T
a
b
le
1
2:
K
ey
w
o
rd
s
w
h
ic
h
w
er
e
cl
u
st
er
ed
w
it
h
th
e
sp
ec
ifi
ed
ke
y
w
or
d
s
ev
er
y
ti
m
e
fo
r
fi
ve
ye
ar
s
fr
om
20
06
to
20
10
(C
on
t.
)
K
ey
w
or
d
S
im
il
a
r
ke
y
w
or
d
s
sc
h
ed
u
li
n
g
d
u
a
li
ty
,
li
n
ea
r
sy
st
em
,
ro
b
u
st
co
n
tr
ol
,
se
m
id
efi
n
it
e
p
ro
gr
am
m
in
g,
tr
ia
n
gu
la
ti
on
o
p
ti
m
iz
at
io
n
b
o
ol
ea
n
fu
n
ct
io
n
,
in
te
rc
on
n
ec
ti
on
n
et
w
or
k
,
m
on
te
ca
rl
o
si
m
u
la
ti
on
,
w
av
el
et
tr
an
sf
or
m
n
eu
ra
l
n
et
w
o
rk
s
N
o
n
e
cl
u
st
er
in
g
a
b
st
ra
ct
in
te
rp
re
ta
ti
on
,
ab
st
ra
ct
io
n
,
ac
ce
ss
co
n
tr
ol
,
ad
ap
ti
ve
co
n
tr
ol
,
an
im
at
io
n
,
as
p
ec
t-
or
ie
n
te
d
p
ro
gr
am
m
in
g,
a
ss
es
sm
en
t,
a
tm
,
a
u
gm
en
te
d
re
al
it
y,
b
en
ch
m
ar
k
in
g,
b
lu
et
o
ot
h
,
b
o
ol
ea
n
fu
n
ct
io
n
,
c+
+
,
ca
ch
e,
ca
se
st
u
d
y,
ch
il
d
re
n
,
cm
o
,
co
m
p
os
it
io
n
,
co
m
p
u
te
r
ar
ch
it
ec
tu
re
,
co
m
p
u
te
r
gr
ap
h
ic
s,
co
m
p
u
te
r
sc
ie
n
ce
ed
u
ca
ti
on
,
co
m
p
u
te
r-
m
ed
ia
te
d
co
m
m
u
n
ic
at
io
n
,
co
n
cu
rr
en
cy
,
co
n
cu
rr
en
cy
co
n
tr
ol
,
co
n
ge
st
io
n
co
n
tr
ol
,
co
n
si
st
en
cy
,
co
n
st
ra
in
ed
op
ti
m
iz
at
io
n
,
co
n
tr
ol
,
cr
y
p
to
gr
ap
h
y,
cs
1
,
cs
cw
,
cu
lt
u
re
,
cu
rr
ic
u
lu
m
,
d
eb
u
gg
in
g,
d
ec
is
io
n
su
p
p
or
t
sy
st
em
,
d
es
ig
n
p
at
te
rn
,
d
iff
u
si
on
,
d
ig
it
al
si
gn
a
tu
re
,
d
is
ta
n
ce
le
a
rn
in
g,
ed
u
ca
ti
on
,
em
ot
io
n
,
en
cr
y
p
ti
on
,
en
er
gy
,
er
ro
r
an
al
y
si
s,
es
ti
m
at
io
n
,
et
h
n
og
ra
p
h
y,
ey
e
tr
ac
k
in
g,
fa
ir
n
es
s,
fi
n
it
e
fi
el
d
,
fi
x
ed
p
oi
n
t,
fo
rm
al
m
et
h
o
d
,
fo
rm
al
v
er
ifi
ca
ti
on
,
fu
n
ct
io
n
al
p
ro
gr
am
m
in
g,
ga
m
e,
ge
st
u
re
,
g
p
,
gr
ou
p
w
ar
e,
h
a
p
ti
c,
h
ig
h
-l
ev
el
sy
n
th
es
is
,
h
u
m
an
fa
ct
or
,
h
u
m
an
-r
ob
ot
in
te
ra
ct
io
n
,
im
p
le
m
en
ta
ti
on
,
in
fo
rm
at
io
n
se
cu
ri
ty
,
in
n
ov
at
io
n
,
in
te
ll
ig
en
t
ag
en
t,
in
te
ra
ct
io
n
te
ch
n
iq
u
e,
in
te
rf
ac
e
d
es
ig
n
,
in
te
ro
p
er
ab
il
it
y,
in
ve
rs
e
p
ro
b
le
m
,
ja
va
,
ka
lm
an
fi
lt
er
,
k
n
ow
le
d
g
e
re
p
re
se
n
ta
ti
on
,
lo
gi
c
p
ro
gr
am
m
in
g,
lo
w
-p
ow
er
,
m
es
sa
ge
p
as
si
n
g,
m
et
h
o
d
ol
og
y,
m
im
o,
m
ob
il
e
co
m
m
u
n
ic
at
io
n
,
m
ob
il
e
co
m
p
u
ti
n
g,
m
o
d
el
ch
ec
k
in
g,
m
on
te
ca
rl
o
si
m
u
la
ti
on
,
m
u
lt
ia
ge
n
t
sy
st
em
,
n
at
u
ra
l
la
n
gu
ag
e
p
ro
ce
ss
in
g
,
n
on
li
n
ea
r
p
ro
gr
am
m
in
g,
ob
je
ct
-o
ri
en
te
d
p
ro
gr
am
m
in
g,
of
d
m
,
op
ti
m
al
co
n
tr
ol
,
p
ar
al
le
li
sm
,
p
ar
ti
ci
p
at
or
y
d
es
ig
n
,
p
at
te
rn
m
a
tc
h
in
g
,
p
ed
ag
og
y,
p
la
n
ar
gr
ap
h
,
p
la
n
n
in
g,
p
re
co
n
d
it
io
n
in
g,
p
ri
ci
n
g,
p
ro
b
ab
il
it
y,
p
ro
ce
ss
al
ge
b
ra
,
p
ro
g
ra
m
an
a
ly
si
s,
p
ro
gr
a
m
tr
an
sf
or
m
at
io
n
,
p
ro
gr
am
m
in
g,
p
ro
gr
am
m
in
g
la
n
gu
ag
e,
p
ro
to
co
l,
p
ro
to
ty
p
in
g,
re
fi
n
em
en
t,
re
fl
ec
ti
on
,
re
in
fo
rc
em
en
t
le
ar
n
in
g,
re
p
li
ca
ti
on
,
re
q
u
ir
em
en
ts
en
gi
n
ee
ri
n
g,
re
so
u
rc
e
al
lo
ca
ti
on
,
re
so
u
rc
e
m
an
ag
em
en
t,
re
u
se
,
rfi
d
,
ro
b
o
ti
c,
ro
b
u
st
co
n
tr
ol
,
ro
u
ti
n
g
p
ro
to
co
l,
se
m
id
efi
n
it
e
p
ro
gr
am
m
in
g,
se
n
so
r,
se
rv
ic
e,
se
rv
ic
e-
or
ie
n
te
d
a
rc
h
it
ec
tu
re
,
sh
or
te
st
p
at
h
,
si
gn
al
p
ro
ce
ss
in
g,
so
a,
so
c,
so
ft
w
ar
e,
so
ft
w
ar
e
ar
ch
it
ec
tu
re
,
so
ft
w
ar
e
m
et
ri
c,
so
ft
w
ar
e
q
u
a
li
ty
,
so
ft
w
ar
e
te
st
in
g,
sp
ec
ifi
ca
ti
on
,
sp
ee
ch
re
co
gn
it
io
n
,
st
ab
il
it
y,
st
ab
il
iz
at
io
n
,
st
an
d
ar
d
,
st
at
ic
an
al
y
si
s,
su
p
p
ly
ch
a
in
m
a
n
ag
em
en
t,
sy
n
th
es
is
,
sy
st
em
,
ta
n
gi
b
le
u
se
r
in
te
rf
ac
e,
tc
p
,
te
ch
n
ol
og
y,
te
le
co
m
m
u
n
ic
at
io
n
,
te
m
p
or
al
lo
gi
c,
te
st
in
g
,
ty
p
e
sy
st
em
,
u
sa
b
il
it
y,
u
se
r
ex
p
er
ie
n
ce
,
u
se
r
in
te
rf
ac
e
d
es
ig
n
,
u
se
r
st
u
d
ie
s,
u
se
r-
ce
n
te
re
d
d
es
ig
n
,
v
er
ifi
ca
ti
on
,
v
id
eo
,
v
oi
p
,
w
ir
el
es
s,
w
ir
el
es
s
co
m
m
u
n
ic
at
io
n
,
w
la
n
,
w
or
k
fl
ow
IR
a
b
st
ra
ct
in
te
rp
re
ta
ti
on
,
ab
st
ra
ct
io
n
,
ac
ce
ss
co
n
tr
ol
,
ad
h
o
c
n
et
w
or
k
,
ad
ap
ti
ve
co
n
tr
ol
,
ad
m
is
si
on
co
n
tr
ol
,
an
om
al
y
d
et
ec
ti
o
n
,
an
o
n
y
m
it
y,
ap
p
ro
x
im
at
io
n
,
ar
ti
fi
ci
al
n
eu
ra
l
n
et
w
or
k
,
as
p
ec
t-
or
ie
n
te
d
p
ro
gr
am
m
in
g,
as
so
ci
at
io
n
ru
le
,
a
u
th
en
ti
ca
ti
on
,
aw
a
re
n
es
s,
b
en
ch
m
ar
k
in
g,
b
lu
et
o
ot
h
,
b
o
ol
ea
n
fu
n
ct
io
n
,
b
ro
ad
ca
st
,
b
ro
ad
ca
st
in
g,
c+
+
,
ca
ch
e,
ca
ch
in
g,
ca
d
,
cm
o
,
co
d
e
ge
n
er
at
io
n
,
co
ll
ab
or
at
iv
e
le
ar
n
in
g,
co
m
b
in
at
or
ia
l
op
ti
m
iz
at
io
n
,
co
m
p
il
er
,
co
m
p
le
x
it
y,
co
m
p
o
n
en
t,
co
m
p
os
it
io
n
,
co
m
p
u
te
r
ar
ch
it
ec
tu
re
,
co
m
p
u
te
r
gr
ap
h
ic
s,
co
m
p
u
te
r
sc
ie
n
ce
ed
u
ca
ti
on
,
co
n
cu
rr
en
cy
,
co
n
g
es
ti
on
co
n
tr
o
l,
co
n
n
ec
ti
v
it
y,
co
n
si
st
en
cy
,
co
n
st
ra
in
ed
op
ti
m
iz
at
io
n
,
co
n
ve
rg
en
ce
,
co
rr
el
at
io
n
,
cr
ea
ti
v
it
y,
cr
y
p
to
gr
ap
h
y,
cs
1
,
cu
rr
ic
u
lu
m
,
d
eb
u
gg
in
g,
d
ec
om
p
os
it
io
n
,
d
el
ay
,
d
iff
u
si
on
,
d
ig
it
al
si
gn
at
u
re
,
d
is
tr
ib
u
te
d
al
go
ri
th
m
,
d
u
a
li
ty
,
d
y
n
a
m
ic
,
d
y
n
a
m
ic
p
ro
gr
am
m
in
g,
d
y
n
am
ic
al
sy
st
em
,
e-
go
ve
rn
m
en
t,
ei
ge
n
va
lu
e,
em
b
ed
d
ed
sy
st
em
,
em
b
ed
d
in
g
,
em
p
ir
ic
al
st
u
d
y,
en
cr
y
p
ti
on
,
en
er
gy
,
en
er
gy
effi
ci
en
cy
,
er
ro
r
an
al
y
si
s,
et
h
n
og
ra
p
h
y,
ev
ol
u
ti
on
ar
y
a
lg
or
it
h
m
,
fa
ir
n
es
s,
fa
u
lt
-t
ol
er
an
ce
,
fi
n
it
e
el
em
en
t,
fi
n
it
e
el
em
en
t
m
et
h
o
d
,
fi
n
it
e
fi
el
d
,
fi
x
ed
p
oi
n
t,
fo
re
ca
st
in
g,
43
T
a
b
le
1
3:
K
ey
w
o
rd
s
w
h
ic
h
w
er
e
cl
u
st
er
ed
w
it
h
th
e
sp
ec
ifi
ed
ke
y
w
or
d
s
ev
er
y
ti
m
e
fo
r
fi
ve
ye
ar
s
fr
om
20
06
to
20
10
(C
on
t.
)
K
ey
w
or
d
S
im
il
ar
ke
y
w
o
rd
s
IR
(C
on
t.
)
fo
rm
al
m
et
h
o
d
,
fo
rm
a
l
sp
ec
ifi
ca
ti
on
,
fo
rm
al
ve
ri
fi
ca
ti
on
,
fp
ga
,
fr
am
ew
or
k
,
fu
n
ct
io
n
al
p
ro
gr
am
m
in
g,
ga
m
e,
ga
m
e
th
eo
ry
,
g
lo
b
al
o
p
ti
m
iz
at
io
n
,
gr
ap
h
th
eo
ry
,
gr
ou
p
w
ar
e,
h
ap
ti
c,
h
eu
ri
st
ic
,
h
ig
h
-l
ev
el
sy
n
th
es
is
,
h
u
m
an
-r
ob
ot
in
te
ra
ct
io
n
,
id
en
ti
fi
ca
ti
on
,
im
ag
e
se
gm
en
ta
ti
on
,
im
p
le
m
en
ta
ti
on
,
in
fo
rm
at
io
n
se
cu
ri
ty
,
in
n
ov
at
io
n
,
in
te
ge
r
p
ro
gr
am
m
in
g,
in
te
ra
ct
io
n
te
ch
n
iq
u
e,
in
te
rc
on
n
ec
t,
in
te
rc
on
n
ec
ti
on
n
et
w
or
k
,
in
te
rp
ol
at
io
n
,
in
tr
u
si
on
d
et
ec
ti
on
,
in
ve
rs
e
p
ro
b
le
m
,
ka
lm
an
fi
lt
er
,
li
n
ea
r
p
ro
gr
am
m
in
g,
li
n
ea
r
sy
st
em
,
lo
ca
li
za
ti
on
,
lo
w
p
ow
er
,
lo
w
-p
ow
er
,
m
ac
,
m
a
n
ag
em
en
t,
m
a
n
et
,
m
ed
iu
m
ac
ce
ss
co
n
tr
ol
,
m
es
sa
ge
p
as
si
n
g,
m
et
h
o
d
ol
og
y,
m
id
d
le
w
ar
e,
m
im
o,
m
ob
il
e
ad
h
o
c
n
et
w
o
rk
,
m
ob
il
e
co
m
m
u
n
ic
at
io
n
,
m
ob
il
e
p
h
on
e,
m
o
d
el
ch
ec
k
in
g,
m
o
d
el
in
g,
m
o
d
u
la
ri
ty
,
m
on
te
ca
rl
o
si
m
u
la
ti
on
,
m
p
i,
m
u
lt
ic
as
t,
n
et
w
or
k
se
cu
ri
ty
,
n
on
li
n
ea
r
p
ro
gr
am
m
in
g,
ob
je
ct
-o
ri
en
te
d
p
ro
gr
am
m
in
g,
of
d
m
,
on
li
n
e
al
go
ri
th
m
,
op
ti
m
a
l
co
n
tr
ol
,
p
ar
al
le
l,
p
ar
al
le
l
p
ro
gr
am
m
in
g,
p
ar
al
le
li
sm
,
p
ar
ti
ci
p
at
or
y
d
es
ig
n
,
p
ar
ti
cl
e
sw
ar
m
op
ti
m
iz
at
io
n
,
p
ar
ti
ti
on
in
g,
p
a
tt
er
n
re
co
gn
it
io
n
,
p
d
a,
p
ed
ag
og
y,
p
er
fo
rm
an
ce
an
al
y
si
s,
p
et
ri
n
et
,
p
la
ce
m
en
t,
p
la
n
n
in
g,
p
ow
er
,
p
re
co
n
d
it
io
n
in
g,
p
ri
ci
n
g,
p
ro
ce
ss
al
ge
b
ra
,
p
ro
gr
am
tr
an
sf
or
m
at
io
n
,
p
ro
gr
am
m
in
g,
p
ro
gr
am
m
in
g
la
n
gu
ag
e,
p
ro
je
ct
m
a
n
ag
em
en
t,
p
ro
to
co
l,
p
ro
to
ty
p
in
g,
ra
n
d
om
iz
ed
al
go
ri
th
m
,
re
al
-t
im
e,
re
fa
ct
or
in
g,
re
fi
n
em
en
t,
re
fl
ec
ti
on
,
re
gu
la
ri
za
ti
on
,
re
p
li
ca
ti
on
,
re
q
u
ir
em
en
ts
en
gi
n
ee
ri
n
g,
re
so
u
rc
e
al
lo
ca
ti
on
,
re
so
u
rc
e
m
an
ag
em
en
t,
re
ve
rs
e
en
g
in
ee
ri
n
g
,
ro
b
o
ti
c,
ro
b
u
st
co
n
tr
ol
,
ro
u
ti
n
g
p
ro
to
co
l,
sa
m
p
li
n
g,
sc
en
ar
io
,
se
m
id
efi
n
it
e
p
ro
gr
am
m
in
g,
se
n
si
ti
v
it
y
an
a
ly
si
s,
se
n
so
r,
se
n
so
r
n
et
w
or
k
,
se
rv
ic
e-
or
ie
n
te
d
ar
ch
it
ec
tu
re
,
sh
or
te
st
p
at
h
,
si
gn
al
p
ro
ce
ss
in
g,
so
c,
so
ft
w
ar
e,
so
ft
w
ar
e
ar
ch
it
ec
tu
re
,
so
ft
w
ar
e
d
ev
el
op
m
en
t,
so
ft
w
ar
e
ev
ol
u
ti
on
,
so
ft
w
ar
e
q
u
al
it
y,
so
ft
w
ar
e
te
st
in
g,
sp
ec
ifi
ca
ti
on
,
st
ab
il
it
y,
st
a
b
il
iz
at
io
n
,
su
p
p
ly
ch
ai
n
m
an
ag
em
en
t,
su
rv
ey
,
sy
n
ch
ro
n
iz
at
io
n
,
sy
n
th
es
is
,
sy
st
em
id
en
ti
fi
ca
ti
on
,
tc
p
,
te
ch
n
o
lo
gy
,
te
le
co
m
m
u
n
ic
at
io
n
,
te
m
p
or
al
lo
gi
c,
te
st
in
g,
th
ro
u
gh
p
u
t,
ti
m
e
se
ri
es
,
to
ol
,
to
p
ol
og
y,
tr
ee
,
tr
ia
n
gu
la
ti
on
,
ty
p
e
sy
st
em
,
va
li
d
a
ti
o
n
,
v
ir
tu
al
en
v
ir
on
m
en
t,
v
ir
tu
al
m
ac
h
in
e,
v
ir
tu
al
iz
at
io
n
,
v
ls
i,
v
oi
p
,
w
av
el
et
,
w
eb
ap
p
li
ca
ti
on
,
w
ik
i,
w
ir
el
es
s
co
m
m
u
n
ic
at
io
n
,
w
ir
el
es
s
m
es
h
n
et
w
or
k
,
w
la
n
,
w
or
k
fl
ow
st
a
b
il
it
y
N
on
e
ge
n
et
ic
al
go
ri
th
m
s
N
on
e
44
Table 14: Statistic of publications on ACM Digital Library in each major categories
listed in the ACM Computing Classification System.
CCS 1-year gap 2-year gap
1st DR T 1
2
Max. CL 1st DR T 1
2
Max. CL
hardware 66% 0.94 5 59% 1.28 7
comp. sys. organization 54% 1.22 8 46% 1.49 9
software 52% 1.15 7 43% 1.47 9
data 81% 0.48 3 75% 0.59 3
theory of computation 60% 0.90 6 50% 1.27 8
mathematics of computing 51% 1.06 7 41% 1.58 10
information systems 48% 1.32 8 40% 1.70 11
computing methodologies 41% 1.26 8 32% 1.66 11
computer applications 72% 0.61 4 63% 0.83 5
computing milieu 68% 0.78 5 59% 0.99 6
Table 15: Statistic of publications on ACM Digital Library in each major categories
listed in the ACM Computing Classification System.
CCS 3-year gap 4-year gap
1st DR T 1
2
Max. CL 1st DR T 1
2
Max. CL
hardware 56% 1.41 7 54% 1.53 8
comp. sys. organization 41% 1.64 10 39% 1.72 10
software 39% 1.64 10 36% 1.74 11
data 72% 0.74 4 69% 0.78 4
theory of computation 45% 1.51 10 42% 1.60 10
mathematics of computing 37% 1.80 11 34% 1.89 12
information systems 36% 1.83 11 34% 1.89 12
computing methodologies 28% 1.82 12 25% 1.89 12
computer applications 57% 0.94 6 54% 1.00 6
computing milieu 55% 1.09 6 52% 1.14 7
45
Table 16: Statistic of publications on ACM Digital Library in Computer Science major
research categories. HCI is an abbreviation for human computer interaction.
Category 1-year gap 2-year gap
1st DR T 1
2
Max. CL 1st DR T 1
2
Max. CL
alg. and theory 61% 1.34 5 56% 1.54 7
programming language 59% 0.99 5 51% 1.42 6
computing 70% 0.66 3 64% 0.9 4
soft. eng. 67% 0.75 3 55% 1.11 5
operating systems 79% 0.44 2 72% 0.69 3
comp. arch 35% 1.61 8 30% 1.81 9
computer networking 52% 1.37 7 45% 1.67 7
security and privacy 75% 0.5 2 70% 0.57 2
data management 42% 1.41 7 35% 1.65 8
artificial intelligence 50% 1.54 5 45% 1.77 6
computer graphics 48% 1.28 6 42% 1.81 8
HCI 31% 1.65 9 25% 2.40 12
Table 17: Statistic of publications on ACM Digital Library in Computer Science major
research categories. HCI is an abbreviation for human computer interaction.
Category 3-year gap 4-year gap
1st DR T 1
2
Max. CL 1st DR T 1
2
Max. CL
alg. and theory 54% 1.64 7 53% 1.66 7
programming language 47% 1.56 6 44% 1.47 7
computing 60% 1.01 4 58% 1.05 4
soft. eng. 51% 1.19 5 48% 1.28 5
operating systems 69% 0.74 3 67% 0.76 3
comp. arch 27% 1.92 9 27% 2.09 10
computer networking 42% 1.71 7 41% 1.73 7
security and privacy 66% 0.65 2 65% 0.67 2
data management 33% 1.72 8 31% 1.73 8
artificial intelligence 43% 1.79 6 42% 1.79 6
computer graphics 39% 2.04 9 38% 2.07 9
HCI 23% 2.46 13 22% 2.53 13
46
Table 18: Statistic of publications on IEEE Xplore in Computer Science major research
categories. HCI is an abbreviation for human computer interaction.
Category 1-year gap 2-year gap
1st DR T 1
2
Max. CL 1st DR T 1
2
Max. CL
alg. and theory 70% 0.58 2 63% 0.83 3
programming language 83% 0.39 2 76% 0.55 3
computing 65% 0.86 5 57% 1.20 7
soft. eng. 82% 0.41 2 75% 0.50 2
operating systems 100% N/A 1 100% N/A 1
comp. arch 63% 0.95 6 54% 1.37 8
computer networking 48% 1.11 7 39% 1.47 9
security and privacy N/A N/A N/A N/A N/A N/A
data management 72% 0.65 3 65% 0.92 4
artificial intelligence 58% 0.88 5 47% 1.32 8
computer graphics 63% 0.89 5 57% 1.20 7
HCI N/A N/A N/A N/A N/A N/A
Table 19: Statistic of publications on IEEE Xplore in Computer Science major research
categories. HCI is an abbreviation for human computer interaction.
Category 3-year gap 4-year gap
1st DR T 1
2
Max. CL 1st DR T 1
2
Max. CL
alg. and theory 59% 0.98 3 58% 1.27 4
programming language 73% 0.72 4 71% 0.78 4
computing 52% 1.39 8 50% 1.44 8
soft. eng. 72% 0.69 3 71% 0.74 3
operating systems 100% N/A 1 100% N/A 1
comp. arch 50% 1.54 9 47% 1.63 9
computer networking 35% 1.65 10 32% 1.72 10
security and privacy N/A N/A N/A N/A N/A N/A
data management 62% 1.07 5 60% 1.16 5
artificial intelligence 42% 1.51 9 39% 1.60 9
computer graphics 51% 1.47 8 49% 1.54 9
HCI N/A N/A N/A N/A N/A N/A
47
Table 20: Evolution of research communities in terms of average size of a research group
and number of years it was active based on the ACM and IEEE datasets.
Dataset Average Value of
ACM Chain Length 4.48
Cluster Size 6.1
Intersection of 2 Consecutive Clusters 3.45
Intersection of 3 Consecutive Clusters 2.51
Intersection of 4 Consecutive Clusters 2.0
Density 0.84
IEEE Chain Length 4.39
Cluster Size 5.53
Intersection of 2 Consecutive Clusters 3.17
Intersection of 3 Consecutive Clusters 2.36
Intersection of 4 Consecutive Clusters 1.90
Density 0.80
48
Table 21: The list of Computer Science conferences from [29]
Research Categories Conference abbriviations
Alg. and Theory STOC, FOCS, SODA, SoCG, ICALP, STACS, ESA, LICS,
ISAAC, APPROX, RANDOM, CCC, SPAA, PODC, MFCS,
FSTTCS, COCOON, WoLLIC, SODA, WADS, SWAT, WAOA,
SoCG, ACM GIS, GD, IMR, WAFR, CCCG, EuroCG, ISSAC,
LICS, IPCO, DLT, CIAA, DCFS, FWCG
Prog. Lang. POPL, PLDI, ECOOP, OOPSLA, ICLP, JICSLP, ICFP, CGO
HOPL, ESOP, FOSSACS, CP, CC, PADL, LOPSTR, FLOPS,
Computing PODC, ICDCS, SPAA, PPoPP, HiPC, DISC, CLUSTER,
WDAG, SRDS, PACT, IPDPS, IPPS, SPDP, CCGrid, DSN,
ICPP, Euro-Par, SIROCCO, OPODIS, ICPADS, Grid,
Coordination, SC, SUPER, ICS, HPDC, PPSC, IWCC,
Soft. Eng. ICSE, FSE, TACAS, PEPM, RTA, ICSM, ASE, SAT, FM, SAS,
MoDELS, UML, RE, ICSR, ICECCS, CAV, FME, FORTE, WSA
Operating Systems SOSP, OSDI, USENIX, FAST, EuroSys, HotOS, NOSSDAV,
Middleware, MSST
Comp. Arch. ASPLOS, ISCA, MICRO, HPCA, SPD, ASP-DAC,
ISLPED, FCCM, FPGA, ISSS, CODES+ISSS, ISPD,
ARVLSI, ISCAS, RTSS, RTAS, LCTES, CASES, CHES,
EMSOFT, ECRTS, SCOPES, DAC, ICCAD, DATE,
Comp. Networking SIGCOMM, NSDI, SIGMETRICS, IMC, INFOCOM, ICC,
CONEXT, HotNets, IPTPS, ICNP, PAM, IWQoS, SenSys,
MASCOTS, IM, P2P, ICCCN, Networking, LCN, HotMobile,
GlobeCom, MobiCom, MobiHoc, MobiSys, WMCSA, IPSN,
Ubicomp, PerCom, EWSN, ISWC, MSWiM, MobiQuitous,
WoWMoM, SECON, WiOpt, DCOSS, MASS, IEEE RFID
Security & privacy Oakland, USENIX, CCS, NDSS, ESORICS, RAID, ANTS,
CRYPTO, EUROCRYPT, ACNS, TCC, CSF, CSFW, PKC,
ASIACRYPT, FSE, RSA, CHES, SECRYPT, INDOCRYPT
Data Management SIGMOD, VLDB, PODS, SIGIR, WWW, KDD, ICDE, CIDR,
ICDM, ICDT, EDBT, SDM, CIKM, ICIS, SSTD, SSD, WebDB,
SSDBM, CAiSE, ECIS
AI AAAI, IJCAI, AISB, NLDB, AAMAS, ATAL, ICMAS, ICAPS, AIPS,
ECP, ICML, NIPS, COLT, EuroCOLT, ECML PKDD, ECML, KR,
PKDD, EWSL, ECAI, RuleML, FOGA, IJCAR, CADE, COLING,
TABLEAUX, LPAR, WoLLIC, ICCV, CVPR, ECCV, BMVC, CICLing,
ACCV, ICPR, CAIP, SCIA, PSIVT, SSIAI, ACL, NAACL, EACL, UAI
Comp. graphics SIGGRAPH, I3D, SI3D, I3DG, MM, ACMMM, DCC, ICME, ICMCS,
Vis, Eurographics, ACM SIGGRAPH, InfoVis, SCA, ICIP, GI
HCI CHI, CSCW, UIST, IUI, DIS, INTERACT, MobileHCI, SIGDOC,
VL/HCC, ASSETS
49

