A database management system for digital archiving of 
paintings and works of art 
 
M. Pappas    G. Angelopoulos    A. Kadoglou    I. Pitas∗ 
Department of Informatics 
Aristotle University of Thessaloniki, Box 451, GR-54006 Thessaloniki, GREECE 
 
Abstract 
In museums and conservation centers the need for a database management 
system arises for the purpose of efficient artwork-related information storage and 
retrieval. This paper presents a versatile integrated database package, which is 
designed specifically for painting and other artwork archiving and satisfies 
conservation needs. Besides alphanumeric information, unlimited digital images of a 
work of art of various modalities (e.g. visible, infrared, ultraviolet) can also be stored, 
as well as spectrometry signals and colorimetry measurements. Any station in the 
network can access this information. It will be shown that this package can 
accommodate most of the needs of people working in painting conservation, regardless 
of whether or not Intranet or Internet operation is required. 
1. Introduction 
The use of a Database Management System (DBMS for short) for painting or 
artwork archiving is a reasonable choice. With the aid of an ordinary DBMS it is 
                                                     
∗ Author to whom correspondence should be addressed. Tel., fax: +30-31-996304; e-
mail: pitas@zeus.csd.auth.gr 
possible to store, modify, display painting records as well as find records that satisfy 
certain search criteria. 
Although commercial database products do offer this level of functionality, 
they are not specialized to painting/artwork archiving. Therefore, special software must 
be developed on top of a DBMS that satisfies the needs of artwork archiving, study and 
conservation. A non-exhaustive list of these requirements is the following: 
• Support of multimodal image storage (x-rays, visible, IR, UV) 
• Support of high resolution imaging through image tiling (especially in IR, visible) 
• Storage of spectroscopy information 
• Storage of colorimetry measurements 
• Storage of “classical information” in text and data formats (e.g. theme, artist 
information, conservation needs, relevant bibliography) 
• On-line mass storage (optical) 
• Multi-user support 
• LAN and Internet access 
Most of these needs should be satisfied by a database solution in order for it to 
qualify as a complete artwork archiving solution. This paper will present such a system 
which is tailored for digital artwork archiving, the EIKONA FOR ARTS/DATABASE. It 
will be shown that this environment possesses specific advantages for large volume, 
multi-user storage and retrieval of information related to works of art. 
The general structure of this paper is the following. Section 2 establishes the 
goals that were followed during the design phase. In Section 3 implementation details 
are discussed. Finally, in Section 4 some important conclusions are presented. 
2. Design goals 
The EIKONA FOR ARTS/DATABASE suite (EIKONA for short) was 
developed to offer a complete multimodal artwork archiving environment. For this 
 2
purpose, certain implicit design goals were established during the program design 
phase. A brief presentation of these goals is given below, which also serves as an 
introduction to the versatile features of this system. 
2.1. Record structure 
The problem of selecting a record structure, that could satisfy archiving and 
conservation needs, stems from the fact that there are different viewpoints as to which 
fields should be contained in a certain database record. A big effort was made in this 
direction by the European Union research project NARCISSE, which provided a solid 
framework for the digital representation of art-related information [4]. 
The wealth of information, that can be associated with a work of art, demands 
a database implementation that takes into account its different aspects. Thus, 
characteristics should be grouped together and each resulting group should be coded as 
a different record structure (e.g. film). In this way, record structures that describe the 
painting itself or any other related information such as digital images, films or related 
bibliography are logically organized. Of course, the database should provide for 
storage of information related to physical and conservation details, available creation 
data, physical conditions and artistic style. 
Since good performance is required from a DBMS, record length should be 
kept to a minimum. This restriction imposes an upper limit on the number and size of 
record structures that should be implemented. From our viewpoint, a good compromise 
is the inclusion of a minimal set of characteristic field types. These fields should be 
chosen with great care, in order to maximize their overall informational value.  
2.2. Storage of digital images 
A complete archiving solution should treat visual information in a similar way 
to alphanumeric (text) information. Digital images of a work of art should be easily 
stored and retrieved in the database, along with any other alphanumeric data. For 
 3
example, tiles of an infrared reflectogram mosaic should be stored in the DBMS and 
retrieved afterwards for subsequent post-processing. Thus, document-imaging features 
should be incorporated into the final design. For optimum functionality, multimodal 
digital images resulting from different acquisition schemes (i.e. infrared, visible, x-ray, 
ultra-violet and microscopy) should be treated as separate entities. Images should be 
easily retrieved, according to the type of acquisition. Multimodality support is very 
important for conservation applications. 
No limits should be imposed on the number of digital images that can be 
stored, since this would represent an undesired constraint. Additionally, every image 
should be readily accessible from within the database environment. 
High resolution imaging through digital image tiling should be supported as 
well. This is very important for IR imaging (where the spatial resolution of the camera 
is small), as well as for very high resolution imaging in the visible wavelengths. 
Naturally, mosaicing software should be used for complete painting assembly from its 
tiles. 
2.3. Storage of spectrometry signals 
In a related context, data files containing spectroscopy signals (Raman 
spectroscopy, for example) should also be stored in the database, along with any other 
alphanumeric information. Suppose that a digital image, acquired from the visible 
region of the spectrum, and a number of spectroscopy signals are stored in the 
database. If the coordinates of the sample points that correspond to the regions 
spectroscopy signals were taken from, are known, a highly desirable feature would be 
the simultaneous display of both the digital image and the spectroscopy signals on a 
graphics terminal. 
 4
2.4. Storage of colorimetry measurements 
Similarly, provisions should be made for the storage and subsequent display of 
colorimetry measurements of an object. Any colorimetry measurements that are 
associated with certain points of the digital image should be easily accessed. An 
important feature is the display of colorimetry measurements of a certain type (e.g. 
xyY) in the respective color space diagram. Of course, this level of interactivity 
requires built-in support for these operations. 
Additionally, users should not be limited to the storage of predefined 
colorimetry types. That is, they should be able to add other measurement (or signal) 
types, at any time. 
2.5. Mass storage support 
Despite the technological advances in digital image compression, availability 
of disk space remains a limitation. Thus, in order to store a large number of images, 
some form of built-in support for mass storage subsystems is required. CD-ROM, 
write-once read-many (WORM) or magneto-optical drives (MO) towers and jukebox 
systems can be used efficiently for this purpose. 
Utilization of mass storage subsystems solves a problem but introduces another 
serious one: the image storage details should be “invisible” to the ordinary user. Thus, 
in a typical database access scenario where a user wants to retrieve a digital image 
from the database, access should be performed transparently and with no 
complications. 
Furthermore, the procedure of creating CDs containing digital images should 
be performed easily by the DBMS administrator, with minimal user involvement. 
 5
2.6. Network/multi-user operation 
The whole environment should support network operation. It is evident that 
network operation applies not only to alphanumeric data, but to digital images, signals 
and measurements as well. 
As far as the network model is concerned, an important issue is the choice of 
network protocol. For example, the network stations could be connected via Ethernet 
or token ring network adapters, with NetBIOS, NetBEUI, IPX/SPX or TCP/IP 
supplying the necessary connectivity functionality. Of course, each protocol has its 
own distinct advantages over the other ones. A constraint can be imposed on protocol 
selection, by taking into account the fact that the solution should be scalable. That is, 
no changes should be required in order to move from local area network (LAN) to 
metropolitan or wide area network (MAN and WAN, respectively) operation. 
2.7. Database model 
Relational databases provide vast flexibility in viewing and querying data in 
various ways [1, 2]. However, the final design can only be as flexible as the database 
schema on which it is based. Simply stated, the database schema represents a collection 
of entities (i.e. record structures) and relationships [3]. Entities can be thought as 
structures that hold information, while relationships relate entities between them. Both 
entities and relationships can have attributes (or characteristics). 
In a relational DBMS (RDBMS for short), schema design is perhaps the most 
influential factor of overall functionality at the implementation level. The domain of all 
possible queries to the database is related to its schema design. The size of this domain 
is strongly related to the way entities and relationships were designed in the first place. 
Thus, a poor design can cripple the potential of the final system. 
Adherence to certain rules can ease the path to a more flexible implementation. 
Let us suppose that an non-optimized schema is given. Then, one can create a new 
schema with possibly modified entities, relationships and/or characteristics. In essence, 
 6
both the initial and the modified schemas contain the same amount of information. 
However, some queries may be very difficult, if not impossible at all, to perform in the 
former case. Of course, what really matters to a user is not only the amount of 
information stored in the database, but the amount of information that can be easily 
retrieved. In this context, an optimized schema can exhibit higher versatility. 
Several commercial RDBMS products exist today (e.g. Oracle, Informix, 
Ingres, DB2, Sybase) which can form the underlying application layer of the final 
application. The utilization of a commercial RDBMS presents certain key advantages:  
• High reliability 
• Multi-user operation in heterogeneous system environments 
• Excellent fault recovery features 
• Easy upsizing (i.e. upgrading to a more powerful architecture) path 
2.8. User interface 
During the eighties, a major shift occurred in the way users interacted with a 
computer system. That is, command line operation lost ground to easy-to-use graphical 
user interfaces (GUIs). However, command line interfaces (CLIs) still present a major 
advantage over GUIs: they are much more flexible in handling certain tasks with 
considerable power. For instance, in a database-related context with a Data 
Manipulation Language (DML), it is possible to perform any desired query. On the 
other hand, use of a GUI usually limits queries to a predefined set. 
The straightforward path, during the development of a database product, is to 
implement one of the above-mentioned interfaces. That is, the database could be 
operated either from a command line (utilizing some sort of database language) or from 
menus with the aid of a pointing device. In any case, some compromises will have to 
be done. 
 7
A more flexible approach is to create a hybrid platform. That is, to create a 
GUI-based application, with predefined queries and reports, but also give the option of 
accessing directly the database via a command line interface. 
2.9. Adherence to standards 
From the previous paragraphs it is evident that the design of our archiving 
solution presents many implementation alternatives. However, only a small subset of 
these alternatives should be considered, since some of them depend on proprietary 
standards. Openness of system architecture is related to the way it adheres to standards 
(if they apply, of course). 
The digital image file format, network protocol and RDBMS language can be 
chosen in order to maximize the adherence of the archiving solution to international 
standards. For this purpose, certain standards (e.g. ISO, ANSI, and IETF) can be 
enforced. 
3. The EIKONA FOR ARTS/DATABASE environment 
This environment was designed to address the exact needs of artwork-related 
information management tasks. Three versions of this system exist, which, although 
somewhat different in operation, are functionally the same. The first two versions are 
LAN-oriented, where the latter one is based on a true client-server environment. The 
third version is oriented towards World Wide Web (WWW) operation. Thus, it is ideal 
for wide area networks or hybrid (simultaneous LAN and WAN) operation. 
The rest of this Section is as follows: Section 3.1 examines common features 
of all three platforms. From a user's point of view, operation of the first two platforms 
appears the same. Thus, their specific features are examined under Section 3.2. Finally, 
Section 3.3 presents key features of the WWW environment. 
 8
3.1. Common features 
3.1.1. Schema and implementation for Byzantine icons 
We have considered Byzantine icons a special case. As mentioned in Section 
2.1, the choice of the database fields, to be included in the final painting record, plays a 
critical role. The NARCISSE record structure was the starting point for our 
implementation [4]. We tried to adapt this structure to the specific conservation needs 
of Byzantine icons. In Greece, important work has been done in the study of works of 
art (e.g. mural paintings) from the Byzantine era, which led to a database schema 
representation. 
Such an effort has been made in the Greek research project ANTHIVOLON, 
which deals with the problems of digital processing, representation and archiving of 
Byzantine icons and mural paintings. The proposed implementation merges the schema 
representations from NARCISSE with more specific considerations related to 
Byzantine paintings. Unfortunately, this representation contained a large number of 
fields. Careful selection of the number of these fields, on the advice of conservators, 
yielded a much smaller, yet efficient schema representation. The entities and 
relationships that formed the resulting schema conveyed information about all aspects 
of a paintingi. However, it should be noted that the schema could be adapted to 
conform to any other type/style of painting. 
As noted in Section 2.7, many possible implementations exist for a given 
schema design. In order to maximize query flexibility, the schema was implemented in 
available RDBMS technology in the third normal form (3NF) [3]. This design ensures 
good flexibility in the implemented product, since it provides a large domain of queries 
that can be performed. In practice, this leads to separation of complex entities into 
simpler ones. An entity-relationship graph is depicted in Figure 1, where each header 
 9
indicates an entity and each field in bold letters indicates a database key. The line 
segments that connect entities indicate one-to-many relationships.  
 
 
Figure 1 Schema representation of the database. Rectangles denote entities 
(record structures) and each entity is characterized by the enclosed attributes 
(fields). Attributes in bold indicate primary keys of the respective entity. For 
example, the entity ITEM represents general painting information, while 
ITEM_HEIGHT holds the height of the specific painting. Finally, line segments 
that connect entities represent 1-to-many relationships. Thus, many (the ∝) side 
of the line segment) IMAGE entity records can refer to the same (the 1 side of the 
line segment) ITEM entity record. 
 
                                                                                                                                             
i For the rest of this paper, aspects of this system, with regard to paintings, will 
be discussed. However, our discussion applies to works of art in general. 
 10
A painting entity (record structure) was created, that consisted of more than 
forty attributes (fields). These fields belong to one of the following categories: 
• Basic information 
• Physical details 
• Restoration details 
• Available creation data 
• Current physical conditions 
• Storage information 
• Historical data 
• Artistic style 
The implementation also included entities related to paintings. Some of these 
entities are the following: 
• Hardcopy (HRDCOPY) 
• Bibliography (BIBREF) 
• Film (FILM) 
• Colorimetry measurement (MEASURE) 
• Digital image (IMAGE) 
• Spectroscopy signal (SIGNAL) 
In addition to query flexibility, this separation of the painting entity from any 
other painting-related entities, offers other important advantages. In the first place, 
database performance is improved, since a much smaller record is used to hold painting 
information. Additionally, since painting-related entities (e.g. hardcopy, bibliography, 
and digital image) are separated from the painting entity itself, there is no limit to the 
number of records of the former type of entities that can refer to a certain painting 
record.  
 11
3.1.2. Network topology 
The network protocol was chosen in order to offer versatile LAN/WAN 
operation. The TCP/IP protocol was chosen since it provides good scalability and high 
reliability in operation. Installation can be easily performed in any TCP/IP-based 
Intranet (e.g. in a museum internal network). Since TCP/IP is the network protocol of 
the Internet, no changes will be required for Internet operation. 
A simple representation of the network model is shown in Figure 2. 
 
Figure 2 A simplified network operation model. 
 
The server holds the actual data, while other systems (clients) on the network, 
can store and retrieve them. Of course, a requirement that should be satisfied is that all 
systems should have the necessary system software to be connected through TCP/IP. 
The server is currently implemented on Microsoft Windows 95 and Windows 
NT (client-server and WWW versions only) operating systems. However, as it will be 
discussed in Sections 3.2-3.3, the clients may or may not have to run any specific 
EIKONA client software. 
 
 12
3.1.3. Digital images and mass storage support 
This system is able to store unlimited digital images of a painting. To facilitate 
easy classification of stored images, the digital image database entity includes fields 
that describe: 
• The acquisition type (visible, infrared, ultraviolet, X-rays, microscopy, other). 
• Relative position with respect to the entire painting, in the case of image tiles 
(subparts) employed in very high resolution IR or visible light imaging. 
• Relative position with respect to the entire painting, in the case of microscopy 
images. 
• The removable medium (CD-ROM disk, for example) disk number that will 
contain this image. 
This information can be utilized to query the database in order to extract all the 
sub-images of a mosaic set. To display an image on a terminal, all that is required is to 
locate the respective image record and press a button.  
Currently, images in TIFF, TARGA and JPEG formats are accepted. The latter 
is of great importance, since color images require vast amounts of storage. For 
example, an uncompressed 4096x4096-pixel color image requires 48 Mbytes of 
storage. The same image, compressed in JPEG format, may require far less disk space, 
depending of course on the image content and the compression ratio. JPEG 
compression is usually lossy, i.e. the compressed image loses some detail with respect 
to the original. However, with medium compression little detail is lost and compression 
ratios of at least 10:1 can be used without visual degradations. This compression ratio 
represents a tenfold increase in the number of images that can be stored in a given 
storage medium. Additionally, JPEG is an International Organization for 
Standarization (ISO) standard, which ensures compatibility with a large number of 
image processing software packages [5, 6]. 
 13
Since a JPEG compressed image file size is only a fraction of the original 
(uncompressed) image file size, the JPEG image can be transferred in a network much 
faster than the original one. This is a crucial advantage in WAN operation, since 
network lag would otherwise limit response times and, consequently, introduce 
problems in operation. 
In certain cases, a user may want to store an image in the database, with no 
loss of detail. For this reason, an option to store the image in TIFF, or TARGA formats 
is given.  These image file formats support lossless compression. Thus, the stored 
image is the same as the original. It should be noted that these options are supported 
only for the sake of storing an image in uncompressed form, with no loss of quality. 
Despite compression, disk storage remains a limited resource. As seen in 
Section 2.5, mass storage devices can been utilized for the purpose of storing 
efficiently a large number of images. A mass storage device is connected to the server 
(Figure 2). These devices can hold a number of rewritable or write-once read-many 
(WORM) disks. The latter form is preferred, since it is possible that a rewritable disk 
data can be lost due to user error or system malfunction. Currently, disk tower 
implementations are supported. For the time being, CD-ROM towers offer a good 
compromise between available disk storage and cost/compatibility. A single CD-ROM 
disk can hold about 600 Mbytes of data. This amount can not be compared to the 
storage capability of other proprietary systems, which is in the order of some GBytes. 
However, CD-ROM disks can be created in a file system format that is portable, 
among computer systems of dissimilar architecture. The ISO 9660 standard describes 
this "universal" CD-ROM file system, which is widely utilized today in CD-ROM 
disks [7]. The utilization of CD-ROM mass storage created with the ISO 9660 file 
system simplifies data interchange among different computer systems, which are 
equipped with a CD-ROM player. Additionally, CD-ROM drives are widely available 
and relatively inexpensive. 
 14
Suppose that an N-drive CD-ROM tower mass storage system is going to be 
utilized by a database in order to store a large number of images. Usually, CD-ROM 
towers with 7, 14 or 21 CD-ROM drives are employed. Sooner or later, all of these 
drives are going to be occupied by CD-ROM disks, effectively introducing an upper 
limit to the number of images that can be stored. In order to overcome this limitation a 
simple, yet effective, solution was implemented. As users start storing images in the 
server, these images stay temporarily in a specific directory, which is constantly 
monitored by the system. At some point, the sum of the file sizes of these accumulated 
images will reach the CD-ROM disk capacity limit. At this point, images are 
transferred to a CD-ROM disk, freeing the dedicated for images disk space on the 
server. The CD-ROM disks that are created this way are numbered sequentially from 
one onwards. As these disks get stored in one of the available CD-ROM tower drives, 
the server keeps track of a disk number-tower drive mapping. Of course, images that 
have not yet been transferred to a CD are always available on the hard disk. Let us 
suppose now that all of the tower drives are occupied. If a user wants to access an 
image that is not stored in one of disks currently inside the CD-ROM tower, the server 
will detect this event and inform the user that the disk is not accessible. In turn, the 
database administrator will have to remove a disk from the tower, insert the wanted one 
and update the disk number-tower drive lookup table to reflect this change. Although 
this approach introduces manual intervention in operation, it is a low-cost solution. 
3.1.4. Signal and measurement storage 
As mentioned in a previous paragraph, storage of spectroscopy signals and 
colorimetry measurements is supported.  
The signal entity includes fields that describe the spectroscopy type (e.g. 
Raman) and the absolute coordinates of the signal, with respect to either an image of 
the entire painting or to a microscopy image. For example, let us suppose that a digital 
image, which is acquired in the visible spectrum, is stored in the database. Let us also 
 15
suppose that a spectroscopy signal is acquired from a specific region of the painting. 
Coordinates of this signal can be stored in the server together with the image data file 
itself. As it will be shown in Section 3.2.2, the coordinate information can be used to 
display the visible image simultaneously with its signals on a computer terminal.  
Some spectroscopy types are preconfigured. More types can be created and 
stored in the database, which can subsequently be utilized as though as they were 
native types. 
Measurements can be stored in a similar way. Although there is a large number 
of built-in colorimetry models, there is still provision for the creation of new types. As 
in the case of signals, the new colorimetry types can be employed like the built-in ones. 
They also can be displayed together with the image to which they refer to (Section 
3.2.2). 
3.1.5. Server software implementation 
Depending on the version, this system may or may not be implemented on top 
of a native client/server RDBMS environment. A Microsoft Windows NT, Intel 
processor-based platform is required in the client-server and WWW versions. Both of 
them are based on the Oracle Workgroup Server 2000 RDBMS. Thus, they can handle 
a large number of simultaneous transactions to the database, with high reliability. 
Although the simpler version does not employ any client-server functionality, it 
provides an inexpensive artwork archiving solution with adequate performance for 
low- to medium-volume transactions. 
3.1.6. Queries and reports 
To ease user operation, the system comes with a number of predefined queries 
and reports. User-designed queries can also be performed, since a subset of the ANSI 
1989 standard for the Structured Query Language (SQL) is supported. This feature 
 16
overcomes the limitations that are usually imposed by applications designed around a 
GUI environment. 
3.1.7. Database upsizing 
All three variants can be easily upgraded to the next most powerful one. This is 
because database entities and relationships have been implemented in a portable 
manner, which utilizes the Open Database Connectivity (ODBC) SQL-based 
application program interface [2]. For example, even the simpler version of the system 
can be easily upsized to a client-server-based (or WWW-based) solution, with no data 
loss. 
3.2. LAN versions specifics 
As it was previously mentioned, the clients of Figure 2 may or may not have to 
run any specific software, in order to connect with the server. In the LAN-oriented 
environments, there are certain specifications that the client systems should adhere to. 
The clients should be PC-compatible systems running Windows 95 or NT. 
Additionally, special software should be installed on each client system. This client 
software is optimized for fast database access. 
3.2.1. User interface 
Implemented as a native Microsoft Windows application, the client offers a 
versatile as well as a user-friendly environment. In both versions, the same client 
interface is employed. Thus, no retraining is required in case of upsizing. Data entry, 
update and search operations are simplified by the use of list boxes, control buttons and 
VCR-style buttons in forms. 
3.2.2. Interactive image display 
One of the most powerful features of this system, is its ability to display a 
painting along with any microscopy images, spectroscopy signals and colorimetry 
 17
measurements that refer to it. With a button click, the user can interactively view this 
information on the same computer screen.  
On any client, with a button press, the VIEWER client application displays all 
the microscopy images, signals, measurements that refer to a certain visible spectrum 
acquired image, which is stored in the program, together with the image itself. In 
Figure 3, the interactive features of the program are exhibited. A visible image together 
with a colorimetry measurement, a histogram and a xyY color space chart are displayed 
on the same computer screen. 
 
Figure 3 Interactive display of images, signals and colorimetry measurements 
with the integrated viewer application. 
 
Crosshairs in this Figure indicate points that have associated signals, 
measurements, or microscopy images. The respective color indicates the type of the 
associated data. For example, clicking on a crosshair symbol, which is associated with 
a signal, will display a graph of the respective signal data. Figure 4 displays a sample 
histogram. 
 18
 
Figure 4 A sample histogram displayed by the VIEWER client application. 
 
Colorimetry measurements can be viewed in a similar way, as it is depicted in 
Figure 5. 
 
Figure 5 Colorimetry measurement data display. 
Similarly, measurements at a certain point of the image can be displayed in a 
color space graph. Figure 6 shows an example xyY color space set of measurements. 
 19
 
Figure 6 xyY color space measurement display. 
 
3.3. WWW version specifics 
The WWW version was developed in order to take advantage of the World 
Wide Web as a medium that abstracts the underlying client system architecture. The 
only client software that is required in this case is a WWW browser application that 
can parse Hypertext Markup Language (HTML) version 3.2 documents. This means 
that any system can qualify as a WWW client, as long as browser software is installed, 
regardless of the computer architecture and operating system (e.g. Apple Macintosh or 
Unix-based system). It is also possible for a client to access a server that physically 
resides on the other side of the world. Thus, WAN operation, without the hassle of 
client program setup and platform incompatibilities, becomes a feasible alternative to 
classical LAN-oriented database operation. Unfortunately, the WWW version of the 
 20
system does present a certain disadvantage when compared to the other ones: there is a 
certain overhead, which is associated with the extra network traffic generated due to 
the transmission of redundant alphanumeric information in the form of HTML page 
generation data. The other client versions are optimized in this sense, since all form 
processing logic is embedded in the client software. It is up to the database 
administrator to decide which version is the most appropriate, depending, of course, on 
the size of the implemented network. 
All the functionality that was built into the client has been moved to the Web server 
while the web browser acts as a dumb terminal. Changing and upgrading the 
functionality of the database becomes much easier since all the required changes take 
place at the server's side and are immediately visible to everyone. 
Even though we have tried to maintain the same functionality with the other 
versions the system, the differences in the nature of the clients have imposed some 
restrictions. For example, in order to add an image to the database, it must first be sent 
to the server by uploading it to the incoming directory of the FTP service.   
On the other hand, the hypertext capabilities of the Web open new possibilities 
for searching the database. These capabilities were used to link the results produced by 
a query with new queries that depend on the previous results. For instance, a query for 
a painting based on the theme produces information on the creator of the painting. The 
creator's name can be linked to a new query that produces all the paintings that this 
creator has painted. 
In the WWW platform, concurrent operation of the server by both WWW 
clients and Client/Server version clients is possible. Thus, a company can utilize the 
latter clients inside its own Intranet. On the other hand, WWW clients can perform 
access from the rest of the network. This hybrid operation adapts better to the needs of 
heterogeneous network environments. 
 21
Forms, on this client platform, resemble the ones of the other versions of the 
system. All of the functions are supported in this platform. In addition, a multilingual 
interface to the server has been introduced. Figure 7 shows a sample HTML page of a 
digital image entry form.  
 
Figure 7 Web digital image entry page. 
 
On the server, a WWW server should be installed in addition to the Oracle 
RDBMS. Currently, the Microsoft Internet Information Server is required on the server 
system. This WWW server provides the Information Server Application Program 
Interface (ISAPI), an interface that eases data extraction from the database by receiving 
SQL commands as input and subsequently formatting the resulting records in the form 
of HTML pages. 
A demonstration version of the WWW system can be accessed at the Uniform 
Resource Locator (URL) http://aias.csd.auth.gr/eikona/. 
 22
 
4. Conclusions 
This paper presented a digital archiving solution for paintings and other works 
of art. The EIKONA FOR ARTS/DATABASE software is a scalable database 
management system, which addresses specific problems in this area. Besides 
alphanumeric data management, it offers a friendly environment for the storage and 
retrieval of multimodal digital images, spectroscopy signals and colorimetry 
measurements. Images can be viewed on a client system, together with any related 
stored signals, measurements and microscopy images. 
This software system utilizes standard-based technology to deliver database 
access in both local and wide area networks. Transfer of data between the available 
platforms is also supported.  
Future directions in the development of this system include plans of inter-
server connectivity, in order to provide a transparent distributed database environment. 
The WWW client will be improved to support multiple queries and provide better error 
handling. 
 
Acknowledgements 
The authors would like to thank Fr. M. Politis, Fr. P. Politis (Skete of St. 
Andrew, Mt. Athos, Greece), Prof. Chrysoulakis, Prof. Panagiotou and Ms. S. 
Sotiropoulou (Ormylia Nunnery, Greece) for their helpful discussions and suggestions 
on Byzantine painting archiving. 
 23
Bibliography 
1. DATE, C. J., An introduction to database systems, Vol. 2, Addison-Wesley Pub. Co., 
Reading (1985). 
2. GROFF, J. R., WEINBERG, P. N., LAN Times Guide to SQL, Osborne McGraw-Hill, 
Berkeley (1994). 
3. TEOREY, T. J., Database modeling and design : the entity-relationship approach, 
Morgan Kaufman Publishers, San Mateo (1990). 
4. European Commission, NARCISSE: Network of Art Research Computer Images 
Systems in Europe, Arquivos Nacionais/Torre Do Tombo, Lisbonne (1993). 
5. ISO/IEC 10918-1:1994 standard, Information technology - Digital compression and 
coding of continuous-tone still images: Requirements and guidelines, International 
Organization for Standarization, (1994). 
6. ISO/IEC 10918-2:1995 standard, Information technology - Digital compression and 
coding of continuous-tone still images: Compliance testing, International Organization 
for Standarization, (1995). 
7. ISO 9660:1988 standard, Information processing - Volume and file structure of CD-
ROM for information interchange, International Organization for Standarization, 
(1988). 
 24
Author information 
 
Michalis Pappas was born in Athens, Greece in 1969. He received the 
Diploma in Electrical Engineering from the Aristotle University of Thessaloniki in 
1994.  
He is currently a research assistant and studies towards the Ph.D. degree at the 
Department of Informatics, Aristotle University of Thessaloniki. His research interests 
include color image processing, and multichannel signal processing. He is a member of 
the Technical chamber of Greece and a student member of IEEE. 
Giorgos Angelopoulos was born in Kalamata, Greece in 1963. He received 
the Diploma of Electrical Engineer and the Ph.D. degree of Electrical and Computer 
Engineer from the Aristotle University of Thessaloniki in 1988 and 1996 respectively. 
He is currently a research assistant at the Dyslexia and Ophthalmokinesis Lab, 
University of Macedonia. His research interests include image processing and image 
analysis. 
Alexandros Kadoglou was born in Thessaloniki, Greece in 1967. He received 
the Bachelor of Science Degree in Physics from the Aristotle University of 
Thessaloniki, Greece, the Master of Science in Computer Science from the University 
of Maryland, USA, and the Master of Science in Information Systems Engineering 
from the university of Reading, UK. 
He is currently working as a researcher at the Department of Informatics, 
Aristotle University of Thessaloniki. His interests include distributed systems, and 
Web-related tools development. 
Ioannis Pitas received the Diploma in Electrical Engineering in 1980 and the 
Ph.D. degree in electrical engineering in 1985, both from the University of 
Thessaloniki, Greece. Since 1994, he is Professor at the Department of Informatics, 
University of Thessaloniki. From 1980 to 1993, he served as Scientific Assistant, 
 25
Lecturer, Assistant Professor, and Associate Professor in the Department of Electrical 
and Computer Engineering at the same University. He served as a Visiting Research 
Associate at the University of Toronto, Canada, University of Erlangen-Nuernberg, 
Germany, Tampere University of Finland. He was lecturer in short courses for 
continuing education. His current interests are in the areas digital image processing, 
multidimensional image processing, and computer vision. He has published over 190 
papers and contributed to eight books in his area of interest. He is the co-author of 
Nonlinear Digital Filters: Principles and Applications (Kluwer, 1990). He is author of 
Digital Image Processing Algorithms (Prentice-Hall, 1993). He is editor of Parallel 
Algorithms and Architectures for Digital Image Processing, Computer Vision and 
Neural Networks (Wiley, 1993). 
Dr. Pitas has been member of the European Community ESPRIT Parallel 
Action Committee. He has also been invited speaker and/or member of the program 
committee of several scientific conferences and workshops. He is associate editor of 
IEEE Transactions on Circuits and Systems and coeditor of Multidimensional Systems 
and Signal Processing. He was chair of the 1995 IEEE Workshop on Nonlinear Signal 
and Image Processing (NSIP’95). 
 
 26

