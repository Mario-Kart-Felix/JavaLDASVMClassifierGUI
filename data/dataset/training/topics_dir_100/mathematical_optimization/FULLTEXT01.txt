Linköping Studies in Science and Technology. Dissertations
No. 1396
Mathematical Optimization Models
and Methods for Open-Pit Mining
Henry Amankwah
Department of Mathematics
Linköping University, SE–581 83 Linköping, Sweden
Linköping 2011
Linköping Studies in Science and Technology. Dissertations
No. 1396
Mathematical Optimization Models and Methods for Open-Pit Mining
Henry Amankwah
henry.amankwah@liu.se
www.mai.liu.se
Department of Mathematics
Linköping University
SE–581 83 Linköping
Sweden
ISBN 978-91-7393-073-4 ISSN 0345-7524
Copyright c© 2011 Henry Amankwah
Printed by LiU-Tryck, Linköping, Sweden 2011
To Alberta, Grace and Felicia (my mother)

Abstract
Amankwah, H. (2011). Mathematical Optimization Models and Methods for
Open-Pit Mining. Doctoral dissertation.
ISBN 978-91-7393-073-4. ISSN 0345-7524.
Open-pit mining is an operation in which blocks from the ground are dug to extract the
ore contained in them, and in this process a deeper and deeper pit is formed until the min-
ing operation ends. Mining is often a highly complex industrial operation, with respect
to both technological and planning aspects. The latter may involve decisions about which
ore to mine and in which order. Furthermore, mining operations are typically capital in-
tensive and long-term, and subject to uncertainties regarding ore grades, future mining
costs, and the market prices of the precious metals contained in the ore. Today, most of
the high-grade or low-cost ore deposits have already been depleted, and to obtain suffi-
cient profitability in mining operations it is therefore today often a necessity to achieve
operational efficiency with respect to both technological and planning issues.
In this thesis, we study the open-pit design problem, the open-pit mining scheduling
problem, and the open-pit design problem with geological and price uncertainty. These
problems give rise to (mixed) discrete optimization models that in real-life settings are
large scale and computationally challenging.
The open-pit design problem is to find an optimal ultimate contour of the pit, given
estimates of ore grades, that are typically obtained from samples in drill holes, estimates
of costs for mining and processing ore, and physical constraints on mining precedence
and maximal pit slope. As is well known, this problem can be solved as a maximum flow
problem in a special network. In a first paper, we show that two well known parametric
procedures for finding a sequence of intermediate contours leading to an ultimate one, can
be interpreted as Lagrangian dual approaches to certain side-constrained design models.
In a second paper, we give an alternative derivation of the maximum flow problem of the
design problem.
We also study the combined open-pit design and mining scheduling problem, which is
the problem of simultaneously finding an ultimate pit contour and the sequence in which
the parts of the orebody shall be removed, subject to mining capacity restrictions. The
goal is to maximize the discounted net profit during the life-time of the mine. We show
in a third paper that the combined problem can also be formulated as a maximum flow
problem, if the mining capacity restrictions are relaxed; in this case the network however
needs to be time-expanded.
In a fourth paper, we provide some suggestions for Lagrangian dual heuristic and time
aggregation approaches for the open-pit scheduling problem. Finally, we study the open-
pit design problem under uncertainty, which is taken into account by using the concept
of conditional value-at-risk. This concept enables us to incorporate a variety of possi-
ble uncertainties, especially regarding grades, costs and prices, in the planning process.
In real-life situations, the resulting models would however become very computationally
challenging.
v

Populärvetenskaplig sammanfattning
Den enklaste formen av brytning av malmkroppar är i dagbrott, vilket innebär att man
från jordytan skapar en gruva i form av en stor hålighet i berggrunden. Dagbrott kan
vara många hundra meter djupa och kilometervida, och även om brytning i dagbrott är
enkel jämfört med underjordsbrytning är det ändå en komplex industriell verksamhet.
Detta gäller både med avseende på tekniska lösningar, till exempel val av metallurgiska
processer för utvinning av metall ur malmen, och planering av brytningen, till exempel
vilken malm som ska brytas och i vilken ordningsföljd. Gruvindustrin är kapitalintensiv
och för att skapa lönsamhet krävs både kostnadseffektiva tekniska lösningar och god
planering. Eftersom den malm som bryts idag ofta är mindre värdefull, exempelvis har
lägre guldhalter, eller är mer kostnadskrävande än tidigare, exempelvis på grund av större
brytningsdjup, ställs idag ofta höga krav på teknik och planering för att uppnå lönsamhet.
Denna avhandling behandlar teori och metoder för några optimeringsfrågeställningar som
uppkommer vid planering av gruvbrytning i dagbrott.
Inför gruvdrift i dagbrott görs provborrningar i berggrunden, ofta i ett rutnät och med
några hundra meters djup, för att kartlägga malmkroppens utsträckning och för att upp-
skatta värdet av malmen i dess olika delar. Utifrån dessa uppgifter görs sedan en diskretis-
ering av malmkroppen och berget runtomkring, genom att hela volymen delas in i kuber,
eller block, typiskt med en sida på några tiotal meter. För varje block uppskattas förtjän-
sten som fås om det skulle brytas genom skattningar av värdet av malmen i blocket och
kostnader för brytning och processering av malmen.
Den första frågeställningen som behandlas i avhandlingen är det mest grundläggande
planeringsproblemet vid optimering av brytning i dagbrott, nämligen att bestämma vilka
block som ska brytas för att gruvan ska bli maximalt lönsam. För att besvara denna fråga
används skattningarna av förtjänsten för varje block, om det bryts, för att konstruera en
matematisk optimeringsmodell som avgör vilka block som ska brytas för att maximera
totala förtjänsten. Modellen innehåller två typer av restriktioner. För det första får dag-
brottets väggar inte ha mer än en given maximal lutning, vanligen 45 grader, eftersom de
annars rasar. För det andra kan ett block brytas endast om blocken direkt ovanför också
bryts. Denna matematiska modell ger den optimala slutliga formen på dagbrottet.
För att göra planeringssituationen mer realistisk är det önskvärt att även ta hänsyn till
att brytningen i praktiken är utsträckt över en lång tidsrymd, typiskt 10-20 år, och att man
varje år inte kan bryta och processera mer än en viss begränsad mängd malm. Utsträck-
ningen i tid gör vidare att det är nödvändigt att beräkna lönsamheten utifrån diskonterade
nuvärden av framtida förtjänster. Detta ger upphov till en mer komplicerad optimerings-
modell som avgör både vilka block som ska brytas och när. I avhandlingen ges teori och
lösningsmetoder för denna frågeställning.
Gruvbrytning är ofta förknippat med ett stort ekonomiskt risktagande. En orsak till
detta är geologisk osäkerhet vad gäller värdet på den malm som ska brytas, beroende på
att provborrning endast ger stickprov på värdet. En ytterligare osäkerhet är de framtida
priserna på den metall som utvinns. Eftersom en gruva kräver stora investeringar, ofta
under flera år innan brytningen ska påbörjas, kan dessa osäkerheter leda till en avsevärd
ekonomisk risk. Det är därför önskvärt att redan på planeringsstadiet ta hänsyn till och
kompensera för osäkerheten. I avhandlingen konstrueras optimeringsmodeller som åstad-
kommer detta med hjälp av ett riskmått som har sitt ursprung inom finansmatematiken.
vii

Acknowledgments
I would like to express my sincere gratitude to my main supervisor, Torbjörn Larsson
and co-supervisor, Björn Textorius for accepting to work with me. Their encouragement,
guidance and support from the initial to the final stage enabled me to develop an under-
standing of the subject.
I am most grateful to the Government of Ghana, the University of Cape Coast, and
Linköping University for the support they offered me.
I wish to thank Bengt-Ove, Margarita, and Inga-Britt for the time they spent in re-
solving some challenges that I went through. I appreciate Zohreh and Aysajan for helping
me with the use of some latex packages. I do acknowledge the help I got from Theresia,
Karin, and all the administrative staff of the Department of Mathematics.
I should not forget to say a big thank you to Brian’s family for the encouragement
throughout my stay in Sweden. I would also like to thank Peter for the way and manner
he accepted and assisted me right from the beginning of my studies, until the time he left
the department. I am deeply grateful to Hongmei, Lydie, Jolanta, Marcel, Spartak, and
John (my office mate) for being great friends. They gave me moral support and were
always ever ready to share useful ideas with me. It was really nice and profitable working
with other colleagues and so they also deserve my thanks. Elin, Pontus, and Kaveh, my
neighbours were so kind to me. I would like to take this opportunity to say a big thanks
to all of them.
Finally, my special appreciation goes to my family for everything they have done for
me.
Linköping, September 15, 2011
Henry Amankwah
ix

Contents
1 Introduction and Overview 1
1 Open-Pit Design Problem . . . . . . . . . . . . . . . . . . . . . . . . . . 3
2 Maximum Flow Formulation of the Design Problem . . . . . . . . . . . . 6
2.1 General Maximum Flow Problem . . . . . . . . . . . . . . . . . 6
2.2 Reformulation of the Design Problem . . . . . . . . . . . . . . . 7
2.3 An Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
3 Solution Methods for the Design Problem . . . . . . . . . . . . . . . . . 12
4 Open-Pit Scheduling Problem . . . . . . . . . . . . . . . . . . . . . . . 15
4.1 Models for Scheduling . . . . . . . . . . . . . . . . . . . . . . . 17
4.2 Adaptations to Large-Scale Mining . . . . . . . . . . . . . . . . 21
5 Uncertainty and Risk . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
5.1 Open-Pit Mining Uncertainty . . . . . . . . . . . . . . . . . . . 23
5.2 Concept of Conditional Value-at-Risk . . . . . . . . . . . . . . . 26
2 Summary of Papers 31
Bibliography 35
Appended Papers 39
I On the use of Parametric Open-Pit Design Models for Mine Scheduling -
Pitfalls and Counterexamples 41
1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
2 Outline of Picard-Smith Method . . . . . . . . . . . . . . . . . . . . . . 45
3 Lagrangian Relaxation Interpretation . . . . . . . . . . . . . . . . . . . . 49
4 Possible Countermeasures . . . . . . . . . . . . . . . . . . . . . . . . . 54
xi
Contents
5 Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
II A Duality-Based Derivation of the Maximum Flow Formulation of the Open-
Pit Design Problem 59
1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
2 The Mathematical Model . . . . . . . . . . . . . . . . . . . . . . . . . . 63
3 Derivation of the Maximum Flow Problem . . . . . . . . . . . . . . . . . 63
4 Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
III A Multi-Parametric Maximum Flow Characterization of the Open-Pit Schedul-
ing Problem 71
1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74
2 The Mathematical Model . . . . . . . . . . . . . . . . . . . . . . . . . . 75
3 Maximum Flow Problem . . . . . . . . . . . . . . . . . . . . . . . . . . 76
4 Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84
IV Open-Pit Production Scheduling - Suggestions for Lagrangian Dual Heuristic
and Time Aggregation Approaches 87
1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
2 Notations and a Basic Model . . . . . . . . . . . . . . . . . . . . . . . . 92
3 Lagrangian Relaxation . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
4 Procedures for Finding Near-Optimal Solutions . . . . . . . . . . . . . . 95
5 Experimental Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99
6 Time Aggregation Problem . . . . . . . . . . . . . . . . . . . . . . . . . 104
7 A Heuristic Procedure based on Primal-Dual Optimality Conditions . . . 105
8 Conclusion and Further Research . . . . . . . . . . . . . . . . . . . . . . 109
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109
V Open-Pit Mining with Uncertainty - A Conditional Value-at-Risk Approach 111
1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 114
2 Problem Formulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117
2.1 A CVaR Open-Pit Investment Model . . . . . . . . . . . . . . . . 118
2.2 A CVaR Open-Pit Design Model . . . . . . . . . . . . . . . . . . 120
2.3 Nested Pit Contours based on CVaR Concept . . . . . . . . . . . 122
3 Numerical Study . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122
3.1 Test Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122
3.2 Number of Scenarios Needed . . . . . . . . . . . . . . . . . . . 124
3.3 Results for the Investment Model . . . . . . . . . . . . . . . . . 126
3.4 Results for the Design Model . . . . . . . . . . . . . . . . . . . 130
3.5 Results for the Nested Pit Contours . . . . . . . . . . . . . . . . 132
4 Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 133
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 133
xii
1
Introduction and
Overview
Open-pit mining is a surface mining operation whereby ore, or waste, is excavated from
the surface of the land. In the process of digging the surface of the land, a deeper and
deeper pit is formed until the mining operation ends. It is usually suitable to determine
the final shape of the pit before the mining operation starts.
The shape and size of an open-pit depend on certain factors which must be under-
stood in the planning of the open-pit operation. Some of these factors are bench height,
ore recovery, geology, grade and localization of the mineralization, extent of the deposit,
topography, property boundaries, production rate, mining cost, processing cost, cutoff
grade and pit slopes (Armstrong, 1990). For example, the bench height, which is the ver-
tical distance between each horizontal level of the pit, should be set as high as possible
within the limits of the size and type of equipment selected for the desired production.
The cutoff grade is any grade that for any specified reason is used to separate any two
courses of action. At any stage of the mining, the operator has to decide whether the next
block of material should be mined or not. The grade of the block is usually used to make
this decision. The pit slope is one of the major factors that determines the amount of
waste to be removed so as to mine the ore. For more explanations of these mining terms,
see Hustrulid and Kuchta (2006).
The limit of the open-pit must be set at the planning stage. This limit defines the
amount of ore that is mined, the metal content and the amount of waste to be removed
during the period of operation. Knowledge gained from designing the ultimate pit limit
that maximizes profit is important to all open-pit mining endeavours. Other terms like pit
outline, pit contour, and maximum closure are used by different authors to describe the
final pit limit of a mine.
To design an optimal pit, the entire mining volume is partitioned into fixed-size blocks.
By using geological information from drill cores, the value of the ore in each block is es-
timated. In addition, the cost of mining each block is determined. A profit value can thus
be assigned to each block in the mine. The open-pit mine design problem is thus, deciding
the blocks of an ore deposit to mine in order to maximize the total profit of the mine, while
1
1 Introduction and Overview
obeying digging constraints on pit slope and constraints that allow underlying blocks to
be mined only after blocks on top of them.
Any feasible pit outline has a cash value which can be computed. To compute the
value, we must decide on a mining sequence and then mine out the pit, progressively
accumulating the revenues and costs as we go (Whittle, 1990). If we are able to fix the
block values and the slopes then an optimal outline can be determined. An increase in
block values yields that the optimal pit becomes bigger, while an increase in slopes im-
plies the optimal pit gets deeper. It is important to calculate the accurate block values
for any optimization, because wrong calculations will lead to wrong optimal pit outline.
In fact, it is interesting to know that the pit outline and the mining sequence have to be
known in order to compute the block values, particularly if the time value of money is
essential, and on the other hand, the block values should be known in order to find the
optimal outline.
For the purpose of optimization, there are two basic rules to be followed when calcu-
lating the block values. Firstly, a block value is calculated on the assumption that it has
been uncovered and that it will be mined. Secondly, any ongoing cost which would stop
if mining were stopped should be included (Whittle, 1990).
Production scheduling has an effect on the optimal outline. Scheduling an open-pit
means determining the sequence in which materials of the pit should be removed over the
lifetime of the mine and the time interval in which each material is to be mined. This has
an effect on the value of the mine since it determines when various items of revenue and
expenditure will occur. This is essential because the money we have today might lose its
value in the coming times.
We usually have “worst case mining” and “best case mining” that are some kind of
simple mining principles, not based on optimization. The worst case mining is when each
bench is mined completely before the next bench is started. Here, the waste at the pe-
riphery of the pit is mined early, and the cost is discounted less than the revenue from the
corresponding ore which is mined much later. The optimal pit for worst case mining is
generally smaller than is indicated by optimization, by using the present costs and rev-
enues. The best case mining is when each bench is mined in turn so that the related ore
and waste is mined approximately the same time period. The optimal pit in this case is
close to the one obtained by optimization. The worst case mining can be used when deal-
ing with small pits, whereas the best case mining is preferred when dealing with larger
pits. There are more opportunities for creative sequencing for the latter.
The selection of a mine design, as described by Abdel Sabour et al. (2008), is based
on estimating net present values of all possible, technically feasible mine plans so as to
select the one with the maximum value. In practice, mine planners cannot know with
certainty the quantity and quality of ore in the ground. This, they term the geological
uncertainty. It is recognized among practitioners that mining is a high risk business and
the geological uncertainty is a major source of risk. There are however also other sources
of uncertainties. The future market behaviour of metal prices and foreign exchange rates
are impossible to be known with certainty, therefore, they are sources of risks affecting
mine project profitability. Abdel Sabour et al. (2008) use the term market uncertainty for
these sources of risks and classify them as the second major source of risk. The existence
of uncertainties can thus lead to a high probability that the actual cash flows throughout
the lifetime of the mining project will be different from those expected. An optimization
2
1 Open-Pit Design Problem
model that maximizes expected return while minimizing risk is therefore important for
the mining sector, as this will help make better decisions on the blocks of ore to mine at a
particular point in time.
Lerchs and Grossmann (1965) are the first to put forward a method to solve the open-
pit mine problem. Many researchers have since tried to formulate various optimization
models and have developed algorithms to solve the problem. Some researchers have also
made efforts to solve the problem by applying existing optimization techniques. How-
ever, in spite of all the work done, researchers are still looking for better models and
algorithms in this field of study. Newman et al. (2010) give a literature review based on
several decades of researches in the field of mine planning. They place emphasis on more
recent work, suggestions for emerging areas, and highlights of successful industry appli-
cations.
The purpose of this research work is to develop optimization models and methods in
the area of open-pit mining. The thesis is given in two parts with the outline as follows.
The first part is devoted to the introduction and overview of the subject area, followed by
a summary of appended papers. The second part is comprised of five appended papers.
In Paper I, we give some pitfalls and counterexamples on the use of parametric open-pit
design models for mine scheduling. A duality-based derivation of the maximum flow for-
mulation of the open-pit design problem is the focus of Paper II. This is followed by a
multi-parametric maximum flow characterization of the open-pit scheduling problem in
Paper III. In Paper IV, we provide some suggestions for Lagrangian dual heuristic and
time aggregation approaches for the open-pit production scheduling problem. In Paper V,
the last paper, we study a Conditional Value-at-Risk approach to uncertainty associated
with open-pit mining.
1 Open-Pit Design Problem
Picard and Smith (2004) describe the open-pit design problem as a problem of choosing
an ultimate contour whose total profit, that is, the sum of the profits of all the blocks
in the contour, is maximal among all possible contours. In 1965, Lerchs and Grossmann
made an earliest attempt of solving this problem. They associate a directed node-weighted
graph, called the mine graph, with the three-dimensional grid of blocks. They note that
the maximum profit open-pit mine contour corresponds to a maximum closure in the
graph. A closure in the graph is a subset of the nodes such that if a node belongs to this
set then all its successors also belong to the set, and the closure is maximal if the sum of
node-weights is maximum.
In order that the walls of an open-pit shall not collapse during mining operations, min-
ers are always mindful of how to dig the blocks from the ground. The slope requirement
is the main physical constraint in that all blocks on top and preventing the mining of a
given block must be removed. For example, in Figure 1.1, if the safe slope angles are
assumed to be 45◦ and block 6 is to be removed, then we have to remove blocks 1, 2, and
3 as well.
It should be noted that we are only interested in mining the profitable blocks. For each
block in Figure 1.2, let the values on top be block values and the corresponding number
below represent the block label. Then blocks 2, 3, 4, 5, 6, 9, 10, 11, and 16 represent an
3
1 Introduction and Overview
1 2 3 4
5 6 7 8
9 10 11 12
Figure 1.1: A 2-D block model of a mine.
ultimate pit of blocks where the maximal pit angle is 45◦ with a value of 10. Block 15
is not profitable to mine because by mining this block we must also mine blocks 1 and 8,
and we see that the total value of these blocks is−1. Blocks 2, 3, 4, 5, 9, and 10 represent
an alternative, and smallest, ultimate pit, since the value of removing blocks 6, 11, and 16
is zero and, therefore, contributes nothing. Since the blocks inside an ultimate pit contain
a profitable amount of ore, they are to be mined.
1_ + 1 +2 1_
2_ 1_ 3+
+ 1 1_
4+ 1_ 2_
_3 2_ + 1 +2 1_ 2_
1 2 43 5 6
7 8 9 10 11 12
13 14 15 16 17 18
Figure 1.2: A 2-D block model of a mine with given block values.
The open-pit design problem can be represented as a graph problem defined on a di-
rected graph G = (V,A), where V is the set of nodes and A is the set of arcs. Each block
corresponds to a node and is assigned a weight. This weight, which can either be posi-
tive or negative, represents the profit value of mining the block (Lerchs and Grossmann,
1965). There is a directed arc from node i to node j if block i cannot be extracted before
block j, which is on a layer immediately above block i. To decide on the blocks to mine
in order to maximize profit, a maximum weight set of nodes in the graph such that all
successors of all nodes in the set are also included in the set is to be found. As mentioned
earlier, this set is the maximum closure of the graph, G.
In order to give a mathematical optimization formulation of the open-pit design prob-
lem, we give the following notations. Let
4
1 Open-Pit Design Problem
V = set of all blocks that can be mined.
A = set of pairs (i, j) of blocks such that block j is a neighbouring
block to i that must be removed before block i can be mined.
ci = cost of mining and processing block i.
ri = revenue obtained from block i.
pi = profit obtained by mining and processing block i (i.e., pi = ri − ci).
xi =
{
1, if block i is mined
0, otherwise.
The revenues ri are estimated by using sampling information from drill holes. The math-
ematical optimization model for maximizing the total profit of the mine is therefore given
by
max
∑
i∈V
pixi
subject to
xi ≤ xj , (i, j) ∈ A
xi ∈ {0, 1}, i ∈ V.
(1.1)
The condition xi ≤ xj implies that block j has to be mined before block i, while obeying
the pit slope. The set A captures both the slope and the immediate precedence constraints.
The constraints of the linear programming relaxation of Model (1.1), where the condition
xi ∈ {0, 1} is replaced by 0 ≤ xi ≤ 1, form a unimodular matrix. The linear pro-
gramming relaxation therefore possesses the integrality property, in that all the extreme
points are integral (Rhys, 1970). The condition xi ∈ {0, 1} can therefore be replaced by
0 ≤ xi ≤ 1 without changing the optimal objective value.
Consider, for example, the pit in Figure 1.2 and let the block values represent the
profits. Then the associated model is
max−x1 + x2 + 2x3 + . . .+ 3x9 + 4x10 + . . .− x17 − 2x18
subject to
x7 ≤ x1
x7 ≤ x2
x8 ≤ x1
x8 ≤ x2
x8 ≤ x3
...
x15 ≤ x8
x15 ≤ x9
x15 ≤ x10
...
x18 ≤ x11
x18 ≤ x12
xi ∈ {0, 1}, i = 1, . . . , 18.
(1.2)
When we solve the general model (1.1), we get an optimal pit. The outline of this optimal
5
1 Introduction and Overview
pit is the optimal pit design. So, for the pit in Figure 1.2, the pit contour is composed of
blocks 2, 3, 4, 5, 6, 9, 10, 11, and 16. However, we often also want information about
scheduling (which we treat in Section 4) so that we know the order in which the blocks
shall be mined.
2 Maximum Flow Formulation of the Design Problem
In this section, we give a general description of the maximum flow problem and a refor-
mulation of the open-pit design problem as a maximum flow problem. Furthermore, we
give an example of how to solve the design problem as a maximum flow problem. Finally,
we discuss some solution methods.
2.1 General Maximum Flow Problem
For a given directed graph, or network, G = (V,A), with V being the set of nodes and
A the set of arcs, a source s and sink t are added. The source is the start node for a flow
through the network and the sink is the end node for the flow. Let every arc (i, j) ∈ A
be associated with a capacity u(i, j) ≥ 0 and let v(i, j) be the flow along the arc. It is
required to associate the value v(i, j) satisfying v(i, j) ≤ u(i, j) for each arc, (i, j) ∈ A,
such that for every node other than s and t, the sum of the values associated to the arcs that
enter it must equal the sum of the values associated to the arcs that leave it. It is further
required to maximize the sum of the values associated to the arcs leaving the source, and
also entering the sink, which is the total flow in the network. The maximum flow problem
is to find a feasible flow through the network that is maximal.
Now, let N = (V ′, A′) be the network associated with G, where V ′ = V ∪{s}∪{t}.
A cut (S, T ) in the network N separating s and t is a partition of the nodes of V ′ with
s ∈ S and t ∈ T , S ∪ T = V ′, and S ∩ T = φ. The capacity C(S, T ) of the cut (S, T ) is
the sum of the capacities of the arcs over the cut. Thus,
C(S, T ) =
∑
i∈S,j∈T
u(i, j). (2.1)
A finite cut is a cut with finite capacity and a minimum cut is a cut of minimum capacity
among all cuts (S, T ). Determining the minimum cut of the network N is equivalent to
finding the maximum flow in N , from s to t. Ford and Fulkerson (1962) define this as
max
v
f = min
(S,T )
C(S, T ), (2.2)
where f is the value of flow.
Ford and Fulkerson (1956) develop an algorithm that computes the maximum flow in
a network. As long as there is a path from s to t, with available capacity on all arcs in the
path, flow is sent along one of these paths. Then another path is found, and so on. A path
with available capacity is called an augmenting path. To describe the algorithm, it should
be noted that the following is maintained after every step in the process:
• v(i, j) ≤ u(i, j), that is, the flow from i to j does not exceed the capacity.
6
2 Maximum Flow Formulation of the Design Problem
• v(i, j) = −v(j, i), that is, maintaining the net flow between i and j. If say a units
are going from i to j, and b units from j to i, then v(i, j) = a−b and v(j, i) = b−a.
•
∑
j∈V v(i, j) = 0, unless i = s or j = t. That is, the net flow to a node is zero,
except for the source, which “produces” flow, and the sink, which “consumes” flow.
This means that the flow through the network is a legal flow after each round in the al-
gorithm. They define the residual network Nv = (V,A′v) as the network with capacity
uv(i, j) = u(i, j) − v(i, j) and no flow. It should be noted that it is not certain that
A′ = A′v , as sending flow on arc (i, j) might close (i, j), but open a new arc (j, i) in the
residual network. The algorithm is as follows:
Inputs: Graph N with flow capacity u, source s and sink t
Output: A flow from s to t which is maximum
1. v(i, j)← 0 for all arcs (i, j) ∈ A′
2. While there is a path p from s to t in Nv with uv(i, j) > 0 for all (i, j) ∈ p
1. Find uv(p) = min{uv(i, j) | (i, j) ∈ p}
2. For each arc (i, j) ∈ p
1. v(i, j)← v(i, j) + uv(p), that is, send flow along the arc
2. v(j, i) ← v(j, i) − uv(p), that is, decrease flow along the arc, or, equivalently,
send flow in the backward direction.
The concept described here can be used to solve the open-pit design problem.
2.2 Reformulation of the Design Problem
Picard (1976), using the mine graph augmented with source and sink nodes, finds the
maximum closure by solving a maximum flow problem.
To find a maximum closure Y ⊂ V , for any given directed graph G = (V,A), where
V represents the set of nodes and A the set of arcs, Picard formulates the problem as a
0-1 programming given by
max z =
∑
i∈V
pixi
subject to
xi ≤ xj , (i, j) ∈ A
xi ∈ {0, 1}, i ∈ V,
(2.3)
where pi is a weight associated to node i and xi is a binary variable, which is equal to
1 if i ∈ Y and 0 otherwise. In the context of open-pit design the node weight is the
net profit of a block. The condition xi ≤ xj for (i, j) ∈ A is equivalent to the relation
aijxi(xj − 1) = 0, where aij is the element (i, j) of the incident matrix of the graph G,
that is, aij = 1 if (i, j) ∈ A and 0 otherwise. Problem (2.3) can then be written as
7
1 Introduction and Overview
max z =
∑
i∈V
pixi
subject to
∑
i∈V
∑
j∈V
aijxi(xj − 1) = 0
xi ∈ {0, 1}, i ∈ V.
(2.4)
Since aijxi(xj − 1) ≤ 0 for all xi ∈ {0, 1} and xj ∈ {0, 1}, Picard deduces that (2.4) is
equivalent to
max z =
∑
i∈V
pixi + λ
∑
i∈V
∑
j∈V
aijxi(xj − 1)
subject to
xi ∈ {0, 1}, i ∈ V,
(2.5)
where λ is a positive number large enough to ensure that an optimal solution of (2.5)
satisfies
∑
i∈V
∑
j∈V aijxi(xj − 1) = 0, that is, that we have a closure of G. Picard then
replaces the maximization problem by a minimization problem and finally arrives at an
equivalent problem
min f(x) =
∑
i∈V
(−pixi) +
∑
i∈V
∑
j∈V
λaijxi(1− xj)
subject to
xi ∈ {0, 1}, i ∈ V.
(2.6)
According to Picard, solving (2.6) is equivalent to finding a minimum cut in a related
network. Let the digging constraints of a given mine graph G = (V,A) be such that
block j ∈ V has to be removed before block i ∈ V . The closure in G is a set of nodes
Y ⊂ V such that if i ∈ Y and (i, j) ∈ A, then j ∈ Y , that is, it is a subset Y of nodes
such that if a node belongs to the closure then all its successors also belong to the set Y .
The value of a closure Y is given by
v(Y ) =
∑
i∈Y
pi. (2.7)
The closure of maximum value is thus a maximum closure. A feasible contour of the
open-pit mine corresponds to a closure in the mine graph, and the open-pit mine design
problem then becomes that of determining the maximum closure in the mine graph (see
also Picard and Smith, 2004). The set of arcs in A′ of the network N = (V ′, A′), as
defined in Section 2.1, are such that:
Arcs (s, i) with capacity u(s, i) = pi for all i with pi > 0.
Arcs (j, t) with capacity u(j, t) = −pj for all j with pj ≤ 0.
Arcs (k, l) with capacity u(k, l) =∞ for all arcs (k, l) ∈ A.
Picard establishes that a maximum closure in the graph G corresponds to a minimum
cut in the network N . Further, the relation
8
2 Maximum Flow Formulation of the Design Problem
v(Y ) =
∑
i:pi>0
pi − C(S, T ) (2.8)
was established between the value of the closure and the capacity of the corresponding
cut.
To solve the open-pit design problem, we form a network related to the mine graph of
the mine deposit and then solve the maximum flow problem in the network (Picard and
Smith, 2004).
2.3 An Example
In this section, we give an example of the maximum flow formulation of the open-pit
design problem. The derivation of the maximum flow formulation does not follow Picard
(1976). Instead, we apply the duality-based derivation presented in Paper II.
x2x1 x3 x4
x5 x6
+1 +1 _ 1 _ 1
_ 12+
Figure 2.1: A 2-D block model of a mine with given profit values.
1 2 3 4
5 6
Figure 2.2: Mine graph of the block model in Figure 2.1.
Consider the two-dimensional block model of a mine with given profit values in Figure
2.1. The mine graph corresponding to this block model is given in Figure 2.2. If we think
of maximizing profit, then we have to solve the associated problem
9
1 Introduction and Overview
maxx1 + x2 − x3 − x4 + 2x5 − x6
subject to
x5 ≤ x1
x5 ≤ x2
x5 ≤ x3
x6 ≤ x2
x6 ≤ x3
x6 ≤ x4
xi ∈ {0, 1}, i = 1, . . . , 6.
(2.9)
By relaxing the integrality restrictions on the variables and the lower and upper bound
constraints on the variables having positive and negative profit values, respectively, we
obtain the problem
maxx1 + x2 − x3 − x4 + 2x5 − x6
subject to


−1 0 0 0 1 0
0 −1 0 0 1 0
0 0 −1 0 1 0
0 −1 0 0 0 1
0 0 −1 0 0 1
0 0 0 −1 0 1




x1
x2
x3
x4
x5
x6


≤


0
0
0
0
0
0


x1 ≤ 1, x2 ≤ 1, x5 ≤ 1
−x3 ≤ 0,−x4 ≤ 0,−x6 ≤ 0.
(2.10)
Letting yij , wi, and zi, be the dual variables for the three respective sets of constraints,
the linear programming dual is given by
minw1 + w2 + w5
subject to
−y51 + w1 = 1
−y52 − y62 + w2 = 1
−y53 − y63 − z3 = −1
−y64 − z4 = −1
y51 + y52 + y53 + w5 = 2
y62 + y63 + y64 − z6 = −1
y51 ≥ 0, y52 ≥ 0, y53 ≥ 0, y62 ≥ 0, y63 ≥ 0, y64 ≥ 0
wi ≥ 0, i = 1, 2, 5
zi ≥ 0, i = 3, 4, 6,
(2.11)
which can be reformulated as
10
2 Maximum Flow Formulation of the Design Problem
max f
subject to
vs1 + vs2 + vs5 = f
−vs1 − y51 = 0
−vs2 − y52 − y62 = 0
−y53 − y63 + u3t = 0
−y64 + u4t = 0
−vs5 + y51 + y52 + y53 = 0
y62 + y63 + y64 + u6t = 0
−u3t − u4t − u6t = −f
y51 ≥ 0, y52 ≥ 0, y53 ≥ 0, y62 ≥ 0, y63 ≥ 0, y64 ≥ 0
vsi ≥ 0, i = 1, 2, 5
uit ≥ 0, i = 3, 4, 6.
(2.12)
This is a maximum flow problem as shown in Figure 2.3, where f is total flow, vsi is a
flow from a source node s to a node corresponding to block i with positive profit value,
uit is a flow from a node corresponding to block i with non-positive profit value to a sink
node t, and yij is a flow from node i to node j. The values given on the arcs are their
respective capacities. Solving the maximum flow problem, we get the result in Figure 2.4,
with the optimal flow and capacity shown on each arc.
f f
ts
1 2 3 4
5 6
vsi u it
yij
v− v −−− v −
1
1 1
1
12
−
8 8 8
8 8 8
Figure 2.3: A network for the maximum flow problem.
Here, the capacity of the cut separating s from t has the same value as the flow, which
equals 1. This means that (2.2) is fulfilled, so that the flow is maximal and the cut is
minimal. To maximize profit for the pit, we therefore have to mine blocks 1, 2, 3, and 5 as
shown in Figure 2.5. The maximum profit is 3, while p1 + p2 + p5 = 4 and the minimum
cut capacity is 1, which illustrates the relationship (2.8).
11
1 Introduction and Overview
ts
1 2 3 4
5 6
f = 1 f = 1
1/2
1/ 8
1/10/1
0/1
0/ 8 0/ 8 0/ 80/ 8
0/ 8
0/1
0/1
CUT
Figure 2.4: A maximum flow and a minimum cut.
x2x1 x3 x4
x5 x6
+1 +1 _ 1 _ 1
_ 12+
Figure 2.5: Final pit shape.
3 Solution Methods for the Design Problem
Lerchs and Grossmann (1965) present an algorithm to determine the optimum design for
an open-pit mine. The aim is to design the contour of a pit that maximizes the difference
between total mine value of the extracted ore and the total cost of extraction of ore and
waste materials. They give the mine graph model of the problem and show that an optimal
solution of the ultimate pit problem is the same as finding the maximum closure of their
model.
The mine graph G is first augmented with a dummy node x0 and dummy arcs (x0, xi).
The node x0 is assigned a negative weight so that it cannot be part of the maximum
closure. A tree T with one distinguished node x0 (called the root of T ) is known as a
rooted tree. The algorithm starts with the construction of a tree T 0 in G. The tree is then
transformed into successive trees T 1, T 2, . . . , Tn following given rules, until no further
transformation is possible. The maximum closure is then given by the nodes of a set of
well identified branches of the final tree.
Each arc ai of a tree defines a branch Ti. The arc ai is said to support Ti. The
weight pi of a branch is the sum of the weights of all nodes of the branch. This weight
is associated with ai and we say that ai supports a weight pi. In a tree T with root x0, a
12
3 Solution Methods for the Design Problem
branch Ti is characterized by the orientation of the arc ai with respect to x0. The arc ai
is called a p-arc (plus-arc) if it points toward Ti, that is, if the terminal node of ai is part
of Ti. The branch Ti then is called a p-branch. If ai points away from the branch then it
is called an m-arc (minus-arc) and the branch is an m-branch. A p-arc (branch) is strong
if it supports a weight that is strictly positive. An m-arc (branch) is strong if it supports
a weight that is zero or negative. Arcs (branches) that are not strong are said to be weak.
A node xi is said to be strong if there exists at least one strong arc on the (unique) path
of T joining xi to the root x0. Nodes that are not strong are said to be weak. Finally, a
tree is normalized if the root x0 is common to all strong arcs. The maximum closure of a
normalized tree is the set of its strong nodes.
a
b
c
d
e
f
g
h
i
x0
_ 1
_ 4
_ 2
_ 1_ 4
_ 4( )+ ,
_ 3( )+ , _ 7( ),_
_ 5( )+ ,
_ 1( )+ ,
( )+ , 5
_ 1( )+ ,
( ),_ 1
_ 2( )+ ,
1 2 5
3
Figure 3.1: A mine graph augmented with a dummy node x0.
a
b
c
d
e
f
g
h
i
x0
_ 1
_ 4
_ 2
_ 1_ 4
_ 4( )+ ,
_ 3( )+ , _ 7( ),_
_ 5( )+ ,
_ 1( )+ ,
( )+ , 5
_ 1( )+ ,
( ),_ 1
_ 2( )+ ,
1 2 5
3
strong m
strong p
weak p
weak m
Figure 3.2: Strong and weak branches.
To illustrate these concepts, we consider the augmented mine graph in Figure 3.1, which
has been used by Lerchs and Grossmann and also further explained by Caccetta and Gi-
annini (1988). The value assigned to each node is the weight of that node. Each arc is
labelled in the form (±, pi) to identify its status. Here, a + or a − sign represents a p-arc
or an m-arc respectively, and pi is the support of the arc. By examining the label of an
13
1 Introduction and Overview
a
b
c
d
e
f
g
h
i
x0
_ 1
_ 4
_ 2
_ 1_ 4
1 2 5
3
Figure 3.3: The tree obtained after normalization.
arc we can identify it as strong or weak. The arcs (c, d) and (e, f) are strong, and all the
others are weak. Therefore, nodes a, b, c, f, g, h, and i are strong while d and e are weak.
An illustration of strong and weak branches is given in Figure 3.2. Figure 3.3 is the tree
obtained after normalization. We note here that as all dummy arcs are p-arcs, all strong
arcs of a normalized tree will also be p-arcs.
The Steps of the algorithm are summarized by Caccetta and Giannini as follows.
Step 1 (Initialization):
Construct a normalized tree T 0; T 0 is taken as the spanning tree (a tree of maximal set of
arcs that contains no cycle) whose arc set is {(x0, xi) : xi ∈ V }. Identify the set Y 0 of
strong nodes of T 0 (which are those nodes with positive weight). Set i = 0 and proceed
to Step 2.
Step 2 (Optimality test):
Search for an arc (xk, xl) in G such that xk ∈ Y i and xl /∈ Y i then proceed to Step 3. If
no such arc is found, stop; Y i is a maximum closure of G.
Step 3 (Update):
Identify the unique (x0, xk)-path P in T i. Suppose x0 is joined to xm in P . Construct
the tree T
′i by replacing the arc (x0, xm) of T i with the arc (xk, xl) and proceed to Step
4.
Step 4 (Normalization):
Normalize the tree T
′i. This yields a tree T i+1. Identify the set Y i+1 of strong vertices
of T i+1. Set i+ 1 = i and go to Step 2.
It should be noted that
T
′i = T i + (xk, xl)− (x0, xm) (3.1)
The normalized tree T i+1 is obtained by moving along the unique (xm, x0)-path and
when a strong arc is encountered this arc is deleted and x0 is joined to its branch root.
Picard and Queyranne (1982) give a binary quadratic programming formulation of the
14
4 Open-Pit Scheduling Problem
minimum cut problem and mention that it is of considerable importance in the determi-
nation of the optimal contour of an open-pit mine.
Zhao and Kim (1992) present a graph theory oriented algorithm for optimum pit de-
sign. Their algorithm produces an optimal solution and maximizes the total undiscounted
net profit for a given 3-D block mine model. In terms of the reduction in computation
time and computer memory requirements, they view their algorithm to be of better per-
formance as compared to the well known Lerchs and Grossmann Algorithm.
Underwood and Tolwinski (1998) develop a network flow algorithm based on the dual
to solve the problem of finding a maximum closure in a mine graph, as studied by Lerchs
and Grossmann (1965). They demonstrate that the algorithm is closely related to that
of Lerchs and Grossmann and show how the steps in the algorithm of the latter can be
viewed in mathematical programming terms. They show that at any stage of the dual
simplex algorithm the nodes in the union of all strong branches in a tree correspond to the
nodes being ‘removed’. The algorithm, they describe, will move from one basic solution
of the dual to another. When considering new arcs to bring into the basis, it is needed only
to look at arcs joining strong nodes to weak nodes. The goal of their algorithm and that of
Lerchs and Grossmann is to find a collection of strong nodes which are feasible. A strong
node is feasible when there are no weak blocks above it which must first be removed in
order to allow access to the block, otherwise, there is a strong node which depends on
a weak node. The major difference between the two algorithms is the manner a cycle is
broken for the purpose of attaining a spanning tree. In the case of Underwood and Tol-
winski, a cycle is broken by analyzing the change in flow around the cycle. This value
is so chosen to increase this flow as much as possible while maintaining dual feasibility.
Lerchs and Grossmann instead use a simple rule for removing the arc. For a detailed de-
scription of how this is done, see Underwood and Tolwinski (1998).
Hochbaum and Chen (2000) view the open-pit mining problem as a problem to deter-
mine the contours of a mine, based on economic data and engineering feasibility require-
ments in order to yield maximum possible net income. They mention that this problem
needs to be solved for very large data sets. They note that in practice, it is necessary to test
multiple scenarios taking into account a variety of realizations of geological predictions
and forecasts of ore value. Even though they view the problem to be equivalent to the
minimum cut or maximum flow problem they realize that the industry was experiencing
computational difficulties in solving the problem. They recognize that the most widely
commonly used algorithm by the mining industry has been the one devised by Lerchs
and Grossmann in 1965. They develop a maximum flow “push-relabel” algorithm and
compared it to that of Lerchs and Grossmann. They demonstrate that their algorithm has
a superior performance over the Lerchs and Grossmann algorithm for all types of mine
data they tested. However, they admit that the Lerchs and Grossmann algorithm has an
advantage with its more economic use of space and memory, which reduces overhead.
4 Open-Pit Scheduling Problem
Once the open-pit design problem is solved and the final pit shape is determined, we want
to know the order in which to mine the blocks in the pit. The open-pit mine production
scheduling can be viewed as the sequence by which the blocks of the mine should be
15
1 Introduction and Overview
removed over the lifetime of the mine in order to maximize the total profit from the mine,
subject to a set of operational and physical constraints. The optimum pit design plays an
important role in mine scheduling, and it should be at constant review at all stages of the
life of an open-pit.
Lerchs and Grossmann (1965) use a parametric analysis concept with the aim of gen-
erating an extraction sequence of a mine. They use an undiscounted model and introduce
an additional, artificial, cost, λ ≥ 0, as a parameter to change the economic value of each
block i from pi to (pi − λ). By increasing the value of λ, a set of corresponding nested
pit outlines are generated. Let S(λ) denote the pit outline generated for a given λ. As
shown in the example in Figure 4.1, smaller and smaller pits are formed as λ is increased,
that is, S(λ4) ⊇ S(λ3) ⊇ S(λ2) ⊇ S(λ1) as λ4 < λ3 < λ2 < λ1. These pits can be
used to produce a production schedule of a mine. However, since time is not an explicit
input factor, the pits produced may be unpredictable with respect to mining time needed
for each of the pits in the sequence.
S ( 1 )
S ( )3
S ( 2 )
S ( )4
Figure 4.1: Nested pit outlines for different parameters.
Picard and Smith (2004) define an economic criterion of evaluating intermediate con-
tours on the way to the optimal ultimate contour, and also show how to calculate these
contours. They apply the technique of Picard (1976) and a parametric maximum flow al-
gorithm. They show with this parametric analysis how to choose intermediate contours in
open-pit mine design so as to proceed to the optimal ultimate contour while maximizing
the benefit-cost ratio of the intermediate contours. As in the parametric method of Lerchs
and Grossmann, described above, the intermediate contours can be viewed as a mining
sequence and thus, a kind of mine scheduling.
In an attempt to determine a production schedule which is optimum, Dagdelen and
Johnson (1986) develop an algorithm which, in theory, is based on the Lagrangian con-
cepts of mathematics, and in practice is based on the parameterization concept of mining.
They describe the fundamentals of the algorithm and further programmed and applied it
to a small three-dimensional block model. Applications of programs to different schedul-
ing conditions showed fast convergence.
Both methods by Lerchs and Grossmann (1965) and Underwood and Tolwinski (1998),
presented in Section 3, provide a sequence of mining an open-pit. However, these ap-
proaches of mining sequencing are not enough to solve the open-pit mine production
16
4 Open-Pit Scheduling Problem
scheduling problem. In practice, we want to construct intermediate optimal pits and if
possible, we want to control how these intermediate optimal pits change from one nested
pit to another. If in the construction we have a rapid change in the size of the pit at some
stage then we cannot control the sequence of intermediate optimal pit structure. This pos-
sibility of a large increment in the size of the pit from one nested pit to the next is known
as the ‘gapping phenomenon’.
4.1 Models for Scheduling
To avoid the situation of encountering the gapping phenomenon, the time factor, as well
as mine capacity constraints on the tonnage to be mined can be introduced explicitly in
the formulation of the open-pit scheduling problem. We begin by defining the following
notations to be used in the problem formulation. In addition to the notations V and A in
Section 1, let
T = number of time periods.
pti = profit derived from mining and processing block i in time period t.
bi = tonnage of block i.
ut = upper bound on tonnage mined in time period t.
xti =
{
1, if block i is mined in time period t, or earlier
0, otherwise.
A mathematical model for the open-pit scheduling problem then is
max
T∑
t=1
∑
i∈V
pti
(
xti − x
t−1
i
)
subject to
∑
i∈V
bi
(
xti − x
t−1
i
)
≤ ut, t = 1, . . . , T
xti ≤ x
t
j , (i, j) ∈ A, t = 1, . . . , T
xt−1i ≤ x
t
i, t = 1, . . . , T, i ∈ V
x0i = 0, i ∈ V
xti ∈ {0, 1}, i ∈ V, t = 1, . . . , T.
(4.1)
As above, the set A captures both the slope and the immediate precedence constraints, so
that the condition xti ≤ x
t
j implies that block j has to be mined if block i is to be mined,
in time period t.
As an example, consider the pit model in Figure 4.2, which is taken from Lerchs and
Grossmann (1965). For each block, the value on top is the profit and the number at the
bottom is the block index. Taking the profits as the initial profits, p0i , and solving the
scheduling problem for T = 5, ut = 9, for all t, and bi = 1, for all i, we obtain the result
in Figure 4.3. A discount factor of 0.90 is assumed for all the time periods and so the
profit for period t is computed as pti = 0.90
t−1p0i . In Figure 4.3, the number in a block
indicates the time period in which that block is mined.
Caccetta and Hill (2003) present a mixed integer linear programming scheduling for-
mulation that distinguishes between ore and waste blocks and that incorporates constraints
17
1 Introduction and Overview
_ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4
_ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4
_ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4
_ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4 _ 4
_ 4 _ 4 _ 4 _ 4 _ 4 _ 4
_ 4 _ 4 _ 4 _ 4
_ 4 _ 4
1
12
2 3 4
5 8 9 106 7
11 12 13 14 15 16 17 18
19 20 21 22 23 24 25 26 27 28
29 30 31 32 33 34 35 36 37 38 39 40
41 42 43 44 45 46 47 48 49 50 51 52 53 54
55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
8 12 12 0
0 12 12 8
8 12 12 0
0 12 12 8
8 12 0
0 12 12 8
8 12 12
0 12 8
12
0
Figure 4.2: A pit model.
11 1 1
1 1
1
22
2
2 2
2
3 3
3 3
3 3
3
3
4
4
4
4
4 5
5
5
51
1
5
5
32
Figure 4.3: Scheduling result for T = 5 and ut = 9, for all t.
on mill throughput (mill feed and mill capacity) and volume of material extracted. The
formulation is given as
max z =
T∑
t=2
∑
i∈V
(
pt−1i − p
t
i
)
xt−1i +
∑
i∈V
pTi x
T
i (4.2a)
subject to
∑
i∈Vo
bix
1
i −m
1 = 0 (4.2b)
∑
i∈Vo
bi
(
xti − x
t−1
i
)
−mt = 0, t = 2, . . . , T (4.2c)
18
4 Open-Pit Scheduling Problem
∑
i∈Vw
bix
1
i ≤ u
1
w (4.2d)
∑
i∈Vw
bi
(
xti − x
t−1
i
)
≤ utw, t = 2, . . . , T (4.2e)
xt−1i ≤ x
t
i, t = 2, . . . , T, i ∈ V (4.2f)
xti ≤ x
t
j , i ∈ V, (i, j) ∈ A, t = 1, . . . , T (4.2g)
lto ≤ m
t ≤ uto, t = 1, . . . , T (4.2h)
xti ∈ {0, 1}, i ∈ V, t = 1, . . . , T, (4.2i)
where T is again the number of time periods over which the mine is being scheduled,
V is the set of blocks (ore or waste), Vo is the set of ore blocks, Vw is the set of waste
blocks, A is the set of precedence arcs, pti is the profit (net present value) resulting from
the mining of block i in period t, bi is the tonnage of block i, mt is the tonnage of ore
milled in period t, lto is the lower bound on the amount of ore that is milled in period t, u
t
o
is the upper bound on the amount of ore that is milled in period t, utw is the upper bound
on the amount of waste that is mined in period t, and xti is a binary variable, which is
equal to 1 if block i is mined in periods 1 to t and 0 otherwise.
Constraints (4.2b), (4.2c) and (4.2h) ensure that the milling capacities hold. Con-
straints (4.2d) and (4.2e) ensure that the tonnage of waste mined does not exceed the
prescribed upper bounds. Constraint (4.2f) ensures that a block is mined in one period
only. Constraint (4.2g) describes the wall slope restrictions. Clearly, this formulation has
a close resemblance to the model to be presented next.
Now, we define auxiliary variables yti as
yti =
{
1, if block i is being mined in period t
0, otherwise.
Then yti = x
t
i − x
t−1
i and the objective becomes max
∑
t
∑
i p
t
iy
t
i . The constraint (4.2f)
means 0 = x0i ≤ x
1
i ≤ x
2
i ≤ . . . ≤ x
T
i , which is the same as
∑
t y
t
i ≤ 1. This means
each block is mined at most once. The fact that yti is 0 or 1, implies that y
t
i ≥ 0 and thus
xti ≥ x
t−1
i , which is constraint (4.2f). Also, we have that
∑t
τ=1 y
τ
i = x
t
i, t = 1, . . . , T ,
and so constraint (4.2g) turns to
∑t
τ=1 y
τ
i ≤
∑t
τ=1 y
τ
j . This implies that y
t
i ≤
∑t
τ=1 y
τ
j ,
t = 1, . . . , T , (i, j) ∈ A. The formulation (4.2) can thus be restated as
19
1 Introduction and Overview
max
T∑
t=1
∑
i∈V
ptiy
t
i
subject to
∑
i∈Vo
biy
t
i −m
t = 0, t = 1, . . . , T
∑
i∈Vw
biy
t
i ≤ u
t
w, t = 1, . . . , T
t∑
τ=1
yτj − y
t
i ≥ 0, t = 1, . . . , T, (i, j) ∈ A
T∑
t=1
yti ≤ 1, i ∈ V
y0i = 0, i ∈ V
lto ≤ m
t ≤ uto, t = 1, . . . , T
yti ∈ {0, 1}, i ∈ V, t = 1, . . . , T.
(4.3)
Ferland et al. (2007) consider the capacitated open-pit mine problem by looking at the
sequential extraction of blocks in order to maximize the total discounted profit under an
extraction capacity during each period of a planning horizon. As above, let V be the set
of blocks in the mining site and A the set of precedence arcs. Further, let pi denote the
net value of extracting block i, where i ∈ V , bi denote the tonnage of block i, i ∈ V , ut
the maximal weight that can be extracted during time period t, 1 ≤ t ≤ T , and 1/(1+α)
the discount rate per period. Also, let a binary variable xti be associated with each block
i for each period t:
xti =
{
1, if block i is being mined in period t
0, otherwise.
Then their formulation of the scheduling block extraction problem is as follows.
max
T∑
t=1
∑
i∈V
pi
(1+α)t−1x
t
i (4.4a)
subject to
T∑
t=1
xti ≤ 1, i ∈ V (4.4b)
t∑
l=1
xlj − x
t
i ≥ 0, t = 1, . . . , T, (i, j) ∈ A (4.4c)
∑
i∈V
bix
t
i ≤ u
t, t = 1, . . . , T (4.4d)
xti ∈ {0, 1}, i ∈ V, t = 1, . . . , T. (4.4e)
The objective function (4.4a) accounts for the discount factor in evaluating the net values
of the blocks when they are extracted. Constraint (4.4b) guarantees that each block i is
20
4 Open-Pit Scheduling Problem
extracted at most once during the planning horizon. The extraction precedence is enforced
by constraint (4.4c), and the constraint (4.4d) describes the extraction capacity during
each period of the horizon.
To initiate the first extraction period, t = 1, we first remove the block among those
having no predecessor (i.e., in the top layer) having the largest priority. During any period
t, the next block to be removed is one of those with the highest priority among those
having all their predecessors already extracted such that the capacity ut is not exceeded
by its extraction. If no such block exists, then a new extraction period (t+ 1) is initiated.
4.2 Adaptations to Large-Scale Mining
Researchers usually encounter computational difficulties when solving the scheduling
problem of realistic size, because most often, there are too many blocks (over 100,000)
within the final pit limits to determine the optimum annual production schedule.
Zhang (2006) approaches the problem of large number of blocks in a mine by com-
bining a genetic algorithm and topological sorting to find the extraction schedule of a
mine. For a given orebody, the approach simultaneously determines an ultimate pit of a
mine and an optimal block extraction schedule that maximizes the net present value by
specifying whether a block should be extracted and if yes, when to dig it out and where to
send it (i.e., the waste dump or the processing plant), subject to a number of constraints
including maximum wall slope, mining and processing capacities.
Genetic algorithms are stochastic, parallel search algorithms based on the theory of
natural selection and the process of evolution. These algorithms begin with a set of pos-
sible solutions randomly selected in the solution space as a population. Each possible
solution is represented as a chromosome and evaluated for its fitness calculated using an
objective function. Genetic operators such as selection, crossover and mutation are then
applied to individuals in the current population so as to generate a new population. The
process is repeated until an optimal solution, which is the best fitness of any generation,
is obtained. A topological sort is an ordering of the nodes of a directed acyclic graph such
that every edge from a node numbered i to a node numbered j satisfies i < j. A mine
graph is clearly an acyclic graph. Topological sorting is used to randomly select a block
from a block model and put it in a queue. The approach starts with an initial population of
chromosomes being created. For each chromosome in the population, topological sorting
is performed and a schedule is determined. Next, the chromosomes are evaluated for their
fitness to determine whether or not they have all been processed. If so, then a stopping
criteria is reached and the process ends, otherwise, genetic algorithm operators to gener-
ate a new population are applied and the process is repeated.
Before using such a procedure for production schedule, the blocks of a mine are first
aggregated. Spatially connected blocks with similar properties are predisposed to belong
to the same aggregation. Blocks in an aggregation are classified into bins according to
their grades, with blocks in each bin being assumed to be homogeneous in quality. Each
chromosome is comprised of a number of genes, where a gene represents a block aggre-
gate. A block aggregate is encoded using the following:
• A random real number which stands for the topological sort preference.
• A decision array where each element represents a bin in the block aggregate and is
21
1 Introduction and Overview
encoded using a random integer standing for a selected destination and a random
real number in (0, 1] representing the proportion of the bin to be sent to the selected
destination.
Here, destination is where a block bin is sent, whether to the waste dump or to the pro-
cessing plant.
A schedule is determined based on the number encoded in the corresponding chro-
mosome. Based on the topological sort preference in each block aggregate, topological
sorting is performed to obtain a feasible extraction sequence of block aggregates satisfy-
ing the maximum wall slope constraints. Information from the encoded destination and
the fraction of a block bin to be extracted in each block aggregate determine the total
tonnage for each block aggregate directed to the waste dump and processing plant respec-
tively. The extraction time for block aggregates are determined by cutting the extraction
sequence of block aggregates into a number of smaller groups retaining the extraction
sequence. To evaluate the fitness value of each schedule in a population, Zhang uses the
objective function
NPV =
∑
t
∑
k
∑
j
∑
i
Vijkxijkdt, (4.5)
where Vijk is the value of bin i of block aggregation j to destination k, xijk is the fraction
of bin i of block aggregation j to destination k, and dt is the discount factor at time t.
By this approach, Zhang concludes that the computational time can effectively be re-
duced whilst maintaining near optimal mine plans. This conclusion was arrived at after
an implementation and an evaluation of the approach against BHP-Billiton’s existing in-
dustrial benchmark achieved by the commercial optimizer ILOG CPLEX. Zhang notes
that a difficulty in the use of genetic algorithm to solve the mine planning problem is that
of dealing with the constraints. Two ways are suggested to handle this difficulty. Firstly,
the constraints are relaxed and then the violations of constraints are penalized in the ob-
jective function. Secondly, the constraints are embedded in chromosome coding and the
chromosomes are forced to be feasible in the population. Newman et al. (2010) point out
that Zhang does not mention the practical consequences of aggregation or how to subse-
quently disaggregate.
Ramazan (2007) proposes an algorithm called the “Fundamental Tree Algorithm”,
to reduce the number of binary variables required in mixed integer programming (MIP)
formulations and the number of constraints within MIP for optimizing annual production
scheduling in open-pit mines. The size of the problem can be reduced by partitioning
the blocks within the final pit limits into smaller volumes called “pushbacks”. Mixed in-
teger and linear programming models are recognized as having significant potential for
optimizing production scheduling in open-pit mines, in which the objective is to maxi-
mize total discounted profit. However, an MIP formulation of the production scheduling
problem for open-pit mines requires too many binary variables making it very difficult
or impossible to solve. For example, if there are 10,000 mining blocks in a pushback to
be scheduled over three years, it will require 30,000 binary variables to generate the MIP
formulation. The algorithm of Ramazan involves a newly developed linear programming
model formulation to combine blocks into Fundamental Trees. A “Fundamental Tree” is
a term used to describe a set of combined blocks, on condition that the combined blocks
22
5 Uncertainty and Risk
have the following three properties.
1. The combined blocks can be mined without violating the slope constraints.
2. The total economic value of the combined blocks is positive.
3. A fundamental tree is maximal in that it cannot be partitioned into smaller trees
without violating 1 or 2.
All the blocks within the pushback considered for optimization must belong to a funda-
mental tree. MIP scheduling formulations of the trees are done by treating each funda-
mental tree as a block having certain amount of ore tons with average grade commodities
and possibly some waste tons. According to Ramazan, a substantial reduction in the MIP
problem size by applying the fundamental tree algorithm reduced the required solution
time significantly, making it possible to apply MIP models to large open-pit mines.
Boland et al. (2009) use aggregation with respect to processing, and iterative disag-
gregation that refines aggregates up to the point where the refined aggregates defined for
processing produce the same optimal solution for the linear programming relaxation of
MIP as the optimal solution of the linear programming relaxation with individual block
processing. They propose several strategies of creating refined aggregates for the MIP
processing, using duality results and exploiting the problem structure. They are of the
view that these refined aggregates allow the solution of very large problems in reasonable
time with very high solution quality in terms of NPV. They demonstrate their approach
using instances containing as many as 125 aggregates and almost 100,000 blocks.
Bley et al. (2010) consider the integer linear programming formulation presented by
Caccetta and Hill (2003). For each time period and each attribute (tonnage of ore and
waste contained within a block), the corresponding production constraint and the prece-
dence constraints among the blocks combine to form a precedence constrained knapsack
problem. By exploiting the special structure of such a problem, they derive several types
of additional constraints, whose addition to the standard integer programming formula-
tion leads to a tighter linear relaxation and consequently, a reduction of the computation
times required to solve the production scheduling problems.
5 Uncertainty and Risk
There can be uncertainties in the field of mining since the ore values are estimated by
the information from drill holes and it is after the mining process that the returns can be
known. The uncertainty here is due to the fact that we only have samples of blocks. In
this section, we look at the uncertainty associated with open-pit mining and also introduce
Conditional Value-at-Risk (CVaR) as a measure to reduce the risk of high losses.
5.1 Open-Pit Mining Uncertainty
For long time horizon open-pit mining, large initial investments and operational budgets
are required. In addition to the historic fluctuations of metal prices, the percentage of ore
contained in each block of a deposit is uncertain. These two kinds of uncertainties are
known as price and geological uncertainty, respectively. Significant costs are involved
23
1 Introduction and Overview
in determining ore content with accuracy (Newman et al., 2010). Miners therefore have
to take risk as the mining operations continue. One of the standard procedures to deal
with uncertainty and risk is to perform the evaluation process for different scenarios of
the project key variables (Abdel Sabour et al., 2008).
Dimitrakopoulos et al. (2002) are the first to introduce the integration of geological
uncertainty into open-pit mine planning (Abdel Sabour et al., 2008). Dimitrakopoulos et
al. are of the view that geological uncertainty as an element in key parameters of open-pit
mining projects can be quantified by conditional simulation combined with open-pit op-
timization studies. They further claim that having an accurate assessment of uncertainty
arising from grade variability in the ore reserve allows risk in a mining project to be quan-
tified and considered in decision-making processes. In their opinion, further technical
integration of uncertainty in optimization algorithms is needed to enhance the interaction
and efficacy of open-pit optimization and risk assessment.
Ramazan and Dimitrakopoulos (2004) note that the mixed integer programming (MIP)
approach for optimizing production schedules of open-pit mines has been found to be lim-
ited in terms of feasibility in generating optimal solutions with practical mining schedules
and also in its ability to deal with in-situ variability of orebodies. They present a produc-
tion scheduling method for multi-element deposits in open-pit mines and investigate the
issues of infeasibility associated with the traditional MIP models and their limitations
with respect to practical scheduling. They give an alternative formulation that considers
the probability of blocks being scheduled in a given production period, thereby dealing
with in-situ variability and practical issues in scheduling patterns. Their proposed model
generates feasible scheduling patterns in terms of practical excavation of the blocks dur-
ing the periods they are scheduled. The excavation requires significantly less movement
of equipment compared with the schedules produced by the traditional MIP formulation.
According to them, since the probability of the blocks being scheduled in a period is con-
sidered in the optimization, the new schedule is less risky than the traditional in terms of
meeting production targets, when considering orebody uncertainty.
As compared to the linear programming (LP) model presented by Dimitrakopoulos
and Ramazan (2003) on the same subject, Osanloo et al. (2008) support the fact that the
approach by Ramazan and Dimitrakopoulos is able to maximize the net present value ex-
plicitly with the consideration of equipment movements and block access in such a way as
to produce a schedule pattern that is less risky than the ones obtained with the traditional
methods. The LP model by Dimitrakopoulos and Ramazan is noted not to generate max-
imum net present value in the presence of grade uncertainty, since the net present value
is not maximized explicitly in their objective function. Osanloo et al. further support the
claim that the approach used by Ramazan and Dimitrakopoulos is able to eliminate par-
tial block mining as compared to the method by Dimitrakopoulos and Ramazan, which
schedules some blocks partially and thus contributes to infeasibility or non-optimality of
the design.
The method by Ramazan and Dimitrakopoulos (2004) however has disadvantages
which are given by Osanloo et al. (2008) as follows:
• The generation of several scheduling patterns on simulated orebodies is compli-
cated and costly.
• The direct integration of grade uncertainty in production planning has not been
24
5 Uncertainty and Risk
done. This contributes to the stochastic nature of the grade that in turn leads to
violating some constraints some periods of time. As a matter of fact the method
does not give the best profitable schedule with the minimum possible geological
risk.
• Because there may be very significant local deviations between the true grade and
simulated grade, especially in the situation that the drill grid is sparse and wide,
detailed mine design on each simulation may result in generating an unrealistic
scheduling in the final optimization stage.
• Like all other MIP models for long-term production planning problems, it cannot
be implemented on large deposits.
Dimitrakopoulos and Godoy (2006) present a risk-based, stochastic, approach that
integrates grade uncertainty into the optimization of long-term production scheduling. A
general framework for long-term production scheduling is reviewed and extended through
combinatorial optimization to allow effective minimization of risk in not achieving pro-
duction targets due to geological uncertainty. Their approach first generates a series of
mining schedules, each corresponding to a simulated realization of the spatial distribution
of grades. These mining sequences are optimized within a common feasible domain and
post processed to provide a single optimal mining sequence, which minimizes the chance
of deviating from target production figures. The following is the outline of their approach.
1. Derive a stable solution domain of ore production and waste removal stable to all
simulated models of the distribution of grades within the orebody.
2. Determine the optimum production schedule within the solution domain derived in
the first stage above, using a linear programming formulation. This will generate
optimum mining rates for the life-of-mine scheduling.
3. For each one of the simulated models generate a physical mining sequence con-
strained to the mining rate derived in the second stage (note that all are sub-optimal
mining schedules).
4. Combine, using combinatorial optimization, the mining sequence generated in the
third stage to produce a single optimal mining sequence that minimizes the chance
of deviating from production targets.
Their approach has the ability to minimize deviations from production target variables
to acceptable ranges. For the deterministic approach, the optimization formulation pro-
cesses a single estimated orebody model to produce mining schedule. According to them,
estimation errors, including the inevitable smoothness of “average” mining block grade
estimates, are propagated to the optimization, because the result is based on imperfect ge-
ological knowledge. The final result, as indicated by Dimitrakopoulos et al. (2002), is a
single and often biased forecast for the economic outcome of the production schedule. For
the stochastic framework, geological uncertainties are characterized by a series of equally
probable models of the orebody, as produced by conditional simulation techniques.
Ramazan and Dimitrakopoulos (2007) consider a stochastic integer programming
(SIP) mathematical model that generates optimum long-term production schedules for
25
1 Introduction and Overview
open-pit mines for a defined objective function, considering the operational requirements
at the mine. Their model takes multiple simulated orebody models, without averaging
the grades, and maximizes the total net present value when considering geological uncer-
tainty caused by grade variability. In the case of production scheduling, the objectives are
to maximize the total net present value and to minimize unsatisfied demand for processed
ore. They incorporate geologic risk discounting concept within the SIP model to control
the risk distribution between production periods. In their implementation of the model,
penalty parameters for deviations from targets are used to control the geological risk dis-
tribution in terms of magnitude and variability. The scheduling method developed in their
work allows the decision-maker to define a risk profile based on the existing uncertainty
quantified by simulated orebody models. In terms of solution time, they consider the SIP
model to be more efficient compared to the traditional mixed integer programming mine
scheduling models, as the SIP method contains substantially less binary variables than the
latter. Although they used a hypothetical data set to illustrate the strength of the new SIP
model, they claim that their model is applicable to large open-pit mines. From their view-
point, stochastic programming and modeling concept is useful not only for optimizing
the production scheduling process, but also for investigating various stages of the whole
mining process, such as finding the value of an additional drilling.
A popular approach to deal with risk is to apply the conventional Monte Carlo sim-
ulation, in which case a distribution for the mine value is obtained rather than a single
expected value. From this distribution, the risk associated with a long term production
scheduling can be explored by defining the range for the expected value at a certain de-
gree of confidence (Abdel Sabour et al., 2008). According to Carneiro et al. (2010), in
many cases it is better to maximize returns with risk constraints. They support the pro-
posal of Krokhmal et al. (2002) that, it is better to specify a maximum level of risk. These
approaches can be combined in a careful way to formulate design and investment models
for the open-pit mine.
5.2 Concept of Conditional Value-at-Risk
We will in this section give a brief introduction to a measure of uncertainty and risk,
known as Conditional Value-at-Risk (CVaR), which has its origin within finance. We
give an example of its use, for portfolio optimization.
Measure of risk plays a critical role in the optimization of portfolios under the pres-
ence of uncertainties. Loss can be envisioned as a function z = f(x, y) of a decision vec-
tor x ∈ X ⊂ Rn representing what we may generally call a portfolio, with X expressing
decision constraints, and y ∈ Y ⊂ Rn representing the future values of a number of vari-
ables like interest rates or weather data (Rockafellar and Uryasev, 2002). Further, when
y is taken to be random with known probability distribution, z comes out as a random
variable having its distribution dependent on the choice of x. Any optimization problem
involving z in terms of the choice of x should then take into account not just expectations,
but also the “riskiness” of x.
Value-at-Risk (VaR) is an important measure of risk that is used in the financial in-
dustry. Among various risk criteria, is a popular measurement of risk representing the
percentile of the loss distribution with a specified confidence level (Lim et al., 2010). Let
α ∈ (0, 1) denote the confidence level and f(x, y) a loss function associated with a port-
26
5 Uncertainty and Risk
folio x (a vector indicating the fraction of instrument of some available budget in each of
n financial instruments) and an instrument price (or return) vector y ∈ Rn. [It should be
noted that f(x, y) < 0 means a positive return.] Then, the VaR function ζ(x, α) is given
by the smallest number satisfying Φ(x, ζ(x, α)) = α, where Φ(x, ζ) is the probability that
the loss f(x, y) does not exceed a threshold value ζ, that is, Φ(x, ζ) = Pr[f(x, y) ≤ ζ].
So, for any portfolio x ∈ Rn and a confidence level α, VaR is interpreted as the value of
ζ such that the probability of the loss not exceeding ζ is α. In simple terms, VaR is the
maximum likely loss incurred over a specified period of time at a given confidence level
(Lai et al., 2009). The chosen confidence level depends on the purpose of the exercise
and the risk tolerance level of management.
Although the VaR measure is a very popular measure of risk, it has drawbacks, among
them is lack of consistency, as it violates subadditivity. Nonsubadditivity means that the
risk of a portfolio can be higher than the sum of the risks of its individual components.
Moreover, in practice, the VaR measure is nonconvex, as well as nondifferentiable, and
hence, it is difficult to find global minimum via conventional optimization technique (Lim
et al.). Furthermore, VaR is difficult to optimize when it is calculated from scenarios. It
is coherent only when it is based on the standard deviation of normal distributions (for a
normal distribution VaR is proportional to the standard deviation).
Criticisms of the VaR approach resulted in new proposals for ways to measure risk in
portfolios. As an alternative measure, the CVaR was introduced by Rockafellar and Urya-
sev (2000) and was further developed by Rockafellar and Uryasev (2002). The CVaR
measure gives rise to a convex problem and it is considered to be more consistent than
the VaR. It is defined as the mean loss by which the VaR is exceeded. In other words, the
CVaR is the conditional expected loss of a portfolio at a confidence level, given that the
loss to be accounted for exceeds or equals the VaR (Carneiro et al., 2010). By definition,
the VaR at a given confidence level is never higher than the corresponding CVaR. CVaR
is also known as mean excess loss, mean shortfall or tail VaR. Rockafellar and Uryasev
(2000) place emphasis on CVaR as an approach to optimizing a portfolio so as to reduce
the risk of high losses, even though VaR play a role in this approach. By definition with
respect to a specified probability level β, the β-VaR of a portfolio is the lowest amount
α such that, with probability β, the loss will not exceed α, whereas the β-CVaR is the
conditional expectation of losses above that amount α.
Gaivoronski and Pflug (2004/05) present an empirical study of the properties of his-
toric VaR and CVaR as functions of portfolio composition using stock market data. They
note that VaR optimization is nonconvex, exhibits many local minima, and is of combi-
natorial character, that is, exhibit exponential growth in computational complexity. Even
though they argue that computation of mean-VaR efficient portfolios based on historic
data is a feasible task, they confirm that VaR optimization is more difficult than CVaR
optimization.
Lim et al. (2010) are in favour of CVaR. They say that CVaR is a portfolio evalua-
tion function having appealing features such as sub-additivity and convexity. Although
the CVaR function is nondifferentiable, scenario-based CVaR minimization problems can
be reformulated as linear programs that afford solutions via widely-used commercial soft-
wares. However, finding solutions through linear programming formulations for problems
having many financial instruments and a large number of price scenarios can be time con-
suming as the dimension of the problem greatly increases. Andersson et al. (2001) and
27
1 Introduction and Overview
Mansini et al. (2007) support the use of CVaR over VaR.
For continuous distributions, CVaR is the conditional expected loss given that the loss
exceeds VaR. That is, CVaR is given by
Φα(x) = (1− α)
−1
∫
f(x,y)>ζ(x,α)
f(x, y)p(y)dy, (5.1)
where p(y) is a probability density function of y. To avoid complications caused by an
implicitly defined function ζ(x, α), Rockafellar and Uryasev (2000) give an alternative
function
Fα(x, ζ) = ζ + (1− α)
−1
∫
f(x,y)>ζ
[f(x, y)− ζ]p(y)dy, (5.2)
for which they show that minimizing Fα(x, ζ) with respect to (x, ζ) yields the minimum
CVaR and its solution.
When applied to portfolio optimization (Lim et al.), xi is the portion of the total
investment that is made in a certain security. If the probability distribution of y is not
available we can exploit price scenarios, which can be obtained from past price data.
Assume that this price data is equally likely (for example, random sampling from a joint
price distribution). For a given price data yj , j = 1, . . . , J , we can approximate Fα(x, ζ)
by
F̃α(x, ζ) = ζ + [(1− α)J ]
−1
J∑
j=1
max{f j(x)− ζ, 0}, (5.3)
where f j(x) ≡ f(x, yj). It is well-known that F̃α(x, ζ) is a convex function when
each f j(x) is convex. The function F̃α(x, ζ) is noted to be nondifferentiable at (x, ζ)
such that f j(x) − ζ = 0, because then both (∇f j(x)T ,−1)T and 0 are subgradients of
max{f j(x) − ζ, 0}, and since (∇f j(x)T ,−1)T 6= 0, the subdifferential is not a single-
ton. A portfolio that minimizes CVaR can be found by considering the nondifferentiable
optimization problem
min ζ + v
J∑
j=1
max{f j(x)− ζ, 0}
subject to
n∑
i=1
xi = 1
x ≥ 0, ζ unrestricted.
(5.4)
Here, v ≡ [(1− α)J ]−1.
When the loss function f j(x) is linear, then (5.4) can be solved by using linear pro-
gramming. For a given vector of purchase prices p ∈ Rn, the linear loss function is given
by f j(x) = (p − yj)Tx. Introducing an auxiliary variable vector z ∈ RJ , (5.4) can be
formulated as the linear programming given by
28
5 Uncertainty and Risk
min ζ + v
J∑
j=1
zj
subject to
zj ≥ (p− y
j)Tx− ζ, j = 1, . . . , J
n∑
i=1
xi = 1
x ≥ 0, z ≥ 0, ζ unrestricted.
(5.5)
29

2
Summary of Papers
Paper I: On the use of Parametric Open-Pit Design Models for
Mine Scheduling - Pitfalls and Counterexamples
In this paper, we give an interpretation of the open-pit mining model presented by Picard
and Smith (2004), which finds a sequence of intermediate contours leading to an ultimate
one, as a Lagrangian relaxation approach. Our aim is to relate their approach to a standard
optimization procedure and standard results, and explain the properties and weaknesses
of their approach. We give examples of worst case performance as well as best case
performance. The worst case behaviour can be very poor in that we might not obtain
any scheduling information at all. Our analysis also covers the parametric scheduling
approach of Lerchs and Grossmann (1965), which is closely related to the Picard-Smith
approach.
We show that the two approaches suggested by Lerchs and Grossmann (1965) and Pi-
card and Smith (2004) as attempts to obtain scheduling information can be interpreted as
Lagrangian relaxations of side-constrained versions of the classic open-pit design model.
The unpredictable behaviour of the nested pits produced by these approaches, known as
the gapping phenomenon, is observed to be nothing but a manifestation of the lack of
controllability that is inherent in Lagrangian relaxation schemes when applied to linear
optimization problems. We further show that it is not the Lagrangian relaxation step in
itself that creates the gapping phenomenon, since it is still present in the explicitly side-
constrained open-pit design model. Furthermore, the side-constrained model does not
possess the nested pit property, which leads to the conclusion that the Lagrangian relax-
ation step is crucial for obtaining the nested pit property.
The important deduction from this work is that it seems difficult to avoid the gap-
ping phenomenon and obtain proper scheduling information by manipulating the design
model. Hence, we need to introduce time explicitly to get proper scheduling information
for open-pit mining.
31
2 Summary of Papers
Paper II: A Duality-Based Derivation of the Maximum Flow
Formulation of the Open-Pit Design Problem
In this paper, we formulate the open-pit design problem as a maximum flow problem in a
certain capacitated network, as first shown by Picard in 1976. His derivation is based on a
restatement of the problem as a quadratic binary program. We give an alternative deriva-
tion of the maximum flow formulation, which uses only linear programming duality.
Paper III: A Multi-Parametric Maximum Flow Characterization of
the Open-Pit Scheduling Problem
We give, in this paper, a multi-parametric maximum flow characterization of the open-
pit design and scheduling problem. This is the problem of finding an optimal mining
schedule for an open-pit during a number of time periods, subject to mining capacity
restrictions for the time periods. By applying Lagrangian relaxation to the capacities, a
multi-parametric formulation is obtained. We show that this formulation can be restated
as a maximum flow problem in a time-expanded network. This result extends the well
known maximum flow formulation of the open-pit design problem of Picard from 1976
to the case of multiple time periods.
Paper IV: Open-Pit Production Scheduling - Suggestions for
Lagrangian Dual Heuristic and Time Aggregation Approaches
We make suggestions for Lagrangian dual heuristic approaches for the open-pit schedul-
ing problem. A Lagrangian relaxation of the problem, which is solvable as a maximum
flow problem is presented. Two procedures for finding near-optimal solutions to the
scheduling problem are presented. Linear programming relaxations are solved to find
values of the multipliers for the capacity restrictions to be used in a Lagrangian relaxation
of these constraints. It is noted that the solution to the relaxed problem will not in gen-
eral satisfy the capacity restrictions. By adjusting the multiplier values of the Lagrangian
relaxation the relaxed solution is forced to become feasible. In order to reduce the com-
putational burden of solving the linear programming relaxations of large-scale problems,
we suggest using aggregation of the time periods. We further derive a heuristic procedure
for finding near-optimal solutions to the combined open-pit design and scheduling prob-
lem of several capacity constraints for each time period. This heuristic is based on newly
developed conditions for optimality and near-optimality in general discrete optimization
problems.
Paper V: Open-Pit Mining with Uncertainty - A Conditional
Value-at-Risk Approach
The selection of a mine design is based on estimating net present values of all possi-
ble, technically feasible mine plans so as to select the one with the maximum value. In
practice, mine planners cannot know with certainty the quantity and quality of ore in the
ground, and this geological uncertainty is a major source of risk. Furthermore, the future
market behaviour of metal prices and foreign exchange rates are impossible to be known
32
with certainty, and therefore, they are also sources of risks affecting mine project prof-
itability. Because of these uncertainties, it is recognized among practitioners that mining
is a high risk business. An optimization model that maximizes expected return while
minimizing risk is therefore important for the mining sector as this will help make better
decisions on the blocks of ore to mine at a particular point in time.
We present in this paper a Conditional Value-at-Risk (CVaR) approach to open-pit
mining. Value-at-Risk (VaR) is a measure that has been used by the financial institutions
to minimize the loss caused by inadequate monitoring of risk. This measure is noted to
have certain drawbacks such as lack of consistency, nonconvexity, and nondifferentiabil-
ity. Rockafellar and Uryasev (2000) introduce the CVaR measure as an alternative to the
VaR measure. The CVaR measure gives rise to a convex problem. This measure is further
developed by Rockafellar and Uryasev (2002).
Our CVaR approach to open-pit mining can take into account both geological and
price uncertainty in the planning. Investment and design models based on this approach
are formulated for the open-pit mine. Furthermore, we give a nested pit scheduling model
based on CVaR. Several numerical results are presented by using scenarios from simu-
lated geological and price uncertainties.
33

Bibliography
[1] Abdel Sabour, S. A., Dimitrakopoulos, R. G., and Kumral, M. (2008), Mine Design
Selection under Uncertainty, Mining Technology, Vol. 117, No. 2, pp. 53–64.
[2] Andersson, F., Mausser, H., Rosen, D., and Uryasev, S. (2001), Credit Risk Op-
timization with Conditional Value-at-Risk Criterion, Mathematical Programming,
Series B, Vol. 89, pp. 273–291.
[3] Armstrong, D. (1990), Definition of Mining Parameters, Surface Mining (2nd Edi-
tion), SME-Online DigitalLibrary.
[4] Bley, A., Boland, N., Fricke, C., and Froyland, G. (2010), A Strengthened Formu-
lation and Cutting Planes for the Open Pit Mine Production Scheduling Problem,
Computers and Operations Research, Vol. 37, pp. 1641–1647.
[5] Boland, N., Dumitrescu, I., Froyland, G., and Gleixner, A. M. (2009), LP-Based
Disaggregation Approaches to Solving the Open Pit Mining Production Scheduling
Problem with Block Processing Selectivity, Computers and Operations Research,
Vol. 36, pp. 1064–1089.
[6] Caccetta, L. and Giannini, L. M. (1988), An Application of Discrete Mathematics in
the Design of an Open Pit Mine, Discrete Applied Mathematics, Vol. 21, pp. 1–19.
[7] Caccetta, L. and Hill, S. P. (2003), An Application of Branch and Cut to Open Pit
Mine Scheduling, Journal of Global Optimization, Vol. 27, pp. 349–365.
[8] Carneiro, M. C., Ribas, G. P., and Hamacher, S. (2010), Risk Management in the Oil
Supply Chain: A CVaR Approach, Industrial and Engineering Chemistry Research,
Vol. 49, pp. 3286–3294.
35
Bibliography
[9] Dagdelen, K. and Johnson, T. B. (1986), Optimum Open Pit Mine Production
Scheduling by Lagrangian Parameterization, Application of Computers and Oper-
ations Research in the Mineral Industry: 19th AIME, Society of Mining Engineers,
Vol. 19, pp. 127–142.
[10] Dimitrakopoulos, R., Farrelly, C., and Godoy, M. C. (2002), Moving Forward from
Traditional Optimisation: Grade Uncertainty and Risk Effects in Open Pit Mine
Design, Transactions of the Institute of Mining and Metallurgy, Section A, Mining
Industry, Vol. 111, pp. A82–A89.
[11] Dimitrakopoulos, R. and Ramazan, S. (2003), Managing Risk and Waste Mining
in Long-Term Production Planning of Open Pit Mine, SME Annual Meeting and
Exhibition, pp. 3–151.
[12] Dimitrakopoulos, R. and Godoy, M. (2006), Demand Driven and Risk Managing
Strategic Mine Planning, Minerales, Vol. 60, No. 263, pp. 45–55.
[13] Ferland, J. A., Amaya, J., and Djuimo, M. S. (2007), Particle Swarm Procedure for
the Capacitated Open Pit Mining Problem, Autonomous Robots and Agents, Book
series: Studies in Computational Intelligence, Springer-Verlag.
[14] Ford, L. R. and Fulkerson, D. R. (1956), Maximum Flow through a Network, Cana-
dian Journal of Mathematics, Vol. 8, pp. 399–404.
[15] Ford, L. R. and Fulkerson, D. R. (1962), Flow in Networks, Princeton University
Press, NJ.
[16] Gaivoronski, A. A. and Pflug, G. (2004/05), Value-at-Risk in Portfolio Optimization:
Properties and Computational Approach, Journal of Risk, Vol. 7, No. 2, pp. 1–31.
[17] Hochbaum, D. and Chen, A. (2000), Performance Analysis and Best Implemen-
tations of Old and New Algorithms for the Open-Pit Mining Problem, Operations
Research, Vol. 48, No. 6, pp. 894–914.
[18] Hustrulid, W. and Kuchta, K. (2006), Open Pit Mine Planning and Design – Volume
1: Fundamentals, 2nd Ed., Taylor and Francis.
[19] Krokhmal, P., Palmquist, J., and Uryasev, S. (2002), Portfolio Optimization with
Conditional Value-at-Risk Objective and Constraints, Journal of Risk, Vol. 4, pp.
43–68.
[20] Lai, F. J., Bamford, W. E., Yuen, S. T. S., and Li, T. (2009), Implementing Value
at Risk in Slope Risk Evaluation, International Symposium on Rock Slope Stability
in Open Pit Mining and Civil Engineering Proceedings 2009, Santiago, Chile, pp.
1–10.
[21] Lerchs, H. and Grossmann, I. F. (1965), Optimum Design of Open-Pit Mines, Trans-
actions, Canadian Institute of Mining and Metallurgy, Vol. LXVIII, pp. 17–24.
[22] Lim, C., Sherali, H. D., and Uryasev, S. (2010), Portfolio Optimization by Minimiz-
ing Conditional Value-at-Risk via Nondifferentiable Optimization, Computational
Optimization and Applications, Vol. 46, No. 3, pp. 391–415.
36
Bibliography
[23] Mansini, R., Ogryczak, W., and Speranza, M. G. (2007), Conditional Value at Risk
and Related Linear Programming Models for Portfolio Optimization, Annals of Op-
erations Research, Vol. 152, pp. 227–256.
[24] Newman, A. M., Rubio, E., Caro, R., Weintraub, A., and Eurek, K. (2010), A Re-
view of Operations Research in Mine Planning, Interfaces, Vol. 40, No. 3, pp. 222–
245.
[25] Osanloo, M., Gholamnejad, J., and Karimi, B. (2008), Long-Term Open Pit Mine
Production Planning: A Review of Models and Algorithms, International Journal of
Mining, Reclamation and Environment, Vol. 22, No. 1, pp. 3–35.
[26] Picard, J.-C. (1976), Maximum Closure of a Graph and Applications to Combinato-
rial Problems, Management Science, Vol. 22, No. 11, pp. 1268–1272.
[27] Picard, J.-C. and Smith, B. T. (2004), Parametric Maximum Flows and the Calcu-
lation of Optimal Intermediate Contours in Open Pit Mine Design, INFOR Journal,
Vol. 42, No. 2, pp. 143–153.
[28] Picard, J-C. and Queyranne, M. (1982), Selected Applications of Minimum Cuts in
Networks, Information Systems and Operational Research (INFOR), Vol. 20, No. 4,
pp. 394–422.
[29] Ramazan, S. and Dimitrakopoulos, R. (2004), Traditional and New MIP Models
for Production Scheduling with In-Situ Grade Variability, International Journal of
Surface Mining, Vol. 18, pp. 85–98.
[30] Ramazan, S. (2007), The New Fundamental Tree Algorithm for Production Schedul-
ing of Open Pit Mines, European Journal of Operational Research, Vol. 177, pp.
1153–1166.
[31] Ramazan, S. and Dimitrakopoulos, R. (2007), Stochastic Optimization of Long
Term Production Scheduling for Open Pit Mines with a New Integer Programming
Formulation, Orebody Modelling and Strategic Mine Planning, The Australasian
Institute of Mining and Metallurgy, Spectrum Series, Vol. 14, 2nd Edition, pp. 385–
391.
[32] Rhys, J. M. W. (1970), A Selection Problem of Shared Fixed Costs and Networks
Flows, Management Science, Vol. 17, No. 3, pp. 200–207.
[33] Rockafellar, R. T. and Uryasev, S. (2000), Optimization of Conditional Value-at-
Risk, Journal of Risk, Vol. 2, No. 3, pp. 21–41.
[34] Rockafellar, R. T. and Uryasev, S. (2002), Conditional Value-at-Risk for General
Loss Distributions, Journal of Banking and Finance, Vol. 26, No. 7, pp. 1443–1471.
[35] Underwood, R. and Tolwinski, B. (1998), A Mathematical Programming Viewpoint
for Solving the Ultimate Pit Problem, European Journal of Operational Research,
Vol. 107, pp. 96–107.
37
Bibliography
[36] Whittle, J. (1990), Open Pit Optimization, Surface Mining (2nd Edition), SME-
Online Digital Library.
[37] Zhang, M. (2006), Combining Genetic Algorithms and Topological Sort to Optimize
Open-Pit Mine Plans, Mine Planning and Equipment Selection (MPES) – Cardu, M.,
Ciccu, R., Lovera, E. and Michelotti, E. (eds.), Proceedings of 15th International
Symposium, pp. 1234–1239.
[38] Zhao, Y. and Kim, Y. C. (1992), A New Optimum Pit Limit Design Algorithm,
Application of Computers and Operations Research in the Mineral Industry, Vol.
23, pp. 423–434.
38

