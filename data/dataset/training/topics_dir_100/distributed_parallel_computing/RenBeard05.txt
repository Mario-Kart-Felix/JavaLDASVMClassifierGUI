IEEE TRANSACTIONS ON AUTOMATIC CONTROL, VOL. 50, NO. 5, MAY 2005 655
[6] F. H. Clarke, Y. S. Ledyaev, E. D. Sontag, and A. I. Subbotin, “Asymp-
totic controllability implies feedback stabilization,” IEEE Trans Autom.
Control, vol. 42, no. 10, pp. 1394–1407, Oct. 1997.
[7] R. Goebel, “Convex optimal control problems with smooth Hamilto-
nians,” SIAM J. Control Optim., to be published.
[8] , “Duality and uniqueness of convex solutions to stationary
Hamilton-Jacobi equations,” Trans. Amer. Math. Soc., vol. 357, pp.
2187–2203, 2005.
[9] , “Hamiltonian dynamical systems for convex problems of optimal
control: implications for the value function,” in Proc. 41st IEEE Conf.
Decision and Control, Las Vegas, NV, 2002, pp. 728–732.
[10] , “Stationary Hamilton-Jacobi equations for convex control prob-
lems—uniqueness and duality of solutions,” in Optimal Control, Sta-
bilization, and Nonsmooth Analysis, ser. Lecture Notes in Control and
Information Sciences. Heidelberg, Germany: Springer-Verlag, 2004.
[11] R. Goebel and M. Subbotin, “Continuous time constrained linear
quadratic regulator—convex duality approach,” in Proc. 24th Amer.
Control Conf., 2005, to be published.
[12] M. L. Gota and L.Montrucchio, “On Lipschitz continuity of policy func-
tions in continuous-time optimal growth models,” Econom. Theory, vol.
14, pp. 479–488, 1999.
[13] T. Hu and Z. Lin, Control Systems With Actuator Saturation. Boston,
MA: Birkhäuser, 2001.
[14] R. T. Rockafellar, Convex Analysis. Princeton, NJ: Princeton Univ.
Press, 1970.
[15] , “Saddle points of Hamiltonian systems in convex problems of La-
grange,” J. Optim. Theory Appl., vol. 12, no. 4, 1973.
[16] , Conjugate Duality and Optimization. Philadelphia, PA: SIAM,
1974.
[17] R. T. Rockafellar and R. J.-B. Wets, Variational Analysis. New York:
Springer-Verlag, 1998.
[18] A. Saberi, Z. Lin, and A. R. Teel, “Control of linear systems with
saturating actuators,” IEEE Trans. Autom. Control, vol. 41, no. 3, pp.
368–378, Mar. 1996.
[19] E. D. Sontag and H. J. Sussman, “Nonlinear output feedback design for
linear systems with saturating controls,” in Proc. 29 IEEE Conf. Deci-
sion Control, Honolulu, HI, 1990, pp. 3414–3416.
[20] E. D. Sontag, H. J. Sussmann, and Y. D. Yang, “A general result on
the stabilization of linear systems using bounded controls,” IEEE Trans.
Autom. Control, vol. 39, no. 12, pp. 2411–2424, Dec. 1994.
[21] A. A. Stoorvogel, A. Saberi, and G. Shi, “Properties of recoverable re-
gion and semi-global stabilization in recoverable region for linear sys-
tems subject to constraints,”Autmomatica, vol. 40, no. 9, pp. 1481–1494,
2004.
Consensus Seeking in Multiagent Systems Under
Dynamically Changing Interaction Topologies
Wei Ren and Randal W. Beard
Abstract—This note considers the problem of information consensus
among multiple agents in the presence of limited and unreliable infor-
mation exchange with dynamically changing interaction topologies. Both
discrete and continuous update schemes are proposed for information
consensus. This note shows that information consensus under dynamically
changing interaction topologies can be achieved asymptotically if the union
of the directed interaction graphs have a spanning tree frequently enough
as the system evolves.
Index Terms—Cooperative control, graph theory, information con-
sensus, multiagent systems, switched systems.
I. INTRODUCTION
The study of information flow and interaction amongmultiple agents
in a group plays an important role in understanding the coordinated
movements of these agents. As a result, a critical problem for coordi-
nated control is to design appropriate protocols and algorithms such
that the group of agents can reach consensus on the shared informa-
tion in the presence of limited and unreliable information exchange
and dynamically changing interaction topologies. Consensus problems
have recently been addressed in [1]–[7], to name a few. In this note,
we extend the results of [2] to the case of directed graphs and present
conditions for consensus of information under dynamically changing
interaction topologies.
In contrast to [2], directed graphs will be used to represent the in-
teraction (information exchange) topology between agents, where in-
formation can be exchanged via communication or direct sensing. A
preliminary result for information consensus is presented in [8], where
a linear update scheme is proposed for directed graphs. However, the
analysis in [8] was not able to utilize all available communication links.
A solution to this issue was presented in [4] for time-invariant commu-
nication topologies. Information consensus for dynamically evolving
information was addressed in [9] in the context of spacecraft formation
flying where the exchanged information is the configuration of the vir-
tual structure associated with the (dynamically evolving) formation.
In many applications, the interaction topology between agents may
change dynamically. For example, communication links between
agents may be unreliable due to disturbances and/or subject to com-
munication range limitations. If information is being exchanged by
direct sensing, the locally visible neighbors of a vehicle will likely
change over time. In [2], a theoretical explanation is provided for
the observed behavior of the Vicsek model [10]. Possible changes
over time in each agent’s nearest neighbors is explicitly taken into
account, and is an example of information consensus under dynami-
cally changing interaction topologies. Furthermore, it is shown in [2]
that consensus can be achieved if the union of the interaction graphs
for the team are connected frequently enough as the system evolves.
Manuscript received December 23, 2003; revised October 1, 2004 and
October 19, 2004. Recommended by Associate Editor J. Hespanha. This
work was funded by the Air Force Office of Scientific Research under Grants
F49620-01-1-0091 and F49620-02-C-0094, and by the Defense Advanced
Research Projects Agency under Grant NBCH1020013.
W. Ren is with the Space Systems Laboratory, the University of Maryland,
College Park, MD 20742 USA (e-mail: weiren@ssl.umd.edu).
R. W. Beard is with the Electrical and Computer Engineering Department,
BrighamYoungUniversity, Provo, UT 84602USA (e-mail: beard@ee.byu.edu).
Digital Object Identifier 10.1109/TAC.2005.846556
0018-9286/$20.00 © 2005 IEEE
656 IEEE TRANSACTIONS ON AUTOMATIC CONTROL, VOL. 50, NO. 5, MAY 2005
However, the approach in [2] is based on bidirectional information
exchange, modeled by undirected graphs. Extensions of this work to
second-order dynamics are discussed in [16] and [17]
There are a variety of practical applications where information only
flows in one direction. For example, in leader-following scenarios, the
leader may be the only vehicle equipped with a communication trans-
mitter. For heterogeneous teams, some vehicles may have transceivers,
while other less capable members only have receivers. There is a need
to extend the results reported in [2] to interaction topologies with di-
rectional information exchange.
In addition, in [2] certain constraints are imposed on the weighting
factors in the information update schemes, which may be extended to
more general cases. For example, it may be desirable to weigh the infor-
mation from different agents differently to represent the relative con-
fidence of each agent’s information or relative reliability of different
communication or sensing links.
The objective of this note is to extend [2] to the case of directed
graphs and explore the minimum requirements to reach consensus by
using graph theory and matrix theory. As a comparison, [5] applies
a set-valued Lyapunov approach to consider discrete-time consensus
algorithms with unidirectional time-dependent communication links.
In addition, [3] solves the average-consensus problem with directed
graphs, which requires the graph to be strongly connected and bal-
anced. We show that under certain assumptions consensus1 can be
achieved asymptotically under dynamically changing interaction
topologies if the union of the collection of interaction graphs across
some time intervals has a spanning tree frequently enough. The
spanning tree requirement is a milder condition than connectedness
and is therefore more suitable for practical applications. We also allow
the relative weighting factors to be time-varying, which provides ad-
ditional flexibility. As a result, the convergence conditions and update
schemes in [2] are shown to be a special case of a more general result.
An additional contribution of this note is that we explicitly show
that a nonnegative matrix with the same positive row sums has its
spectral radius (its row sum in this case) as a simple eigenvalue if
and only if the directed graph of this matrix has a spanning tree. In
contrast, the Perron–Frobenius Theorem [11] for nonnegative matrices
only deals with irreducible matrices, that is, matrices with strongly con-
nected graphs. Besides having a spanning tree, if this matrix also has
positive diagonal entries, we show that its row sum is the unique eigen-
value of maximum modulus.
The note is organized as follows. In Section II, we establish the no-
tation and formally state the problem. Section III contains the main
results, and Section IV offers our concluding remarks.
II. PROBLEM STATEMENT
Let A = fAi j i 2 Ig be a set of n agents, where
I = f1; 2; . . . ; ng. A directed graph G will be used to model
the interaction topology among these agents. In G, the ith node
represents the ith agent Ai and a directed edge from Ai to Aj denoted
as (Ai; Aj) represents a unidirectional information exchange link
from Ai to Aj , that is, agent j can receive or obtain information
from agent i, (i; j) 2 I . If there is a directed edge from Ai to Aj ,
Ai is defined as the parent node and Aj is defined as the child node.
The interaction topology may be dynamically changing, therefore let
G = fG1;G2; . . . ;GMg denote the set of all possible directed inter-
action graphs defined for A. In applications, the possible interaction
topologies will likely be a subset of G. Obviously, G has finite elements.
The union of a group of directed graphs fGi ;Gi ; . . . ;Gi g  G is
a directed graph with nodes given by Ai, i 2 I and edge set given by
the union of the edge sets of Gi , j = 1; . . . ;m.
1Not necessarily average-consensus.
A directed path in graph G is a sequence of edges
(Ai ; Ai ); (Ai ; Ai ); (Ai ; Ai ); . . . in that graph. Graph
G is called strongly connected if there is a directed path from Ai
to Aj and Aj to Ai between any pair of distinct nodes Ai and Aj ,
8(i; j) 2 I . A directed tree is a directed graph, where every node,
except the root, has exactly one parent. A spanning tree of a directed
graph is a directed tree formed by graph edges that connect all the
nodes of the graph (cf. [12]). We say that a graph has (or contains)
a spanning tree if a subset of the edges forms a spanning tree. Let
Mn( ) represent the set of all n  n real matrices. Given a matrix
A = [aij ] 2 Mn( ), the directed graph of A, denoted by  (A), is
the directed graph on n nodes Vi, i 2 I , such that there is a directed
edge in  (A) from Vj to Vi if and only if aij 6= 0 (cf. [11]).
Let i 2 , i 2 I , represent the ith information state associated
with the ith agent. The set of agents A is said to achieve consensus
asymptotically if for any i(0), i 2 I , ki(t)  j(t)k ! 0 as t!1
for each (i; j) 2 I .
Given T as the sampling period, we propose the following discrete-
time consensus scheme:
i[k + 1] =
1
n
j=1
ij [k]Gij [k]
n
j=1
ij [k]Gij [k]j [k] (1)
where k 2 f0; 1; 2; . . .g is the discrete-time index, (i; j) 2 I ,ij [k] >
0 is a weighting factor chosen from any finite set, Gii[k] 1, and
Gij [k] equals one if information flows from Aj to Ai at time t = kT
and zero otherwise, 8j 6= i. Equation (1) can be written in matrix form
as
[k + 1] = D[k][k] (2)
where  = [1; . . . ; n]T , D = [dij ], (i; j) 2 I , with
dij = ij [k]Gij [k]=
n
j=1
ij [k]Gij [k].
In addition, we propose the following continuous-time consensus
scheme:
_i(t) =  
n
j=1
ij(t)Gij(t)(i(t)  j(t)) (3)
where (i; j) 2 I , ij(t) > 0 is a weighting factor chosen from any
finite set,Gii(t) 1, andGij(t) equals one if information flows from
Aj to Ai at time t and zero otherwise, 8j 6= i. Equation (3) can be
written in matrix form as
_(t) = C(t)(t) (4)
where C = [cij ], (i; j) 2 I , with cii =   j 6=i(ij(t)Gij(t)) and
cij = ij(t)Gij(t), j 6= i.
Note that the interaction topology G may be dynamically changing
due to unreliable transmission or limited communication/sensing
range. This implies that Gij [k] in (1) and Gij(t) in (3) may be
time-varying. We use G[k] and G(t) to denote the dynamically
changing interaction topologies corresponding to (1) and (3), respec-
tively. We also allow the weighting factors ij [k] in (1) and ij(t)
in (3) to be dynamically changing to represent possibly time-varying
relative confidence of each agent’s information state or relative relia-
bilities of different information exchange links between agents. As a
result, both matrixD[k] in (1) and matrix C(t) in (3) are dynamically
changing over time.
Compared to the models in [2], we do not constrain the weighting
factors ij [k] in (1) other than to require that they are positive. This
provides needed flexibility for some applications. The Vicsek model
and simplified Vicsek model used in [2] can be thought of as special
cases of our discrete-time consensus scheme. If we let ij [k] 1
in (1), we obtain the Vicsek model. Also the simplified Vicsek model
IEEE TRANSACTIONS ON AUTOMATIC CONTROL, VOL. 50, NO. 5, MAY 2005 657
can be obtained if we let ij [k] 1=g, 8j 6= i, and ii[k] 1  
j 6=i
(1=g)Gij [k], where g > n is a constant. Compared to [8], where
the interaction graph is assumed to be time-invariant and weighting fac-
tors ij are specified a priori to be constant and equal to each other, we
study continuous-time consensus scheme with dynamically changing
interaction topologies and weighting factors. The continuous update
rule in [2] can also be regarded as a special case of our continuous up-
date scheme by letting ij 1=n.
The main result of this note is that the update schemes (1) and (3)
achieve asymptotic consensus for A if the union of the collection of
directed interaction graphs across some time intervals has a spanning
tree frequently enough as the system evolves. Toward that end, we have
the following preliminary results.
Lemma 2.1: The discrete update scheme (1) achieves asymptotic
consensus for A if and only if
D[k   1]D[k   2]   D[2]D[1]D[0]! 1cT (5)
as k !1, where 1 denote the n 1 column vector with all the entries
equal to 1, and c is an n 1 vector of constant coefficients.
Proof: Note that the set of agents A reaches consensus asymp-
totically if and only if the set
S = f 2 n : 1 = 2 =    = ng
is attractive and positively invariant.
Since
[k] = D[k   1]D[k   2]   D[1]D[0][0]
(5) implies that
lim
k!1
[k] = 1cT [0] =
cT [0]
...
cT [0]
which implies that S is attractive and positively invariant.
Conversely, if S is attractive and positively invariant, then
lim
k!1
[k] = lim
k!1
D[k   1]D[k   2]   D[1]D[0][0] = 1
where  is a constant coefficient. Which, in turn, implies that
lim
k!1
D[k   1]D[k   2] . . .D[1]D[0] = 1cT :
Lemma 2.2: The continuous update scheme (3) achieves asymptotic
consensus for A if and only if
(t; 0) = I +
t
0
C(1)d1
+
t
0
C(1)

0
C(2)d2 d1 +    ! 1c
T (6)
as t ! 1.
Proof: Noting that (t) = (t; 0)(0), the proof is similar to
that of Lemma 2.1.
III. CONSENSUS OF INFORMATION UNDER DYNAMICALLY CHANGING
INTERACTION TOPOLOGIES
Let In denote the n  n identity matrix. A vector is nonnegative
if all its elements are nonnegative. A matrix A = [aij ] 2 Mn( ) is
nonnegative, denoted as A  0, if all its entries are nonnegative. Fur-
thermore, if all its row sums are +1, A is said to be a (row) stochastic
matrix [11]. A stochastic matrix P is called indecomposable and ape-
riodic (SIA) if limn!1 Pn = 1yT , where y is some column vector
[13]. For nonnegative matrices, A  B implies that A   B is a non-
negative matrix. It is easy to verify that if A  B, for some  > 0,
and the directed graph ofB has a spanning tree, then the directed graph
of A has a spanning tree.
We need the following two lemmas. The first lemma is from [2] and
the second lemma is originally from [13] and restated in [2].
Lemma 3.1: [2] Let m  2 be a positive integer and let
P1; P2; . . . ; Pm be nonnegative n  n matrices with positive di-
agonal elements, then
P1P2 . . .Pm  (P1 + P2 +   + Pm);
where  > 0 can be specified from matrices Pi, i = 1; . . . ; m.
Lemma 3.2: [13] Let S1; S2; . . . ; Sk be a finite set of SIA matrices
with the property that for each sequence Si ; Si ; . . . ; Si of positive
length, the matrix product Si Si . . .Si is SIA. Then, for each in-
finite sequence Si ; Si ; . . . there exists a column vector y such that
lim
j!1
Si Si . . .Si = 1y
T :
We also need the following lemmas to derive our main results.
Lemma 3.3: Given a matrix A = [aij ] 2 Mn( ), where aii  0,
aij  0, 8i 6= j, and
n
j=1
aij = 0 for each j, thenA has at least one
zero eigenvalue and all of the nonzero eigenvalues are in the open left
half plane. Furthermore, A has exactly one zero eigenvalue if and only
if the directed graph associated with A has a spanning tree.
Proof: For the first statement, note thatA is diagonally dominant,
has zero row sum, and nonpositive diagonal elements. Therefore, from
the Gersgorin disc theorem (cf. [11]),A has at least one zero eigenvalue
and all the other nonzero eigenvalues are in the open left half plane.
The second statement will be shown using an induction argument.
Sufficiency: Step 1: The first step is to show that A has exactly
one zero eigenvalue if the directed graph associated with A is itself a
spanning tree.
Noting that the graph associated withA is a spanning tree, renumber
the agents consecutively by depth in the spanning tree, with the root
numbered as agent A1. In other words, children of A1 are numbered
A2 to Aq , children of A2 to Aq are labeled Aq +1 to Aq and so
on. Note that the associated matrix A is lower diagonal with only one
diagonal entry equal to zero.
Step 2: Let Q = [qij ] 2 Mn( ), where qii  0, qij  0,
8i 6= j, and n
j=1
qij = 0 for each j. Let S = [sij ] 2Mn( ) satisfy
the same properties as matrix Q. Also let G1 and G2 be the interaction
graphs associated with Q and S, respectively. We assume that s`` =
q`` `m, s`m = q`m+`m, and sij = qij otherwise, where `m > 0
denotes the weighting factor for the information link from agentm to
agent `,m 6= `. That is, G2 corresponds to an interaction graph where
one more directed link from node m to node ` is added to graph G1,
wherem 6= `. Denote pQ(t) = det(tI Q) and pS(t) = det(tI S)
as the characteristic polynomial of Q and S, respectively. Let Qt =
tI   Q and St = tI   S. Given any matrix M , denote M([i; j]) as
the sub-matrix ofM formed by deleting the ith row and jth column.
Next, we will show that if matrixQ has exactly one zero eigenvalue,
then so does matrix S. Without loss of generality, we assume that the
new directed information link added to graph G1 is from node m to
node 1, where m 6= 1, for simplicity since we can always renumber
node ` as node 1.
Obviously matrix S has at least one zero eigenvalue and all the other
nonzero eigenvalues are in the open left-half plane following the first
statement of this Lemma. Later, we will show that S has only one zero
eigenvalue.
Assume that Qt = [qtij ], and St = [stij ], (i; j) 2 I . Accordingly,
it can be seen that st11 = t   s11 = t   q11 + 1m = qt11 + 1m,
658 IEEE TRANSACTIONS ON AUTOMATIC CONTROL, VOL. 50, NO. 5, MAY 2005
st1m =  s1m =  q1m   1m = qt1m   1m, and stij = qtij ,
otherwise. Also note that detSt([1; j]) = detQt([1; j]), j 2 I . Then,
we know that
detSt =
n
j=1
( 1)1+jst1jdetSt([1; j])
=
n
j=1
( 1)1+jqt1jdetSt([1; j])
+ 1mdetSt([1; 1])  ( 1)
1+m
1mdetSt([1;m])
=detQt + 1m(detSt([1; 1]) + ( 1)
mdetSt([1;m])):
Consider a matrixE = [eij ], (i; j) = 1; . . . ; n 1, given by adding
[s21; s31; . . . ; sn1]
T to the (m  1)th column of matrix S([1; 1]). Ma-
trix E can be denoted as
E =
s22 s23    s2m + s21    s2n
s32 s33    s3m + s31    s3n
...
...
...
. . .
...
...
sn2 sn3    snm + sn1    snn
:
Thus, ei(m 1) = s(i+1)m + s(i+1)1, i = 1; . . . ; n   1. Using the
properties of determinants, it can be verified that
det(tI  E) = detSt([1; 1]) + ( 1)
mdetSt([1;m]):
Obviously, matrix E has zero row sum and nonpositive diagonal ele-
ments. Also matrixE is diagonally dominant. From the Gersgorin disc
theorem, we know that E has at least one zero eigenvalue and all the
other nonzero eigenvalues are on the open left-half plane. As a result,
the Routh stability criterion implies that the characteristic polynomial
of E denoted as det(tI   E) has a nonnegative coefficient in the first
power of t. We also know that matrix Q has a positive coefficient for
the first power of t in its characteristic polynomial detQt sinceQ has
exactly one zero eigenvalue and all the others are in the open left-half
plane.
Noting that detSt = detQt + 1m det(tI  E), it is obvious that
pS(t) has a positive coefficient for the first power of t. Therefore, S
can only have one zero eigenvalue.
Step 3: If graph G associated with A is itself a spanning tree, we
know thatA has exactly one zero eigenvalue from Step 1. If not, graph
G can be constructed by consecutively adding information links to the
spanning tree. Step 2 implies that adding one additional information
link to the spanning tree results in an associated matrix that also has
exactly one zero eigenvalue. We can recursively add additional infor-
mation links, where Step 2 implies that the matrix associated with the
new graph has exactly one zero eigenvalue, until we obtain the graph
G. By induction, we know that A has exactly one zero eigenvalue if
graph G has a spanning tree.
Necessity: If graph G does not have a spanning tree, then there
exist at least two separate subgroups or at least two agents in the group
who do not receive any information. For the first case, there is no infor-
mation exchange between these subgroups and matrixA can be written
as block diagonal form by renumbering these agents based on their
subgroup. It is straightforward to see that each block has at least one
zero eigenvalue. Therefore,A has at least two zero eigenvalues. For the
second case, A has at least two zero rows, which implies that A has at
least two zero eigenvalues.
Lemma 3.4: If a nonnegative matrix A = [aij ] 2 Mn( ) has the
same positive constant row sums given by  > 0, then  is an eigen-
value of A with an associated eigenvector 1 and (A) = , where
() denotes the spectral radius. In addition, the eigenvalue  of A has
algebraic multiplicity equal to one, if and only if the graph associated
with A has a spanning tree. Furthermore, if the graph associated with
A has a spanning tree and aii > 0, then  is the unique eigenvalue of
maximum modulus.
Proof: The first statement follows directly from the properties of
nonnegative matrices (cf. [11]).
For the second statement, we need to show both the necessary and
sufficient conditions.
Sufficiency: If the graph associated with A has a spanning tree,
then the graph associated with B = A  In also has a spanning tree.
We know that i(A) = i(B) + , where i = 1; . . . ; n, and i()
represents the ith eigenvalue. Noting that B satisfies the conditions in
Lemma 3.3, we know that zero is an eigenvalue of B with algebraic
multiplicity equal to one, which implies that  is an eigenvalue of A
with algebraic multiplicity equal to one.
Necessity: If the graph associated with A does not have a span-
ning tree, we know that B = A   In has more than one zero eigen-
value from Lemma 3.3, which in turn implies thatA has more than one
eigenvalue equal to .
For the third statement, the Gersgorin disc theorem [11] implies that
all the eigenvalues ofA are located in the union of the n discs given by
n
i=1
z 2 C : jz   aiij 
j 6=i
jaij j
whereC is the set of complex numbers. Noting that aii > 0, it is easy
to see that this union is included in a circle given by fz 2 C : jzj = g
and the circular boundaries of the union of n discs has only one inter-
section with the circle at z = . Thus, we know that jj <  for every
eigenvalue of A satisfying  6= . Combining the second statement,
we know that  is the unique eigenvalue of maximum modulus.
Corollary 3.5: A stochastic matrix has algebraic multiplicity equal
to one for its eigenvalue  = 1 if and only if the graph associated
with the matrix has a spanning tree. Furthermore, a stochastic matrix
with positive diagonal elements has the property that jj < 1 for every
eigenvalue not equal to one.
Lemma 3.6: If A 2 Mn and A  0, then the spectral radius of
A, denoted as (A), is an eigenvalue of A and there is a nonnegative
vector x  0, x 6= 0, such that Ax = (A)x.
Proof: See [11, Th. 8.3.1].
Lemma 3.7: Let A = [aij ] 2 Mn( ) be a stochastic matrix. If
A has an eigenvalue  = 1 with algebraic multiplicity equal to one,
and all the other eigenvalues satisfy jj < 1, then A is SIA, that is,
limm!1A
m ! 1T , where  satisfies AT  =  and 1T  = 1.
Furthermore, each element of  is nonnegative.
Proof: The first part of the lemma follows [11, Lemma 8.2.7].
For the second part, it is obvious that AT is also nonnegative and has
(AT ) = 1 as an eigenvalue with algebraic multiplicity equal to one.
Thus, Lemma 3.6 implies that the eigenspace of AT associated with
eigenvalue  = 1 is given by cx, where c 2 C, c 6= 0, and x is a
nonnegative eigenvector. Since  is also an eigenvector of AT associ-
ated with eigenvalue  = 1 and satisfies 1T  = 1, it follows that each
element of  must be nonnegative.
A. Consensus Using Discrete Time Update Scheme
As a first step toward the general case, we first show necessary and
sufficient condition for consensus of information using discrete time
update scheme (1) with a time-invariant interaction topology and con-
stant weighting factors, that is, a constant matrix D.
Theorem 3.8: With a time-invariant interaction topology and con-
stant weighting factors, the discrete-time update scheme (1) achieves
consensus asymptotically as k !1 forA if and only if the associated
interaction graph G has a spanning tree.
Proof: From Lemma 2.1, we need to show that Dk ! 1cT ,
where c is a constant column vector.
IEEE TRANSACTIONS ON AUTOMATIC CONTROL, VOL. 50, NO. 5, MAY 2005 659
Sufficiency: ObviouslyD is a stochastic matrix with positive di-
agonal entries. The fact that graph G has a spanning tree also implies
that the directed graph ofD has a spanning tree. Combining Corollary
3.5 and Lemma 3.7, we know that limk!1Dk ! 1T , where  sat-
isfies the properties defined in Lemma 3.7.
Necessity: If G does not have a spanning tree, neither does the
directed graph ofD, which implies, by Corollary 3.5, that the algebraic
multiplicity of eigenvalue  = 1 ofD ism > 1. Therefore, the Jordan
decomposition ofDk has the formDk = MJkM 1, whereM is full
rank and Jk is lower triangular withm diagonal elements equal to one.
Therefore, the rank of limk!1Dk is at least m > 1 which implies,
by Lemma 2.1, that A cannot reach consensus asymptotically.
The next lemma sets the stage for showing that under certain condi-
tions, the existence of a spanning tree is sufficient for consensus under
dynamically changing interaction topologies using the discrete update
scheme (1).
Lemma 3.9: If the union of a set of directed graphs
fGi ;Gi ; . . . ;Gi g  G has a spanning tree, then the matrix
product Di . . .Di Di is SIA, where Di is a stochastic matrix
corresponding to each directed graph Gi in (2).
Proof: From Lemma 3.1, we know that Di   Di Di 

m
j=1Di for some  > 0.
Since the union of fGi ;Gi ; . . . ;Gi g has a spanning tree, we
know that the directed graph of matrix m
j=1Di has a spanning
tree, which in turn implies that the directed graph of the matrix
productDi . . .Di Di has a spanning tree. Also the matrix product
Di . . .Di Di is a stochastic matrix with positive diagonal entries
since stochastic matrices with positive diagonal entries are closed
under matrix multiplication.
Combining Corollary 3.5 and Lemma 3.7, we know that the matrix
productDi Di . . .Di is SIA.
The following theorem extends the discrete-time convergence result
of [2].
Theorem 3.10: Let G[k] 2 G be a switching interaction graph at
time t = kT . Also, let ij [k] 2 , where  is a finite set of arbi-
trary positive numbers. The discrete update scheme (1) achieves con-
sensus asymptotically for A if there exists an infinite sequence of uni-
formly bounded, nonoverlapping time intervals [kjT; (kj+ lj)T ), j =
1; 2; . . ., starting at k1 = 0, with the property that each interval [(kj +
lj)T; kj+1T ) is uniformly bounded and the union of the graphs across
each interval [(kj + lj)T; kj+1T ) has a spanning tree. Furthermore, if
the union of the graphs after some finite time does not have a spanning
tree, then consensus cannot be achieved asymptotically for A.
Proof: Let D denote the set of all possible matrices D[k] under
dynamically changing interaction topologies and weighting factors
ij [k]. We know that D is a finite set since both set G and set  are
finite.
Consider the jth time interval [kjT; kj+1T ), which includes the time
interval [kjT; (kj + lj)T ) and must be uniformly bounded since both
[kjT; (kj + lj)T ) and [(kj + lj)T; kj+1T ) are uniformly bounded.
Also, the sequence of time intervals [kjT; kj+1T ), j = 1; 2; . . ., are
contiguous.
The union of the graphs across [kjT; kj+1T ), denoted as G[kj ], has
a spanning tree since the union of the graphs across [kjT; (kj + lj)T )
has a spanning tree. Let fD[kj ]; D[kj+1]; . . . ; D[kj+1 1]g be the set
of stochastic matrices corresponding to each graph in the union G[kj ].
Following Lemma 3.9, the matrix product D[kj+1   1] . . .D[kj +
1]D[kj ], j = 1; 2; . . ., is SIA. Then, by applying Lemma 3.2 and mim-
icking a similar proof for [2, Th. 2], the first part can be proved.
If the union of the graphs after some finite time t̂ does not have a
spanning tree, then during the infinite time interval [t̂;1), there exist
at least two agents such that there is no path in the union of the graphs
that contains these two agents, which then implies that information of
these two agents cannot reach consensus.
B. Consensus Using Continuous Time Update Scheme
The continuous-time analog of Theorem 3.8 has been shown in [4].
Therefore, we will focus on demonstrating that under certain condi-
tions, the existence of a spanning tree is also sufficient for consensus
under dynamically changing interaction topologies using the contin-
uous time update scheme. To do so, we need the following lemma.
Lemma 3.11: If the union of the directed graphs
fGt ;Gt ; . . . ;Gt g  G has a spanning tree and Ct is the
matrix corresponding to each directed graph Gt in (4), then the matrix
product eC t . . . eC t eC t is SIA, where ti > 0 are
bounded.
Proof: From (4), each matrix Ct satisfies the properties defined
in Lemma 3.3. Thus, each Ct can be written as the sum of a nonnega-
tive matrixMt and t In, where t is the maximum absolute value
of the diagonal entries of Ct , i = 1; . . . ;m.
From [4, Lemma 1], we know that eC t = e  t eM t 
iMt for some i > 0. Since the union of the directed
graphs fGt ;Gt ; . . . ;Gt g has a spanning tree, we know that
the union of the directed graphs of Mt has a spanning tree,
which in turn implies that the union of the directed graphs of
eC t has a spanning tree. From Lemma 3.1, we know that
eC t . . . eC t eC t   m
i=1 e
C t for some  > 0,
which implies that the aforementioned matrix product also has a
spanning tree.
It can also be verified that each matrix eC t is a stochastic ma-
trix with positive diagonal entries, which implies that the above matrix
product is also stochastic with positive diagonal entries.
Combining Corollary 3.5 and Lemma 3.7, we know that the previous
matrix product is SIA.
In this note, we also apply dwell time (cf. [14] and [2]) to the contin-
uous time update scheme (4), which implies that the interaction graph
and weighting factors are constrained to change only at discrete times,
that is, the matrix C(t) is piecewise constant.
Equation (4) can be rewritten as
_(t) = C(ti)(t); t 2 [ti; ti + i) (7)
where t0 is the initial time and t1; t2; . . . is an infinite time sequence at
which the interaction graph or weighting factors change, resulting in a
change in C(t).
Let i = ti+1   ti be the dwell time, i = 0; 1; . . ..
Note that the solution to (7) is given by (t) =
eC(t )(t t )eC(t ) . . . eC(t ) eC(t ) (0), where k
is the largest nonnegative integer satisfying tk  t. Let  be a finite
set of arbitrary positive numbers. Let  be an infinite set generated
from set  , which is closed under addition, and multiplications by
positive integers. We assume that i 2 , i = 0; 1; . . .. By choosing
the set  properly, dwell time can be chosen from an infinite set ,
which somewhat simulates the case when the interaction graph G
changes dynamically over time.
The following theorem extends the continuous time convergence re-
sult in [2].
Theorem 3.12: Let t1; t2; . . . be an infinite time sequence at which
the interaction graph or weighting factors switch and i = ti+1   ti 2
, i = 0; 1; . . .. Let G(ti) 2 G be a switching interaction graph at
time t = ti and ij(ti) 2 , where  is a finite set of arbitrary positive
numbers. The continuous-time update scheme (3) achieves consensus
asymptotically for A if there exists an infinite sequence of uniformly
bounded, nonoverlapping time intervals [ti ; ti +l ), j = 1; 2; . . .,
starting at ti = t0, with the property that each interval [ti +l ; ti )
660 IEEE TRANSACTIONS ON AUTOMATIC CONTROL, VOL. 50, NO. 5, MAY 2005
is uniformly bounded and the union of the graphs across each interval
interval [ti +l ; ti ) has a spanning tree. Furthermore, if the union
of the graphs after some finite time does not have a spanning tree, then
consensus cannot be achieved asymptotically for A.
Proof: The set of all possible matrices eC(t ) , where i 2 ,
under dynamically changing interaction topologies and weighting fac-
tors can be chosen or constructed by matrix multiplications from the
set E = feC(t ) ; i 2 g. Clearly, E is finite since G, , and  are
all finite.
Consider the jth time interval [ti ; ti ), which includes the
time interval [ti ; ti +l ) and must be uniformly bounded since both
[ti ; ti +l ) and [ti +l ; ti ) are uniformly bounded. Also, the
sequence of time intervals [ti ; ti ), j = 1; 2; . . ., are contiguous.
The union of the graphs across [ti ; ti ), denoted as G(ti ),
has a spanning tree since the union of graphs across [ti ; ti +l )
has a spanning tree. Let fC(ti ); C(ti +1); . . . ; C(ti  1)g
be a set of matrices corresponding to each graph in the
union G(ti ). Following Lemma 3.11, the matrix product
e
C(t )
. . . e
C(t )
e
C(t ) , j = 1; 2; . . ., is
SIA. Then, the first statement follows from Lemma 3.2 and an
argument similar to the proof of [2, Th. 2].
The proof of the second statement is similar to the argument used in
Theorem 3.10.
C. Discussion
The contribution of this note is that the results in [2], which are lim-
ited to undirected graphs, are extended to directed graphs. Therefore,
unidirectional information exchange is allowed instead of requiring
bidirectional information exchange. This will be important in appli-
cations where bidirectional communication or sensing is not available.
Reference [2] shows that consensus of information (the heading of
each agent in their context) can be achieved if the union of a collection
of graphs is connected frequently enough. This note demonstrates that
the same result can be achieved as long as the union of the graphs has
a spanning tree, which is a milder requirement than being connected
and implies that one half of the information exchange links required in
[2] can be removed without adversely affecting the convergence result.
In this sense, the results for convergence in [2] can be thought of as
a special case of a more general result. Of course, the final achieved
equilibrium points will depend on the property of the directed graphs.
For example, compared to strongly connected graphs, graphs that are
not strongly connected will reach different final equilibrium points (see
[4] for an analysis of the final equilibrium points).
The leader following scenario described in [2] can also be thought of
as a special case of our result. If there is one agent in the group which
does not have any incoming link, but the union of the interaction graphs
has a spanning tree frequently enough, then this agent must be the root
of the spanning tree, i.e, the leader. Since consensus is guaranteed, the
information state of the other agents asymptotically converges to the
information state of the leader. Therefore, the scenario discussed in [2]
of being linked to a leader frequently enough is a special case of having
a spanning tree, frequently enough, with the leader as the root.
For the continuous model used in [2], the switching times of the in-
teraction graph is constrained to be separated by D time units, where
D is a constant dwell time. Our continuous update scheme allows the
switching times to be within an infinite set of positive numbers gen-
erated by any finite set of positive numbers, which is better suited to
simulating the random switching of interaction graphs. Therefore, the
continuous scheme in [2] can be thought of a special case of our result
by letting  = fdg and  = fkd j k = 1; 2; . . .g.
Unlike the update schemes in [2], we do not constrain the weighting
factors in our discrete and continuous update schemes, other than to
require that they be positive. This provides flexibility to account for
relative confidence in information from different agents.
An additional contribution of this note is the proof for proper-
ties of nonnegative matrices with the same positive row sums. The
Perron–Frobenius Theorem states that if a nonnegative matrix A is
irreducible, that is, the directed graph of A is strongly connected,
then the spectral radius of A is a simple eigenvalue. We show that the
irreducibility condition is too stringent for nonnegative matrices with
the same positive row sums. Lemma 3.4 explicitly shows that for a
nonnegative matrix A with identical positive row sums, the spectral
radius of A (the row sum in this case) is a simple eigenvalue if and
only if the directed graph of A has a spanning tree. In other words, A
may be reducible but retains its spectral radius as a simple eigenvalue.
Furthermore, if A has a spanning tree and positive diagonal entries,
we know that the spectral radius of A is the unique eigenvalue of
maximum modulus.
Note that we assume that weighting factors ij and ij are chosen
from any finite set of positive numbers for simplicity of proof. In fact,
the results of this note are still valid if this assumption is relaxed to
ij 2 [L; M ] and ij 2 [L; M ], where L, M , L, and M are
arbitrary positive numbers satisfying L < M and L < M . The
argument is based on the concluding remark in [13], which deals with
the case when the set of stochastic matrices is infinite.
IV. CONCLUSION
This note has considered the problem of information consensus
under dynamically changing interaction topologies and weighting
factors. We have used directed graphs to represent information ex-
changes among multiple agents, taking into account the general case
of unidirectional information exchange. We also proposed discrete
and continuous update schemes for information consensus and gave
conditions for asymptotic consensus under dynamically changing in-
teraction topologies and weighting factors using these update schemes.
The reader is referred to [15] for simulation examples that illustrate
the results presented in this note.
REFERENCES
[1] J. A. Fax and R. M. Murray, “Information flow and cooperative control
of vehicle formations,” IEEE Trans. Autom. Control, vol. 49, no. 9, pp.
1465–1476, Sep. 2004.
[2] A. Jadbabaie, J. Lin, andA. S.Morse, “Coordination of groups ofmobile
autonomous agents using nearest neighbor rules,” IEEE Trans. Autom.
Control, vol. 48, no. 6, pp. 988–1001, Jun. 2003.
[3] R. Olfati-Saber and R. M. Murray, “Consensus problems in networks of
agents with switching topology and time-delays,” IEEE Trans. Autom.
Control, vol. 49, no. 9, pp. 1520–1533, Sep. 2004.
[4] W. Ren, R. W. Beard, and T. W. McLain, “Coordination variables and
consensus building in multiple vehicle systems,” in Cooperative Con-
trol. ser. Lecture Notes in Control and Information Sciences, V. Kumar,
N. E. Leonard, and A. S. Morse, Eds. New York: Springer-Verlag,
2004, vol. 309, pp. 171–188.
[5] L. Moreau, “Stability of multiagent systems with time-dependent
communication links,” IEEE Trans. Autom. Control, vol. 50, no. 2, pp.
169–182, Feb. 2005.
[6] Z. Lin, M. Broucke, and B. Francis, “Local control strategies for groups
of mobile autonomous agents,” IEEE Trans. Autom. Control, vol. 49, no.
4, pp. 622–629, Apr. 2004.
[7] L. Xiao and S. Boyd, “Fast linear iterations for distributed averaging,”
Syst. Control Lett., vol. 53, pp. 65–78, 2004.
[8] R. W. Beard and V. Stepanyan, “Synchronization of information in dis-
tributed multiple vehicle coordinated control,” in Proc. IEEE Conf. De-
cision and Control, Maui, HI, Dec. 2003, pp. 2029–2034.
[9] W. Ren and R. W. Beard, “Decentralized scheme for spacecraft forma-
tion flying via the virtual structure approach,” AIAA J. Guid., Control,
Dyna., vol. 27, no. 1, pp. 73–82, Jan.-Feb. 2004.
IEEE TRANSACTIONS ON AUTOMATIC CONTROL, VOL. 50, NO. 5, MAY 2005 661
[10] T. Vicsek, A. Czirok, E. B. Jacob, I. Cohen, and O. Schochet, “Novel
type of phase transitions in a system of self-driven particles,” Phys. Rev.
Lett., vol. 75, pp. 1226–1229, 1995.
[11] R. A. Horn and C. R. Johnson, Matrix Analysis. Cambridge, U.K.:
Cambridge Univ. Press, 1985.
[12] C. Godsil and G. Royle, Algebraic Graph Theory. New York:
Springer-Verlag, 2001, vol. 207, Graduate Texts in Mathematics.
[13] J. Wolfowitz, “Products of indecomposable, aperiodic, stochastic ma-
trices,” Proc. Amer. Math. Soc., vol. 15, pp. 733–736, 1963.
[14] A. S. Morse, “Supervisory control of families of linear set-point con-
trollers-Part 1: Exact matching,” IEEE Trans. Autom. Control, vol. 41,
no. 10, pp. 1413–1431, Oct. 1996.
[15] W. Ren and R. W. Beard, “Consensus of information under dynamically
changing interaction topologies,” in Proc. Amer. Control Conf., Boston,
MA, 2004, pp. 4939–4944.
[16] H. G. Tanner, A. Jadbabaie, and G. J. Pappas, “Stable flocking of mo-
bile agents, Part i: Fixed topology,” in Proc. IEEE Conf. Decision and
Control, Maui, HI, Dec 2003, pp. 2010–2015.
[17] , “Stable flocking of mobile agents, Part ii: Dynamic topology,”
in Proc. IEEE Conf. Decision and Control, Maui, HI, Dec 2003, pp.
2016–2021.
Stabilization of Switched Linear Systems
Daizhan Cheng, Lei Guo, Yuandan Lin, and Yuan Wang
Abstract—In this note, we study the stabilization problem of systems
that switch among a finite set of controllable linear systems with arbitrary
switching frequency. For both cases of known and unknown switching
functions, feedback laws are designed to achieve exponential stability.
For the later case, a method combining on-line adaptive estimation and
feedback stabilization is developed in the controller design.
Index Terms—Estimation, excitation, stability, stabilization, switched
systems.
I. INTRODUCTION
In recent years, the switched systems have attracted considerable ef-
forts; see, e.g., [2], [6], [10], [11], and [15], among many others. This is
because switched systems have strong engineering backgrounds; see,
for instance, [16] and [17]. When the switching laws are modeled as
finite state Markov chains, the stabilization problem of switched sto-
chastic systems has been investigated by many authors, and necessary
and sufficient conditions have been given to solve the problem for both
the nonadaptive case where the switchings are available (c.f. [7] and [9]
and the adaptive case where the switchings are unavailable (c.f. [19]).
We will consider the stabilization problem for switched linear sys-
tems as follows:
_x(t) = A(t)x(t) +B(t)u(t); x(t) 2
n
; u(t) 2 m (1)
Manuscript received July 1, 2003; revised August 23, 2004. Recommended
by Associate Editor A. Bemporad. This work was supported in part by the Na-
tional Natural Science Foundation of China. Thework ofY.Wangwas supported
in part by the National Science Foundation under Grant DMS-0072620.
D. Cheng and L. Guo are with the Institute of Systems Science, Chinese
Academy of Sciences, Beijing 100080, P. R. China (e-mail: dcheng@con-
trol.iss.ac.cn; lguo@control.iss.ac.cn).
Y. Lin and Y. Wang are with the Department of Mathematical Sciences,
Florida Atlantic University, Boca Raton, FL 33431 USA (e-mail: lin@fau.edu;
ywang@fau.edu).
Digital Object Identifier 10.1109/TAC.2005.846594
where the switching law (t) : [0;1) !  is a piecewise
constant function that is continuous from the right, and where
 = f1; 2; . . . ; Ng for some integer N .
When the switching law has no given mode (or is arbitrary), one
way to investigate the stability and stabilization problems is to find
a common Lyapunov function for all the switching models (c.f. [1],
[3], [5], [10], and [14]). The conditions in such an approach tend to be
strong because the existence of a common Lyapunov function guaran-
tees the stability of a system under all possible switchings.
Another commonly used approach is to assume that a system remains
unswitched for a period long enough to allow the overshoots of the
closed-loop system in the transient phases to fade (c.f. [8] and [12]).
In this note, we will consider the stabilization problem of systems
that switch among a finite set of controllable linear systems at any
given frequency. To guarantee the stability of such a system at a given
switching rate, it is certainly not enough to just stabilize each individual
system for the obvious reason that the overshoots may destroy the sta-
bility. A feedback should be designed so that the magnitudes of the
states of each individual system will decay by half on any interval of a
given length. We will achieve this by first developing an estimation on
the overshoots of the transition matrices (see Lemma 3.2), which can
be considered as an enhancement of the Squashing Lemma in [13].
We will first present a preliminary result for the case when the
switching functions are explicitly given. Our design in this case
applies whenever the switching frequency is finite and known, in
particular when the “average-dwell-time”[8] (instead of just the dwell
time) is positive. The way the switching frequency is defined (see Def-
inition 2.1) allows our result to apply to the case when the switching
functions have some fast switchings on some intervals, provided that
the switching frequency is “bounded on average” in the long run.
We will then continue with the case when the switching frequency is
finite but unknown. Finally, we will develop a method that combines
online adaptive estimation and stabilization to treat the case when the
switching functions are not given. We remark that even in the simplest
case when the switching law is given the controllability condition
cannot be relaxed to stabilizability. It is not hard to find an example
of a system that switches between two stable systems that fails to be
stable with certain switchings.
II. MAIN RESULTS
Consider a system as in (1) with a switching function (t). The
switching moments 0 < t1 < t2 <    of (t) are defined recur-
sively by tk+1 = infft > tk : (t) 6= (tk)g, t0 = 0. The switching
duration k is defined by k = tk   tk 1 (k = 1; 2; . . .).
Definition 2.1: Consider a switching function (t) : [0;1)! .
• The switching frequency f of (t) is defined by
f = lim
t!1
fNumber of switches of () in [0; t]g
t
: (2)
• The dwell time of (t) is defined by  = infk k .
Throughout this note, we will need the following standard assump-
tion: H1) The models (Ai; Bi), i = 1; . . . ; N , are controllable.
Our first result is for the case when switching functions are explicitly
given.
Theorem 2.1: Assume H1) holds for a switched system as in (1).
Let  > 0 be given. Then, there exist a set of gain matrices fKi : i =
1; . . . ; Ng such that for any given switching law  with a frequency
f  , the switched linear system (1) under the switched feedback
law u(t) = K(t)x(t) is exponentially stable.
0018-9286/$20.00 © 2005 IEEE

