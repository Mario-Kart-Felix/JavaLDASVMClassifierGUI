ar
X
iv
:1
70
6.
08
05
0v
1 
 [
cs
.D
S]
  2
5 
Ju
n 
20
17
Minimum Connected Transversals in Graphs:
New Hardness Results and Tractable Cases
Using the Price of Connectivity⋆
Nina Chiarelli1, Tatiana R. Hartinger1, Matthew Johnson2,
Martin Milanič1, and Daniël Paulusma2
1 University of Primorska, UP IAM and UP FAMNIT, Koper, Slovenia
nina.chiarelli@famnit.upr.si,tatiana.hartinger@iam.upr.si,martin.milanic@upr.si
2 School of Engineering and Computing Sciences, Durham University, UK
{matthew.johnson2,daniel.paulusma}@durham.ac.uk
Abstract. We perform a systematic study in the computational complexity of
the connected variant of three related transversal problems: Vertex Cover,
Feedback Vertex Set, and Odd Cycle Transversal. Just like their orig-
inal counterparts, these variants are NP-complete for general graphs. However,
apart from the fact that Connected Vertex Cover is NP-complete for line
graphs (and thus for claw-free graphs) not much is known when the input is
restricted to H-free graphs. We show that the three connected variants remain
NP-complete if H contains a cycle or claw. In the remaining case H is a linear
forest. We show that Connected Vertex Cover, Connected Feedback
Vertex Set, and Connected Odd Cycle Transversal are polynomial-
time solvable for sP2-free graphs for every constant s ≥ 1. For proving these
results we use known results on the price of connectivity for vertex cover, feed-
back vertex set, and odd cycle transversal. This is the first application of the
price of connectivity that results in polynomial-time algorithms.
1 Introduction
We consider graph modification problems, where the aim is to test if a given graph can
be modified to have some desired property using a small number of graph operations.
Many of such problems can be formulated as a vertex transversal problem. That is,
the modified graph, obtained after deleting a number of vertices of the original graph,
must not contain any graph of a prescribed family F . More formally, we are looking
for a small F -transversal of a graph G = (V,E), where an F-transversal of G is a
subset S ⊆ V such that G−S is F-free. In other words, S intersects every subset of V
that induces a subgraph isomorphic to a graph in F . For instance, let Pr denote the
path on r vertices. Then a set S is a vertex cover if S is a {P2}-transversal. Note that
V − S is an independent set. A set S is a feedback vertex set if S is an F -transversal
for the infinite family F = {C3, C4, C5, . . .} (where Ck is the cycle on k vertices). In
this case, the graph G−S is a forest. To give another example, a set S is an odd cycle
transversal if S is an F -transversal for the infinite family F = {C3, C5, C7, . . .}. In this
case, the graph G− S is bipartite.
Vertex covers, feedback vertex sets, and odd cycle transversals are well-studied
concepts. The corresponding decision problems that ask whether a given graph has a
⋆ This work was supported by a London Mathematical Society Scheme 4 Grant, Leverhulme
Trust Grant RPG-2016-258 and by the Slovenian Research Agency (I0-0035, research pro-
grams P1-0285, research projects N1-0032, J1-5433, J1-6720, J1-6743, J1-7051, and a Young
Researchers Grant).
vertex cover, feedback vertex set, or odd cycle transversal of size at most k for some
given integer k are called Vertex Cover, Feedback Vertex Set and Odd Cycle
Transversal, respectively. These problems are well known to be NP-complete [14,20].
In this paper we focus on the connected variants of these problems. We say that a
vertex cover S of a graph G is connected if S induces a connected subgraph of G. The
notions of a connected feedback vertex set and connected odd cycle transversal are
defined in a similar way.
Connected Vertex Cover
Instance: a graph G and an integer k.
Question: does G have a connected vertex cover S with |S| ≤ k?
Connected Feedback Vertex Set
Instance: a graph G and an integer k.
Question: does G have a connected feedback vertex set S with |S| ≤ k?
Connected Odd Cycle Transversal
Instance: a graph G and an integer k.
Question: does G have a connected odd cycle transversal S with |S| ≤ k?
1.1 Related Work
The three connected problem variants are known to be NP-complete. It is therefore
a natural question whether there exist special graph classes for which they become
polynomial-time solvable. Below we briefly survey known hard and tractable results
for each of the three problems.
Already in the seventies, Garey and Johnson [15] proved that Connected Ver-
tex Cover is NP-complete even for planar graphs of maximum degree 4. Later,
Priyadarsini and Hemalatha [25] strengthened this result to 2-connected planar graphs
of maximum degree 4, and Fernau and Manlove [13] strengthened it to planar bipar-
tite graphs of maximum degree 4. Wanatabe, Kajita, and Onaga [32] proved NP-
completeness of Connected Vertex Cover for 3-connected graphs. More recently,
Munaro [23] established NP-completeness of Connected Vertex Cover for line
graphs. Ueno, Kajitani and Gotoh [31] proved that Connected Vertex Cover
can be solved in polynomial time for graphs of maximum degree at most 3 and for
trees. Escoffier, Gourvès, and Monnot [12] improved the latter result by showing that
Connected Vertex Cover is polynomial-time solvable for chordal graphs. It is
known that Vertex Cover is polynomial-time solvable for chordal graphs as well.
The same authors proposed to study other graph classes for which Vertex Cover is
polynomial-time solvable.
Grigoriev and Sitters [17] proved that Connected Feedback Vertex Set is
NP-complete for planar graphs with maximum degree 9. Besides this result not much
is known on the computational complexity of this problem except that it is fixed
parameter tractable when parameterized by k [21]. The Connected Odd Cycle
Transversal has been mainly studied from parameterized point of view [9,10]. It is
implicit in these works that Connected Odd Cycle Transversal is NP-complete,
though we were not able to find any proof of this (simple) result. For the sake of
completeness, we note now that it is implied by the stronger results we present in
Theorems 4 and 6.
2
1.2 Our Results.
We continue the investigations on the complexity of Connected Vertex Cover
and also initiate a complexity study of Connected Feedback Vertex Set and
Connected Odd Cycle Transversal. Our paper consists of two parts. In the
first part (Section 2) we prove new hardness results and in the second part (Section 3)
new tractable results. As we explain below we try to do so in a systematic way. We refer
to Table 1 for a survey of our results together with some related known results. This
table leads to some natural open problems, which we discuss in Section 4, together
with some other directions for future work.
The girth of a graph is the length of a shortest cycle in it. We prove that Con-
nected Vertex Cover, Connected Feedback Vertex Set, and Connected
Odd Cycle Transversal are NP-complete on graphs of girth at least p for any fixed
constant p ≥ 3. In order to obtain this result forConnected Odd Cycle Transver-
sal we first prove NP-completeness of Odd Cycle Transversal for graphs of girth
at least p for any fixed constant p ≥ 3 (analogous results were already known for Ver-
tex Cover and Feedback Vertex Set). In the same section we also show that
Connected Feedback Vertex Set and Connected Odd Cycle Transversal
are NP-complete for line graphs; recall that this was known already for Connected
Vertex Cover [23].
The above hardness results imply that each of these three problems is NP-complete
onH-free graphs wheneverH is a graph that contains a cycle or a claw. The same holds
for the original variants Feedback Vertex Set and Odd Cycle Transversal but
not for Vertex Cover, which is polynomial-time solvable for claw-free graphs. Due
to the hardness results we can restrict ourselves to H-free graphs where H is a linear
forest, that is, the disjoint union of one or more paths.
We prove that Connected Vertex Cover, Connected Feedback Vertex
Set, and Connected Odd Cycle Transversal are polynomial-time solvable for
sP2-free graphs for every constant s ≥ 1. Since Vertex Cover is polynomial-time
solvable for sP2-free graphs for any s ≥ 1,
3 our result for Connected Vertex Cover
restricted to sP2-free graphs can be seen as a new step in the aforementioned research
direction of Escoffier, Gourvès, and Monnot [12].
girth p line graphs sP2-free
Con. Vertex Cover NP-c NP-c [23] P
Con. Feedback Vertex Set NP-c NP-c P
Con. Odd Cycle Transversal NP-c NP-c P
Vertex Cover NP-c [24] P[27] P [1,30]
Feedback Vertex Set NP-c [24] NP-c [29] P
Odd Cycle Transversal NP-c NP-c P
Table 1. The complexities of the three connected transversal problems together and the
original transversal problems for graphs of girth at least p for every constant p ≥ 3, line
graphs, or sP2-free graphs for any s ≥ 1. The results for Vertex Cover and Feedback
Vertex Set on graphs of arbitrarily large girth follow from Poljak’s construction [24] (see
also Section 2). All unreferenced results are new results from this paper.
To prove our tractability results we first focus on the original problems Vertex
Cover, Feedback Vertex Set, and Odd Cycle Transversal. In particular we
will use the enumeration algorithms of Tsukiyama, Ide, Ariyoshi and Shirakawa [30]
3 This follows from combining results of [1,30], as explained in more detail in Section 3.
3
and Schwikowski and Speckenmeyer [28] for listing all maximal independent sets and
all maximal feedback vertex sets, respectively. We will also use the fact that the number
of maximal independent sets is polynomially bounded for sP2-free graphs [1]. However,
we need to prove analogous results for feedback vertex sets and odd cycle transversals.
This leads to polynomial-time enumeration algorithms for minimal feedback vertex
sets of an sP2-free graph and minimal odd cycle transversals of an sP2-free graph.
What remains to do is to relate these results to the connected problem variants and
below we describe how to do this.
We need to consider the effect of adding the connectivity constraint on the min-
imum size of an F -transversal for a graph family F . This effect is in fact measured
by a known concept called the price of connectivity. This concept was coined by Car-
dinal and Levy [8] for vertex cover, but can be defined for any graph property for
which a connected variant is meaningful: for a class of graphs G and graph property π,
the price of connectivity is the worst-case ratio π′(G)/π(G) over all connected graphs
G ∈ G, where π(G) and π′(G) denote the smallest subset and smallest connected sub-
set, respectively, of the vertices of G satisfying π. Apart from further results on vertex
cover [4,5,6], the price of connectivity has been studied for dominating set [4,5,7,11,33],
face hitting set [17,26], and feedback vertex set [2] until in [18] known results for vertex
cover and feedback vertex set for H-free graphs were extended in a larger framework
of F -transversals. In particular, it is known that for sP2-free graphs demanding con-
nectivity results only in an additive constant with respect to the size of a smallest
vertex cover, feedback vertex set, or odd cycle transversal [2,18]. This is exactly what
we need to finalize our proofs.
2 Hardness Results
In this section we prove our hardness results (see also Table 1). We first need to
introduce some terminology. The line graph L(G) of a graph G = (V,E) has the edges
of E as its vertices, and two vertices e1 and e2 of L(G) are adjacent if and only if e1
and e2 have an end-vertex in common in G.
Our proofs for Connected Vertex Cover can be found in Section 2.1, for Odd
Cycle Transversal and Connected Odd Cycle Transversal in Section 2.2
and for Connected Feedback Vertex Set in Section 2.3.
2.1 Connected Vertex Cover
Recall that, in contrast to Vertex Cover [27], the Connected Vertex Cover
problem is NP-complete for line graphs [23]. We complement this result by showing
that the problem is NP-complete for graphs of arbitrarily large girth. For this, we
need some terminology and a construction of Poljak [24]: we 2-subdivide an edge e
of a graph G if we apply two consecutive edge subdivisions on e. Clearly, a graph G
with m edges has an independent set of size k if and only if the graph obtained by
2-subdividing each edge of G has an independent set of size k +m. We recall that an
n-vertex graph has an independent set of size k if and only if it has a vertex cover of
size n− k. Taken together, these observations imply the following well-known result.
Theorem 1. For every constant p ≥ 3, Vertex Cover is NP-complete for graphs
of girth at least p.
We now prove our result for Connected Vertex Cover.
Theorem 2. For every constant p ≥ 3, Connected Vertex Cover is NP-complete
for graphs of girth at least p.
4
Proof. We reduce from Vertex Cover. Let (G, k) be an instance of Vertex Cover.
Let n = |V (G)|. We may assume that k ≤ n − 2. Moreover, by Theorem 1, we may
assume that G has girth at least p ≥ 3. We add a new vertex x to G and connect x
to each vertex u of G by paths xyu
1
· · · yupu that only have vertex x in common. We
say that the inner vertices of these paths are of y-type. We introduce pn new vertices
zui , which we say are of z-type, and add an edge between z
u
i and y
u
i for all u ∈ V (G)
and i = 1, . . . , p. Note that z-type vertices are of degree 1. We let G′ be the resulting
graph and observe that G′ has girth at least p as well. We claim that G has a vertex
cover of size at most k if and only if G′ has a connected vertex cover of size at most
k + pn+ 1.
First suppose that G has a vertex cover S of size at most k. We can add x and every
y-type vertex to S to obtain a connected vertex cover of G′ of size at most k+ pn+1.
Now suppose that G′ has a vertex cover S′ of size at most k+pn+1. Suppose that
x /∈ S′. Then every yu
1
belongs to S′. As S′ is connected, this means that S′ contains
all pn vertices of y-type and all vertices of G. Hence, |S′| ≥ pn+n, which implies that
k ≥ n− 1, which is a contradiction. Hence x ∈ S′.
We note that each y-type vertex belongs to S′, as otherwise its z-type neighbour
must belong to S′ contradicting the connectivity of G[S′]. Let T = S′ ∩ V (G). Then
|T | ≤ |S′| − (pn+ 1) = k. It remains to observe that T is a vertex cover of G. ⊓⊔
The claw is the graph with vertices s, t1, t2, t3 and edges st1, st2, st3. It is well-
known and readily seen that every line graph is claw-free. Hence, as Connected
Vertex Cover is NP-complete for line graphs [23], we have the following corollary
to Theorem 2.
Corollary 1. Let H be a graph. Then Connected Vertex Cover is NP-complete
for H-free graphs if H contains a cycle or a claw.
2.2 Odd Cycle Transversal and Connected Odd Cycle Transversal
We will first prove that Odd Cycle Transversal and Connected Odd Cycle
Transversal are NP-complete for line graphs.
A 2-factor of a graph G is a set of cycles such that every vertex of G belongs to
exactly one of them. Let Even Cycle Factor denote the problem of deciding if a
graph has an even cycle factor, that is, a 2-factor in which each cycle is even.
We need the following lemmas due to Hell, Kirkpatrick, Kratchov́ıl, and Kř́ıž.
Lemma 1 ([19]). Even Cycle Factor is NP-complete.
We also need the next lemma. Here, we let G[S] denote the subgraph of a graph
G induced by a subset S ⊆ V (G).
Lemma 2. Let G be a graph on n vertices and m edges. If L(G) has an odd cycle
transversal of size at most m− n, then G has an even cycle factor.
Proof. Let T be the vertices of L(G) that do not belong to the odd cycle transversal. As
L(G) has m vertices, T contains at least n vertices. By definition, L(G)[T ] is bipartite
which means in particular that the neighbours of each vertex are independent. Thus,
as L(G) is a line graph and so claw-free, no vertex in L(G)[T ] has degree greater
than 2. Hence L(G)[T ] is the disjoint union of a set of paths and even cycles. Each
path on r vertices in L(G) corresponds to a path on r + 1 vertices in G, and each
cycle on r vertices in L(G) corresponds to a cycle on r vertices in G. Thus, if p of the
components of G[T ] are paths, then the number of vertices of G incident with T is
|T |+p. As T has at least n vertices and G has exactly n vertices, we must have p = 0,
and so T is the disjoint union of even cycles that corresponds to an even cycle factor
of G. ⊓⊔
5
Theorem 3. Odd Cycle Transversal is NP-complete for line graphs.
Proof. We reduce from Even Cycle Factor, which is NP-complete by Lemma 1.
Let G be an instance of this problem with n vertices and m edges. We claim that G
has an even cycle factor if and only if its line graph L(G) has an odd cycle transversal
of size at most m− n.
If G has an even cycle factor, then L(G) contains a set T of n vertices that induce
a disjoint union of cycles. Hence S = V (L(G)) \ T is an odd cycle transversal of L(G)
that has size |L(G)| − n = m− n. To complete the proof, we apply Lemma 2. ⊓⊔
Theorem 4. Connected Odd Cycle Transversal is NP-complete for line graphs.
Proof. As in the proof of Theorem 3 we reduce from Even Cycle Factor. Let G be
an instance of this problem with n vertices and m edges. We add a new vertex x to G
and an edge between x and each vertex of G. We also add three vertices y1, y2, y3 with
edges xy1, y1y2, y2y3 and y3x. We call the resulting graph G
′. We observe that G has
an even cycle factor if and only if G′ has an even cycle factor. Note that G′ has n+ 4
vertices and m+ n+4 edges. We construct the line graph L(G′) of G′ and claim that
G′ has an even cycle factor if and only if L(G′) has a connected odd cycle transversal
of size at most m.
First suppose that G′ has an even cycle factor F . By construction, F contains
the cycle on vertices x, y1, y2, y3, which we denote by C. As a consequence, no edge
xu for u ∈ V (G) belongs to a cycle of F . Then L(G′) contains a set T of n + 4
vertices that induce a disjoint union of cycles that do not contain any vertex xu for
u ∈ V (G). Hence S = V (L(G′)) \ T is an odd cycle transversal of L(G′) that has size
|L(G′)| − |V (F )| = m + n + 4 − (n + 4) = m and that contains all vertices of the
form xu. We need to show that S induces a connected subgraph of L(G′). This follows
from the fact that every vertex e = uv ∈ S ∩ E(G) is adjacent to xu (and xv), which
belongs to S, and the fact that the set {xu | u ∈ V (G)} form a clique in L(G′).
Now suppose that L(G′) has a connected odd cycle transversal of size at most m.
Then we can apply Lemma 2 (noting again that G′ has n+ 4 vertices and m+ n+ 4
edges) to find that G′ has an even cycle factor. ⊓⊔
For our next hardness result on Connected Odd Cycle Transversal we first
need to show the same result for Odd Cycle Transversal. For that we need the
following lemma.
Lemma 3. Let G′ be a graph obtained from a graph G after subdividing an edge of G
twice. Then the size of a minimum odd cycle transversal of G is equal to the size of a
minimum odd cycle transversal of G′.
Proof. Let uv be the edge of G that is subdivided twice. Let a, b be the two new
vertices obtained after the subdividing so that G′ contains the path uabv.
First suppose that S is a minimum odd cycle transversal of G. If one or two of
u, v are in S, then S is an odd cycle transversal of G′ (as we can safely place a, b in
G′ − S). The same is true if u, v /∈ S, as any even cycle in G − S is still even after
subdividing e twice.
Now suppose that S′ is a minimum odd cycle transversal of G′. If one or two of
u, v are in S′, then a, b are not in S′ by minimality of S′, meaning that S′ is also an
odd cycle transversal of G. Suppose that u, v are not in S′. If a or b is in S′, then we
can safely replace a or b by u or v, respectively, to obtain a new odd cycle transversal
of G′ with the same size as S′. If none of u, a, b, v is in G′ − S′, then, as contracting
the path uabv back to uv does not result in an odd cycle, we again find that S′ is an
odd cycle transversal of G. ⊓⊔
6
Repeatedly applying Lemma 3 in combination with the fact that Odd Cycle
Transversal is NP-complete (due to Theorem 3) implies the following theorem.
Theorem 5. For every constant p ≥ 3, Odd Cycle Transversal is NP-complete
for graphs of girth at least p.
We now show that we also have hardness when the problem asks for a connected
transversal.
Theorem 6. For every constant p ≥ 3, Connected Odd Cycle Transversal is
NP-complete for graphs of girth at least p.
Proof. We reduce from Connected Vertex Cover restricted to graphs of girth
at least p. This problem is NP-complete by Theorem 2. Let G be a graph of girth
at least p. We may assume without loss of generality that G has at least two edges.
Between each pair of adjacent vertices of G add a path with 2⌊p
2
⌋ edges. Let the graph
obtained be G′ and note that it also has girth at least p. We will show that G has a
connected vertex cover of size at most k if and only if G′ has a connected odd cycle
transversal of size at most k.
Let S be a connected vertex cover of G of a most k. As every cycle in G′ contains
two vertices that are adjacent in G, S is also an odd cycle transversal of G′, and it is
also connected in G′ as G′ contains all the edges of G.
Let S be a connected odd cycle transversal of G′ of at most k. We can assume that
all vertices of S belong to G (if this is not the case, then we can move all vertices from
S \V (G) to G′−S without creating an odd cycle in G′−S or disconnecting G′[S]). As
each pair of adjacent vertices in G belong to the odd cycle of G′ that contains them
and the path on 2⌊p
2
⌋ edges added between, at least one of them must belong to S.
Thus S is a connected vertex cover of G (of size at most k). ⊓⊔
Theorems 4 and 6 imply the following corollary.
Corollary 2. Let H be a graph. Then Connected Odd Cycle Transversal is
NP-complete for H-free graphs if H contains a cycle or a claw.
2.3 Connected Feedback Vertex Set
We will now consider the Connected Feedback Vertex Set problem. We first
prove the following result.
Theorem 7. Connected Feedback Vertex Set is NP-complete for line graphs.
Proof. Let G be an instance of Hamiltonian Path with n ≥ 3 vertices and m edges.
We will describe a reduction to Connected Feedback Vertex Set. We add two
new vertices x and y to G and an edge between x and each vertex of G and an edge
between y and each vertex of G. We also add two vertices x′ and y′ and edges x′x
and y′y. We call the resulting graph G′. We observe that G has a Hamiltonian path if
and only if G′ has a Hamiltonian path from x′ to y′. Note that G′ has n+ 4 vertices
and m+2n+2 edges. We claim that G′ has a Hamiltonian path if and only if its line
graph L(G′) has a connected feedback vertex set of size at most m+ n− 1.
First suppose that G′ has a Hamiltonian path P (on n+4 vertices). Let xa and yb be
the two edges of P that join x and y to V (G). Then every edge xu with u ∈ V (G)\{a}
and every edge yv with v ∈ V (G) \ {b} does not belong to P . Let T ⊆ V (L(G′)) be
the set of size n + 3 in G′ formed by the edges of P . Hence S = V (L(G′)) \ T is a
feedback vertex set of L(G′) that has size m+ 2n+ 2− (n+ 3) = m+ n− 1 and that
7
contains all vertices of the form xu and yu except the vertices xa and yb. We need to
show that S induces a connected subgraph of L(G′). This follows from the fact that
every vertex e = uv ∈ S ∩ E(G) is adjacent to xu and yu, and at least one of them
belongs to S. Moreover, the set of vertices {xu | u ∈ V (G) \ {a}} is a clique in L(G′).
Finally, every vertex yu ∈ S with u ∈ V (G) \ {a, b} is adjacent to xu in L(G′).
Now suppose that L(G′) has a connected feedback vertex set S of size at most
m + n − 1. Then L(G′) − S has at least n + 3 vertices and must be a disjoint union
of paths (as L(G′) is a line graph and thus claw-free). Every induced path in L(G′)
corresponds to a path in G′ with one more vertex. Moreover, G′ has n+ 4 vertices in
total. Hence L(G′)−S must induce a single path on n+3 vertices. The corresponding
path in G′ has n+ 4 vertices and is thus a Hamiltonian path of G′. ⊓⊔
Finally we restrict the Connected Feedback Vertex Set problem to graphs
of arbitrarily large girth. For this we need the following lemma, which is well known
(see for example [3,22]).
Lemma 4. Let uv be an edge in a graph G. Let G′ be the graph obtained from G after
subdividing uv. Then G has a feedback vertex set of size at most k if and only if G′
does.
Lemma 4 implies that Feedback Vertex Set is NP-complete for graphs of girth
at least p for every constant p ≥ 3. We use this fact in our proof of the next result.
Theorem 8. For every constant p ≥ 3, Connected Feedback Vertex Set is
NP-complete for graphs of girth at least p.
Proof. We reduce from Feedback Vertex Set. Let (G, k) be an instance of Feed-
back Vertex Set. By repeatedly applying Lemma 4 we may assume that G has girth
at least p ≥ 3. We now use exactly the same construction and arguments as in the
proof of Theorem 6. The only difference is that, in contrast to the proof of Theorem 6,
here it does not matter whether the newly created induced cycles are odd or even. ⊓⊔
Theorems 7 and 8 imply the following corollary.
Corollary 3. Let H be a graph. Then Connected Feedback Vertex Set is NP-
complete for H-free graphs if H contains a cycle or a claw.
3 Polynomial-Time Results
In this section we prove our polynomial-time results (see also Table 1). The following
lemma provides a useful technique that we will be able to apply several times. We say
that a set of vertices in a graph is connected if it induces a connected subgraph.
Lemma 5. Let P be a property of a set of vertices in a graph that if it holds for a set
also holds for all supersets. Given a graph G, let f(G) be the minimum size of a set of
vertices in G with property P . Let G be a graph class and let c be a constant. Suppose
that for every graph G ∈ G, all minimal sets with property P can be enumerated in
polynomial time, and the minimum size of a connected set of vertices with property P
is at most f(G)+ c. Then a minimum size connected set of vertices of G with property
P can be found in polynomial time.
Proof. The algorithm for finding a minimum size connected set with property P is
simple. Enumerate the minimal sets of G with property P , and, for each such set
consider all the sets that can be obtained by adding c or fewer additional vertices and
8
check whether each is connected. Return the smallest connected set found (if any). It
is clear that the algorithm runs in polynomial time. We must prove correctness.
Let S be a minimum size connected set of vertices in G with property P . We
will show that the algorithm finds S and so returns it (or another connected set with
property P of the same size). We know that |S| ≤ f(G) + c. From S remove as many
vertices as possible until a minimal set S′ with property P is obtained. Then S′ is one
of the sets that will be enumerated and as |S′| ≥ f(G), we have that |S| − |S′| ≤ c
and so S will be found. ⊓⊔
For an algorithm that enumerates all solutions to a problem, the delay is the
maximum of the time taken before finding the first solution and that required between
any pair of consecutive outputs. We need two well-known results. The first one is due
to Balas and Yu (who gave a sharper bound which we do not need for our purposes)
and the second one is due to Tsukiyama, Ide, Ariyoshi, and Shirakawa.
Theorem 9 ([1]). For every constant s ≥ 1, the number of maximal independent sets
of an sP2-free graph on n vertices is at most n
2s + 1.
Theorem 10 ([30]). For every constant s ≥ 1, it is possible to enumerate all maximal
independent sets of a graph G on n vertices and m edges with a delay of O(nm).
It is well-known that Vertex Cover is polynomial-time solvable for sP2-free
graphs; in fact this follows immediately from Theorems 9 and 10. Our proof of the same
result for Connected Vertex Cover can be found in Section 3.1, for Feedback
Vertex Set and Connected Feedback Vertex Set in Section 3.2, and for Odd
Cycle Transversal and Connected Odd Cycle Transversal in Section 3.3.
3.1 Connected Vertex Cover
We consider the Connected Vertex Cover problem. We have the following result
on the price of connectivity for vertex cover restricted to sP3-free graphs by Lemma 10
of a previous paper of four of the current authors. The constant 4s2 + 2s − 10 is
determined in the proof of Lemma 10 of [2] (the statement of the lemma only mentions
the existence of a constant without further specification).
Theorem 11 ([18]). Let s ≥ 1 and let G be a connected sP3-free graph. Let f be the
size of a minimum vertex cover of G. Then the size of a minimum connected vertex
cover of G is at most f + 4s2 + 2s− 10.
We can use Theorem 11 to determine the complexity of Connected Vertex
Cover for sP2-free graphs.
Theorem 12. For every constant s ≥ 1, Connected Vertex Cover can be solved
in polynomial time for sP2-free graphs.
Proof. We know by Theorems 9 and 10 that all maximal independent sets, and thus
all minimal vertex covers, of sP2-free graphs can be enumerated in polynomial time.
Thus, as the property of being a vertex cover holds for supersets, the theorem follows
from Theorem 11 and Lemma 5 (note that we may restrict ourselves to connected
input graphs). ⊓⊔
9
3.2 Feedback Vertex Set and Connected Feedback Vertex Set
To prove our results for Feedback Vertex Set and Connected Feedback Ver-
tex Set we need the following result of Schwikowski and Speckenmeyer [28].
Theorem 13 ([28]). It is possible to enumerate all minimal feedback vertex sets of a
graph G on n vertices and m edges with a delay of O(n3 + n2m).
We also need the following lemma.
Lemma 6. For every constant s ≥ 1, there is a constant cs such that the number of
minimal feedback vertex sets of an sP2-free graph G on n vertices is O(n
cs).
Proof. Let S be a minimal feedback vertex set of G. Let FS = G − S, which, by
definition, is a forest. Let F ′S ⊂ FS contain each vertex of degree at least 2 in FS plus
one vertex (arbitrarily chosen) from each component of FS isomorphic to P2 (if there
are any). We say that F ′S is a skeleton of FS . Let ℓ(F
′
S) = V (FS) \ V (F
′
S) and notice
that ℓ(F ′S) is an independent set and each of its vertices has at most one neighbour in
F ′S . We say that ℓ(F
′
S) is the leave of F
′
S .
Claim. |V (F ′S)| ≤ 3s
2 − 5s+ 2.
To prove the claim, first consider the following subset A of V (F ′S): all isolated vertices
of F ′S , one arbitrarily chosen vertex from each P2, and every vertex of degree 1 from
each other tree. Pair each vertex in A with one of its neighbours in ℓ(F ′S) (it must
have at least one by the definition of F ′S). These pairs induce a collection of pairwise
non-adjacent P2’s, and, as G is sP2-free, |A| ≤ s− 1. Notice that from a vertex in A,
it is not possible to find a path containing more than 3s− 2 vertices within F ′S since a
longer path contains sP2 as an induced subgraph. We choose a path of length at most
3s− 2 from each vertex v ∈ A to a fixed vertex of the component of F ′S containing v.
In this way the union of all these paths cover all the vertices of F ′S , and the claim
follows.
Let J(F ′S) ⊆ S be the set of vertices in G − V (F
′
S) that have at most one neighbour
in F ′S . Notice that ℓ(F
′
S) ⊆ J(F
′
S).
Claim. ℓ(F ′S) is a maximal independent set in G[J(F
′
S)].
To prove the claim, suppose instead that there is a vertex v ∈ J(F ′S) \ ℓ(F
′
S) that has
no neighbour in ℓ(F ′S). Then G[V (FS)∪{v}] is a forest as v has at most one neighbour
in FS , and so S \ {v} is a feedback vertex set of G, contradicting the minimality of S
and proving the claim.
We can find minimal feedback vertex sets of G as follows. First we choose a skeleton
on at most 3s2 − 5s + 2 vertices, and then, from amongst those vertices that have
at most one neighbour in the chosen skeleton, we choose a maximal independent set.
Then the set of vertices in neither the forest nor the independent set is tested to see
whether it forms a minimal feedback vertex set. If we consider all possible choices of
forest and independent set, then each minimal feedback set will be found as at some
point a corresponding skeleton and its leave will be chosen. By our first claim, there
are O(n3s
2
) choices for the forest, and, by Theorem 9, there are O(n2s) choices for the
independent set. The theorem is proved. ⊓⊔
We also need the following result on the price of connectivity for feedback vertex
set from Belmonte, van ’t Hof, Kamiński and Paulusma. Notice that this result holds
even for sP3-free graphs. The constant 12s
2 − 2s − 2 is determined in the proof of
Lemma 9 of [2].
10
Theorem 14 ([2]). Let s ≥ 1 and let G be a connected sP3-free graph. Let f be the
size of a minimum feedback vertex set of G. Then the size of a minimum connected
feedback vertex set of G is at most f + 12s2 − 2s− 2.
We are now ready to prove our result on the complexities of Feedback Vertex
Set and Connected Feedback Vertex Set restricted to sP2-free graphs.
Theorem 15. For every constant s ≥ 1, Feedback Vertex Set and Connected
Feedback Vertex Set can be solved in polynomial time for sP2-free graphs.
Proof. We will show that there are polynomial-time algorithms that find the minimum
size sets. The theorem, which concerns decision problems, follows.
Let G be an sP2-free graph. We may assume without loss of generality that G is
connected. By the combination of Lemma 6 with Theorem 13, we can in fact enu-
merate all minimal feedback vertex sets of G in polynomial time. Thus the result for
Feedback Vertex Set follows.
For Connected Feedback Vertex Set, we can apply Lemma 5. We need only
note that the property of being a feedback vertex set is inherited by supersets and
that, by Theorem 14, within the class of sP2 graphs, the minimum size of a connected
feedback vertex set differs from the size of a minimum size set by at most a constant.
⊓⊔
3.3 Odd Cycle Transversal and Connected Odd Cycle Transversal
We now consider the Odd Cycle Transversal problem and its connected vari-
ant. Again we can use a result on the price of connectivity, which is also covered by
Lemma 10 of [18].
Theorem 16 ([18]). Let s ≥ 1 and let G be a connected sP3-free graph. Let f be the
size of a minimum odd cycle transversal of G. Then the size of a minimum connected
odd cycle transversal of G is at most f + 4s2 + 2s− 10.
We can now prove our final result.
Theorem 17. For every constant s ≥ 1, Odd Cycle Transversal and Con-
nected Odd Cycle Transversal can be solved in polynomial time for sP2-free
graphs.
Proof. Let S be a minimal odd cycle transversal of an sP2-free graph G. Let FS =
G−S. Then FS is a bipartite graph. We choose a bipartition (X,Y ) of FS such that X
has maximum size (so every vertex in Y has at least one neighbour in X). Then X is
a maximal independent set of G, as otherwise there exists a vertex u ∈ S not adjacent
to any vertex of X , and thus S \ {u} is an odd cycle transversal of G, contradicting
the minimality of S. Moreover, by a similar argument, Y is a maximal independent
set of G−X .
We describe a procedure to find all minimal odd cycle transversals of G, and, as
the minimum size transversals of G will be amongst them this provides an algorithm
for Odd Cycle Transversal. We enumerate all maximal independent sets of G,
and for each maximal independent set X , we enumerate all maximal independent sets
of G−X . For each such set Y , we note that V (G)\ (X ∪Y ) is an odd cycle transversal
of G. By the arguments above, we will find every minimal odd cycle transversal in this
way, and, by Theorems 9 and 10, this takes polynomial time.
For Connected Odd Cycle Transversal, we can now apply Theorem 16 and
Lemma 5 as the property of being an odd cycle transversal holds for supersets. ⊓⊔
Remark 1. Just as for minimal vertex covers, we can compute all minimal feedback
vertex sets and all minimal odd cycle transversals of an sP2-free graph in polynomial
time for every constant s ≥ 1.
11
4 Conclusions
We first showed that the three problems Connected Feedback Vertex Set, Con-
nected Vertex Cover, and Connected Odd Cycle Transversal are NP-
complete for H-free graphs if H contains a cycle or a claw. Hence, we could restrict
ourselves to graphs H that are linear forests. We then proved that all three problems
can be solved in polynomial time for sP2-free graphs.
Our main goal was to show an application of the price of connectivity for cycle
transversals (Theorems 14, 11, and 16). In fact these three results on the price of
connectivity hold even for sP3-free graphs. Hence, a natural future research direction
would be to consider sP3-free graphs instead of sP2-free graphs. However, then we can
no longer bound the number of minimal transversals as before so the situation is not
clear.
It would also be interesting to research whether it is possible to compute, just as
for the three original problems (see Remark 1), all minimal connected transversals
in polynomial time for the three variants studied, even when we restrict the input to
2P2-free graphs. With respect to this question, we recall an open problem of Golovach,
Heggernes and Kratsch [16]. They asked if there exists a graph class with a polynomial
number of minimal vertex covers but an exponential number of minimal connected
vertex covers.
References
1. E. Balas and C. S. Yu, On graphs with polynomially solvable maximum-weight clique
problem, Networks 19 (1989) 247–253.
2. R. Belmonte, P. van ’t Hof, M. Kaminski and D. Paulusma, The price of connectivity for
feedback vertex set, Discrete Applied Mathematics 217 (2017) 132–143.
3. M. Bonamy, K.K. Dabrowski, C. Feghali, M. Johnson and D. Paulusma, Independent
feedback vertex set for P5-free graphs, Manuscript.
4. E. Camby, Price of Connectivity for the vertex cover problem and the dominating set
problem: conjectures and investigation of critical graphs, Manuscript.
5. E. Camby and G. Caporossi, Research on the price of connectivity for the vertex cover
problem and the dominating set problem, with the help of the system GraphsInGraphs,
Proc. CTW 2017.
6. E. Camby, J. Cardinal, S. Fiorini and O. Schaudt, The price of connectivity for vertex
cover. Discrete Mathematics & Theoretical Computer Science 16 (2014) 207–224.
7. E. Camby and O. Schaudt, The price of connectivity for dominating set: Upper bounds
and complexity, Discrete Applied Mathematics 17 (2014) 53–59.
8. J. Cardinal and E. Levy, Connected vertex covers in dense graphs, Theoretical Computer
Science 411 (2010) 2581–2590.
9. M. Cygan, J. Nederlof, M. Pilipczuk, M. Pilipczuk, J.M.M. van Rooij, J.O. Wojtaszczyk,
Solving connectivity problems parameterized by treewidth in single exponential time,
Proc. FOCS 2011, 150–159.
10. M. Cygan, M. Pilipczuk, M. Pilipczuk and J.O. Wojtaszczyk, Kernelization hardness of
connectivity problems in d-degenerate graphs, Proc. WG 2010, LNCS 6410, 147–158.
11. P. Duchet and H. Meyniel, On Hadwiger’s number and the stability number, Annals of
Discrete Mathematics 13 (1982) 71–74.
12. B. Escoffier, L. Gourvès and J. Monnot, Complexity and approximation results for the
connected vertex cover problem in graphs and hypergraphs, Theoretical Computer Sci-
ence 8 (2010) 36–49.
13. H. Fernau and D. Manlove, Vertex and edge covers with clustering properties: complexity
and algorithms, Journal of Discrete Algorithms 7 (2009) 149–167.
14. M.R. Garey, D.S. Johnson, Computers and Intractability: A Guide to the Theory of
NP-Completeness, W.H. Freeman, 1979.
12
15. M.R. Garey, D.S. Johnson, The rectilinear Steiner tree problem is NP-complete, SIAM
Journal on Applied Mathematics 32 (1977) 826–834.
16. P.A. Golovach, P. Heggernes and D. Kratsch, Enumeration and maximum number of
minimal connected vertex covers in graphs, Proc. IWOCA 2015, LNCS 9538, 235–247.
17. A. Grigoriev and R. Sitters, Connected feedback vertex set in planar graphs, Proc. WG
2009, LNCS 5911 (2010) 143–153.
18. T.R. Hartinger, M. Johnson, M. Milanic and D. Paulusma, The price of connectivity for
cycle transversals, European Journal of Combinatorics 58 (2016) 203–224.
19. P. Hell, D.G. Kirkpatrick, J. Kratochv́ıl and I. Kř́ıž, On restricted two-factors, SIAM
Journal on Discrete Mathematics (1988) 472–484.
20. J.M. Lewis and M. Yannakakis, The node-deletion problem for hereditary proper- ties is
NP-complete. Journal of Computer and System Sciences, 20 (1980) 219–230.
21. N. Misra, G. Philip, V. Raman, S. Saurabh and S. Sikdar, FPT algorithms for Connected
Feedback Vertex Set, Journal of Combinatorial Optimization 24 (2012) 131–146.
22. N. Misra, G. Philip, V. Raman and S. Saurabh, On parameterized Independent Feedback
Vertex Set, Theoretical Computer Science 461 (2012) 65–75.
23. A. Munaro, Sur quelques invariants classiques et nouveaux des hypergraphes, PhD-thesis,
Univ. Grenoble Alpes, 2016.
24. S. Poljak, A note on stable sets and colorings of graphs, Commentationes Mathematicae
Universitatis Carolinae. 15 (1974) 307–309.
25. P.K. Priyadarsini and T. Hemalatha, Connected vertex cover in 2-connected planar graph
with maximum degree 4 is NP-complete, International Journal of Mathematical, Physical
and Engineering Sciences. 2 (2008) 51–54.
26. P. Schweitzer and P. Schweitzer, Connecting face hitting sets in planar graphs, Informa-
tion Processing Letters 111 (2010) 11–15.
27. N. Sbihi, Algorithme de recherche d’un stable de cardinalité maximum dans un graphe
sans étoile, Discrete Mathematics 29 (1980) 53–76.
28. B. Schwikowski and E. Speckenmeyer, On enumerating all minimal solutions of feedback
problems, Discrete Applied Mathematics 117 (2002) 253–265.
29. E. Speckenmeyer, Untersuchungen zum Feedback Vertex Set Problem in ungerichteten
Graphen, Ph.D.thesis, Paderborn, 1983.
30. S. Tsukiyama, M. Ide, H. Ariyoshi, and I. Shirakawa, A new algorithm for generating all
the maximal independent sets, SIAM Journal on Computing 6 (1977) 505–517.
31. S. Ueno, Y. Kajitani and S. Gotoh, On the nonseparating independent set problem and
feedback set problem for graphs with no vertex degree exceeding three, Discrete Mathe-
matics 72 (1988) 355–360.
32. T. Wanatabe, S. Kajita and K. Onaga, Vertex covers and connected vertex covers in 3-
connected graphs, Proc. IEEE International Symposium on Circuits and Systems 1991,
1017–1020.
33. I.E. Zverovich, Perfect connected-dominant graphs. Discussiones Mathematicae Graph
Theory 23 (2003)159–162.
13

