Well-supported phylogenies using largest subsets
of core-genes by discrete particle swarm
optimization
Reem Alsrraj, Bassam AlKindy, Christophe Guyeux,
Laurent Philippe, and Jean-François Couchot
June 28, 2017
Abstract
The number of complete chloroplastic genomes increases day after day,
making it possible to rethink plants phylogeny at the biomolecular era.
Given a set of close plants sharing in the order of one hundred of core
chloroplastic genes, this article focuses on how to extract the largest subset
of sequences in order to obtain the most supported species tree. Due
to computational complexity, a discrete and distributed Particle Swarm
Optimization (DPSO) is proposed. It is finally applied to the core genes
of Rosales order.
1 Introduction
Given a set of biomolecular sequences or characters, various well-established
approaches have been developed in recent years to deduce their phyloge-
netic relationship, encompassing distance-based matrices, Bayesian infer-
ence, or maximum likelihood [1]. Robustness aspects of the produced trees
can be evaluated too, for instance through bootstrap analyses. However
the relationship between this robustness, the real accuracy of the phylo-
genetic tree, and the amount of data used for this reconstruction is not
yet completely understood. More precisely, if we consider a set of species
reduced to lists of gene sequences, we have an obvious dependence be-
tween the chosen subset of sequences and the obtained tree (its topology
or robustness). This dependence is usually regarded by the mean of gene
trees merged into a phylogenetic network.
This article investigates the converse approach: it starts by the union
of whole core genes, and tries to remove the ones that blur the phyloge-
netic signals. More precisely, the objective is to find the largest part of
the genomes that produces a phylogenetic tree as supported as possible,
reflecting by doing so the relationship of the largest part of the sequences
under consideration. Due to overwhelming number of combinations to
investigate, a brute force approach is a nonsense, which explains why
heuristics have been considered. The proposal of this research work is
1
ar
X
iv
:1
70
6.
08
51
4v
1 
 [
q-
bi
o.
PE
] 
 2
5 
Ju
n 
20
17
thus the application of a Discrete Particle Swarm Optimization (DPSO)
that aims at finding the largest subset of core genes producing a phyloge-
netic tree as supported as possible. A new algorithm has been proposed
and applied, in a distributive manner, to investigate the phylogeny of
Rosales order.
The remainder of this article is constituted as follows. The DPSO
metaheuristic is recalled in the next section. The way to apply it for re-
solving problematic supports in biomolecular based phylogenies is detailed
in Section 3. The proposed methodology is then applied to the particular
case of Rosales in Section 4. This article ends by a conclusion section, in
which the article is summarized and intended future work is outlined.
2 Discrete Particle Swarm Optimization
Particle Swarm Optimization (PSO) is a stochastic optimization technique
developed by Eberhart and Kennedy in 1995 [2]. PSOs have been success-
fully applied in function optimization, artificial neural network training,
and fuzzy system control. In this metaheuristic, particles follow a very
simple behavior that is to learn from the success of neighboring individ-
uals. An emergent behavior enables individual swarm members to take
benefit from the discoveries or from previous experiences of the other
members that have obtained more accurate solutions. In the case of the
standard binary PSO model [3], the particle position is a vector of N pa-
rameters that can be set as “yes” or “no”, “true” or “false”, “include” or
“not include”, etc. (binary values). A function associates to such kind of
vector a real number score according to the optimization problem. The
objective is then to define a way to move the particles in the N dimen-
sional binary search space so that they produce the optimal binary vector
w.r.t. the scoring function.
In details, each particle i is thus represented by a binary vector Xi (its
position). Its length N corresponds to the dimension of the search space,
that is, the number of binary parameters to investigate. An 1 in coordinate
j in this vector means that the associated j-th parameter is selected. A
swarm of n particles is then a list of n vectors of positions (X1, X2, . . . , Xn)
together with their associated velocities V = (V1, V2, ..., Vn), which are N -
dimensional vectors of real numbers between 0 and 1. These latter are
initially set randomly. At each iteration, the new velocity is computed as
follows:
Vi(t+ 1) = w.Vi(t) + φ1(P besti −Xi) + φ2(P bestg −Xi) (1)
where w, φ1, and φ2 are weighted parameters setting the level of each 3
trends for the particle, which are respectively to continue in its adventur-
ous direction, to move in the direction of its own best position P besti , or
to follow the gregarious instinct to the global best known solution P bestg .
Both P besti and P bestg are computed according to the scoring function.
The new position of the particle is then obtained using the equation
below:
Xij(t+ 1) =
{
1, if rij ≤ Sig(Vij(t+ 1)),
0, otherwise,
(2)
2
where rij is a chosen threshold that depends on both the particle i and
the parameter j, while the Sig function operating as selection criterion is
the sigmoid one [3], that is:
Sig(Vij(t)) =
1
1 + e−Vij (t)
. (3)
3 PSO applied to phylogeny
Let us consider, for illustration purpose, a set of chloroplast genomes of
Rosales, which has already been analyzed in [4] using an hybrid genetic
algorithm and Lasso test approach. We sampled 9 ingroup species and 1
outgroup (Mollissima), see Table 1 for details, which have been annotated
using DOGMA [5]. We can then compute the core genome (genes present
everywhere), whose size is equal to 82 genes, by using for instance the
method described in [6, 7]. After having aligned them using MUSCLE, we
can infer a phylogenetic tree with RAxML [1] (for a general presentation
on phylogenetic tree construction see, e.g., [8]). If all bootstrap values
are larger than 95, then we can reasonably consider that the Rosales
phylogeny is resolved, as the largest possible number of genes has led to
a very well supported tree.
Species Accession Seq.length Family Genus
Chiloensis NC_019601 155603 bp Rosaceae Fragaria
Bracteata NC_018766 129788 bp Rosaceae Fragaria
Vesca NC_015206 155691 bp Rosaceae Fragaria
Virginiana NC_019602 155621 bp Rosaceae Fragaria
Kansuensis NC_023956 157736 bp Rosaceae Prunus
Persica NC_014697 157790 bp Rosaceae Prunus
Pyrifolia NC_015996 159922 bp Rosaceae Pyrus
Rupicola NC_016921 156612 bp Rosaceae Pentactina
Indica NC_008359 158484 bp Moraceae Morus
Mollissima NC_014674 160799 bp Fagaceae Castanea
Table 1: Genomes information of Rosales species under consideration
In case where some branches are not well supported, we can wonder
whether a few genes can be incriminated in this lack of support, for a
large variety of reasons encompassing homoplasy, stochastic errors, un-
detected paralogy, incomplete lineage sorting, horizontal gene transfers,
or even hybridization. If so, we face an optimization problem: to find
the most supported tree using the largest subset of core genes. Obviously,
a brute force approach investigating all possible combinations of genes
is intractable (2N phylogenetic trees for N core genes, with N = 82 for
Rosales).
More precisely, genes of the core genome are supposed to be lexico-
graphically ordered. Each subset s of the core genome is thus associated
with a unique binary word w of length n: for each i, 1 ≤ i ≤ n, wi is 1 if
the i-th core gene is in s and 0 otherwise. Any n-length binary word w
3
can be associated with its percentage p of 1’s and the lowest bootstrap b
of the phylogenetic tree we obtain when considering the subset of genes
associated to w. Each word w is thus associated with a fitness score value
b+ p.
Let us be back in the PSO context. The search space is then {0, 1}N .
Each node of this N -cube is associated with the set of following data: its
subset of core genes, the deduced phylogenetic tree, its lowest bootstrap b
and the percentage p of considered core genes, and, finally, the score b+p.
Notice that two close nodes of the N -cube have two close percentages of
core genes. We thus have to construct two phylogenies based on close
sequences, leading to a high probability to the same topology with close
bootstrap. In other words, the score remains essentially unchanged when
moving from a node to one of its neighbors. It allows to find optimal
solutions using approaches like PSO.
Algorithm 1: PSO algorithm
population← 10, maxiter ← 10
for each particle in population do
particle[position]← [randint(0, 1) for each gene in core genome]
particle[velocity]← [rand(0, 1) for each gene in core genome]
particle[score]← 0
particle[best]← Empty list
end for
while fitness < b + p and iter < Maxiter do
for each particle in population do
Calculate new_fitness
if new_fitness > fitness then
particle[score]← new_fitness
particle[best]← particle[position]
end if
end for
fitness← max(particle[score])
Gbest← position[Max(Particle[score]in population)]
for each particle in population do
Calculate particle velocity according to Equation (1)
Update particle position according to Equations (3) and (2)
end for
end while
Initially, the L (set to 10 in our experiments) particles are randomly
distributed among all the vertices (binary words) of the N -cube that have
a large percentage of 1. The objective is then to move these particles in
the cube, hoping that they will converge to an optimal node. At each
iteration, the particle velocity is updated according to the fitness and its
best position. It is influenced by constant weight factors according to
Equation (1). In this one, we have set c1 = 1, c2 = 1, while r1, r2 are
random numbers between (0.1,0.5), and w is the inertia weight. This
4
latter determines the contribution rate of a particle’s previous velocity to
its velocity at the current time step. To increase the number of included
components in a particle, we reduced the interval of Equation (2) to [0.1,
0.5]. For instance, if the velocity V i of an element is equal to 0.511545
and r = 0.83, then Sig(0.51) = 0.62. So r > Sig(V i) and this will lead
to 0 in the vector elements of the particle. By minimizing the interval
we increase the probability of having r < Sig(V i), and this will lead to
more 1s, which means more included elements in the particle. A large
inertia weight facilitates a global search while a small inertia weight tends
more to a local investigation [9]. A larger value of w facilitates a complete
exploration, whereas small values promote exploitation of areas. This is
why Eberhart and Shi suggested to decrease w over time, typically from
0.9 to 0.4, thereby gradually changing from exploration to exploitation.
Finally, each particle position is updated according to Equation (2), see
Algorithm 1 for further details. In this algorithm, the particle is defined
by its position (a binary word) in the cube together with its velocity (a
real vector).
4 Experimental results and discussions
We have implemented the proposed DPSO algorithm on the Mésocentre
de calculs supercomputer facilities of the University of Franche-Comté.
Investigated Rosales species are listed in Table 1. 10 swarms having a
variable number of particles have been launched 10 times, with c1 =
1, c2 = 1, and w linearly decreasing from 0.9 to 0.4. Obtained results
are summarized in Table 2 that contains, for each 10 runs of each 10
swarms: the number of removed genes and the minimum bootstrap of the
best tree. Remark that some bootstraps are not so far from the intended
ones (larger than 95), whereas the number of removed genes are in average
larger than what we desired.
7 topologies have been obtained after either convergence or maxIter
iterations. Only 3 of them have occurred a representative number of time,
namely the Topologies 0, 2, and 4, which are depicted in Figure 2 (see de-
tails in Table 3). These three topologies are almost well supported, except
in a few branches. We can notice that the differences in these topologies
are based on the sister relationship of two species named Fragaria vesca
and Fragaria bracteata, and of the relation between Pentactina rupicola
and Pyrus pyrifolia. Due to its larger score and number of occurrences,
we tend to select Topology 0 as the best representative of the Rosale
phylogeny.
To further validate this choice, consel [10] software has been used on
per site likelihoods of each best tree obtained using RAxML [1]. Consel
ranks the trees after having computed the p-values of various well-known
statistical tests, like the so-called approximately unbiased (au), Kishino-
Hasegawa (kh), Shimodaira-Hasegawa (sh), and Weighted Shimodaira-
Hasegawa (wsh) tests. Obtained results are provided in Table 4, they
confirm the selection of Topology 0 as the tree reflecting the best the
Rosales phylogeny.
5
Figure 1: Average fitness of Ros-
ales order
Table 2: Best tree in each swarm
Removed
Swarm genes (p + b)/2 b
1 4 75.5 73
2 6 75.5 76
3 20 75 88
4 52 59.5 89
5 3 75.5 72
6 19 77.5 92
7 47 63.5 92
8 9 73.5 74
9 10 72.5 73
10 13 76.5 84
Topology Swarms b p Occurrences
0 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 92 63 568
1 1, 2, 3, 4, 5, 6, 10 63 45 11
2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 76 67 55
3 8, 1, 2, 3, 4 56 41 5
4 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 89 30 65
5 1, 3, 4, 5, 6, 9 71 33 9
6 5, 6 25 45 2
Table 3: Best topologies obtained from the generated trees. b is the
lowest bootstrap of the best tree having this topology, while p is the number of
considered genes to obtain this tree.
Rank item obs au np bp pp kh sh wkh wsh
1 0 -1.4 0.774 0.436 0.433 0.768 0.728 0.89 0.672 0.907
2 4 1.4 0.267 0.255 0.249 0.194 0.272 0.525 0.272 0.439
3 2 3 0.364 0.312 0.317 0.037 0.328 0.389 0.328 0.383
Table 4: Consel results regarding best trees
5 Conclusion
A discrete particle swarm optimization algorithm has been proposed in
this article, which focuses on the problem to extract the largest subset
of core sequences with a view to obtain the most supported phylogenetic
tree. This heuristic approach has then been applied to the 82 core genes
of the Rosales order.
References
[1] Alexandros Stamatakis. Raxml version 8: A tool for phylogenetic
analysis and post-analysis of large phylogenies. Bioinformatics, 2014.
6
[2] James Kennedy and R.C. Eberhart. Particle swarm optimization. In
Proceedings of IEEE International Conference on Neural Networks,
volume 4, pages 1942–1948, 1995.
[3] Mojtaba Ahmadieh Khanesar, Hassan Tavakoli, Mohammad Tesh-
nehlab, and Mahdi Aliyari Shoorehdeli. Novel binary particle swarm
(a) T opology0
(b) T opology4
(c) T opology2
Figure 2: The best obtained topologies for Rosales order
7
optimization. www.intechopen.com, (978-953-7619-48-0):11, 2009.
[4] Bassam AlKindy, Christophe Guyeux, Jean-François Couchot,
Michel Salomon, Christian Parisod, and Jacques M. Bahi. Hybrid
genetic algorithm and lasso test approach for inferring well supported
phylogenetic trees based on subsets of chloroplastic core genes. In-
ternational Conference on Algorithms for Computational Biology, Al-
CoB 2015, pages 1–15, 2015.
[5] Stacia K. Wyman, Robert K. Jansen, and Jeffrey L. Boore. Auto-
matic annotation of organellar genomes with dogma. BIOINFOR-
MATICS, Oxford Press, 20(172004):3252–3255, 2004.
[6] Bassam Alkindy, Jean-François Couchot, Christophe Guyeux, Ar-
naud Mouly, Michel Salomon, and Jacques M. Bahi. Finding the
core-genes of chloroplasts. Journal of Bioscience, Biochemistery, and
Bioinformatics, 4(5):357–364, 2014.
[7] Bassam Alkindy, Christophe Guyeux, Jean-François Couchot, Michel
Salomon, and Jacques Bahi. Gene similarity-based approaches for
determining core-genes of chloroplasts. November 2014. Short paper.
[8] Jeffrey Rizzo and Eric C. Rouchka. Review of phylogenetic tree con-
struction. University of Louisville Bioinformatics Laboratory Tech-
nical Report Series, (TR-ULBL-2007-01):2–7, 2007.
[9] Tim Blackwell Riccardo Poli, James Kennedy. Particle swarm op-
timization. Springer Science + Business Media, 1(10.1007/s11721-
007-0002-0):33–57, 2007.
[10] Hidetoshi Shimodaira and Masami Hasegawa. Consel: for assess-
ing the confidence of phylogenetic tree selection. Bioinformatics,
17(12):1246–1247, 2001.
8

