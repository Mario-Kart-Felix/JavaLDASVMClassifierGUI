Real-Time Systems
Summer term 2017
Real-Time Systems
2nd Chapter
Basics
Jafar Akhundov, M.Sc.
Professur Betriebssysteme
Real-Time Systems – Basics
2.1 Area’s Confine
2.1 Area’s Confine
▸ Examples for use of real-time systems:
▸ Different application domains
▸ Mostly embedded systems
SoSe 2017 ⋅ J. Akhundov 2 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Example: Pacemaker
source: WikiCommons
▸ one processor
▸ ca. 500 000 LoC
SoSe 2017 ⋅ J. Akhundov 3 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Example: BMW 7 Series
source: BMW Group Munich
▸ ca. 70 control units, in part with multiple processors
▸ ca. 100 million LoC
SoSe 2017 ⋅ J. Akhundov 4 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Example: Boeing 777
source: J.M. Dibbs / Air France
▸ ca. 1200 processors
▸ ca. 4 billion LoC
SoSe 2017 ⋅ J. Akhundov 5 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
What is Real Time / a Real-Time System?
▸ There exist quit a lot, partly confusing beliefs, what are the properties of a
real-time system
▸ Real-time systems have to...
▸ be fast?
▸ be predictable?
▸ provide results in a timely manner?
▸ be secure?
▸ act error-free?
▸ operate even in presence of a failure?
á Need for a definition
SoSe 2017 ⋅ J. Akhundov 6 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Definitions
DIN 44300: Real-Time Operation
Echtzeitbetrieb ist ein Betrieb eines Rechensystems, bei dem Programme zur Verarbeitung
anfallender Daten ständig betriebsbereit sind derart, dass die Verarbeitungsergebnisse innerhalb
einer vorgegebenen Zeitspanne verfügbar sind.
Approx. translation:
Real-time operation of a computer system is an operation mode, where programs that process
data are always ready in the way, that allows to provide the results within a given period of time.
Wikipedia: Real-Time Computing
[...] real-time computing (RTC), or reactive computing, is the study of hardware and software
systems that are subject to a “real-time constraint” – i.e., operational deadlines from event to
system response. Real-time programs must execute within strict constraints on response time.
SoSe 2017 ⋅ J. Akhundov 7 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Definitions (cont.)
KOPETZ Real-time computer system
A real-time computer system ist a computer system, in which the correctness of the system
behavior depends not only on the logical results of the computation, but also on the
physical instant at which these results are produced.
KRISHNA & SHIN: Real-time system
Any system where a timely response by the computer to a external stimuli is vital is a real-time
system.
SoSe 2017 ⋅ J. Akhundov 8 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Socratic Dialogue1
SOCRATES:
What means “timely”?
Answer:
It means that tasks in a real-time system have to obey a deadline.
Refined Definition
A real-time system is any system that the lecturer sees as such.
In general, considerable work in real-time system design is spend on how timing constraints can
be met.
1inspired by [KS97]
SoSe 2017 ⋅ J. Akhundov 9 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Socratic Dialogue
SOCRATES:
Does “deadline” mean that any task really has to be finished by that time?
Answer:
Not necessarily.
Sometimes yes: If landing of an airplane is controlled by a computer, missing
a deadline may lead to a crash.
Sometimes no: In a video game, nothing (really) bad happens in this case.
Refined Definition
A real-time system is any system that the lecturer sees as such.
In general, considerable work in real-time system design is spend on how timing constraints can
be met.
SoSe 2017 ⋅ J. Akhundov 9 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Socratic Dialogue
SOCRATES:
Does “deadline” mean that any task really has to be finished by that time?
Answer:
Not necessarily.
Sometimes yes: In a nuclear reactor delayed reaction may lead to a disaster.
Sometimes no: Getting a single measurement to late may not be a problem if
the next measurement is on time.
Refined Definition
A real-time system is any system that the lecturer sees as such.
In general, considerable work in real-time system design is spend on how timing constraints can
be met.
SoSe 2017 ⋅ J. Akhundov 9 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Socratic Dialogue
SOCRATES:
What means “finished”? Is there an exact criterion when a task is finished?
Answer:
Not necessarily.
Sometimes yes: For example, transferring money from one account to
another may depend on calculating the sum of different accounts.
Sometimes no: If an application calculates the value of π it may decide to
stop earlier and use a less accurate result.
Refined Definition
A real-time system is any system that the lecturer sees as such.
In general, considerable work in real-time system design is spend on how timing constraints can
be met.
SoSe 2017 ⋅ J. Akhundov 9 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Socratic Dialogue
SOCRATES:
Again to the deadline: What happens if a task does not obey its deadline? Will
it be terminated then?
Answer:
It differs.
If you are passenger of an airplane that crashes due to a missed deadline
than this is not relevant both for you and the computer.
On the other hand, for a video conference it may be useful not to skip a
delayed frame.
In general the value of a tasks result is decreasing for missed deadlines – in
some cases slowly, in other cases abrupt.
Refined Definition
A real-time system is any system that the lecturer sees as such.
In general, considerable work in real-time system design is spend on how timing constraints can
be met.
SoSe 2017 ⋅ J. Akhundov 9 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Different Time-Value Functions
value
time
deadline
value
time
deadline
value
time
deadline
value
time
deadline
SoSe 2017 ⋅ J. Akhundov 10 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Socratic Dialogue
SOCRATES:
Doesn’t this imply that any computer is a real-time system?
Answer:
Somehow yes. Taking the definition very precisely, any computer is a
real-time system because nobody wants to wait forever for a result, e.g., in
response to a keystroke.
Refined Definition
A real-time system is any system that the lecturer sees as such.
In general, considerable work in real-time system design is spend on how timing constraints can
be met.
SoSe 2017 ⋅ J. Akhundov 11 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Socratic Dialogue
SOCRATES:
If it includes all computer, isn’t the defintion senseless?
Answer:
Okay, in order to stop this discussion, here is a new definition:
Refined Definition
A real-time system is any system that the lecturer sees as such.
In general, considerable work in real-time system design is spend on how timing constraints can
be met.
SoSe 2017 ⋅ J. Akhundov 11 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Misconceptions
“Misconceptions about Real-Time Systems”1
▸ “There is no science in real-time-system design.”
▸ We will that reconsider later...
▸ “Advances in supercomputing hardware will take care of real-time requirements.”
▸ Argument of a salesman: “Buy a faster computer!”
▸ But: In case of a deadlock, this is not an improvement...
1b[Sta88], access via
https://www.tu-chemnitz.de/~werne/restricted-docs/Stankovic88Misconceptions.pdf
SoSe 2017 ⋅ J. Akhundov 12 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Misconceptions (cont.)
▸ “Real-time computing is equivalent to fast computing.”
▸ No. Time needed for computation has to be predictable.
▸ “Real-time programming is assembly coding and driver programming.”
▸ This may be necessary in some cases but as always in computer science we
want to automate as much as possible.
▸ Real time needs conceptual understanding.
▸ “Real time is performance engineering.”
▸ Timeliness is more important than speed.
SoSe 2017 ⋅ J. Akhundov 13 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
Misconceptions (cont.)
▸ “Real-time problems have all been solved in other areas of computer science or or
operations research.”
▸ In computer science usually peak performance or average performance are
of interest.
▸ Operation research usually deals with stochastical models.
▸ “It is not meaningful to talk about guaranteeing real-time performance when
things can fail.”
▸ This is no reason not to improve the design.
▸ A system is as weak as the weakest element: It is our goal to ensure that
operating system or control software are not that weakest element.
SoSe 2017 ⋅ J. Akhundov 14 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
What is the Problem?
▸ Consider the following guarantee:
PC Manufacturer warrants that
(a) the SOFTWARE will perform substantially in accordance with the
accompanying written materials for a period of ninety (90) days from the date of
receipt, and
(b) any Microsoft hardware accompanying the SOFTWARE will be
free from defects in materials and workmanship under normal use and service for
a period of one (1) year from the date of receipt.
▸ Hardware may fail, software is often faulty from beginning á software crisis
SoSe 2017 ⋅ J. Akhundov 15 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.1 Area’s Confine
What is the Problem? (cont.)
▸ Something is next to trivial, something is impossible
▸ We are interested in the area in between
▸ Window of scarcity
▸ Example multimedia:
Source: Anderson et al: Support for Continuous Media in the DASH System, 1990.
SoSe 2017 ⋅ J. Akhundov 16 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.2 Concept of Time
2.2 Concept of Time
What is time?
“If nobody ask me what time is I know it, if I want to explain it, I don’t know it.”
AURELIUS AUGUSTINUS
Physical View
NEWTON: Absolute dimension (beside space) where reality exists.
EINSTEIN: Relative dimension as part of space-time.
Today: Direction of entropy’s increase.
SoSe 2017 ⋅ J. Akhundov 17 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.2 Concept of Time
NEWTON’s Concept of Time
▸ Law of inertia is valid with respect to an (acceleration less) inertial systems
▸ Different inertial systems that are related to each other á there is one absolute
time (and space)
Philosophiae Naturalis Principia Mathematica, 1686
Absolute, true, and mathematical time, from its own nature, passes equably without
relation the anything external, and thus without reference to any change or way of
measuring of time (e.g., the hour, day, month, or year).
SoSe 2017 ⋅ J. Akhundov 18 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.2 Concept of Time
EINSTEINs Concept of Time (1905)
▸ Time is . . .
▸ neither independent nor constant
▸ part of the space-time (Minkowski space)
▸ Constant here: speed of light
▸ Consequences:
▸ There is no space-independent simultaneity
▸ Speed of time depends on state of observer
▸ Example: Lorentz transformation
Moving at speed of v in direction x
t′ = t −
v
c2
x√
1 − v2
c2
, x′ = x − vt√
1 − v2
c2
y′ = y, z′ = z
SoSe 2017 ⋅ J. Akhundov 19 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.2 Concept of Time
Thermodynamic Arrow of Time
▸ Laws of nature usually not differentiate between past and future
á Symmetry of charge, parity and time (CPT symmetry, PAULI, 1955)
▸ However: CP symmetry (charge and parity) can be broken
▸ Corresponds to Second Law of Thermodynamics (CLAUSIUS, 1854)
▸ Inversion of the Second Law to define time: direction of entropy’s increase defines
thermodynamic arrow of time
For practical reasons usually Newton’s concept of time is still in use (e.g., in this
lecture).
SoSe 2017 ⋅ J. Akhundov 20 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.2 Concept of Time
Mathematization
▸ In the most cases, Newton’s concept of time is sufficient
▸ Newton’s concept of time is usually mathematical reduced as follows:
Time is a set M of discrete, distinguishable points in time with the relation “<”
(“temporally before”) that is defined as follows:
Trichotomy: ∀x, y ∈M exactly one of the following conditions holds:
(x < y), (y < x), (x = y)
Transitivity: ∀x, y, z ∈M ∶ (x < y) ∧ (y < z)⇒ (x < z)
Irreflexivity: ∀x ∈M ∶ ¬(x < x)
Densitity: ∀x, y ∈M ∶ (x < y)⇒ ∃z ∶ (x < z < y)
▸ Trichotomy, transitivity, and irreflexivity imply that “<” is a strong total order
SoSe 2017 ⋅ J. Akhundov 21 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.2 Concept of Time
Measuring Time
▸ Measuring of time is a problem since time can not be repeated
▸ Issue of standardization
▸ First attempt: astrological phenomena
Day: Duration between two sun zeniths (solar day)
Year: Duration that the Sun takes to return to the same position in the cycle of
seasons, e.g., for example, the time from vernal equinox to vernal equinox
(tropical year)
Month: period of the Moon’s phases
SoSe 2017 ⋅ J. Akhundov 22 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.2 Concept of Time
Subdivisions
▸ Naive division of day (and night) into 12 hours; fixed phenomena: sun raise and
sun set
▸ In use until 15th century
▸ Issue: length of hours differs; except equinoxes
▸ Compensation by introduction of the mean solar day
▸ Second: 1
86400
of the mean solar day
SoSe 2017 ⋅ J. Akhundov 23 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.2 Concept of Time
SI Second
▸ Astronomic phenomenons are not “precise enough”
▸ Remedy: definition without help of astronomy
Second due to SI (1967)
A second is the duration of 9,192,631,770 periods of the radiation corresponding to the
transition between the two hyperfine levels of the ground state of the caesium-133
atom.
SoSe 2017 ⋅ J. Akhundov 24 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.3 Real-Time System as Embedded System
2.3 Real-Time System as Embedded System
Real-Time Entity
▸ Embedded system: overall system consist of computer and non-computing
components
▸ The state of the non-computing components (and of the environment) are of
interest
á state variables
▸ Examples: position of robot manipulator, speed, ...
▸ Relevant state variables are called real-time entities
▸ Relevance due to two reasons:
▸ The application want to manipulate it
▸ It manipulates/has impact to the application
▸ Statements are valid for limited time only
SoSe 2017 ⋅ J. Akhundov 25 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.3 Real-Time System as Embedded System
Real-Time Image
▸ The real-time entity is mapped to a state of the computation system
▸ Mapping with help of sensors; sometimes multiple transformations
▸ The mapping result is called real-time image
▸ The applications uses always the image, but tries to impact the real-time
entity
▸ Mapping results may differ from real-time entity in value and time
▸ Difference in time: temporal accuracy interval
▸ The goodness of the real-time image is an important design parameter
SoSe 2017 ⋅ J. Akhundov 26 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.3 Real-Time System as Embedded System
Accuracy
!!
"#$%#&'%#()*+%,#&%-.-%#/#
0#&%'&*+#(1#234&56#&%
7#3'(8&/#%9:- %&;6 %&;!(((((%&<%4-#
=3**
>?8$32-
@ A#,45-B426%('#%,%#(C&-%9$&#(D$#*#2% +&-%9$. 7CE(=#$(:#9:3*+%#%#2(78()2%&%.
@ 7C& ,4/(0#&%B426%(%(&-%(#&2#(5#9$=2#%#(F#25#(G92(0#&%B426%#2(H%&I(%&;!I(JJJI(%&;6K
! LM25#(=3**<,D%&E; ,D%&;6E(5&:%(,#&%'J(1#234&56#&%(32
@ 78(N/35#(&-%(,#&%'J(5#234(,4/(0#&%B426%(%&I(O#22(#PJ(%Q !(7C&R("3'4#D78 N/35#(3%(%&E(
<("3'4#D78 )2%&%. 3%(%QE(
@ N2%#$G3''(=#$(,#&%'J(1#234&56#&%(&-%(=4$*+(=&#(S.23/&6(=#$(78()2%&%. :#-%&//%
! "#$%&'()*+(,-*./( )0"#1$(,'23"##453"#1$%,6
"#$%&'(72&66 8+(*&'2((69:*;+'<0=(*&*, ,(*>?&*>.'@
Figure: accuracy interval (from [Kop97])
SoSe 2017 ⋅ J. Akhundov 27 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.3 Real-Time System as Embedded System
Sphere of Control
▸ Each real-time entity may exist within a sphere of control (SoC)
▸ Within a SoC, a real-time entity can be influenced
▸ Influence works indirectly (via actors)
á Out of a SoC, a real-time entity may be observed, but not controlled
▸ Example car:
▸ Real-time entities: traffic light, other cars, own speed
▸ Traffic lights, other cars, their speeds, etc. can be observed
▸ Own speed can be controlled á Sphere of control
SoSe 2017 ⋅ J. Akhundov 28 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
2.3 Real-Time System as Embedded System
Example
controlled
system
environment
SoSe 2017 ⋅ J. Akhundov 29 / 30 osg.informatik.tu-chemnitz.de
Real-Time Systems – Basics
References
References
 [KS97] C. M. Krishna and Kang G. Shin. Real-Time Systems. McGraw-Hill,
1997, Chapter 1 until Section 1.3
 [Kop97] Hermann Kopetz. Real-Time Systems – Design Principles for
Distributed Embedded Applications. Kluver Academic, 1997, Section
1.1 and Chapter 5
b [Sta88] John A. Stankovic. “Misconceptions About Real Time Computing – A
Serious Problem for Next-Generation Systems”. In: IEEE Computer
21.10 (1988), pp. 10–19
b [Mag96] A.P. Magalhães. “A Survey on Estimating the Timing Constraints of
Hard Real-Time Systems”. In: Design Automation for Embedded
Systems 1 (1996), pp. 213–230
SoSe 2017 ⋅ J. Akhundov 30 / 30 osg.informatik.tu-chemnitz.de

