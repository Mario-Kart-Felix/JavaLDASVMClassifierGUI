BUCKNELL UNIVERSITY 
UNDERGRADUATE RESEARCH PROPOSAL 
SUMMER 2010 
 
 
 
A MECHANISM FOR TRANSIENT DETECTION IN METRICS 
ESTIMATED WITH THE NS‐3 NETWORK SIMULATOR 
 
 
 
 
 
TALI SASON 
CLASS OF 2013 
BOX C1686 
(201) 956‐7312 
BU ID: 10969598 
Tjs024@bucknell.edu 
 
 
 
 
 
 
 
LUIZ FELIPE PERRONE (FACULTY MENTOR) 
ASSISTANT PROFESSOR 
DEPARTMENT OF COMPUTER SCIENCE 
perrone@bucknell.edu 
 
 
 
PART A 
PROJECT DESCRIPTION 
 
  As society continues to develop and grow, the ability to network has become a vital skill.  
Computer networks are a crucial means of sharing information and data.  As the public 
becomes more dependent on information and connectivity, they demand more of computer 
networks.   
The two types of computer networks are hard‐wired and wireless.  Although hard‐wired 
are more reliable, they are not portable and conflict with the need for mobility while accessing 
and sharing information.  As the nodes in wireless networks have weaker connections, their 
protocols continue to be developed and enhanced so that the communication channels are 
reliable.  While these improvements to wireless networks progress, research to test and analyze 
the predicted behavior of these connections is essential.  In order to determine the behavior 
and/ or the performance of networks, simulations are beneficial because they create a 
controlled environment.  To predict network behavior, complicated mathematical processes 
and computer simulations must be applied. Users of these methodologies often introduce 
errors in the process, which stand as road blocks on the way to successful simulation of 
network behavior. 
Researchers use a wide range of methodologies including a mix of simulations, and 
mathematics to compile and analyze output data.  Results of simulations often have “little 
credibility” because researchers often overlook the “random nature and the need for proper 
statistical analysis of simulation output data” [3].   Therefore, it has become increasingly 
difficult for data to be confirmed and standardized for dissemination of scientific results.  On 
top of that, the collection process can be exhausting, consuming of time and resources, which 
renders few people able to compile trustworthy results.  This faulty research has lead to an 
influx of flawed results and conclusions, as evidenced in the literature [1,2,3]. It is a research 
requirement that “any scientific activity should be based on controlled and independently 
repeatable experiments” but as researchers became more impatient they used a “brute force 
approach” to these simulations, which led to many unacceptable results [1].  The combination 
of these issues has lead to a crisis of credibility in the network simulation field.   
  In response to this confusion, the ns‐3 network simulator was created so that it could be 
widely used and applied as a standardized system.  Ns‐3 is free software that is distributed, 
modified, and redistributed by any user allowing it to have a greater user base.  Although the 
simulator has proven to be a big improvement in the research of computer networking, it is 
complicated, especially for inexperienced users.  Professor Perrone is developing an 
architecture that will allow novice users to create successful network simulation experiments, 
while also enhancing the capabilities of more advanced users [5].  He used an analogy to 
describe his work which I believe helps to justify the development of an experiment automation 
framework for ns‐3.  He said that ns‐3 is like a bike and although it moves relatively smoothly, 
the rider still needs training wheels to help keep them stable so they do not fall off and get hurt.  
I will help with the creation of those training wheels by focusing my efforts on the application of 
valid statistical methods for output data processing.   
  Transient data is data which does not follow the general trend of results.  This data is 
not an accurate representation of the whole and therefore must be detected and discarded 
before statistical metrics are computed. Transient data can bias the statistical results, skewing 
the findings and making them unreliable.   This is one of the main causes of the credibility crisis 
in network simulations. 
  Although a reliable network simulator now exists, it doesn’t include transient detection 
and deletion in the output data stream.  Through the research I will to do with Prof. Perrone, I 
will work on a mechanism for the detection and deletion of transient data to improve the 
reliability of the simulator’s results. This research with Prof. Perrone will be a unique 
opportunity to develop new skills in computer programming and enhance my ability as I 
continue with Bucknell’s Computer Engineering degree program.   
 
METHODS 
  To do this work I will use statistical processes and analyze the data generated.  I will run 
simulations using ns‐3 and use its facilities for collecting data.  I will use previously developed 
mathematical technology referred to as variance reduction techniques [3] and other resources 
including stochastic steady‐state simulation to create a program that will allow me to analyze 
data [1,3].  In addition to adding to my knowledge of statistics, I will be learning two 
programming languages that are currently not covered in the core Computer Science 
curriculum (C++ and Python). My goal is to create a program that will analyze that data to 
detect the end of the transient results so that we can compute valid statistics on this body of 
simulation data.  Such a program was developed to work with an earlier network simulator, ns‐
2, but I will create a new program that works with the ns‐3 simulator and within the larger 
context of Prof. Perrone’s automation framework. This program will be user‐friendly and widely 
accepted in everyday experiments. 
 
 
TIME LINE 
Week 1: review of literature on statistical methods 
Week 2 and 3: studying of programming languages used in the ns‐3 simulator 
Week 4 to 6: implementation of prototype 
Week 7 to 8: validation and debugging of code 
 
 
OUTCOMES 
  This project fits well within Prof. Perrone’s research agenda.  We believe that my results 
will help to create a more stable method of analyzing and using network simulations in an effort 
to make the field more reliable and constructive.  I will work on writing a computer program for 
the ns‐3 simulator that will take a series of measurements, go through a statistical process, and 
tell the user whether or not a data point is part of the transient data.  I will produce a program 
that will fit in the larger context of a framework to automate experiments in ns‐3.  Prof. 
Perrone and I believe that my work will be beneficial to the entire user base of ns‐3.  We expect 
that this work will result in material that can be submitted as conference publication.   
 
PART B 
REASEARCH ENVIRONMENT 
  I will be working closely with Prof. Perrone throughout my summer research. He will be 
working on campus regularly during the summer as well.  We will have three regularly 
scheduled meetings every week. Additionally, since Prof. Perrone believes strongly in an “open 
door” policy, I will be able to speak with him about any questions or problems that I may have 
while doing my work at any time.  I will be using standard computer science labs, which have 
both Linux and Macintosh machines to develop code and execute experiments to evaluate 
results.   
 
 
 
REFERENCES 
[1] K. Pawlikowski, H.‐D. J. Jeong, and J.‐S. R. Lee, “On credibility of simulation studies of 
  telecommunication networks,” IEEE Communications Magazine, vol. 40, January 2002. 
[2] D. McNickle, G. Ewing, and K. Pawlikowski, “Transient deletion and the quality of sequential 
  steady‐state simulation,” in Proceedings of the 21st European Conference on Modeling 
  and Simulation, Prague, Czech Republic, June 2007.   
[3] K. Pawlikowski, “Steady‐state simulation of queuing processes: a survey of problems and 
  simulations,” ACM Computing Surveys, vol. 22, no. 2, pp. 123‐170, 1990.   
[4] T. R. Henderson, S. Roy, S. Floyd, and G. F. Riley, “ns‐3 project goals,” in Proceedings from 
  the 2006 workshop on ns‐2: the IP network simulator (WNS2’ 06), 2006.  
[5] L. F. Perrone, C. Cicconetti, G. Stea, and B. C. Ward. “On the automation of computer 
network simulators.” In Simutools ’09: Proceedings of the 2nd International Conference on 
  Simulation Tools and Techniques, pages 1‐10, 2009.   

