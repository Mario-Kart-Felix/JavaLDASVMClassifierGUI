Convergence of Telecommunications and
Computing to Networking Models for
Integrated Services and Applications
MAURIZIO DECINA, FELLOW, IEEE, AND VITTORIO TRECORDI, MEMBER, IEEE
Invited Paper
This paper gives a snapshot of the convergence of the
telecommunications and computer industries to a common vision
of networking models for an integrated services information
infrastructure meeting the stringent requirements of multimedia
applications.
At first, we summarize the requirements and elements of such
an infrastructure and introduce a networking model that is framed
into four layers: interconnection (bearer), internetworking,
interoperability (middleware), and application. Then, we offer
a brief review of the classical telecommunications networking
model, the current status of asynchronous transfer mode (ATM)
multimedia networking features, and the ongoing activities for
fostering evolution of telecommunications networks to enhance
control, management, and service delivery. An overview of the
current Internet network architecture follows, presenting the
recent achievements and the evolving networking protocols to
cope with real-time multimedia applications.
As described in this paper, the schemes for integrating
Internet protocols (IP’s) and ATM resource reservation protocols,
which address an efficient resource utilization and quality of
service guarantee in broad-band networks, fall into the first two
lower architectural layers, which are the foundation of network
computing and communications services. In particular, we present
a summary description of the comparative features of both IP and
ATM protocol approaches, and we report on current proposals
for provisioning IP on ATM networks.
Last, we briefly discuss trends in middleware services, including
the emerging technology of transportable computation and
intelligent agents. Interoperability of heterogeneous networked
systems is based on an agreed distributed application encoding
and computation environment, thus pushing the key capability of
the layered networking architecture up into the middleware layer.
Keywords— Asynchronous transfer mode, communication sys-
tems, computer networks, distributed computing, intelligent net-
works, internetworking, protocols.
NOMENCLATURE
AAL ATM adaptation layer.
ABR Available bit rate.
Manuscript received January 23, 1997; revised July 15, 1997.
The authors are with Politecnico di Milano/CEFRIEL, Milano 20133
Italy.
Publisher Item Identifier S 0018-9219(97)08814-2.
ADSL Asymmetric digital subscriber line.
AFI Authority and format identifier.
AIN Advanced intelligent network.
API Application programming interface.
ARP Address resolution protocol.
ATD Asynchronous time division.
ATM Asynchronous transfer mode.
BGP Border gateway protocol.
B-ISDN Broad-band integrated services digital net-
work.
CAC Connection admission control.
CATV Cable TV.
CBR Constant bit rate.
CDS Cell directory service.
CGI Common gateway interface.
CLP Cell loss priority.
CMIP Common management information proto-
col.
CORBA Common object request broker architec-
ture.
CP Common part.
CS Convergence sublayer.
CSR Cell switch router.
CTI Computer telephony integration.
DAVIC Digital Audio-Visual Council.
DCE Distributed computing environment.
DCOM Distributed component model.
DECT Digital enhanced cordless telephony.
DHCP Dynamic host configuration protocol.
DII Dynamic invocation interface.
DNS Domain name system.
0018–9219/97$10.00  1997 IEEE
PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997 1887
DPE Distributed processing environment.
DSI Dynamic skeleton interface.
DSM-CC Digital storage media—command and con-
trol.
DSS Digital subscriber signaling system.
DTS Distributed time service.
DVMRP Distance vector multicast routing protocol.
EML Element management layer.
FDDI Fiber distributed data interface.
FPS Fast packet switching.
FR Frame relay.
FTP File transfer protocol.
GCRA Generic cell rate algorithm.
GDS Global directory service.
GFC Generic flow control.
GII Global information infrastructure.
GRC Global resource control.
GSM Global system for mobility.
GSMP Generic switch management protocol.
GSTN General switched telephone network.
HEC Header error control.
HFC Hybrid fiber coaxial.
HLR Home location register.
HTML Hypertext mark-up language.
HTTP Hypertext transfer protocol.
ICMP Internet control message protocol.
IETF Internet Engineering Task Force.
IFMP Ipsilon flow management protocol.
IGMP Internet group management protocol.
IIOP Internet inter-ORB protocol.
IN Intelligent network.
INAP Intelligent network application protocol.
IP Internet protocol.
ISA Internet integrated services architecture.
ISDN Integrated services digital network.
ISO International Standardization Organization.
ISP Internet service provider.
ITU International Telecommunications Union.
ITU-T ITU-Telecommunications Sector.
JVM Java virtual machine.
LAN Local-area network.
LANE LAN emulation.
LIS Logical IP subnetwork.
MAC Media access control.
MBone Multicast backbone.
MCP Mobility control point.
MIB Management information base.
MPEG Moving Pictures Experts Group.
MPOA Multiprotocol over ATM.
MTU Maximum transmission unit.
NCCE Native computing and communications en-
vironment.
NEL Network element layer.
NHDR Nonhierarchical dynamic routing.
NHRP Next hop resolution protocol.
NML Network management layer.
NNI Network-to-node interface.
NNTP Network news transfer protocol.
NSAP Network service access point.
NVOD Near VoD.
OAM&P Operation, administration, maintenance,
and provisioning.
ODMA Open distributed management architecture.
ODN Open data network.
ODP Open distributed processing.
OMG Object Management Group.
OMG-CDR OMG-common data representation.
OMG-UNO OMG-universal network object.
ORB Object request broker.
OS Operating system.
OSF Open software foundation.
OSI Open systems interconnection.
OSPF Open shortest path first.
OSS Operation support systems.
PBX Private branch exchange.
PCM Pulse code modulation.
PES Packetized elementary stream.
PNNI Private network node interface.
POP Point of presence.
POTS Plain old telephone service.
PPP Point-to-point protocol.
PVC Permanent virtual circuit.
QoS Quality of service.
RFC Request for comment.
RIP Routing information protocol.
RMI Remote method invocation.
RPC Remote procedure call.
RSVP Resource reservation protocol.
RTCP Real-time control protocol.
RTP Real-time protocol.
RTSP Real-time streaming protocol.
SAAL Signalling ATM adaptation layer.
SAP Service access point.
1888 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
SAR Segmentation and reassembly.
SCP Service control point.
SDH Synchronous digital hierarchy.
SIB Service independent building block.
SIM Subscriber identification module.
SLIP Serial line IP.
SMDS Switched multimegabit data service.
SML Service management layer.
SMTP Simple mail transfer protocol.
SNAP Subnetwork access protocol.
SNMP Simple network-management protocol.
SS Signaling system.
SSP Service switching point.
ST-2 Stream protocol version 2.
STD Standard traffic descriptor.
STU Set-top unit.
SVB Switched video broadcasting.
SVC Switched virtual circuit.
TCAP Transaction capabilities application part.
TCP Transmission control protocol.
TDP Tag distribution protocol.
TINA Telecommunications information network-
ing architecture.
TMN Telecommunications management network.
TS Transport stream.
UBR Unspecified bit rate.
UDP User datagram protocol.
UNI User-to-network interface.
URL Uniform resource locator.
VBR Variable bit rate.
VC Virtual circuit.
VCI VC identifier.
VCR Video cassette recorder.
VLR Visitor location register.
VoD Video on demand.
VP Virtual path.
VPI VP identifier.
VPN Virtual private network.
WAN Wide-area network.
WWW World Wide Web.
I. INTRODUCTION
Considerable research effort is devoted to pursuing the
promise of the information highway, that is, a high-speed,
ubiquitous, and seamless integrated services information
infrastructure [1]. The classical telecommunications and
computer networking paradigms fail to support adequately
all the emerging requirements of such an ambitious project.
The next years will be devoted to enhancing current sys-
tem networking architectures in order to cope with these
evolving needs.
For many years, the commitment of telecommunications
companies to the bare transport of information, by means of
digital transmission and switching facilities, has expanded
its scope by enhancing network control and management ca-
pabilities. The emphasis of upcoming telecommunications
networks is on multimedia distributed services, and oper-
ators are exploring technologies and network architectures
capable of offering value-added network-centric services.
Starting from the basic concept of the IN [2], [3], the ITU-T
standards committees and other telecommunications-related
fora, such as the TINA consortium [4]–[6], propose service
control and management architectures and technologies.
ATM is the technology designed for connection-oriented
transport of information in high-speed networks, in both
wide and local areas [7], [8]. In wide areas, the use of
ATM with network control signaling, according to ITU-T
and ATM Forum standards, aims to carry a variety of traffic
flows cost effectively on one network with different QoS
requirements and with different input traffic profiles. The
flexibility and efficiency of ATM can be fully exploited,
however, only by applying complex network resource-
allocation schemes, based on sophisticated congestion con-
trol and traffic-management capabilities.
The computer industry’s view of the network is driven
mainly by the impressive success of the Internet. The
IP-based network of networks is being used to transmit
hypermedia information worldwide. The capability of the
Internet to support real-time voice and video information
exchange over the current best-effort IP connectionless
protocol, namely, IP version 4 (IPv4) [9], is subject to the
availability of large spare network resources (i.e., band-
width and buffers). Hence, a new version of the IP, namely,
IP version 6 (IPv6) [10], is being finalized by the IETF
to support integrated services together with other service
extensions (for example, security and mobility). IPv6 is
complemented by soft reservation protocols (RSVP [11],
[12]) capable of supporting the allocation of resources at
the logical network level provided by the IP.
In the telecommunications model, the functional com-
plexity is located in the network switching nodes, and
the introduction of a new service often requires updates
in the network nodes’ hardware and software. In con-
trast, the Internet approach is based on concentration of
intelligent functions in the hosts, at the network edges,
and their coordination with the internetworking routers’
software. In this case, the network is seen as a dumb
data-transport medium (the telecommunications pipe). This
approach assures the separation of the service from the
underlying network architecture. New services can be in-
troduced almost independently of the evolution of the
underlying network. It is recognized that the support of
some services, however, such as those implying mobility,
is easily achieved when the intelligent functionalities are
offered by the network nodes (see the remarkable success
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1889
of the ITU-T IN approach to building wireless networks for
digital telephony applications [13]–[15]).
The telecommunications and computer-network views
face the dilemma of clustering the intelligence within
the network nodes (switches and servers), thus allowing
the usage of network computers with limited capabilities,
versus featuring end terminals rich in capabilities. The
alternatives are backed by major network, computer, and
software vendors with a considerable effort due to the
extraordinary economic interests lying behind the technical
choice.
Current work on the design of integrated services in-
formation infrastructures is at the crucial point where
the two network architecture visions (telecommunications
and Internet) inevitably collide. There is a clear need for
fostering collaboration of the two communities to build
the network of the future. Knowledge, cultural attitudes,
and working agendas should rapidly converge among the
various professional and institutional entities involved in
shaping the ubiquitous and seamless information utility of
the next millennium. In this rapidly evolving scenario, this
paper offers an overview on recent technical approaches to
foster convergence toward a common vision of networking
models.
We start in Section II by describing elements and re-
quirements of future networks for integrated services and
applications. Then we offer a snapshot of the two visions:
the interconnection model (telecommunications) and the
internetworking model (Internet). In Section III, we review
the classical telecommunications networking model and
the ongoing activities for fostering evolution of network
architecture and summarize the current status of ATM net-
working features. Section IV is devoted to the Internet and
gives a brief report on recent achievements and evolving
networking models.
In Section V, we present a summary of IP and ATM
comparative features. We report on current IP handling
schemes on ATM networks and discuss some integration
schemes of ATM and IP resource reservation protocols to
provide efficient resource utilization and QoS guarantee in
broad-band networks.
Last, Section VI expands on middleware [16], [17] ser-
vices, according to the emerging paradigms of transportable
computation and intelligent agents. The interoperability of
heterogeneous networked end systems is based, indeed, on
an agreed program encoding and computation environment
that fits into the middleware.
The objective of this review is to record the various
topical initiatives in the standard arenas for interconnection,
internetworking, and interoperability matters and to high-
light key issues, rather than a systematic and comprehensive
taxonomy.1
II. NETWORKING MODELS
The GII is being conceived as a worldwide infrastructure
implemented over an ever expanding range of technologies,
1 This review is based on references available at the beginning of 1997.
and on open standards, interfaces, and formats that enable
heterogeneous terminal interoperability across heteroge-
neous networks and implement integration of heterogeneous
services and applications.
The future information infrastructure should provide for
networked applications, such as [1]:
• user-to-user and user-to-information server applica-
tions;
• real-time and messaging applications for immediate
and deferred interactions, respectively;
• peer-to-peer and client-server applications, executed
among peer terminals and between client terminals and
server computers.
Different media (audio, video, animation, data) are in-
cluded in multimedia networked applications, thus leading
to the integrated services information infrastructure con-
cept.
The infrastructure is composed of terminals and servers
interconnected by means of data links (pipes) via inter-
mediate network nodes. Network nodes are routing and
switching devices to implement the required exchange of
information among network hosts. Networks are usually
equipped with data links (either physical links or links
realized by subnetworks), by switches and routers, and
by auxiliary network servers. Network servers typically
provide real-time address translation and routing functions;
or they serve for network and service management tasks,
including service billing.
Distinct networking models and information transfer
modes are being used in telecommunications networks,
computer networks, and networked information infrastruc-
tures. The following sections describe a short history and
some details of the evolution of these networking models.
Here, we summarize some general requirements that a
network of the future should satisfy, and then define a
layered model for the networked infrastructure.
Future network architectures need to satisfy many re-
quirements, including the provision of some key features:
• unicasting, multicasting, and multisource connections;
• users’ ubiquity (nomadic access), including periods
during an active connection;
• users’ mobility (wireless access);
• QoS negotiation (bandwidth, delay, and loss), includ-
ing periods during an active connection [18];
• security of connections (endpoints’ authentication) and
privacy by encryption [19];
• scalability—both network scalability (allowing an in-
crease of number of users by simply adding, and
not replacing, resources in proportion to the number
of users) and application scalability (according to
transport QoS parameters and to terminal capabilities)
[1];
• high traffic capacity, high performance objectives, cost
effectiveness;
• above all, interoperability.
1890 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
Fig. 1. Open networking model.
Interoperability is the most important requirement of
the infrastructure in an information and communication
environment that is rapidly evolving toward complexity and
heterogeneity. Heterogeneity will occur at terminal, net-
work, and service levels. Interoperability should ultimately
be set up across heterogeneous terminal and networking
environments.
In a growing heterogeneous environment, the networking
models need to evolve. Telecommunications has focused
on interconnection as the basic issue to be solved to
either provide simple applications or build infrastructures
dedicated to a single service (vertical integration). The
homogeneity of terminals, networks, and user-to-user ser-
vices and applications depends heavily upon the existence
of strict standards, as were favored in the past monopoly
telecommunications environment.2 It is also fair to say that
the early ATM protocols were born in such an environment.
Internet protocols represent a first decisive step in ensur-
ing interoperability across heterogeneous networks, that is,
the internetworking capability. As opposed to the telecom-
munications model, the Internet model proposes terminals
and servers characterized by open API’s. The diffusion of
the IP triggers a further step: to allow full interoperability
of heterogeneous terminals and servers. This is the aim of
the so-called middleware standards: distributed operating
systems and distributed object-based programming mod-
els [20], including transportable computation technology
(dynamic software distribution and intelligent agents [21],
[22]), are at the core of interoperability standards (see
Section VI).
We describe here a possible layered model of the informa-
tion infrastructure, according to the principle of horizontal
integration, and open interfaces among layers. The open
networking architecture depicted in Fig. 1 identifies a four-
layer stack.
The model is similar to other proposed layered archi-
tectures; in particular, it is inspired by both the ODN
architecture (an hourglass model centered on the IP [23])
and the three-level model used in [1]. Each layer offers
services to the upper layers.
2 Interconnection of heterogeneous networks in the telecommunications
model is achieved via proper gateways that implement protocol and format
conversions. As heterogeneity grows, gateways are becoming awkward in
complexity and unmanageable in number.
The bottom layer provides interconnection services and
accounts for technologies enabling information transport
across homogeneous networks. The interconnection layer
allows for classical telecommunications services and also
offers proper data pipes support to the upper layers. The
internetworking layer operates above the interconnection
layer and provides the capability to offer end-to-end in-
formation transport across a network of heterogeneous
networks. The internetworking layer is composed of layers
3 (network) and 4 (transport) of the Internet model. The
core of the model is the middleware layer, that is, the
layer that provides interoperability across heterogeneous
terminals, networks, and applications. Last, the application
layer is on top of the stack and accounts for a number
of key multimedia applications of interest to the consumer
community, as well as some others considered important to
the business sector.
Telecommunications networking models have evolved
from the interconnection layer directly into the middleware
layer [17]. Interoperability is needed for fostering the IN-
type services and network-management capabilities (net-
work nodes interoperability) and to allow novel multimedia
services across heterogeneous terminals (smart phones,
set-top boxes, personal digital assistants, etc.) and hetero-
geneous network servers and host servers (see Sections III
and VI).
Computer networking models have evolved further along
the layers sketched in Fig. 1 by assuming that interconnec-
tion layer services provide only data link pipes to the upper
layers (see Sections IV–VI).
III. TELECOMMUNICATIONS
A. Classical Architecture
Telecommunications have developed during this century
under the paradigm of POTS. Access to POTS is obtained
via an inexpensive and dumb appliance, the phone station
(powered by the network), that has the double purpose of
controlling the call routing (signaling) and transporting the
voice signals to and from the called end user by means of
a rather simple and friendly user interface. POTS network
switching nodes have the same double function, namely,
the interchange of signaling messages between switches
and the phone stations and the routed transport of voice
signals through the network.
The business model is based upon a contract between any
user (service subscriber) and the service/network provider.
The caller is paying for the call on the basis of the call
duration and geographical distance of the called entity. The
contract guarantees that the probability of blocking any
call because of network design or malfunction is very low,
say, around 1%, and the established circuit offers constant
bandwidth and constant low latency for the entire duration
of the call to the end users. POTS service quality and
availability are maintained through the worldwide network
at very high-level standards.
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1891
The original circuit switching model of the POTS service
has evolved in the last 25 years primarily in three directions:
1) use of digital processing for the transport (transmis-
sion and switching) of voice signals;
2) implementation of signaling protocols among
processor-based switching nodes and the terminal
stations using packet communication technologies
(datagrams);
3) implementation of wireless phone stations to allow
customer mobility in accessing the network.
The first two technology directions give rise to the ISDN
concept for digital POTS networks: voice circuits at 64
kb/s are controlled by user-network-node signaling and
internode signaling protocols that are executed over out-
of-band circuits. In the narrow-band ISDN [24], DSS no.
1 and common channel SS no. 7 are the signaling proto-
cols executed among processors controlling 1) subscriber
station and network node and 2) among network nodes,
respectively, to manage end-to-end network connections.
Signaling messages are framed into datagrams (signaling
units) and are transported either by dedicated data links
between end processors or via a robust packet switched
network that connects all processors (an SS no. 7 packet
switched network).
The availability of processor-based (stored program con-
trol) communication for controlling the 64-kb/s circuits
routing allows call establishment times of a fraction of
a second, even in complex connections with many inter-
mediate network nodes. The advent of common channel
signaling in the late 1970’s enabled the centralization of
a variety of routing, billing, security, and personaliza-
tion functions (POTS middleware?) into network-centric
servers, called SCP’s. These network servers (pretentiously
called intelligent network servers) interact in a client-server
mode with the network switching node processors to allow
a variety of network features, such as:
• NHDR of calls [25];
• continuous tracking of a wireless phone mobility
across the various base-station cells;
• personalization of subscriber services in terms of se-
curity, billing, adaptive and closed-group call routing,
messaging, and message-processing options.
One of the basic functions performed by the SCP’s is the
mapping of routing numbers and directory numbers, which
in POTS are classically identical and specified by ITU-T
addressing recommendation E.164 [26]. The availability of
this simple network function enabled successful services,
such as service 800, calling cards, VPN’s, and the universal
personal number.
The telecommunications network servers are deployed
today in a variety of centralized and distributed configura-
tions, including servers that are adjuncts to single network
switching nodes. Modern adjunct servers typically provide
mediation features, such as voice storage, announcements,
recognition, and voice-to-text/text-to-voice translation: they
are called intelligent peripherals, service nodes, or simply
adjuncts [3], [27].
In wireless access networks, such as the GSM [15]
and DECT [28], the telecommunications IN architecture
finds its most successful application. Network servers are
identified as MCP’s: centralized servers are called HLR’s,
while the local servers are called VLR’s and are used to
cache the customer locations temporarily. In GSM, network
subscribers are identified by a smart card (the SIM) that
personalizes fixed and mobile host terminals.
Today, in spite of the ITU-T standardization efforts (the
most relevant standards are called IN capability sets 1 and
2) [3], IN servers are characterized by a largely open client-
server access protocol by the network switching nodes and
by a largely proprietary API. The set of protocol standards
that govern interaction between switching nodes (called
SSP’s) and SCP’s is based on SS no. 7. The system
is structured in a network service part and in various
user parts, ranging from telephony to ISDN and mobile
signaling applications. Among these user parts is the TCAP.
Interaction between the end user and the functional entities
of the IN service logic takes place on DSS 1 and on
SS no. 7/TCAP by use of the INAP. Currently, INAP is
implemented for capability set 1, and the IN service logic
is composed of various SIB’s.
In fact, to foster market competition and encourage
multivendor development of novel applications, intelligent
network and mobile network services and applications have
been introduced in current wired and wireless telephone
networks without disclosure of open API’s for local and
centralized network servers. Moreover, the telecommunica-
tions network switching nodes up to now have had the role
of terminal servers for the subscriber terminals, irrespective
of the processing functionalities that are being progressively
incorporated into smart wired and wireless terminals. The
AIN [27] and TINA [4] initiatives are indeed oriented
toward the definition of open interfaces and platforms
(telecommunications middleware) to develop both network-
management and user services applications, as we describe
below, but they have not yet produced aggressive market
deployments.
The POTS business model is being challenged by the
IN and mobile network infrastructure capabilities. Dynamic
billing techniques are applied today to bundle the service
offering to business users, as well as to the consumers
of wired and wireless telephony. Subscription and usage
fees are still the pillars for charging user connections
and feature utilization. Moreover, each additional feature
(calling features, service 800, etc.) is charged separately.
Fig. 2 summarizes this classical networking scenario and
shows that the deployment of current telecommunications
networks for wired and wireless applications follows a
functional model composed of three layers:
1) network bearer (user access and transport);
2) network intelligence (control);
3) network management.
1892 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
Fig. 2. Telecommunications network architecture.
In the standards of the ITU-T, telecommunications pro-
tocols are indeed framed with reference to the three layers
(often called planes) depicted in Fig. 2: user, control, and
management.
Access and core transport functions and protocols are
allocated in the network bearer layer, and they refer to wired
and wireless—as well as to narrow-band (GSTN and ISDN)
and broad-band (B-ISDN)—communications, the latter by
using ATM bearer technology. The network-control-layer
functions include not only the basic location, signaling, and
routing functions but also the user registration and the au-
thentication and security procedures, as well as the elements
for charge determination to be used in billing. The network-
management-layer functions are called TMN protocols and
functions [29], [30]. They include not only the network and
service operation support features (such as billing, customer
care, etc.) but also the service profile creation (such as
personalized billing and routing features) and the customer
control (such as the possibility for the customer to view
and modify his dedicated network resources on-line).
At the core of TMN protocols there is the distributed
management environment information model, composed of
[31] managed elements, their agents, and the managing
systems (managers). Each managed network element is
equipped with an agent, i.e., a software module that collects
and stores management information such as the number
of errored packets received by a network element. Each
network element is modeled as a set of managed objects,
that is, a virtual image of the information that is relevant
to management operations. The collection of the managed
objects relevant to a given network element constitutes
the MIB associated with that specific network element.
A management protocol is used to convey management
information between agents and stations in the form of read
and write commands issued by the stations and unsolicited
messages sent by the agents.
Current TMN standards [30] cover telecommunications
OAM&P functions, and they are framed into four functional
layers:
1) business management;
2) service management;
3) network management;
4) network element management.
The latter two layers have in fact been addressed by
current specifications, including, among others, the format
and contents of messages between the management system
and the network element (Q interface) [30], the CMIP
[32], and the object-oriented specifications for managing
SDH transmission and cross-connect networks [33].
B. Enhancing the Architecture
Recent standardization efforts have focused on the estab-
lishment of a common view on the control and management
layers of the classical telecommunications architecture. The
target is to provide interoperability among end systems,
network servers, and network switching nodes in an open
environment. The TINA consortium recently started to
define for the two software-intensive layers (TMN and IN)
an architecture [34] that builds on relevant standards in
distributed processing, such as:
• the ODP [35] environment defined by the ISO;
• the CORBA [36] specified by the OMG (see also
Section VI).
The telecommunications information network architec-
ture introduces in a flexible and open manner both tradi-
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1893
Fig. 3. TINA architecture.
tional and new telecommunication services, as well as the
supporting OAM&P features to allow their management.
The main assumption of the TINA approach is that service
and network-management components are deployed on an
open DPE [37], which is supported by different and evolv-
ing network transport infrastructures. The TINA vision
implies a software architecture that offers object-oriented
analysis and design to achieve a drastically improved
interoperability, offers reusable software components, eases
services construction, testing, deployment, and operation,
and hides from the service designer the heterogeneity of the
underlying technologies and the complexity of distribution.
TINA complies with:
• the TMN model layers (business, service, network, and
network-element management) [30];
• the OSI-defined management areas (accounting, fault,
performance, configuration, and security) [38];
• the managing/managed object paradigm and manage-
ment protocols.
The TINA service [5] comprises several communicating
service components, each divided into a number of software
units, called computational objects. The interaction among
computational objects is supported by distributed comput-
ing mechanisms, such as the RPC [39] offered by the DPE,
over the built-in NCCE, as shown in Fig. 3. Service com-
ponents are divided into three component categories: actual
service components, resource components, and elements.
Fig. 3 shows the relation between the TMN functional
layers and the information components. The SML, the
NML, and the EML represent the features for service
and resource management, while the NEL specifies the
information model of the network elements themselves. The
service architecture identifies a library of reusable service
components and a set of guidelines useful when designing
a service. Service components include:
• the terminal agents that manage terminal profiles and
perform endpoint session setup;
• the user agents that manage user profiles and perform
negotiation and session setup;
• the service session manager that manages sessions at
user level;
• the communication session manager that manages ses-
sions at terminal level and implements transport net-
work connections.
Service components can make use of common resources,
described as high-level abstractions of the available re-
sources. Resource components include network transmis-
sion and switching resources. The implementations of indi-
vidual resources are described as elements; for example, a
transmission multiplexer, a switching fabric, or a computer.
The TINA network resource information model [6] contains
a number of abstraction levels of network resources. The
highest level of abstraction (offered at the interface between
network resources and service levels) is defined in terms
of connection graphs describing the connectivity between
media flows.
Current management architectures (TMN, OSI) tend to-
ward centralized computational models, that is, all defined
managed objects are encapsulated in a single software
component with an agent that handles all interactions
between managing system and managed objects. TINA
specifications are oriented to distributed management sys-
tems, such as the ODMA [40], where an object in the
information model is an autonomously manageable entity
directly interfaced to the managing system.
C. ATM Networks
For the information access and transport technologies, the
progress of digital transmission and switching technologies
has enabled the development and deployment of inte-
grated services broad-band networks. Broad-band network
backbones exploit widely deployed fiber-optic links to
build highly available digital channels, based on the SDH
transmission technology. The broad-band access network
architecture is one of the critical components in the delivery
of digital broad-band services. HFC [41] and ADSL [42]
are regarded as the more promising alternatives in the last
mile, though wireless and satellite technology will play a
key role in this network segment. ATM, though, in spite
of the slow market penetration, is the flag of emerging
information-transfer techniques conceived for broad-band
telecommunications networks. In the ATM-based B-ISDN,
all forms of user traffic are segmented into uniform data
units of small size and routed through the switching nodes
and transmission links of the network. The users would
have bandwidth on demand, and the underlying network
would be based upon a single switching and multiplexing
principle. This capability has been viewed as especially
important for multimedia services, where a given call may
contain voice, data, and video information.
The ATM concept has been the result of the convergence
of two innovative network technologies developed at the
beginning of the 1980’s, namely, ATD and FPS.3 ATD
was developed at CNET Laboratories in France [43]. It
was a switching and multiplexing technique employing
short fixed-size packets, very similar to ATM. The focus
of the early research was on switching technology, and
the whole project could be described as an attempt at
creating a new PCM, that is, a low-level transfer technique
capable of supporting any kind of service. The application
3 Related basic patents were issued in the early 1980’s.
1894 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
scenario was that of a large, ubiquitous network at first
overlaying and, in the long term, also substituting the
telephone network. FPS was developed at Bell Laboratories
[44], [45] and consisted of a much simplified version of
the traditional data protocols, similar to FR [46], with
the additional emphasis on integrated services. Fixed-size
packet switching technology and the support of voice were
investigated, with the variable data frame size playing a key
role for the efficient support of both voice and data over
wide areas. The main intended application environment was
the offering of a wide-area connectivity service for large
corporate networks generating data and voice traffic.
The mediation4 of these two concepts was carried out in
the framework of the standardization of B-ISDN sponsored
by the ITU, leading to a first set of ATM recommendations
in the middle of 1990. In the early 1990’s, though, the
decline of the ITU as the principal standard forum for
the telecommunications industry began to slow down the
standard development process. Liberalization and compe-
tition led equipment managers to question collaboration
among the ITU members led by dominant carriers. New
standard fora emerged, and the ATM Forum de facto started
leading the standards for both private and public network
applications of ATM.
ATM opens the telecommunications information-transfer
modes not only to circuit switching but also to packet
switching and statistical multiplexing. ATM is a virtual
connection-oriented bearer technique based on the use
of fixed-size, small packets called cells. The cell header
provides control information on a per-link basis [47], in-
cluding two logical connection identifiers (VPI and VCI);
the type of cell payload (OAM&P or user cells); and the
HEC sequence. Prior to sending data, an ATM end-to-end
connection should be set up either on a permanent basis (by
network-management intervention) or on a dial-up basis (by
network signaling). The connection-oriented nature of ATM
provides for resource reservation capability transmission
link by transmission link, from end user to end user,
and throughout all the switching nodes on the connection
path. Resource reservation is executed at connection setup,
though the renegotiation of the terms of an active connec-
tion contract is possible. If at any intermediate link of any
available source–destination path the network is not able to
offer the requested resources (for example, a given dedi-
cated bandwidth to the end-to-end connection), the connec-
tion request is refused and the network access is blocked.
The ATM protocol reference model, shown in Fig. 4,5 is
consistent with the telecommunications protocol approach.
The user and the control planes include a physical layer,
the ATM layer, and the AAL. The ATM layer provides
cell-transfer capabilities in a per-virtual-circuit fashion by
multiplexing/demultiplexing different virtual connections
4 The final mediation was on the cell length; the (48 + 5)-byte length
was a compromise between the (32 + 4)-byte and (64 + 5)-byte lengths.
5 The higher layers of the control plane in the model of Fig. 4 refer to
the signaling process at both user-network and network-node interfaces. In
the ITU practice, user signaling layers span up to layer 3 (network layer)
of the OSI model, while internode signaling layers comprise all seven OSI
layers.
Fig. 4. ATM protocols.
in/from a single flow of ATM cells. It is responsible, at
the transmitting side, for assigning the correct VPI/VCI
values to the cells belonging to a virtual connection and
for delivering incoming cells to the related logical con-
nection. The AAL performs service-dependent functions:
four different AAL types have been defined in order to
adapt the application requirements to the ATM cell transport
[48]. The control plane has its own AAL, conventionally
called SAAL [49], [50]. The AAL types take into account
the application needs in terms of timing relation between
source and destination, traffic emission profile (CBR or
VBR), and connection mode (connection oriented or con-
nectionless). Each AAL type is subdivided in two sublayers:
the SAR sublayer performs the higher layer information
framing/reconstruction in/from a sequence of small units
fitting into the ATM cell payload. The CS provides service-
specific functions (timing, frame error detection, and frame
sequence checking and recovery). Out of the four AAL
types, AAL5 is favored for connection-oriented variable-
rate data services.6 AAL5 offers to the majority of data
applications the best tradeoff between the reliability of data
delivery, supported by error-detection mechanisms, and the
associated overhead.7
In an ATM network, switches and end systems (such
as routers, personal computers and any other equipment
with ATM network interface cards) are interconnected
by transmission links. The UNI connects an end system
to an access switch, whereas the NNI connects two
switches belonging to the same network. Fig. 5 shows
the user and the NNI’s as specified by the ATM Forum
and the ITU-T for private [51]–[55] and public [56]–[59]
ATM networks, respectively.
In particular, the PNNI protocol is specified for use
between private ATM switches [54]. A link-state routing
protocol is defined for distributing topology information
between switches. This information is used to compute
paths through the network by applying a hierarchy mech-
anism to ensure the scalability for large ATM networks.
PNNI also specifies a protocol for signaling, that is, mes-
sage flows used to establish point-to-point and point-to-
multipoint ATM VC’s. This protocol is based on the ATM
6 AAL1 supports connection-oriented services that require CBR’s and
have specific timing and delay requirements, while AAL2 supports
connection-oriented services that do not require constant bit rates. AAL3/4
is intended for both connectionless and connection-oriented VBR services.
AAL5 supports connection-oriented VBR data services.
7 ATM and AAL protocols’ overhead is high: it spans up to 17%, that
is, up to 9 bytes over the 53-byte-long cell.
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1895
Fig. 5. ATM user and node interfaces.
Forum UNI signaling, with mechanisms added to support
source routing and alternate routing in case of connection
setup failure.
The VP concept enables a bundle of VC’s to be handled
as a whole by the intermediate nodes, thus avoiding per-
VC processing operations. For example, two end systems
connected by means of a VP can control the share of the
bandwidth available on the VP to many VC’s in a transpar-
ent manner with respect to the intermediate switches. The
VPI/VCI labels in the ATM cell header have only local
significance, that is, the VPI/VCI pair of a cell changes
link by link. ATM switches implement only the physical
and the ATM layers at the user plane, thus carrying out a
set of simple operations on cell streams belonging to active
connections. Physical- and ATM-layer operations, such as
VCI/VPI label swapping and cell routing from the input to
the requested output port, are carried out in hardware, thus
minimizing the cell switch crossing time.
D. QoS, Efficient Resource Usage, and Congestion Control
The main promise of ATM addresses the capability
to allocate network resources efficiently to guarantee the
expected QoS to each connection [60]–[63]. ATM offers the
capability to assign on demand a flexible amount of band-
width to each application [64], [65]. Each ATM connection
setup request carries a set of parameters describing the
traffic profile (source traffic descriptor, STD) and the QoS
requirements. Traffic profile parameters include peak cell
rate, sustainable (average) cell rate, maximum burst size,
cell delay variation tolerance, and minimum cell rate. The
parameters for QoS requirements can be nonnegotiable, or
they can be negotiated among source, network, and destina-
tion. Negotiable parameters include peak-to-peak cell delay
variation, maximum cell transfer delay, and cell loss ratio.
Nonnegotiable parameters include cell error ratio, severely
errored cell block ratio, and cell misinsertion rate. A CAC
process, local to each intermediate ATM node, checks for
the availability of spare network resources to allow the
setup of the new connection with the capability to guarantee
the QoS requirements of all active connections. Once a
connection setup request is accepted, a suitable amount
of network resources (bandwidth on the links and buffer
space in the queues of the ATM switches) is dedicated
Table 1 ATM Connection Types
to the connection along the selected path. A connection
setup request is rejected when the required amount of
resources is not available on any path linking the source
to the destination. The release of the resources allocated
to a connection occurs when an explicit connection tear-
down request is generated by either of the ATM connection
endpoints. At connection setup time, the calling end system
establishes a traffic contract with the network: as long as the
end system complies with the traffic emission declared in
the setup request, the ATM network commits to guarantee
the requested QoS. The access ATM nodes apply a traffic
policing mechanism at the UNI to check whether or not
the traffic emission is compliant with the declared traffic
descriptor, according to the GCRA. Nonconformant cells
are either dropped or marked as low priority by setting a
CLP bit in the ATM cell header.8 The source can enforce
the behavior of the original traffic pattern according to the
declared traffic profile by applying a shaping procedure,
preceding the delivery of cells to the network.
ATM Forum standards [65] have identified a set of
service classes according to the traffic generation profile
and QoS requirements: CBR, VBR, ABR, and UBR (see
Table 1).
The network reserves a fixed amount of bandwidth (cell
rate) to CBR connections, and it guarantees QoS in terms
of cell loss rate, transit delay, and delay variation. Uncom-
8 Although some current ATM switching equipment employs multiple
queueing priorities mechanisms, current ATM standards recognize prior-
ities in the cell loss process but not yet in the cell service scheduling
algorithms (see also [8]).
1896 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
pressed or compressed video with constant emission and
variable quality are examples of applications that may use
CBR. The VBR users declare their peak cell rate, sustained
(average) cell rate, and maximum burst size. As long as
the traffic emission is kept within the declared parameters,
VBR users are also guaranteed requested QoS parameters.
ATM networks offer two types of VBR services: real-time
(RT) VBR and nonreal-time (NRT) VBR. The RT-VBR
class carries variable-rate traffic and commits to guarantee
cell loss ratio, cell transfer delay, and cell delay variation.
The NRT-VBR class is assumed to carry variable-rate traffic
with a specified cell loss ratio and cell transfer delay, while
cell delay variation is not enforced. Teleconferencing is
an example of RT-VBR, while multimedia e-mail is an
example of NRT-VBR.
The bandwidth that is not used by CBR and VBR
services is available for sharing among users who are
not delay sensitive. ABR service is designed for users
concerned about cell loss rate and willing to back off
to a minimum guaranteed cell rate in case of network
congestion (network resource overallocation). The network
is committed to notify the event of congestion by using
resource-management cells, thus enabling dynamic and
flexible bandwidth control on active ABR connections.
The ABR class offers a minimum guaranteed throughput
and a fair share of excess bandwidth among active ABR
connections. According to the GCRA algorithm, in case of
network congestion, traffic sources are required to reduce
their emission to an explicit cell rate, at least equal to
the agreed minimum. The amount of traffic exceeding the
minimum guaranteed throughput can be either dropped
or forwarded at a lower cell loss priority. File transfers
and e-mail are examples of applications that could take
advantage of the ABR service. The UBR service is designed
to carry traffic that is not sensitive to loss and delay.
Traffic belonging to such a service class is carried by the
ATM network without any guarantee (true best effort). In
particular, if the network becomes congested, UBR cells
may be dropped. Network monitoring traffic and news are
examples of the UBR applications.
A considerable effort has been devoted to investigate traf-
fic management and congestion control in ATM networks
[62], [63]. Traffic-management schemes should be capable
of controlling the effects of traffic overload conditions by
limiting in time and space the performance impairments
caused by congestion. Congestion-control schemes address
the capability to assure good throughput and delay per-
formance while keeping a fair share of available network
resources. The ATM information-transfer technique trades
off efficiency, in terms of network resource usage, for com-
plex traffic-management mechanisms. The more aggressive
the network resource usage policy, the more complex the
traffic-management and congestion-control schemes.
E. Unicasting and Multicasting
ATM is a switched technology, and the support of mul-
ticast/broadcast connections is not built in because the
exchange of information among end systems does not take
place over a shared medium. An ATM point-to-multipoint
(multicast) connection can be set up in order to connect a
single source with multiple-destination end systems [66].
According to a source-originated signaling scheme, the
source requires the setup of a multipoint connection to all
the required end systems. This connection is unidirectional:
the source end system sends data to all the receivers.
The network nodes perform the cell replication as needed,
allowing a very efficient mechanism with respect to the
technique of packet replication at the source (simulcast).
A many-to-many communication (multisource, multicast)
can be implemented by a full mesh of point-to-multipoint
VC’s or by means of a multicast server that receives the
cells from the source on a point-to-point connection and
forwards them in a point-to-multipoint VC, connecting the
multicast server to all the destinations.
Telecommunications standards in this area have been
slow to emerge, and just recently, under the pressure of
the emerging multimedia market, there has been enough
pressure to accelerate the convergence of standardization
efforts. Recently, ATM Forum UNI 4.0 specifications ex-
tended the sender-initiated signaling scheme by adding
leaf-initiated operation to join and leave the connection to
active multicast connections [52].
F. Connections and Datagrams
For many years, among the services offered by telephone
companies, the data-communications service was of the
connection-oriented type only. Connection-oriented types
of data communications were adopted starting from ITU
recommendation X.25 [67], extending to FR [46], and
finally being adopted also in ATM networks. In contrast,
datagrams and connectionless transfer modes have been
at the core of computer communications, including LAN
communications and the Internet. The terminology itself
is biased toward the notion of connections (may we call
them datagramless communications?). Datagram communi-
cations are finally being introduced in telecommunications
networks [68], however: the SMDS [69] and the proposed
ATM fast resource management feature [70] to transfer
datagrams in ATM networks are two significant examples of
the recent interest of the telecommunications community in
connectionless communications. Last, the growing interest
in the Internet has put enormous emphasis on the transport
of the connectionless protocol par excellence, IP, over
connection-oriented ATM networks [71] (see Section IV).
G. Multimedia Communications
In the telecommunications arena, the growing interest
in multimedia communications has focused on two main
directions: conversational symmetric multimedia services
on low-bit-rate channels and asymmetric multimedia ser-
vices and VoD applications on networking infrastructures
currently available to a large base of subscribers. Both
directions had to face the issue of revising the traditional
telecommunications model in order to address the problem
of interconnection and interoperability of heterogeneous
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1897
networks and terminals. The most relevant efforts in this
area are the H.323 [72], [73] recommendation of the ITU
and the work carried out in the frame of the DAVIC [74],
[75].
1) Video Conferencing: In the ITU forum, the telecom-
munications and computer industries concentrated their
effort in refining the H.320 [76] and T.120 [77] recom-
mendations, addressing video-conference and video-phone
systems for narrow-band ISDN and for a powerful multi-
layer protocol for point-to-point and multipoint data ap-
plications, respectively. Recently, the ITU has produced
the H.323 recommendation for video-conference and video-
phone systems over LAN’s without guaranteed QoS. These
specifications give the system and component descriptions,
call model descriptions, and call signaling procedure. In
particular, H.323 defines the components for providing for
conference admissions (gatekeeper), multipoint communi-
cations (multipoint controller, multipoint processor), and
interoperability (gateway) with terminals on other types of
networks. H.323 has application to a variety of networking
media providing global multimedia communications from
the desktop using existing infrastructures. The most inter-
esting factor of H.323 is the initiative to merge telecom-
munications and computer network protocol standards. The
RTP and RTCP [78] (see Section IV) of the IETF have been
assumed when the networks use the IP stack.
A primary goal in the development of H.323 was in-
teroperability with other terminal types [73], including
terminals operating on the ISDN, the GSTN, the IEEE
802.9 LAN, and ATM networks. The interoperability is
achieved through the use of gateway units specified to
perform any signaling translation, packetizing/multiplexing,
and data transcoding required for interoperability. The
H.323 call setup can either take place by a direct interaction
between two parties or be optionally mediated through a
gatekeeper, that is, a server in charge of services such as ad-
dress translation, bandwidth allocation, and call admission
control. The gatekeeper offers support of multicast control
to terminals that do not perform conference-control func-
tions, such as establishment of a common communications
mode and of a media channel. Under the H.323 umbrella
specification, H.225.0 [79] specifies the messages for call
signaling, registration, and call admission. Packetization
and synchronization of the media streams are also specified
by using payload formats for coded audio or video data
carried by RTP. H.323 supports multiple channels of each
media type, and H.245 [80] specifies the messages used for
capability exchange, opening and closing logical channels
for media streams, and other commands, requests, and
indications.
2) DAVIC: The DAVIC recently started with the main
objective of promoting new interactive audio and video ser-
vices by creating cooperation among the relevant standards
bodies (ITU, ISO, IETF, etc.) and among industrial partners
around the world. The DAVIC specifications are public and,
where possible, are based on existing standards. DAVIC
1.0 specifications [74] address the tools and technologies
to support VoD, NVoD, and broadcast television services,
while DAVIC 1.1 specifications [75] define the Internet
access and enhanced broadcast services. DAVIC gives a
reference architecture whose main components are:
• the STU, that is, the customer premise terminal equip-
ment;
• the delivery system, that is, the network infrastructure;
• the video server.
Reference points are established between all the com-
ponents, and DAVIC specifies the information flows and
the protocols used to exchange information among the
components. The delivery system consists of an ATM core
network and an access network based on either ATM (on
twisted pairs, coaxial cables, optical fibers, wireless links,
etc.) or on transport streams structured by the MPEG-
2 video coding standard [81] (on coaxial cables, digital
broadcasting satellites, etc.). The necessity of richer control
functions with respect to the basic call control provided
by the Q.2931 [82] specification for the B-ISDN has been
met by defining a set of service-related control functions,
dealing with session control and navigation within the
information made available by the video servers. The DSM-
CC [83] protocol adopted by DAVIC is based on the IP. The
DAVIC components interact on the basis of five information
flows:
S1) used for audio, video, and graphics data streams
carried by the MPEG-2 TS protocol; stored objects
and other types of data can also be carried by using
the DSM-CC download data protocol;
S2) used for the control of the applications, through
VCR-like functions, based on the DSM-CC user-to-
user interface protocol; and for the download control
of data, based on the DSM-CC user-to-network
download protocol;
S3) based on the DSM-CC user-to-network interface
protocol and used for a variety of functions—session
control, STU configuration, interface initializa-
tion—and for the SVB function to change video
channels;
S4) provides for the connection-control functions based
on the Q.2931 protocol;
S5) supports the management functions based on both
CMIP and SNMP (see Section IV).
Fig. 6 shows, against an OSI9 layered classification
scheme, a significant example of the protocol approach
chosen by the DAVIC initiative.
Audio and video streams are carried over MPEG-2,
while the stream control protocols are transported via
an IP over ATM, always by using AAL5. Connection-
control signaling is transferred via the signaling ATM
adaptation layer (SAAL). DSM-CC user–user messages
9 We often refer to the OSI model, which, as clearly shown by Fig. 6,
cannot adequately model simultaneous interconnection and internetwork-
ing information flows. ATM user signaling is depicted in Fig. 6 as spanning
up to OSI layer 7.
1898 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
Fig. 6. DAVIC protocol approach.
are carried on the OMG-specified session and presentation
protocols—OMG-CDR and OMG-UNO, respectively [75].
IV. INTERNET
A. Classical Architecture
The Internet started about 25 years ago, and the architec-
ture and technology conceived at that time are, with some
minor refinements, still at the foundation of the current
worldwide network connecting millions of subnetworks and
hosts. Central to the Internet approach is the ability to
conceal heterogeneous networks and systems. The target
beneficiaries of such a solution were academic and re-
search institutes, and the necessary funding was provided
by the government. Until 1995, the Internet worldwide
network was based on the model adopted in the United
States, whereby a high-speed backbone was funded by
the government while regional and access networks where
either funded by the government or commercialized by
business companies. At the beginning of 1997, the number
of Internet access subscribers worldwide was around 30
million, while the population of Internet users is estimated
at more than twice that number.
According to the current Internet business model, a user
signs a contract with an ISP and pays any applicable
charge to connect to that ISP. ISP’s connect those end
users to Internet backbone networks. Backbone providers
route traffic between ISP’s and interconnect with other
backbone providers. Most ISP’s charge a flat, monthly fee,
although some assess a per-hour charge above a certain
monthly threshold. The vast majority of individual users
reach their ISP’s today through the telephone network.
Corporate LAN’s, however, are usually linked to the ISP
by means of a permanent leased line or equivalent VC
Fig. 7. Internet network architecture.
solutions based, for instance, on frame relay. The phone
call to reach an ISP is usually a local call, because the ISP
has established a POP in that local calling area.
One of the key points of the Internet paradigm is the defi-
nition of an abstract network service capable of decoupling
the underlying networking technologies from the applica-
tions. The applications can be developed independently
of the network technology, and the network technology
is able to evolve without any impact on the applications.
The Internet reference network architecture is composed of
end nodes (hosts) linked by subnetworks (see Fig. 7). All
the hosts belonging to the same subnetwork exchange data
directly, while the crossing of subnetwork boundaries is
enabled by means of intermediate network nodes (gateways
or, more appropriately, routers). Hosts and routers exchange
data by means of the IP—the universal protocol used by
the heterogeneous network components to offer a unified
abstraction of the network service (network layer, that is,
layer 3 of the OSI model).
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1899
The IP is capable of offering a network service in which
the information is packaged in data units, named packets
or datagrams. The network offers no assurance on the
delivery of the packets to the intended recipient (best
effort service). Intermediate nodes decide where to route
a packet addressed to a given destination on the basis of
routing tables built by exchanging information with other
intermediate nodes by means of custom protocols.10 A
subsidiary protocol, the ICMP [84], supports IP by offering
some basic control capabilities, such as sending reachability
packets and asking an upstream packet source to slow down
the packet transmission rate in the event of congestion.
The basic specification of the IP does not provide support
to point-to-multipoint communications, and the multicast-
ing capability has been introduced in the temporary MBone
[85]. The IP runs over point-to-point links such as GSTN
and ISDN dial-up connections, using either the PPP [86]
or the serial line (SL)IP [87], as well as over LAN’s such
as Ethernet, Token Ring, and FDDI and over nonbroadcast
multiaccess networks (NBMA’s) such as packet switched
data networks based on X.25, FR, and ATM networks. An
NBMA supports an arbitrary number of hosts and routers
but does not offer a convenient support to multidestina-
tion and connectionless data, as happens in shared media
networks.
The end-to-end protocols add the capability to multi-
plex/demultiplex multiple flows of packets at the end nodes,
and they may add reliability. In particular, the UDP [88]
offers an unreliable service and adds a differentiation of
packet flows within a host by means of port numbers.
The TCP [89] offers a reliable, sequenced delivery of
byte streams on top of the datagram service offered by
the IP. The TCP is a connection-oriented protocol and
envisions connections with significance only at the end
nodes. The successful delivery of packets is notified by
means of explicit acknowledge packets, and retransmission
is triggered whenever an acknowledgment time-out expires.
A windowing scheme is applied to enforce flow control,
that is, to avoid the overrunning of slow receivers, as well
as to allow the traffic source to adapt to network overload.
In particular, the number of outstanding packets, that is,
the number of packets a source is entitled to transmit
while waiting for an acknowledgment (window size), is
tuned according to a probing of available bandwidth. The
applications access the service provided by the Internet via
a service interface made available by the socket system
call, originally included in the UNIX operating system and
currently available in any major operating system.
Fig. 8 shows the classical Internet protocol stack, which
includes end-user applications such as the SMTP [90] for
the exchange of electronic mail messages and network-
specific applications such as the DNS [91] for the node-
naming service.11
10 Such as RIP, OSPF, and BGP.
11 In Fig. 8, other user application-specific protocols are the remote
terminal (Telnet), the FTP, and the NNTP for the exchange of newsgroup
information.
Fig. 8. Internet protocols.
The popular WWW client-server application [92], based
on the HTTP [93], has been introduced in recent years.
Among the key features of this application is the capa-
bility to access a huge amount of multimedia information
distributed worldwide in a transparent and user-friendly
manner. The browsing of information is enabled by use
of the hypertext structure, whereby a document formatted
using HTML [94] contains links to other documents.
The management of network resources in the Internet
is carried out in the frame of the SNMP [95], that is, an
application-layer protocol running over UDP for resilience,
designed to exchange management information between
network nodes. SNMP follows the same concepts adopted
by the information model of TMN, and is currently de-
ployed with reference to a rather centralized computing
model. An upgrade of the basic SNMP, namely, SNMP
version 2 [96], has been proposed to improve the security
capabilities and resolve the issue of distribution of network-
management functions. SNMP is a relatively simple proto-
col widely used by network-management stations to execute
management applications that monitor and control network
elements [38].
The nonreal-time user and network applications grace-
fully tolerate packet delay and loss.
B. Real-Time Applications
Real-time services, such as voice and video, do not
tolerate packet delay, jitter, and loss. A datagram packet
network typically offers highly variable queueing delay and
congestion losses. The requirement to deliver information
within a given play-out deadline prevents real-time appli-
cations from using TCP to enforce reliable information
delivery. Hence, voice and video applications developed
for the Internet are based on UDP. UDP-based applications,
unlike TCP-based applications, do not back off in case of
network congestion, and heavily interfere with data traffic.
The RTP [78] is designed to carry real-time continuous
media data over the Internet. RTP runs over UDP and
sets a protocol framework tailored to each application via
profile specification by assessing a set of payload type
codes and their mapping to payload formats. Application
control information specific to RTP is sent by using the
RTCP. RTCP periodically sends receiver and sender reports
to enable the calculation of packet loss, packet delay
jitter, and round-trip time, and to offer support to intra-
and intermedia synchronization. The feedback information
1900 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
delivered in the receiver reports is used to estimate the
network state (unloaded, loaded, or congested) and to
perform source code control and bandwidth variations.
This approach exploits the capability of workstation-based
multimedia applications of adjusting media quality and data
rates when software codecs are used.
WWW servers and browsers handle downloadable audio
clips in the form of files that are rendered back into
sound by a helper or plug-in application once the file has
been completely transferred to the client. Streaming audio
solutions are also available, where the browser’s plug-in
plays back the sound as the data are received. The proposal
for a standard RTSP has been finalized recently [97], thus
enabling servers that adhere to the standard to connect to
any standard compliant client program. RTSP operates on
top of RTP and allows streaming servers to negotiate with
client programs to find the most convenient data format and
delivery rate that can be supported on a link and to control
the streaming session while in progress. Optionally, RTSP
allows the setting of parameters for permission, copyright
control, and encryption.
C. The Next Generation
The success of WWW as a means of publishing infor-
mation with rich presentation capabilities has fostered the
explosion of information made accessible via the Internet
and has attracted the interest of business and residential
users. The Internet has undeniably become a mass media,
just like broadcast television and the press, with the appeal-
ing opportunity of interactivity, whereby each Internet user
can be both a source and a sink of information [92].
The immediate consequence is the tremendous traffic
burden on the current worldwide network, leading to a
degradation of the QoS available to end users. Appropriate
replication techniques, such as caching of recently accessed
information and deliberate mirroring, are being introduced
to reduce the amount of traffic in the network [98]. More-
over, the scalability of the original version 4 of IP is put
under heavy stress by the tremendous growth in the number
of hosts and subnetworks.
IPv6 encompasses several capabilities that will better
support the growth and change of the Internet [10]. Among
the main innovations are the expanded routing and address-
ing capabilities made possible by 128-bit IP addresses, and
the mechanisms for automatic IP addresses configuration
by network devices. The neighbor discovery mechanism
allows IPv6 nodes to carry out an exchange of probe mes-
sages to learn the addresses of the hosts and routers directly
connected. IPv6 provides a simple IP header format to
expedite packet forwarding and class-of-service definitions
based on traffic flows. IPv6 includes, indeed, a 24-bit label
to identify a flow. The flow abstraction is defined as a
distinguishable stream of IP packets generated by a source
and characterized by a given QoS requirement. IPv6 also
offers integrated capabilities for user authentication and
security, including encryption. Providing graceful transition
from IPv4 to IPv6 is crucial for the success of the new
protocol [99]. IPv6 transition is based on the assumption
Fig. 9. RSVP model.
that every IPv6 host12 has IPv6 and IPv4 protocol stacks,
and routers should be able to support both IPv4 and IPv6
routing protocols and packet forwarding. Noncontiguous
IPv6 segments will be interconnected by tunneling IPv6
over IPv4.
The usage of the Internet for business critical applica-
tions, though, calls for the deployment of mechanisms capa-
ble of guaranteeing performance, security, and availability
requirements. Different QoS performance objectives should
be offered to different end-user multimedia applications,
and to a given application, on a session-by-session basis
or during the same session (QoS negotiation [100]). The
network should be able to provide mechanisms to assure on
demand user authentication, confidentiality, integrity, and
nonrepudiation of sending/receiving information. Network
redundancy and backup mechanisms should be employed
to guarantee a level of availability adequate for business-
oriented networks.
Focusing on performance objectives, in an integrated
services Internet the intermediate nodes should be capable
of providing different QoS to different packets flows [101].
A classifier module is in charge of mapping incoming
packets into some class of service. Classified packets are
forwarded to a set of queues, and packet service takes place
according to a suitable scheduling algorithm, accounting for
the characteristics of the underlying lower layer protocol.
The reservation of resources to a flow will be requested by
the application by means of a reservation setup protocol
capable of sharing reservation among the branches of a
multicast delivery tree. The most popular reservation setup
protocol proposed in the IETF arena is the RSVP (see
Fig. 9)13 [11], [12].
QoS-aware applications will use the extended sockets
system calls made available by the operating systems. To
commit to offer QoS guarantee, the network will have to
adopt an admission-control procedure, whereby an incom-
ing service request is accommodated if, and only if, the
additional traffic burden does not violate the commitment to
12 It is a requirement on the hosts caused by an enhancement of the
network; in this case, as for the subsequent introduction of RSVP in the
hosts, the Internet behaves rather like the telephone network.
13 The scheme of Fig. 9 is very similar to those adopted in current
ATM switches for signaling, QoS routing, admission control, priority
control, shaping, and policing. These latter two mechanisms are needed
complements to admission control.
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1901
Fig. 10. RSVP flow and control.
guarantee the QoS of active communications. An incoming
resource request is examined by the admission-control
module that returns an acceptance or a rejection of the
request, according to the ongoing resource use. A routing
agent takes routing decisions according to a routing data
base built on the basis of the information exchanged by
using a QoS IP routing protocol [102].
In an RSVP environment, applications that receive inelas-
tic traffic inform networks of their needs, while applications
that send inelastic traffic inform these receivers about the
traffic characteristics that they may specify. Each RSVP
traffic source sends out Path messages along the same
route (unicast or multicast) as the data traffic will travel.
Path messages carry information about the source traffic
parameters such as the mean bit rate. Using information
from Path messages, receivers can then make reservations
for specific resources by sending Resv messages along the
reverse path of the Path messages.
Resources will be allocated on the proper outgoing link
of all nodes along the route from the traffic source(s) to
the receiver. RSVP receivers periodically inform networks
of their interest in a data flow, using Resv messages that
contain the source IP address of the requester and the
destination IP address, usually coupled with flow details,
the flowspec, and the filterspec. RSVP provides reservation
styles to determine how many sources use an RSVP flow
and to specify the selection of an explicit sender. For
example, a fixed filter style has explicit sender selection,
and the RSVP flow is used only by that sender. A wildcard
filter style specifies that traffic from any sender can be
received (wildcard sender selection) and multiple senders
use the same RSVP flow (shared reservation). The IGMP
[103] enables senders and receivers to advertise that they
want to be members of specific IP multicast groups, and
multicast routing is provided by such protocols as DVMRP
[104]. The routers will provide an RSVP agent dealing with
Resv messages coming from the receivers in a receiver-
initiated scheme, whereby the receiver is assumed to learn
the senders’ offered flowspecs by a higher level mechanism.
The receivers generate and propagate request flowspecs
upstream to the senders, making reservations in each router
along the way (see Fig. 10). Local resource reservations are
implemented by using mechanisms available at the subnet-
work level. RSVP uses a one-pass reservation mechanism,
that is, RSVP delivers a reservation request sequentially
to the admission control module in each node, from the
destination upstream to the source. The reservation request
message is prepared by the receiver, asking for a per-link
service to be reserved, but without knowing the resulting
end-to-end delay.
To achieve simplicity and robustness against failures
and errors, the reservation state in the routers is regarded
as cached information that is installed and periodically
refreshed by the hosts. This approach is called soft state, as
opposed to a hard state scheme, whereby the state is created
in a deterministic manner by using a connection-like state
in each router along the path (see also Section VI).14
An alternative resource reservation scheme, though one
with less industrial consensus, is ST-2 [105]. Both ST-2
and RSVP model the data stream as a simplex point-
to-multipoint distribution tree, though RSVP incorporates
the support for handling heterogeneous receiver requests
and multiple reservation styles. Moreover, the receiver-
initiated reservation scheme used by RSVP and the up-
stream merging of reservation requests reduce the control
traffic compared to that of ST-2 [106].
The capability of an application explicitly to ask for a
given service keeps a neat interface between the network
and the application, though the network service should
account for the largest possible variety of applications,
even those that will be conceived in the future. Stan-
dard specifications are being delivered in order to fix
a uniform procedure for the end-to-end support of the
portfolio of service capabilities. According to this approach,
however, more demanding services will be available only
on subnetworks whose underlying network technologies
offer adequate support.
V. IP AND ATM
A. IP Versus ATM
A comparison of the IP and ATM approaches, in terms
of network architecture and protocols, offers a view on
the convergence of the computer and telecommunications
industries. The original IP paradigm has evolved by taking
into account the paradigm shift from data-only network
to multimedia internetworking, while the ATM approach,
originally conceived in the telecommunications field, has
been largely influenced by the computer networking style
in the ATM Forum. The main features of IP and ATM are
compared in Table 2.
The IPv6 128-bit address identifies network node in-
terfaces with an assumption of network hierarchy that
greatly reduces the work needed to route packets over the
Internet. This is achieved by allocating all addresses within
a domain, that is, a set of network nodes administered by
a single organization, so that they have a common prefix.
When two domains want to exchange routing information,
they only need to pass the domain prefixes to each other. It
14 IP flows are in fact connections—soft connections—as opposed to
physical connections (circuit switching) and virtual connections (ATM). In
addition, as opposed to virtual connections, flows have a unique identifier
end to end.
1902 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
Table 2 IP/RSVP Versus ATM/SVC
is recommended that domains that are close in the physical
topology of the Internet are given domain prefixes that
themselves have a common prefix. How large the different
parts of the prefixes need to be is dictated by the topology
and size of the domains and may vary on different parts
of the Internet. ATM uses the E.164 addresses that are
defined by the ITU-T to identify an interface uniquely to a
public network [26]. The 20-byte NSAP format is designed
for ATM addresses within private ATM networks.15 An
ATM end system directly attached to the public network
presumably would only have an E.164 number and not an
NSAP-format address. In such a case, a private network
node would address this end system by encoding the
E.164 number within an NSAP-format address. At the
egress switch, this NSAP address would be algorithmically
mapped into the corresponding E.164 number. In case of
IP over ATM, a suitable address-resolution scheme enables
the mapping of Internet layer 3 (IP) and Internet layer 2
(ATM) addresses. Note that each IP datagram carries the
IP destination address of the addressed host, while ATM
cells are identified by means of VCI labels assigned at
connection setup time.
IP adopts a connectionless approach, while ATM is con-
nection oriented. IPv4 best effort hop-by-hop forwarding
of IP datagrams has been enriched by IPv6 with the
capability to link data packets belonging to an end-to-
end communication with uniform requirements; that is the
concept of a flow. Network nodes can handle IP packets
with the same flow identifier in the same manner. RSVP
provides a means to exchange resource-control information
at the host router and at the router-router interfaces in order
to negotiate and establish soft resource allocation. IP routers
operating according to RSVP, upon receiving periodical
refresh messages calling for resource reservation, cache
a link resource allocation state (soft-state approach). Re-
source allocation is implemented by sharing the output links
of the routers according to a proper IP packet scheduling
algorithm (such as fair queueing [8], [107]). The original
15 NSAP-format ATM addresses consist of three components: an AFI,
which identifies the type and format of the initial domain identifier
(IDI); the IDI, which identifies the address allocation and administration
authority; and the domain-specific part, which contains actual addressing
information.
Internet integrated service model [101] supports three types
of service classes, namely, best effort, guaranteed, and
predicted. The network makes no service commitment to
carry best effort traffic except the promise not to delay and
drop data unnecessarily. If the network works properly and
if the traffic generated by the source is conformant with
the declared traffic profile, the network commits itself to
give to guaranteed traffic hard delay bounds and lossless
delivery to conformant traffic. The predicted service class
provides low packet loss and a maximum delay bound,
although occasional late or lost packets are tolerated. The
traffic exceeding the declared profile is carried as best effort
with no explicit identification, while in ATM networks,
nonconformant traffic is explicitly tagged as lower priority
and is carried with no guarantee.
ATM provides a connection-oriented approach based on
the notion of cell label swapping to build VC’s link by
link on either a permanent (PVC) or dial-up (SVC) basis.
The exchange of resource-control information occurs both
at the user–network interface and at the network–network
interface. ATM switches allocate to each active VC a
suitable amount of network resources according to the
QoS requirements specified at circuit setup time, or at
renegotiation instances, in the frame of one of the classes
of service made available by the ATM network (CBR,
VBR, ABR, and UBR). The hard state of network resources
allocated to the active virtual circuits is kept at each
ATM switch and is changed by control (signaling) or
management actions. Recently, the ITU established for
ATM the capability to renegotiate the QoS parameters of
an active connection [108].16
The support of end-to-end delay guarantee in the Internet
is based on standard queueing service models to be adopted
by the network nodes along the path, upon the receiver’s
request. ATM signaling allows the specification at the UNI
of an end-to-end delay bound, and each intermediate ATM
switch evaluates the cumulative delay (the delay accumu-
lated upstream plus the enforced local delay), being free
to apply locally the most appropriate resource reservation
action. Anyway, both ATM and RSVP call for the hosts
willing to set up a guaranteed communication to declare
the traffic profile and the QoS requirements, though the
capability of a traffic source to predict resource needs
on a long-term scale is limited. Hence, the amount of
information the network is likely to get from the source
in order to make intelligent resource-allocation decisions
is quite poor, unless it is limited to a short time scale.
Flexible resource prediction mechanisms to express short-
term (burst level) resource needs and the ability to change
a routing decision while a stream is active are felt as the
most promising networking features.
The RSVP approach, together with the IP flow concept,
tries to bring some VC capabilities to IP-based networks.
16 There is a subtle distinction between changes of state at IP routers
due to caching of host refresh messages (enabling a soft-state environment)
and changes of state at ATM switches caused by signaling renegotiations
(user or network activated) during active connections (causing a hard-state
environment). The difference is due to the inherent cache volatility.
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1903
RSVP relies on multicast distribution to send signaling
messages. Thanks to the soft-state approach, RSVP allows
QoS to change over time by using reservation refresh mes-
sages to update the cached state in the intermediate network
nodes. Moreover, the receiver-initiated approach of RSVP
enables receivers with heterogeneous QoS easily to join
a multiparty connection. ATM signaling provided by the
UNI 3.1 ATM Forum specification [51] enables the setup of
sender-initiated point-to-multipoint VC’s. The recent UNI
4.0 specifications [52] bring in the leaf-initiated join capa-
bility to a point-to-multipoint ATM VC. The ATM approach
always assumes receivers with uniform QoS requirements.
For the size of the protocol data units, IP provides the
capability to discover the MTU, that is, the maximum
packet size supported by the subnetworks connecting any
two IP hosts [109]. Segmentation and reassembly of the
user data is performed end to end by the transport pro-
tocol entities. Nonetheless, IP routers have the capability
to perform further segmentation, while the reassembly is
always performed by the final destination. ATM provides
the segmentation and reassembly capability at the edge of
an ATM network by means of the ATM adaptation layers.
B. IP and ATM
ATM offers VC’s providing QoS guarantee in terms of
data loss, bounded delay, and jitter. On the other hand,
network resource control mechanisms are being introduced
at the network layer of the Internet protocol suite with
the objective of giving real-time traffic a priority with
respect to nondelay-sensitive traffic. The effectiveness of
the action of resource-control mechanisms applied at the
network layer is limited by the capability of lower layer
protocols operated by subnetworks to enforce resource-
control mechanisms. The sharing of the capacity of a point-
to-point link among several traffic flows can be effectively
operated by applying resource-control mechanisms at the
network layer. On the contrary, the sharing of the capacity
of a populated segment of a shared media LAN can hardly
be enforced by network-layer resource-allocation schemes
unless all the end nodes connected to the LAN apply the
same mechanism. Resource-allocation schemes applied at
the network layer are a surrogate of resource-allocation
schemes at lower layers, when these are unavailable, and a
necessary complement when these are available.
1) IP over ATM: In the classical IP over ATM model
[110], direct ATM connectivity (by either PVC’s or SVC’s)
is possible only between intermediate nodes that share the
same IP address prefix. An LIS is a set of nodes (hosts and
routers) with the same IP address prefix. Direct ATM VC’s
must be established between nodes within the same LIS,
although the specification does not indicate VC establish-
ment procedures. Packets addressed to nodes on different
LIS’s must be forwarded by an IP router. An ATM address-
resolution mechanism based on an address-resolution server
for each LIS is proposed. ABR and UBR are the ATM
service classes supported by the established ATM VC’s.
The hop-by-hop processing of the IP header in the routers
limits throughput and causes large latency. The NHRP
[111] improves the classical IP over ATM model and
allows the establishment of direct ATM connections from
an ingress point to an egress point of an ATM subnetwork,
even when they do not share the same IP address prefix,
thanks to the next hop server, which resolves the ATM
address of the egress point nearest to the given destination.
With NHRP, high-throughput and low-latency communica-
tions become possible even across LIS boundaries.
ATM-based IP hosts and routers use a multicast address
resolution server (MARS) to support the handling of IP
multicast traffic over the ATM Forum’s UNI 3.0/3.1 point-
to-multipoint connection service in the frame of the IGMP
[112]. Clusters of endpoints share a MARS and use it to
track and disseminate information identifying the nodes
listed as receivers for given multicast groups. This allows
endpoints to establish and manage point-to-multipoint VC’s
when transmitting to the group. The MARS allows IP
multicasting to be supported by using either meshes of VC’s
or ATM-level multicast servers.
As an alternative to the classical IP over ATM, the
ATM Forum has finalized the specification of LANE [113],
addressing the issue of using ATM networks to imple-
ment high-speed backbones to interconnect legacy LAN’s
via bridging. Like conventional bridged networks, LANE
networks support all higher layer protocols, including IP,
as well as nonroutable protocols like NetBIOS. To run
common connectionless IP and LAN MAC protocols over
the connection-based ATM network, a client-server scheme
for mapping IP addresses and MAC addresses into ATM
addresses or VC identifiers has been proposed. The speci-
fications also provide conventions for when to set up and
tear down VC’s between end systems.
Classical IP over ATM, LANE, and NHRP underutilize
the capabilities of ATM. These approaches base their op-
eration on ATM VC’s with best effort UBR class type or,
at most, with minimum-rate-guarantee ABR class. Hence,
it is necessary to enhance these schemes to allow a richer
support of QoS in IP over ATM networks.
Integrated routing mechanisms, such as the integrated (I)-
PNNI protocol [114], are being proposed in an IP over ATM
network to offer QoS routing and to better exploit network
resources by applying routing decisions based on the full
topology knowledge at both routers and switches. I-PNNI
involves the use of a single routing protocol, namely, PNNI,
for routing of IP and ATM. Instead of using conventional IP
routing protocols, such as OSPF, the ATM-attached routers
use PNNI to exchange link state and topology information
with both other routers and ATM switches. I-PNNI allows
a single routing protocol to compute paths for IP packets
and for ATM virtual circuits. The I-PNNI protocol is not
limited to IP over ATM networks, but it is intended for use
in a multiprotocol over ATM environment.
The I-PNNI is proposed as an alternative solution to the
layered routing approach, whereby routers and switches do
not share the knowledge of the topology at different layers.
Routing and switching functions are neatly decoupled by
the MPOA, whose specification is currently under devel-
opment within the ATM Forum [115]. MPOA addresses a
1904 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
high-performance, low-latency way to route IP and other
layer 3 protocols across an ATM network. Unlike LANE
and the classical IP over ATM models, MPOA enables
the setup of direct ATM virtual circuits between any two
endpoints (edge devices or ATM-attached end systems),
even though they belong to different subnetworks. In place
of emulated LAN’s and logical IP subnetworks, MPOA
defines Internet address summarization groups (or virtual
subnets) characterized by a layer 3 protocol and an address
range. The MPOA architecture includes, indeed, two main
components: edge devices and route servers. An edge
device is capable of forwarding packets between legacy
interfaces and ATM interfaces by handling MAC or network
addresses, but it does not perform route calculation. A route
server runs traditional routing protocols and performs route
calculations. According to MPOA, the functions performed
by classical routers are split between edge devices and
route servers. The route server maintains tables of the
network topology and tells the edge devices where to
forward packets. MPOA is likely to use NHRP to allow
communication among edge devices, while interoperability
with conventional routers is ensured by using protocols like
RIP and OSPF.
C. Integrating IP and ATM
The requirements for distributed multimedia applications
include real-time constraints, such as the need for delivery
to receivers within a specified delay bound and the need
for the various media streams (video, audio, animation, and
data) to be properly synchronized. Furthermore, multimedia
sources transmit large amounts of data, often to a multiple
and widely distributed group of receivers. The network’s
capability to guarantee to an individual connection the QoS
it will receive largely depends on resource reservation and
routing algorithms.
The design of integrated services information infrastruc-
tures is today at the crucial point where the two net-
work architecture visions (telecommunications and Internet)
necessarily collide. On one side, the telecommunications
community is embracing the Internet protocols as both
the foundation of computer communications over carrier
networks (IP over ATM) and the vehicle for client-server
interactions in novel telecommunications services, such
as VoD. Two pillars of the telecommunications network
architecture, however, are hard to remove from the telecom-
munications perspective: the direct layering of real-time
data (for example, voice, animation, and MPEG video)
over ATM (that is, no intermediate Internet protocols) and
the use of ATM signaling at any user–network interface to
control connections (see Section III-G).
On the other hand, although the Internet community
is sponsoring ATM as the promising high-speed bearer
technology of subnetworks, the vision of the Internet is still
focusing on the protocol suite to be executed exclusively
among hosts at network edges and routers at subnetwork
boundaries. In other words, in building the ISA, the per-
spective is to consider ATM as a high-speed data pipe
Fig. 11. Application support for QoS.
technology (using ATM PVC’s only) and to guarantee QoS
by means of RSVP [101].
Soft reservation schemes made available at the IP net-
work layer by RSVP with proper packet scheduling, com-
plemented by QoS routing protocols, are the key to allow
QoS support in presence of heterogeneous legacy networks.
Cooperation of RSVP and ATM signaling protocols to
guarantee QoS is an attractive perspective for building
novel broad-band networks to carry Internet traffic over
public infrastructures and over enterprise intranets. With
this approach, whenever it is enabled by the subnetwork
technology, the underlying subnetwork layer protocols are
cooperating with the Internet network layers protocols to
provide QoS (see Fig. 11).
The QoS requirements of the applications must be
mapped into the actual physical network resources. Soft
reservation schemes should map on underlying hard
reservation schemes where these are available, such as in
the case of ATM. Such mapping can either associate a single
flow to a VC or provide for multiple homogeneous flows
to share a single VC. Such mapping is not straightforward,
however, due to some inconsistencies in the resource
reservation approaches proposed by the Internet and by
the ATM communities [116]. First, there currently is
no heterogeneity allowed in a single point-to-multipoint
ATM VC, while the Internet model allows each receiver
participating in a multicast session to have a different
QoS. Moreover, RSVP supports dynamic QoS reservations,
meaning that users may change their QoS at any time.
Renegotiating QoS during the life of a call in point-to-
point and point-to-multipoint VC’s is not part of current
ATM signaling specifications, apart from the capability to
modify the peak rate of an active connection as envisioned
only by the ITU so far [108].
A number of proposals have been introduced recently
to integrate IP and ATM protocols. Examples are the IP
switching [117] and tag switching [118] schemes. The
former addresses a radical substitution of conventional
routers and switches technologies to build high-speed IP
backbones. The latter suggests a smoother overlay approach
to be implemented over conventional routers and switches
technology.
1) IP switching: Using an intelligent traffic classification
scheme, IP switching nodes dynamically shift between
store-and-forward and cut-through switching [71], [117].
IP switches base their operation on the traffic flow concept.
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1905
Fig. 12. IP switching principle.
The IP flow feature introduced by IPv6 and RSVP is based
on an explicit flow identifier. In this case, a traffic flow
is a sequence of IP packets sent from a particular source
to a particular destination, sharing the same protocol type
(such as UDP or TCP), the same type of service, and other
characteristics, as determined by examining information in
the packet header. Prior to cut-through, an IP switch acts
like a router with hop-by-hop store-and-forward routing of
IP datagrams. By default, data are transferred through an IP
switch on ATM virtual circuits, established at system startup
with adjacent nodes. Such data are handled in a store-and-
forward manner as IP datagrams by the IP switch controller
(see Fig. 12). The IP switch controller, by observing the
traffic on its ports, identifies longer duration flows and
starts the process to optimize their switching by applying
the cut-through technique on fresh ATM VC’s. Once the IP
switch controller has identified a flow, it asks the upstream
node to forward the flow on a new VC. Independently, the
downstream node can ask the IP switch controller to set
up an outgoing VC dedicated to the same flow. Then the
two fresh VC’s are concatenated, and data are switched
through bypassing the Internet layer 3 processing. The
VC release is triggered when there has been no traffic
on a flow for a given idle time-out. Flow classification
and cut-through switching are soft-state decisions local
to individual IP switches. This allows for routing around
failures without reestablishing end-to-end VC’s. The IP
switching approach brings the soft-state reservation style,
backed by the IP supporters, to the ATM world by triggering
a hard-state reservation as a consequence of a soft-state
transition scheme.
Two simple protocols are used to operate the IP switching
networks. The GSMP [119] is in charge of setting up,
tearing down, and monitoring the status of the virtual
channels within the ATM switching fabric. The GSMP
addresses the issue of direct control of ATM switching
fabrics (open ATM switches) to set up the virtual channels
in spite of conventional ATM signaling protocols.
The IFMP [120] enables the indication of flows to
an upstream IP switch and associates traffic flows with
ATM virtual circuits. Flow characterization allows each IP
switch to make its own QoS decision and map IP packet
flows into ATM connection types and VC’s according
to local information. The IP switch can be improved to
handle RSVP messages and to provide VC’s that satisfy
QoS requirements as specified by RSVP. The routing
information is available at IP switching nodes by means
of the conventional IP routing protocols (RIP, OSPF, etc.).
The CSR approach too [121] is based on network nodes
that integrate the functionality of an IP router and of an
ATM switch. In a different way from IP switching, CSR
nodes make use of conventional ATM signaling protocols
to set up the VC’s, and they implement routing decisions
by integrating routing information at both IP and ATM
network layers. Moreover, CSR nodes can decide for the
cut-through of IP datagrams on the basis of topological con-
siderations, and they can provide ATM-level connectivity
composed of multiple ATM VC’s, each of which connects
adjacent CSR’s. This is the so-called ATM bypass pipe
among CSR nodes, to differentiate it from the ATM VC
connection provided by a single ATM subnetwork through
ATM signaling.
Both IP switching and CSR provide applications with
high-throughput and low-latency ATM pipes while retaining
the current router-based internetworking concept. They
exploit the high speed of ATM and avoid as much as
possible the hop-by-hop store-and-forward handling of IP
datagrams. Moreover, they are open to handle applications
with specific QoS objectives by enabling cooperation of
ATM and IP resource reservation protocols.
2) Tag Switching: Tag switching enables the forwarding
of IP packets directly across a network of tag switching
1906 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
compliant routers (called tag switches or tag switching
routers) along predetermined paths, similar to VC’s, rather
than along the conventional IP hop-by-hop paths [118].
This capability enables the performance of advanced traffic-
management tasks, such as load balancing and QoS routing.
The decoupling of the tag distribution mechanism from data
transfer enables tag switching to be used over a variety
of network technologies, including ATM. Tag switching
assigns tags to multiprotocol frames: data units carry a
fixed-length label, namely, the tag, that tells tag switching
nodes how to route the data. A tag switching network is
made of two types of nodes: tag edge routers and tag
switches. The former are routers at the edge of the tag
switching network that apply tags and perform Internet
network-layer functions. The latter, switches or routers at
the core of the tag switching network, forward IP packets
or ATM cells based on the information embedded in the tag
without processing Internet layer 3 headers.
Tag information can be carried in a data unit in two ways:
1) as part of the ATM layer header (for example, the
ATM VCI field);
2) as part of the Internet network layer header (for
example, the flow label field in IPv6).
Intermediate tag switches keep a table of the associations
of incoming and outgoing tags and ports (tag bindings). The
TDP is used to distribute tag information throughout the
network [122]. TDP provides the means to open, monitor,
and close TDP sessions that are used to distribute, request,
and release tag binding information. By supporting the TDP
and adding the capability to switch tagged packets on the
basis of tag labels, both conventional routers and ATM
switches, enriched with standard Internet routing protocols,
can be used as tag switches. The setup of ATM virtual
circuits and the assignment of VCI values is not carried
out by the standard ATM signaling but is operated by using
the tag distribution protocol. Tag switching is independent
of the routing protocols employed. Tag edge routers and
tag switches build their routing tables using conventional
routing protocols, such as OSPF.
VI. MIDDLEWARE
To build computer systems that must operate in large,
open, distributed, highly heterogeneous environments, we
should make use of new software technologies. While
the shift from monolithic applications to client/server is
still under way, network computing, whereby computing,
communications, and content converge, proposes a new
powerful paradigm to build large-scale distributed sys-
tems. The WWW has proven a very strong and popular
information system, and browsers are being proposed as
the universal desktop front end. The WWW technology
by itself, however, is inadequate to cover certain areas
addressing distributed computing. The basic scheme of
embedding CGI scripts in HTML pages is limited to the
cooperation of WWW servers with external programs in a
rigid manner [123].
The major threads in the network-centric computing front
are:
• the emerging standards for intermediate software plat-
forms, the middleware, for supporting distributed ap-
plications built from prefabricated components easily
accessible via an open network, either via the RPC
model or in the frame of object-oriented software
design;
• the notion of software engineering based on trans-
portable computation [1], that is, the use of portable
software entities that can travel across a net and carry
out some operations.
The merging of such approaches emphasizes the poten-
tial of both and complements each ones’ strengths and
weaknesses. In particular, transportable computation brings
about the possibility to deploy applications dynamically
with a fine distribution granularity, while middleware plat-
forms offer a general interaction and communication model
among the components of distributed applications. Both
middleware and transportable computation virtualize the
computation environment made available by networked
computers. The middleware is layered above heterogeneous
operating systems and offers a set of distributed services
with standard application programming interfaces. Trans-
portable computation is based on the concept of layering
the virtual machine engine above the operating system of
a computer. The virtual machine provides an open API
independent of the operating system and is built as an inter-
preter. The virtual machine is available on the widest range
of operating systems. Hence, largely portable applications
can be developed by using the set of instructions that can
be executed by the interpreter. Applications can be flexibly
deployed by transporting portable code across a network
(dynamic network deployment [1]).
The section ends with two sample applications of middle-
ware and transportable computation technologies to build
interoperable network infrastructures, namely, ORCHES-
TRA and active networks.
A. Distributed Processing
The idea of intermediate software tools and platforms,
the middleware, for supporting application development
in a heterogeneous, distributed processing environment
was born in the 1980’s. An important characteristic of
these platforms is their support for logically integrated
but physically distributed systems. Moreover, the same
platform can span different operating systems, allowing the
creation of heterogeneous architectures. To facilitate the
development of tools that can be integrated in the existing
platform, the mechanisms that assure interoperability are
being standardized.
The RPC concept was developed to design applications
running on multiple processing units linked by a network
[39]. DCE, by the OSF, is one of the most mature tech-
nologies for the development and execution of distributed
processing applications. DCE provides a set of services
built on a common multithreaded RPC platform, including
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1907
CDS, GDS, DTS, security, etc. DCE includes libraries that
implement API’s and program development tools. It also
defines daemons or server processes that run continuously
on a machine and respond to requests sent over the network.
The designer of a DCE application defines intermodule
interfaces, compiles them using the interface definition
language (IDL) compiler, and then links obtained stubs
to the rest of the application code. The application can
perform RPC calls to other modules or to the functions
of the distributed services.
Another approach to distributed applications support,
based on the object-oriented paradigm, has been used both
by the OMG in its CORBA architecture [36] and by
Microsoft in the DCOM [124]. While DCE was designed to
support distributed procedural programming, CORBA and
DCOM were designed to support distributed object-oriented
programming.
CORBA provides an infrastructure that allows objects
to communicate independently of the specific platform
and languages used to implement the objects. The core
component of the CORBA architecture is the ORB. The
ORB is responsible for object-to-object interaction by using
the trader service to find object implementations. The object
interfaces can be defined either statically by using IDL
language or dynamically by using the DII and DSI. The
general inter-ORB protocol (GIOP) defines a set of message
contents, formats, and semantics for transmitting requests
and replies between ORB’s. The OMG has specified two
specific inter-ORB protocols so far: the IIOP and the
DCE IOP. The Internet IOP is mandatory for CORBA 2.0
networked ORB’s [125].
The DCOM defines the mechanisms of interobject com-
munication at the binary level. The DCOM protocol is
an application-level protocol for object-oriented remote
procedure calls useful for distributed, component-based
systems of all types. It is layered on the distributed comput-
ing environment RPC specification and offers a transport-
neutral data representation for references (including by-
value) to objects.
B. Transportable Computation
The growing importance of networks in modern infor-
mation systems has fostered research on a new generation
of programming languages. Network computing is focused
on the notion of code mobility. Three levels of mobility
are envisioned: remote execution, code on demand, and
migration. Remote execution is based on the transfer of
data and program code (script) to a remote host, where it
is activated and executed. Code on demand is based on
the possibility to download data and program code (script)
from a remote host and to run the code in a local execution
environment. According to the migration mobility mode, a
program (agent) is capable of suspending the execution to
transfer itself, together with its execution status, to another
computation environment and of resuming execution. Code
mobility is achieved either by using classical interprocess
communication schemes, such as sockets, or by exploiting
the services provided by distributed processing environ-
ments, such as DCE and CORBA. Thanks to code mobility,
a distributed application can be dynamically and flexibly
partitioned among different computing environments. For
example, the amount of processing carried out by the client
in a client-server application could be tuned according
to the available processing power to the communications
capability and to the distribution of data.
Mobile code17 technologies propose the use of interpreted
programming languages as opposed to compiled ones to
deal with the issue of portability of software programs.
Many interpreted languages (such as Tcl [126], Telescript
[22], Java [21], etc.) have been proposed. An unprecedented
commitment is being made by the industrial and academic
world to Sun Microsystems’ Java [21], mainly for the
tremendous power brought to WWW technology.
The distribution of executable software in addition to
the distribution of information content in a user-friendly
fashion, with multiple-media information access and hy-
pertextual navigation, adds a powerful role to a computer
network. The Java source code is compiled to produce an
intermediate code, the Java bytecode, that can be executed
in the context of an interpreting system, the JVM [127], that
translates the compiled bytecode into machine instructions
for the target local system. The Java virtual machines can
be layered on a variety of operating systems (see Fig. 13).
Java allows the embedding of executable content within
WWW documents.18 When a browser visits a document
containing a Java applet, the program is automatically
downloaded to the local machine and executed in the JVM
embedded in the browser. Moreover, publicly available
specifications provide standard access to data base systems
and to computer-telephony integrated applications. Java
data base connectivity [128] offers a data base access
application programming interface that enables developers
to write Java applications that access a variety of data bases
by means of a uniform generalized standard query language
interface. Java telephony application programming interface
[129] is an API for computer telephony applications in
the Java environment. Other applications of interest in-
clude the download of Java code for remote diagnosis and
for network resource control on network-node processors
equipped with the Java virtual machine (see Section VI-
C). On network nodes, other applications of interest may
emerge, such as service- and business-management aspects
(see Section VI-D).
The platform independence allows the distribution of
executable content into a heterogeneous computing envi-
ronment with reduced distribution, installation, and support
costs and with large flexibility to change applications only
on the hosts serving as software distributors. The downside
of portability is the low speed of interpreted languages if
17 This type of technology is often referred to as intelligent agents
technology. Intelligent agents are software entities that perform some tasks
on behalf of a user or of another program. They can travel through the
network, and they have a degree of autonomy and capability to adapt to
the visited environment.
18 To improve the communication capability among applets, Netscape
developed a new scripting language, namely, JavaScript, to provide an
Internet-oriented compound document framework.
1908 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
Fig. 13. Java applications.
compared to compiled code. To counter performance issues
and to bring Java code to nontraditional computing devices,
such as smart phones and personal digital assistants, sili-
con vendors are developing custom processors specifically
optimized to run Java code, so-called Javachips.
The capability of a Java application to invoke methods on
another Java application is being supported by the emerging
Java RMI standard [130]. The RMI approach represents
an alternative to CORBA when in the presence of Java
objects only, although CORBA offers a more generic and
language-independent approach and provides a wider set of
generic services. An IDL/Java binding specification [131]
is currently being finalized by the OMG and will allow
Java server objects to advertise an IDL description of their
interfaces.19
The service network of the future will be populated by
software agents capable of assisting the end users in the use
of the ever growing information that is accessible on-line20
[132], [133].
C. ORCHESTRA
Fig. 14 shows the model of a recently proposed pro-
totype control architecture, called ORCHESTRA [134].
ORCHESTRA was developed at CEFRIEL to investigate
the effectiveness of emerging middleware and transportable
computation technologies to tackle the complexity of re-
19 Netscape’s NetscapeONE and Microsoft’s ActiveX are currently
proposed as distributed object-oriented environments for development of
applications, addressed to the Internet and the intranets markets.
20 Nowadays, the Internet anticipates some implementation of software
agents: personalization agents select relevant information for a user on the
basis of a user profile (Pointcast and Timecase); notification agents inform
a user about information changes (HotPage); and search agents are used to
find information of interest on the basis of the specification of a keyword
(Webcompass).
Fig. 14. The ORCHESTRA control architecture.
quirements to deploy advanced services in broad-band
networks. The study also examined the possible alternatives
for distribution of intelligent functionalities between termi-
nal equipment and network nodes, thus trying to reconcile
the telecommunications- and computer-based views of the
network. Two key concepts of the design are the capability
to offer a unique user interface to access all the services
and a layered model of the network functions to support
the independence of service and information transport.
This latter feature results in a control architecture open
to a variety of possible future business scenarios and
market segmentations. ORCHESTRA proposes a model
for a middleware control infrastructure enabling effective
and efficient service deployment in a complex environment
composed of a variety of networks and terminal types.
The architecture of ORCHESTRA introduces a dynamic
distribution of both control and management functions. This
means that different and/or autonomous software compo-
nents possibly located at different points in the network
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1909
(terminals, switches, servers) cooperate, within a distributed
software environment, to offer services to end users and/or
service providers. At the end-user side, ORCHESTRA
provides a generic interface to access the services. At the
resource and service provider side, ORCHESTRA provides
a generic interface for registering and allowing user access
to resource and service offering. ORCHESTRA follows
a one-stop-shopping model in that it offers the broker-
age between service requests expressed at a high level
of abstraction by the end users and the resources and
services provided by a multitude of suppliers. The core of
ORCHESTRA is an enriched middleware layer based on
the conventional services offered by a standard distributed
processing environment, such as CORBA. This middleware
is implemented as a set of architectural components that
have been realized in the prototype as Java objects traded
by CORBA.
A user accesses his personalized networking features
from whatever terminal equipment he may have. After
browsing the available service offer, the user asks for the
delivery of the desired service. ORCHESTRA takes care of
the scaling of the service on the terminal equipment utilized
by the user. Moreover, ORCHESTRA offers functionalities
devoted to service session control (add a new user to an
active session; suspend, resume, and quit a service session)
and to connection and resource management.
Two user domain components, the local user controller
(LUC) and local resource controller (LRC), ensure the
interaction between the user and the service support infra-
structure. These components can be installed in the user
terminal equipment or can be dynamically downloaded
from the network when the user logs in by means of
a conventional WWW browser. The LUC controls the
authentication process and masters the presentation of a
personalized user interface within a browser. The LRC
executes the code devoted to carry out the service logic
and controls the local resources available on the terminal.
The network access domain components allow access to
the service infrastructure. They are the UC’s and the
proxy component. The UC maintains all the data related
to a single user in the form of user profile, subscribed
services, list of suspended sessions, etc. Moreover, the UC
authenticates the user access requests coming from the
LUC. The proxy component is a gateway entity capable
of supplying any terminal with the capabilities offered by
the user domain components in case they are not available
on the terminal itself. Proxy entities enable the broadest
range of terminals with different computational capabilities
(from dumb phones to multimedia workstations) to access
the services made available by ORCHESTRA.
Last, the service broker domain components enable ser-
vice execution. They are the global service broker (GSB),
the metaapplication distributor (MAD), the service session
controller (SSC), and the GRC. Upon user request, the GSB
locates the services offered by different service providers,
contacts the MAD, which is in charge of storing and
distributing the software implementing the service process,
and instances the SSC that controls the state of a single
service session. The GRC manages the heterogeneous net-
work resources necessary for the service execution and is
in charge of mapping the resource requirements on the
resource-allocation mechanisms of the underlying network
and system technology.
Developed prototype services include scalable, nomadic
video conferencing and VoD applications. Resource-
allocation mechanisms to guarantee requested QoS are
applied to ATM, IP, and POTS/ISDN network nodes
(ATM switches, IP routers, and voice PBX’s) by means of
gateways capable of activating the network-node-specific
mechanism.
D. Active Networks
A more radical virtualization approach is enabled by
the so-called active networks concept (ActiveNets) [135],
[136]. ActiveNets allow network switching nodes to per-
form processing on user data flowing through them and
enable the end users to program the network by uploading
their own programs. ActiveNets (see Fig. 15) replace the
conventional packets, whose headers are processed at the
network nodes, with smart packets, that is, programs with
embedded data that are evaluated in a transient execu-
tion environment. As opposed to traditional circuit and
packet switching nodes, in which a fixed protocol stack is
hard coded into the switch processor, ActiveNets switches
allow dynamic protocol composition. Protocol functions
are implemented as modules at smart network nodes, and
smart packets carry protocol orders along with data. A
management layer processing entity at nodes reads orders
from packet headers and assembles a protocol stack on a
per-packet basis.
The classical telecommunications and computer
paradigms are being hindered by an extreme view
inspired by the principle of viewing the network nodes
as programmable entities whose behavior is dynamically
dictated by active messages traveling across the network.
ActiveNets give up the model of vertically integrated and
closed network nodes in favor of open and programmable
network nodes, whose primitive functions are composed at
will by incoming packets carrying data, as well as portable
programs, in the frame of the transportable computation
software engineering paradigm. ActiveNets are pulled by
some lead applications, such as Web proxies and mobile
proxies, where user-driven computation is performed at
network nodes without a uniform approach. ActiveNet
promoters plan to use a Java-like instruction set as a
platform on which a variety of higher level languages and
compilers can converge, thus laying the foundation for
interoperability and code mobility.
VII. SUMMARY AND CONCLUSIONS
To summarize the evolving networking models reviewed
in this paper, we would like to introduce an elementary
sketch, as depicted in Fig. 16. The telecommunications
interconnection model [Fig. 16(a)] is based on network
nodes, switches, and servers (for management and service
1910 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
Fig. 15. Active networks concept.
(a) (b) (c)
Fig. 16. Evolving networking models.
functions) that are cooperating on a telecommunications
middleware technology. Standard terminals can be easily
interconnected among themselves, while terminal-to-host-
server interoperability is either ignored or mediated by
network nodes (intelligence in the network). A typical
application of this model is the one popularly called the
“video dial-tone model,” used as a reference for the VoD
service. Terminals access first the network server (called
Gateway 1) that provides for terminal support functions and
for establishing connections to the required video server
(called Gateway 2). Then, terminals and video servers ini-
tiate their interaction to fulfill the service features (see also
the DAVIC approach of Section III-G2). The internetwork-
ing model [Fig. 16(b)], championed by the Internet, uses
subnets (heterogeneous networks) instead of transmission
links and applies a uniform internetworking platform to
terminals, servers, routers, and network servers. Networked
applications can be established among terminals and servers
while keeping the routers involved with applications just for
the negotiated network resource allocation (intelligence at
the edges). In model (b), full interoperability of networked
applications is enabled when an agreed distributed program
encoding and computation environment takes place across
heterogeneous end-node and network-node processors. OR-
CHESTRA follows model (b), keeps the network transport
node rather dumb, and distributes via network servers (á la
video dial tone) middleware control components across ter-
minals and servers. Last, active networks determine model
(c), where the network transport nodes enjoy the same
interoperability platform as the end systems (intelligence
everywhere).
Architecturally, both ORCHESTRA and ActiveNets in-
crease the level of abstraction at which interoperability is
achieved with respect to a plain Internet model. Beyond
the different degree of virtualization, the two approaches
differ in two remarkable aspects. First, while ORCHES-
TRA builds the enriched middleware on the open com-
putation environment provided by terminals and servers,
ActiveNets assume that the network nodes also offer an
open computation environment capable of hosting software
components. Moreover, while the ORCHESTRA model
emphasizes the download of control logic from network
servers to programmable terminals, the ActiveNets model
stresses the upload of control logic from terminals to
programmable network nodes. We referred to the hourglass
layered architecture, in which the detailed specification of
the syntax and semantics of the IP is the key to inter-
networking. Both ORCHESTRA and ActiveNets base the
interoperability on an agreed distributed program encoding
and computation environment, thus putting the thinnest
point of the new hourglass layered architecture at a higher
and programmable level (in the middleware) compared to
the IP level.
In conclusion, this paper described recent technical ap-
proaches converging on a common networking model for
the integrated services infrastructure of the future. We have
pointed out the importance of the upper middleware layer
services to cope with the interoperability requirements of
networked multimedia applications across heterogeneous
systems and networks.
In particular, we have summarized recent topical initia-
tives in the standard arenas for interconnection, internet-
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1911
working, and interoperability issues, following the layered
structure of an open networking model. The mentioned
integration schemes of IP and ATM resource reservation
protocols, providing efficient resource utilization and QoS
guarantee in broad-band networks, fall into the first two
lower layers (telecommunications and Internet), which are
the foundation of network computing and communication
services.
We have remarked that trends in middleware services are
evolving along the emerging software paradigms of trans-
portable computation and virtual machines. Interoperability
of heterogeneous networked systems depends basically on
an agreed distributed program encoding and computation
environment that will exploit these emerging technologies.
We would like to conclude by observing that nontechnical
issues heavily influence the virtualization model for future
information infrastructure. Reference [137] presents a tax-
onomy for describing alternative infrastructure scenarios
and shows how the digital information convergence can ei-
ther favor innovation and business competition or establish
artificial barriers to a competitive environment.
REFERENCES
[1] D. G. Messerschmitt, “The convergence of telecommunications
and computing: What are the implications today?” Proc. IEEE,
vol. 84, pp. 1167–1186, Aug. 1996.
[2] J. J. Garrahan, P. A. Russo, K. Kitami, and R. Kung, “Intelligent
network overview,” IEEE Commun. Mag., vol. 31, pp. 30–36,
Mar. 1993.
[3] “Intelligent network recommendations,” International Telecom-
munications Union, ITU-T recommendation series Q.12xx,
1993–1995.
[4] W. J. Barr, T. Boyd, and Y. Inoue, “The TINA initiative,” IEEE
Commun. Mag., vol. 31, pp. 70–76, Mar. 1993.
[5] “Service architecture—Version 2.0,” Telecommunications
Information Networking Architecture Consortium, Rep.
TB_MDC.012_2.0_94, 1994.
[6] M. Lengdell, J. Pavon, M. Wakano, M. Chapman, and M.
Kawanishi, “The TINA network resource model,” IEEE Com-
mun. Mag., vol. 34, pp. 74–79, Mar. 1996.
[7] S. W. Minzer, “Broadband ISDN and asynchronous transfer
mode,” IEEE Commun. Mag., vol. 27, pp. 17–24, Sept. 1989.
[8] M. W. Garrett, “A service architecture for ATM: From appli-
cations to scheduling,” IEEE Network Mag., vol. 10, pp. 6–14,
May/June 1996.
[9] J. Postel, “Internet protocol,” Internet Engineering Task Force,
RFC 791, Sept. 1981.
[10] S. Deering and B. Hinden, “Internet protocol, version 6 (IPv6)
specification,” Internet Engineering Task Force, RFC 1883, Jan.
1996.
[11] L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala,
“RSVP, a new resource ReSerVation Protocol,” IEEE Network
Mag., vol. 7, pp. 8–18, Sept./Oct. 1993.
[12] R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin,
“Resource reservation protocol (RSVP)—Version 1 functional
specification,” Internet Engineering Task Force, RFC 2205,
Sept. 1997.
[13] R. Pandya, “Emerging mobile and personal communication
systems,” IEEE Commun. Mag., pp. 44–52, vol. 33, June 1995.
[14] D. C. Cox, “Wireless personal communications,” IEEE Per-
sonal Commun. Mag., vol. 2, , pp. 20–35, Apr. 1995.
[15] “Network architecture,” European Telecommunications Stan-
dards Institute, global system for mobile communications (phase
2), GSM 03 02, 1994.
[16] P. A. Bernstein, “Middleware: A model for distributed system
services,” Commun. ACM, vol. 39, no. 2, pp. 86–89, Feb. 1996.
[17] B. Nilsson, “The role of middleware in telecommunication ap-
plication platforms,” in Proc. Telecom ‘95, Geneva, Switzerland,
1995, pp. 713–717.
[18] A. Campbell, C. Aurrecoechea, and L. Hauw, “A review
of QoS architectures,” ACM Multimedia Syst. J., to be pub-
lished. Available: http://www.ee.columbia.edu/˜campbell/an-
drew/publications/papers/survey.ps.gz.
[19] W. Stallings, Network and Internetwork Security: Principles and
Practice. Englewood Cliffs, NJ: Prentice-Hall, 1995.
[20] F. Manola, “Interoperability issues in large scale distributed
object systems,” ACM Comput. Surveys, vol. 27, no. 2, pp.
268–270, June 1995.
[21] K. Arnold, and J. Gosling, The JavaTM Programming Language.
Reading, MA: Addison Wesley, 1996.
[22] J. E. White, “Mobile agents,” General Magic, White Paper,
Oct. 1995.
[23] National Research Council, Realizing the Information Future,
the Internet and Beyond. Washington, D.C.: National Acad-
emy Press, 1994.
[24] M. Decina and E. L. Scace, “CCITT recommendations on
ISDN: A review,” IEEE J. Select. Areas Commun., vol. SAC-4,
pp. 320–325, May 1986.
[25] G. R. Ash, P. Chermouil, A. N. Kashper, S. S. Katz, K.
Yamazaki, and Y. Watanabe, “Robust design and planning
of a world-wide intelligent network,” IEEE J. Select. Areas
Commun., vol. 7, no. 7, pp. 1219–1230, Oct. 1989.
[26] “Numbering plan for the ISDN era,” International Telecommu-
nications Union, Recommendation ITU-T E.164, 1991.
[27] M. A. Starkebaum, C. E. Troxel, and R. Gollakota, Intelli-
gent Networks: IN/AIN Technologies, Operations, Services, and
Applications. Chicago, IL: IEC Press, 1996.
[28] “Digital European cordless telephony,” European Telecommu-
nications Standards Institute, ETSI 300-175, Mar. 1992.
[29] R. H. Glitho and S. Hayes, “Telecommunications management
network: The vision versus the reality,” IEEE Commun. Mag.,
vol. 33, pp. 47–52, Mar. 1995.
[30] “Principles for a telecommunications management network,” In-
ternational Telecommunications Union, Recommendation ITU-
T M.3010, 1992.
[31] “Generic network information model,” International Telecom-
munications Union, Recommendation ITU-T M.3100, 1992.
[32] “Common management information protocol specification for
CCITT applications,” International Telecommunications Union,
Recommendation ITU-T X.711, 1991.
[33] “Synchronous digital hierarchy (SDH) management,” Inter-
national Telecommunications Union, Recommendation ITU-T
G.784, 1994.
[34] “Overall concepts and principles of TINA,” Telecommunica-
tions Information Networking Architecture Consortium, Rep.
TB_MDC.018_2.0_94, 1994.
[35] “Basic reference model of open distributed processing,” Rec-
ommendation ISO/IEC 10746-2.2/ITU-T X.901, June 1993.
[36] CORBA 2.0, “The common object request broker: Architecture
and specification” (revision 2.0), Object Management Group,
July 1995.
[37] “DPE phase 0.1 specification,” Telecommunications
Information Networking Architecture Consortium, Rep.
TB_AD.NW.001_1.0_93, 1993.
[38] W. Stallings, SNMP, SNMPv2, and CMIP: The Practical Guide
to Network Management Standards. Reading, MA: Addison
Wesley, 1993.
[39] D. Fauth, “Remote procedure call: Technology, standardization
and OSF’s distributed computing environment,” Open Software
Foundation Tech. Rep., 1992.
[40] ISO/IEC, “Open distributed management architecture,” working
draft, 1995.
[41] J. R. Jones, “Baseband and passband transport system for
interactive video services,” IEEE Commun. Mag., vol. 32, pp.
90–101, May 1994.
[42] K. Maxwell, “Asymmetric digital subscriber line,” IEEE Com-
mun. Mag., vol. 33, pp. 100–106, Oct. 1996.
[43] J-P. Coudreuse, P. Adam, and P. Gonet, “Asynchronous time-
division switching: The way to flexible broadband communica-
tions,” in Proc. Int. Zurich Seminar (IZS’86), Zurich, Switzer-
land, Mar. 1986, pp. 141–148.
[44] M. Decina and D. Vlack, Eds., “Packet switched voice and data
communications,” IEEE J. Select. Areas Commun., vol. SAC-3,
Dec. 1983.
[45] J. S. Turner, “New directions in communications—Or, which
way in the information age?” in Proc. Int. Zurich Seminar
(IZS’86), Zurich, Switzerland, Mar. 1986, pp. 25–32.
1912 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997
[46] “Framework for frame mode bearer services,” International
Telecommunications Union, Recommendation ITU-T I.122,
1993.
[47] “B-ISDN ATM layer specification,” International Telecommu-
nications Union, Recommendation ITU-T I.361, 1995.
[48] “B-ISDN ATM adaptation layer specification,” International
Telecommunications Union, Recommendation ITU-T I.363.x,
1995–1996.
[49] “B-ISDN signaling ATM adaptation layer (SAAL) overview
description,” International Telecommunications Union, Recom-
mendation ITU-T Q.2100, 1994.
[50] T.-H. Wu, N. Yoshikai, and H. Fujii, “ATM signaling transport
network architectures and analysis,” IEEE Commun. Mag., vol.
33, pp. 90–99, Dec. 1995.
[51] “User network interface (UNI) signaling specification version
3.1,” ATM Forum, Sept. 1994.
[52] “User network interface (UNI) signaling specification version
4.0,” ATM Forum, June 1996.
[53] “Interim inter-switch signaling protocol (IISP) specification,”
ATM Forum, Feb. 1995.
[54] “Private-network node interface (P-NNI) specification version
1.0,” ATM Forum, Mar. 1996.
[55] “Integrated local management interface specification version
4.0,” ATM Forum, Apr. 1996.
[56] “B-ISDN user–network interface,” International Telecommuni-
cations Union, Recommendation ITU-T I.413, 1993.
[57] “BISDN inter carrier interface (B-ICI) specification” (Version
2.0-integrated), ATM Forum, Dec. 1995.
[58] “Functional description of the B-ISDN user part (B-ISUP)
of signalling system no. 7,” International Telecommunications
Union, Recommendation ITU-T Q.2761, 1995.
[59] “B-ISDN operation and management principle and functions,”
International Telecommunications Union, Recommendation
ITU-T I.610, 1996.
[60] M. Decina and V. Trecordi, Eds. “Traffic management and
congestion control for ATM Networks,” IEEE Network, vol.
6, no. 6, Sept. 1992.
[61] D. Gaiti and G. Pujolle, “Performance management issues in
ATM Networks,” IEEE/ACM Trans. Networking, vol. 4, pp.
249–257, Apr. 1996.
[62] C. G. Omidyar and G. Pujolle, Eds., “Flow and congestion
control,” IEEE Commun. Mag., vol. 33, Nov. 1996.
[63] R. Jain, “Congestion control and traffic management in ATM
networks: Recent advances and a survey,” Comput. Networks
ISDN Syst., vol. 28, no. 13, pp. 1724–1737, Oct. 1996.
[64] “Traffic control and congestion control in B-ISDN,” Inter-
national Telecommunications Union, Recommendation ITU-T
I.371, 1996.
[65] “Traffic management specification version 4.0,” ATM Forum,
Apr. 1996.
[66] “DSS no. 2—User–network interface layer 3 specification
for point-to-multipoint call/connection control,” International
Telecommunications Union, Recommendation ITU-T Q.2971,
1995.
[67] “Interface between data terminal equipment (DTE) and data
circuit-terminating equipment (DCE) for terminals operating
in the packet mode and connected to public data networks
by dedicated circuit,” International Telecommunications Union,
Recommendation ITU-T X.25, 1993.
[68] B. J. Vickers, and T. Suda, “Connectionless service for public
ATM networks,” IEEE Commun. Mag., vol. 32, pp. 34–42, Aug.
1994.
[69] “Generic system requirements in support of switched multi-
megabit data service,” Bell Communications Research, Rep.
TA-TSY-000772, issue 3, Oct. 1989.
[70] P. E. Boyer, and D. P. Tranchier, “A reservation principle with
applications to the ATM traffic control,” Comput. Networks
ISDN Syst., vol. 24, no. 4, pp. 321–334, May 1992.
[71] P. Newman, T. Lyon, and G. Minshall, “Flow labeled IP: A
connectionless approach to ATM,” in Proc. IEEE Infocom ‘96,
San Francisco, CA, Mar. 1996, pp. 1251–1260.
[72] “Visual telephone systems and terminal equipment for local area
networks which provide a nonguaranteed quality of service,” In-
ternational Telecommunications Union, Recommendation ITU-
T H.323, 1996.
[73] G. A. Thom, “H.323, the multimedia communications standard
for local area networks,” IEEE Commun. Mag., vol. 33, pp.
52–56, Dec. 1996.
[74] “DAVIC 1.0 specification,” Digital Audio-Visual Council, Dec.
1995.
[75] “DAVIC 1.1 Specification,” Digital Audio-Visual Council, Sept.
1996.
[76] “Narrowband ISDN visual telephone systems and terminal
equipment,” International Telecommunications Union, Recom-
mendation ITU-T H.320, 1995.
[77] “Transmission protocols for multimedia data,” International
Telecommunications Union, Recommendation ITU-T T.120,
1994.
[78] H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson,
“RTP, a transport protocol for real time applications,” Internet
Engineering Task Force, RFC 1889, Jan. 1996.
[79] “Media stream packetization and synchronization for visual
telephone systems on nonguaranteed quality of service LAN’s,”
International Telecommunications Union, Recommendation
ITU-T H.255.0, 1996.
[80] “Control of communications between visual telephone sys-
tems and terminal equipment,” International Telecommunica-
tions Union, Recommendation ITU-T H.245, 1995.
[81] L. Chiariglione, “MPEG and multimedia communications,” in
Proc. Int. Symp. Consumer Electronics ‘96, Beijing, China, Nov.
1996.
[82] “Broadband integrated services digital network (B-ISDN); Dig-
ital subscriber signaling system no. 2 (DSS 2); user–network in-
terface (UNI) layer 3 specification for the basic call/connection
control,” International Telecommunications Union, Recommen-
dation ITU-T Q.2931, 1995.
[83] V. Balabanian, L. Casey, and N. Greene, “Digital storage of
media-command and control protocol applied to ATM,” IEEE
J. Select. Areas Commun., vol. 14, pp. 1101–1172, Aug. 1996.
[84] J. Postel, “Internet control message protocol,” Internet Engi-
neering Task Force, RFC 792, Sept. 1981.
[85] M. R. Macedonia, and D. P. Brutzman, “MBone provides audio
and video across Internet,” IEEE Comput., vol. 27, no. 4, pp.
30–36, Apr. 1994.
[86] D. Perkins, “The point-to-point protocol for the transmission
of multiprotocol datagrams over point-to-point links,” Internet
Engineering Task Force, RFC 1171, July 1990.
[87] J. Romkey, “A nonstandard for transmission of IP datagrams
over serial lines: SLIP,” Internet Engineering Task Force, RFC
1055, June 1988.
[88] J. Postel, “User datagram protocol,” Internet Engineering Task
Force, RFC 768, Aug. 1980.
[89] , “Transmission control protocol,” Internet Engineering
Task Force, RFC 793, Sept. 1981.
[90] , “Simple mail transfer protocol (SMTP),” Internet Engi-
neering Task Force, RFC 821, Aug. 1982.
[91] P. Mockapetris, “Domain names—Concepts and facilities,”
Internet Engineering Task Force, RFC 1034, Nov. 1987.
[92] H. Schulzrinne, “World Wide Web: Whence, whither, what
next?” IEEE Network Mag., vol. 10, pp. 10–17, Mar./Apr. 1996.
[93] T. Berners-Lee, R. Fielding, and H. Nielsen, “Hypertext transfer
protocol—HTTP/1.0,” Internet Engineering Task Force, RFC
1945, May 1996.
[94] T. Berners-Lee and D. Connolly, “Hypertext markup lan-
guage—2.0,” Internet Engineering Task Force, RFC 1866, Nov.
1995.
[95] J. D. Case, M. Fedor, M. L. Schoffstall, and J. R. Davin,
“A simple network management protocol (SNMP),” Internet
Engineering Task Force, RFC 1157, May 1990.
[96] J. Case, K. McCloghrie, M. Rose, and S. Waldbusser, “Introduc-
tion to version 2 of the Internet-standard network management
framework,” Internet Engineering Task Force, RFC 1441, May
1993.
[97] A. Rao and R. Lanphier, “Real time streaming protocol
(RTSP),” Internet Engineering Task Force, draft RFC, Nov.
1996.
[98] S. Shenker. (Sept. 1995). Fundamental design issues
for the future Internet. [Online]. Available: http://ana-
www.lcs.mit.edu/anaweb/pdf-papers/shenker.pdf.
[99] E. Gilligan and R. Nordmark, “Transition mechanisms for IPv6
hosts and routers,” Internet Engineering Task Force, RFC 1933,
Apr. 1996.
[100] C. Lefelhocz, B. Lyles, S. Shenker, and L. Zhang, “Congestion
control for best-effort service: Why we need a new paradigm,”
IEEE Network Mag., vol. 10, no. 1, pp. 10–19, Jan./Feb.
1996.
DECINA AND TRECORDI: INTEGRATED SERVICES AND APPLICATIONS 1913
[101] R. Braden, D. Clark, and S. Shenker, “Integrated services in the
Internet architecture: An overview,” Internet Engineering Task
Force, RFC 1633, June 1994.
[102] Z. Zhang, C. Sanchez, B. Salkewicz, and E. Crawley, “Quality
of service extensions to OSPF or quality of service path first
routing (QOSPF),” Internet Engineering Task Force, draft RFC,
June 1996.
[103] S. Deering, “Host extensions for IP multicasting,” Internet
Engineering Task Force, RFC 1112, Aug. 1989.
[104] S. Deering, C. Partridge, and D. Waitzman, “Distance vector
multicast routing protocol,” Internet Engineering Task Force,
RFC 1075, Nov. 1988.
[105] L. Delgrossi and L. Berger, “Internet STream Protocol Version
2(STII) protocol specification version ST2 ” Internet Engineer-
ing Task Force, RFC 1819, Aug. 1995.
[106] D. Mitzel, D. Estrin, S. Shenker, and L. Zhang, “An architec-
tural comparison of ST-II and RSVP,” Proc. IEEE Infocom ‘94,
Toronto, Canada, June 1994, pp. 716–725.
[107] A. G. Greenberg and N. Madras, “How fair is fair queueing?”
J. ACM, vol. 39, no. 3, pp. 568–598, July 1992.
[108] “Digital subscriber signaling system no. 2 (DSS 2): Connection
modification-peak cell rate modification by the connection
owner,” International Telecommunications Union, Recommen-
dation ITU-T Q.2963.1, 1996.
[109] J. C. Mogul and S. Deering, “Path MTU discovery,” Internet
Engineering Task Force, RFC 1191, Nov. 1990.
[110] M. Laubach, “Classical IP and ARP over ATM,” Internet
Engineering Task Force, RFC 1577, 1994.
[111] J. Luciani, D. Katz, D. Piscitello, and B. Cole, “NBMA next hop
resolution protocol (NHRP),” Internet Engineering Task Force,
draft RFC, July 1996.
[112] G. Armitage, “Support for multicast over UNI 3.0/3.1 based
ATM networks,” Internet Engineering Task Force, RFC 2022,
Nov. 1996.
[113] “LAN emulation over ATM version 1.0,” ATM Forum, Jan.
1995.
[114] R. Callon, J. Jeffords, H. Sandik, and J. Halpern, “Issues and
approaches for integrated PNNI (I-PNNI),” ATM Forum, Tech.
Rep. 96-0355, Apr. 1996.
[115] C. Brown, “MPOA baseline version 1,” ATM Forum, Tech.
Rep. 95-0824R9, Oct. 1996.
[116] L. Berger, “RSVP over ATM: Framework and UNI 3.0/3.1
method,” Internet Engineering Task Force, draft RFC, June
1996.
[117] P. Newman, G. Minshall, T. Lyon, and L. Huston, “IP switching
and gigabit routers,” IEEE Commun. Mag., vol. 35, no. 1, pp.
64–69, Jan. 1997.
[118] Y. Rekhter, B. Davie, D. Katz, E. Rosen, and G. Swallow,
“Tag switching architecture overview,” Internet Engineering
Task Force, RFC 2105, Feb. 1997.
[119] P. Newman, W. Edwards, R. Hinden, E. Hoffman, F. Liaw, and
T. G. Minshall, “Ipsilon’s general switch management protocol
specification version 1.1,” Internet Engineering Task Force,
RFC 1987, Aug. 1996.
[120] P. W. Edwards, R. E. Hoffman, F. Liaw, T. Lyon, and G.
Minshall, “Ipsilon flow management protocol specification for
IPv4 version 1.0,” Internet Engineering Task Force, RFC 1953,
May 1996.
[121] H. Esaki, Y. Katsube, S. Matsukawa, A. Mogi, K. Nagami,
and T. Jinmei. (Nov. 1996). Cell switch router version 1.0.
[Online]. Available FTP: ftp.wide.toshiba.co.jp/pub/csr/white_
paper.ps.gz.
[122] P. Doolan, B. Davie, D. Katz, Y. Rekhter, and E. Rosen, “Tag
distribution protocol,” Internet Engineering Task Force, draft
RFC, May 1997.
[123] D. R. T. Robinson, “The WWW common gateway interface
version 1.1,” Internet Engineering Task Force, draft RFC, Feb.
1996.
[124] “DCOM technical overview,” Microsoft, White Paper, 1996.
[125] CORBA 2.0, “Interoperability: Universal networked objects,”
Object Management Group, OMG TC Doc. 95-3-10, Mar. 1995.
[126] J. K. Ousterhout, Tcl and Tk Toolkit. Reading, MA: Addison-
Wesley, 1994.
[127] T. Lindholm and F. Yellin, The Java Virtual Machine. Read-
ing, MA: Addison —esley, 1996.
[128] J. Hamilton, R. Cattel, and M. Fisher, JDBC Database Access
with Java. Reading, MA: Addison-Wesley, 1997.
[129] Sun Microsystems. Java telephony API. [Online]. Available:
http://java.sun.com/products/jtapi/jtapi1.1/Overview.html.
[130] Sun Microsystems. Java remote method invocation spec-
ification. [Online]. Available: http://java.sun.com/products/
jdk/1.1/docs/guide/rmi/spec/rmiTOC.doc.html.
[131] Sun Microsystems. Mapping IDL to Java. [Online]. Available:
http://java.sun.com/products/jdk/idl/docs/JavaIDLspecification.
html.
[132] T. Magedanz, K. Rothermel, and S. Krause, “Intelligent agents:
An emerging technology for next generation telecommunica-
tions?” in Proc. IEEE Infocom ‘96, San Francisco, CA, Mar.
1996, pp. 464–472.
[133] O. Etzioni and D. S. Weld, “Intelligent agents on the Internet:
Fact, fiction, and forecast,” IEEE Expert Mag., vol. 10, pp.
44–49, Aug. 1995.
[134] A. Limongiello, R. Melen, M. Roccuzzo, V. Trecordi, and J.
Wojtowicz, “ORCHESTRA: An experimental agent-based ser-
vice control architecture for broadband multimedia networks,”
in Proc. IEEE Internet Global ‘96, London, Nov. 1996, pp.
16–21.
[135] D. L. Tennenhouse, and D. J. Wetherall, “Toward an active
network architecture,” Comput. Commun. Rev., vol. 26, no. 2,
Apr. 1996.
[136] Y. Yemini, and S. da Silva, “Toward programmable networks,”
in Proc. IFIP/IEEE Int. Workshop Distributed Systems: Opera-
tions and Management, l’Aquilo, Italy, Oct. 1996.
[137] D. L. Tennenhouse, B. Lampson, S. Eisner Gillet, and J. Steiner
Klein, “Virtual infrastructure: Putting information infrastructure
on the technology curve,” Comput. Networks ISDN Syst., vol.
28, no. 13, pp. 1769–1790, Oct. 1996.
Maurizio Decina (Fellow, IEEE) received the
Dott. Ing. degree in electronics engineering from
the University of Rome, Italy, in 1966.
As Executive Research and Development Di-
rector at Italtel, Milan, he contributed to the
development of the Linea UT digital switching
system. As a consultant for AT&T Bell Labora-
tories, Naperville, IL, he worked in the field of
broad-band electronic and photonic switching.
He currently is a Professor at the Politecnico di
Milano, Italy, and directs the CEFRIEL Center
of Research and Education in Information Technology, a university-
industry consortium of the Politecnico di Milano. He is a Nonexecutive
Member of the Board Of Directors of Telecom Italia. His current research
is on networking infrastructures for broad-band multimedia communica-
tions. From 1972 to 1988, he was involved in the standardization activities
of the International Telecommunication Union and contributed to the
development of speech coding, transmission, signaling, and integrated
services digital network standards. From 1991 to 1997, he was Editor-
in-Chief of European Transactions on Telecommunications.
Prof. Decina was President of the IEEE Communications Society in
1994–1995. He received the 1997 IEEE Award in International Commu-
nication.
Vittorio Trecordi (Member, IEEE) graduated in
electronic engineering from the Politecnico di
Milano, Italy, in 1986. He received the master’s
degree from the CEFRIEL Center of Research
and Education in Information Technology, a
university-industry consortium of the Politec-
nico di Milano, in 1989.
After working with Laben and Pirelli Cavi,
he joined the Research Staff of CEFRIEL in
1991, where he currently is the Technical Di-
rector. He has been leading several research
and development projects in the area of broad-band networking systems,
including prototype development for advanced multimedia applications. In
addition, he currently is involved in projects related to the Italian National
Information Infrastructure and to the deployment of distributed information
systems by the Italian Public Administration.
Mr. Trecordi is a member of the IEEE Communications Society and
the Editorial Board of IEEE NETWORK.
1914 PROCEEDINGS OF THE IEEE, VOL. 85, NO. 12, DECEMBER 1997

