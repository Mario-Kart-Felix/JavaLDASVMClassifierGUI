Pattern Recognition 37 (2004) 1–19
www.elsevier.com/locate/patcog
Review of shape representation and description techniques
Dengsheng Zhang∗, Guojun Lu
Gippsland School of Computing and Info. Tech., Monash University, Churchill, Vic 3842, Australia
Received 1 August 2002; accepted 16 July 2003
Abstract
More and more images have been generated in digital form around the world. There is a growing interest in 1nding images
in large collections or from remote databases. In order to 1nd an image, the image has to be described or represented by
certain features. Shape is an important visual feature of an image. Searching for images using shape features has attracted
much attention. There are many shape representation and description techniques in the literature. In this paper, we classify and
review these important techniques. We examine implementation procedures for each technique and discuss its advantages and
disadvantages. Some recent research results are also included and discussed in this paper. Finally, we identify some promising
techniques for image retrieval according to standard principles.
? 2003 Pattern Recognition Society. Published by Elsevier Ltd. All rights reserved.
Keywords: Shape; Image retrieval; CBIR; Review; Shape descriptor
1. Introduction
As information objects are digitized, more and more dig-
ital images have been generated. There is an urgent demand
for e<ective tools to facilitate the searching of images. The
goal to 1nd a similar image (object) from large collections
or from remotely distributed databases is shared not only by
researchers, educators and professionals, but also by gen-
eral users. Shape is an important visual feature and it is one
of the basic features used to describe image content. How-
ever, shape representation and description is a di>cult task.
This is because when a 3-D real world object is projected
onto a 2-D image plane, one dimension of object informa-
tion is lost. As a result, the shape extracted from the image
only partially represents the projected object. To make the
problem even more complex, shape is often corrupted with
noise, defects, arbitrary distortion and occlusion.
Shape representation generally looks for e<ective and per-
ceptually important shape features based on either shape
∗ Corresponding author. Tel.: +61-3-99026772;
fax: +61-3-99026842.
E-mail addresses: dengsheng.zhang@infotech.monash.edu.au
(D. Zhang), guojun.lu@infotech.monash.edu.au (G. Lu).
boundary information or boundary plus interior content.
Various features have been designed, including shape
signature, signature histogram, shape invariants,moments,
curvature, shape context, shape matrix, spectral features
etc. These various shape features are often evaluated by how
accurately they allow one to retrieve similar shapes from a
designated database. However, it is not su>cient to evaluate
a representation technique only by the e<ectiveness of the
features employed. This is because the evaluation ignores
other important characteristics of a shape representation
technique. For example, in the new multimedia applica-
tion content-based image retrieval (CBIR), e>ciency is
envisaged as equally important as e<ectiveness due to the
online retrieval demand. In fact, MPEG-7 has set several
principles to measure a shape descriptor, that is, good re-
trieval accuracy, compact features, general application, low
computation complexity, robust retrieval performance and
hierarchical coarse to 1ne representation [1].
Good retrieval accuracy requires a shape descriptor be
able to e<ectively 1nd perceptually similar shapes from
a database. Perceptually similar shapes usually means ro-
tated, translated, scaled shapes and a>nely transformed
shapes. The descriptor should also be able to 1nd noise
a<ected shapes, variously distorted shapes and defective
0031-3203/$30.00 ? 2003 Pattern Recognition Society. Published by Elsevier Ltd. All rights reserved.
doi:10.1016/j.patcog.2003.07.008
2 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
Shape 
Contour-based Region-based 
Structural Global
Area 
Euler Number 
Eccentricity
Geometric Moments
Zernike Moments  
Pseudo-Zernike Moments 
Legendre Moments 
Generic Fourier Descriptor
Grid Method 
Shape Matrix 
Perimeter 
Compactness
Eccentricity
Shape Signature 
Hausdoff Distance 
Fourier Descriptors 
Wavelet Descriptors 
Scale Space 
Autoregressive 
Elastic Matching 
Chain Code 
Polygon 
B-spline 
Invariants 
Convex Hull
Media Axis 
Core 
StructuralGlobal
Fig. 1. Classi1cation of shape representation and description techniques.
shapes, which are tolerated by human beings when compar-
ing shapes. This is known as the robustness requirement.
Compact features are desirable for indexing and online
retrieval. If a shape descriptor has a hierarchical coarse
to 1ne representation characteristic, it can achieve a high
level of matching e>ciency. This is because shapes can be
matched at coarse level to 1rst eliminate large amount dis-
similar shapes, and at 1ner level, shapes can be matched in
details. A desirable shape descriptor should be application
independent rather than only performing well for certain
type of shapes. Low computation complexity is an impor-
tant characteristic of a desirable shape descriptor. For a
shape descriptor, low computation complexity means min-
imizing any uncertain or ad hoc factors that are involved
in the derivation processes. The fewer the uncertain factors
involved in the computation processes, the more robust
the shape descriptor becomes. In essence, low computation
complexity means clarity and stability.
Many shape representation and description techniques
have been developed in the past. A number of new tech-
niques have been proposed in recent years. There are also
many new shape applications in recent years. In this paper,
we review and examine important shape representation and
description techniques, and indicate their pros and cons. The
retrieval performance and comparison results will be dis-
cussed where available. Finally, promising shape descriptors
are identi1ed according to the principles mentioned above.
The rest of the paper is organized as follows. In Section 2, the
classi1cation of shape representation and description tech-
niques are given. Section 3 discusses contour-based shape
representation techniques. Region-based shape representa-
tion techniques are discussed in Section 4. The paper is con-
cluded in Section 5.
2. Classication of shape representation and description
techniques
Shape representation and description techniques can
be generally classi1ed into two class of methods:
contour-based methods and region-based methods. The
classi1cation is based on whether shape features are ex-
tracted from the contour only or are extracted from the
whole shape region. Under each class, the di<erent methods
are further divided into structural approaches and global
approaches. This sub-class is based on whether the shape is
represented as a whole or represented by segments/sections
(primitives). These approaches can be further distinguished
into space domain and transform domain, based on whether
the shape features are derived from the spatial domain or
from the transformed domain. The whole hierarchy of the
classi1cation is shown in Fig. 1. In the following sections,
these techniques are discussed in details.
3. Contour-based shape representation and description
techniques
Contour shape techniques only exploit shape bound-
ary information. There are generally two types of very
di<erent approaches for contour shape modeling: continu-
ous approach (global) and discrete approach (structural).
Continuous approaches do not divide shape into sub-parts,
usually a feature vector derived from the integral boundary
is used to describe the shape. The measure of shape similar-
ity is usually a metric distance between the acquired feature
vectors. Discrete approaches break the shape boundary into
segments, called primitives using a particular criterion. The
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 3
Fig. 2. Shape eccentricity and circularity.
1nal representation is usually a string or a graph (or tree),
the similarity measure is done by string matching or graph
matching. In the following we discuss these two types of
approaches.
3.1. Global methods
Global contour shape representation techniques usu-
ally compute a multi-dimensional numeric feature vector
from the shape boundary information. The matching be-
tween shapes is a straightforward process, which is usually
conducted by using a metric distance, such as Euclidean
distance or city block distance. Point (or point feature)
based matching is also used in particular applications.
3.1.1. Simple shape descriptors
Common simple global descriptors are area, circularity
(perimeter2=area), eccentricity (length of major axis/length
of minor axis), major axis orientation, and bending energy
[2]. These simple global descriptors usually can only dis-
criminate shapes with large di<erences, therefore, they are
usually used as 1lters to eliminate false hits or combined
with other shape descriptors to discriminate shapes. They
are not suitable to be standalone shape descriptors. For ex-
ample, the eccentricity of the shape in Fig. 2(a) is close to
1 (a= b), it does not correctly describe the shape, because
perceptually it is an elongated shape. In this case, circular-
ity is a better descriptor. The two shapes in Fig. 2(b) and
(c) have the same circularity (a = 2b), however, they are
very di<erent shapes. In this case, eccentricity is a better
descriptor.
Other simple global contour shape descriptors have been
proposed by Peura and Iivarinen [3]. These descriptors in-
clude convexity, ratio of principle axis, circular variance
and elliptic variance.
3.1.2. Correspondence-based shape matching
Correspondence-based shape matching works in the space
domain. In contrast to feature-based shape representation
techniques, correspondence-based shape matching measures
similarity between shapes using point-to-point matching. In
other words, every point on the shape is treated as a feature
point. The matching is conducted on 2-D space.
Hausdor9 distance is a classical correspondence-based
shape matching method, it has often been used to locate
objects in an image and measure similarity between shapes
[4–9]. Given two shapes represented by two set of points:
A = {a1; a2; : : : ; ap} and B = {b1; b2; : : : ; bq}, the Hausdor<
distance between A and B is de1ned as
H (A; B) = max(h(A; B); h(B; A)}; (3.1)
where
h(A; B) = max
a∈A
min
b∈B
‖a − b‖ (3.2)
and ‖ · ‖ is the underlying norm on the points of A and B,
usually Euclidean distance. However, this distance measure
is too sensitive to noise or outlier. A single point in A that
is far from anything in B will cause h(A; B) to be large.
Therefore, a modi1ed Hausdor< distance is introduced by
Rucklidge [8]:
hf(A; B) = ftha∈Amin
b∈B
‖a− b‖; (3.3)
where fthx∈X g(x) denotes the f
th quantile value of g(x) over
set X , for some value of f between 0 and 1. For example,
the 1th quantile value is the maximum and the 1/2th quan-
tile value is the median. In practice, f is usually set to be
1/2 [4]. The advantage of shape matching using Hausdor<
distance is that shape can be matched partially. However,
the Hausdor< distance is not translation, scale and rotation
invariant. In order to match a model shape with a shape in
the image, the model shape has to be overlapped on the im-
age in di<erent positions, di<erent orientations and di<erent
scales. As the result, the matching is prohibitively expensive.
Chetverikov and Kenokh propose an e>cient matching by
chamfer distance transform [4]. This reduces a translation
invariant matching from O(N 2) of computations to O(N ),
where N is the number of image points. Traditional Haus-
dor< shape matching only allows similarity matching, that
is, shape matching allowing translation, rotation and scal-
ing changes. Rucklidge extends Hausdor< distance match-
ing into a>ne invariant matching [8]. For this purpose, a
set of a>ne models are generated from the model shape.
Since the space of a>ne transformations from the model
shape is large, an e>cient matching scheme is introduced
by only examining a small part of the space of the a>ne
transformations. Despite the e>ciency e<ort, the matching
load is still unacceptably high. The matching of even a small
model shape with a normal image can take half an hour on
an eight-processor Sun SPARCServer 1000 [8].
Shape matching using Hausdor< distance is sensitive to
noise and slight variations. Recently, Belongie et al. pro-
pose a correspondence-based shape matching method using
4 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
Fig. 3. Shape context. (a) a character shape; (b) edge image of (a); (c) a point p on shape (a) and all the vectors started from p; (d) the
log-polar histogram of the vectors in (c), the histogram is the context of point p; (e) the context map of shape (a), each row of the context
map is the Mattened histogram of each point context, the number of rows is the number of sampled points. (reprinted from [10]).
Fig. 4. An apple shape and its centroid distance signature.
shape contexts [10]. Shape matching using shape contexts
is an improvement to traditional Hausdor< distance based
methods. It extracts a global feature, called shape context,
for each corresponding point. The matching between cor-
responding points is then the matching between the con-
text features. To extract the shape context at a point p,
the vectors of p to all the other boundary points are found
(Fig. 3(c)). The length r and orientation  of the vectors are
quantized to create a histogram map which is used to repre-
sent the point p (Fig. 3(d)). The histogram of each point is
Mattened and concatenated to form the context of the shape
(Fig. 3(e)). To make the histogram more sensitive to posi-
tions of nearby points than to those of points farther away,
these vectors are put into log-polar space. For example, in
Fig. 3 [10], (a) is a character shape, (b) is the edge image of
(a), (c) is the set of vectors at point p, (d) is the histogram
or context extracted from the vectors, (e) is the context of
the shape.
The matching of two shapes is done by matching two
context maps of the shapes, which is a matrix-based match-
ing. It minimizes the total cost of matching between one
context matrix and all the permutations of another con-
text matrix. In order to reduce the matching overhead,
it samples the boundary at a number of points and uses
the shortest augmenting path algorithm for the matrix
matching.
3.1.3. Shape signature
A Shape signature represents a shape by a one dimen-
sional function derived from shape boundary points. Many
shape signatures exist, they include centroidal pro:le,
complex coordinates, centroid distance (Fig. 4), tangent
angle, cumulative angle, curvature, area and chord-length
[11–13]. Shape signatures are usually normalized into
being translation and scale invariant. In order to compensate
for orientation changes, shift matching is needed to 1nd the
best matching between two shapes. Most of the signature
matching is normalized to shift matching in 1-D space,
however, some signature matching requires shift matching
in 2-D space, such as the matching of centroidal pro:les
[11]. In either case, the matching cost is too high for online
retrieval.
In addition to the high matching cost, shape signatures are
sensitive to noise, and slight changes in the boundary can
cause large errors in matching. Therefore, it is undesirable
to directly describe shape using a shape signature. Further
processing is necessary to increase its robustness and reduce
the matching load. For example, a shape signature can be
simpli1ed by quantizing the signature into a signature his-
togram, which is rotationally invariant.
3.1.4. Boundary moments
Boundary moments can be used to reduce the dimensions
of the boundary representation. Assuming the shape bound-
ary has been represented as a shape signature z(i), the rth
moment mr and central moment r can be estimated as [14]
mr =
1
N
N∑
i=1
[z(i)]r and r =
1
N
N∑
i=1
[z(i)− m1]r ;
(3.4)
where N is the number of boundary points. The normalized
moments Nmr=mr=(2)r=2 and Nr=r=(2)r=2 are invariant to
shape translation, rotation and scaling. Less noise-sensitive
shape descriptors can be obtained from F1 = (2)1=2=m1,
F2 = 3=(2)3=2, and F3 = 4=(2)2.
The method in [15] treats the amplitude of the shape
signature function z(i) as a random variable v and cre-
ates a histogram p(vi) from z(i). Then, the rth moment is
obtained by
r =
K∑
i=1
(vi − m)rp(vi) and m=
K∑
i=1
v1p(vi): (3.5)
The advantage of boundary moment descriptors is that it
is easy to implement. However, it is di>cult to associate
higher order moments with physical interpretation.
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 5
3.1.5. Elastic matching
Bimbo and Pala have proposed the use of elastic match-
ing for shape based image retrieval [16]. According to this
approach, a deformed template is generated as the sum of
the original template (s) and a warping deformation (s)
’(s) = (s) + (s); (3.6)
where =(x; y) is a second order spline and =(x; y) is
the deformation. The similarity between the original shape
of the template and the shape of the object in the image is
measured by minimizing a compound function:
F = S + B +M
= !
∫ 1
0
[(
dx
ds
)2
+
(
dy
ds
)2]
ds
+ "
∫ 1
0
[(
d2x
ds
)2
+
(
d2y
ds
)2]
ds
+
∫ 1
0
IE(’(s)) ds (3.7)
where IE is the object image, S and B are called strain en-
ergy and bend energy respectively, while M measures the
degree of overlapping between the deformed template and
the object in the image. The three quantitative measures
are not su>cient to measure the similarity between shapes,
therefore shape complexity N (measured as the number of
0’s of the curvature function associated with the templates
contour) and correlation C (between the curvature function
associated with the template and that associated with the
deformed one) are also taken into account in the similar-
ity measure. Finally, the 1ve parameters (S; B;M; N; C) are
classi1ed by a back-propagation neural network.
This approach is not practical for online image retrieval,
mainly because of the computation and matching complex-
ity. The authors compared the computation complexity of
this feature extraction with QBIC [17] and QVE [18], and
demonstrated that the number of CPU operations is less than
that of QBIC and QVE. However, a number of steps of the
deformation process is needed to complete a matching. This
makes the matching extremely expensive, although the as-
pect ratio checking and composite 1ltering (based on rela-
tionships matching for multiple templates) are used in the
initial stage and M are used for 1ltering in the deformation
process. The aspect ratio used for the 1ltering can cause false
rejection as will be indicated in Section 3.1.1. The shape
description is not rotationally invariant. Also, the warping
criteria used for the template deformation are not given. The
examples of warping shown in that paper indicate the warp-
ing is arbitrary or application dependent.
3.1.6. Stochastic method
Time-series models and especially autoregressive (AR)
modeling has been used for calculating shape descriptors
[19–25]. Methods in this class are based on the stochastic
modeling of a 1-D function f obtained from the shape as
described in Section 3.1.3. A linear autoregressive model
expresses a value of a function as the linear combination of a
certain number of preceding values. Speci1cally, each func-
tion value in the sequence has some correlation with previ-
ous function values and can therefore be predicted through
a number of, say, M observations of previous function val-
ues. The autoregressive model is a simple predictor of the
current radius by a linear combination of M previous radii
plus a constant term and an error term:
ft = ! +
m∑
j=1
jft−j +
√
"!t; (3.8)
where j are the AR-model coe>cients, m is the model or-
der, i.e., tells howmany preceding function values the model
uses.
√
"!t is the current error term or residual, reMecting
the accuracy of the prediction. ! is proportional to the mean
of function values. The parameters {!; 1; : : : ; m; "} are es-
timated by using the least square (LS) criterion [19,21,23].
The estimated j are translation, rotation and scale invari-
ant. Parameters ! and " are not scale invariant, but the quo-
tient !=
√
", which reMects signal-to-noise ratio of the bound-
ary, is regarded as a invariant. Therefore, the feature vector
[1; : : : ; m; !=
√
B]T is used as the shape descriptor.
The disadvantage of the AR method is that in the case of
complex boundaries, a small number of AR parameters is
not su>cient for an adequate description. The choice of m is
a complicated problem and is usually decided empirically.
Besides, the physical meaning associated with each j is not
clear.
3.1.7. Scale space method
The problem of noise sensitivity and boundary varia-
tions in most spatial domain shape methods inspires the
use of scale space analysis. The scale space representation
of a shape is created by tracking the position of inMection
points in a shape boundary 1ltered by low-pass Gaussian 1l-
ters of variable widths. As the width (() of Gaussian 1lter
increases, insigni1cant inMections are eliminated from the
boundary and the shape becomes smoother (Fig. 5(a)). The
inMection points that remain present in the representation
are expected to be ‘signi1cant’ object characteristics. The
result of this smoothing process is an interval tree, called
‘1ngerprint’, consisting of inMection points (Fig. 5(b)). The
di>culty with this type of approach is the interpretation of
the 1nal result.
Asada and Brady 1rst attempted to interpret the interval
tree acquired from scale space [26,27]. Their interval trees
are acquired from both Gaussian 1lter and second deriva-
tives of Gaussian 1lter. The interpretation of the interval tree
is based on detecting the peaks of the tree branches from
higher scales to lower scales (Fig. 5(c)). Since the shapes
under analysis are from hardware application, it is possible
to interpret higher level primitive events from the detected
peaks. In this application, the primitive events are de1ned
as corner, smooth joint, end, crank, bump/dent.
6 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
Fig. 5. (a) The evolution of shape boundary as scale ( increases
(reprinted from [30]). From left to right: (=1; 4; 7; 10; 12; 14. The
points marked on the boundary are the inMection points; (b) the
interval tree (or curvature scale space contour map) resulted from
the smoothing process; (c) the peaks of the interval tree.
Mokhtarian and Mackworth [28] adopted Asada and
Brady’s interpretation method and extended it to shoreline
registration. They call the acquired scale space signature as
a curvature scale space (CSS) contour image. The peaks
of individual branches in the CSS are detected. However,
instead of interpreting these peaks as higher level primi-
tive events, they are used for matching two curves under
analysis. The matching proves to be very complex and
expensive. It tries to 1nd the best match between the con-
tour branches in the two interval trees. For each individual
matching, the template contour branch has to be scaled and
shifted to accommodate scale and translation invariance.
During each individual matching, the template curve is also
a>nely transformed to match with the model curve. The
method is later extended for shape retrieval [29–32]. Since
the old matching algorithm is too complex for retrieval, the
new method developed a matching algorithm based on the
two highest peaks in each of the two contour images. All
the images under analysis are also scaled into the same size
(same number of boundary points) prior to applying scale
space. However, the four essential empirical parameters
involved in the feature extraction and matching processes
make this algorithm unstable [33].
Daoudi and Matusiak interpret the interval tree obtained
from scale space as a geodesic topology [34]. The match-
ing between two shapes now turns into matching between
two scale space images using the geodesic distance measure
suggested by Eberly [35]. The matching is actually a point
to point 2-D matching between the two scale space images,
this can be impractical if shapes in the database are com-
plex, resulting in very high interval tree.
3.1.8. Spectral transform
Spectral descriptors overcome the problem of noise sen-
sitivity and boundary variations by analyzing shape in spec-
tral domain. Spectral descriptors include Fourier descriptor
(FD) and wavelet descriptor (WD), they are derived from
spectral transforms on 1-D shape signatures described in
Section 3.1.3.
One of the most widely used shape description methods
is FD [12,19,36–52]. Conventional FD methods only deal
with closed curve, however, Lin et al. and Mitchell et al.
used FD to describe partial shapes [43,47]. Arbter et al. in-
troduced the a>ne-invariant FD to take into consideration
of a>ne shape description [36,37]. Granlund introduced the
Fourier invariants which describe the rotational symmetry
of shapes [40]. Rauber proposed a UNL FD (named after
Universidade Nova de Lisboa, Portugal) which is able to
describe disjointed or articulated contour shape [49]. The
UNL FD is acquired by applying 2-D Fourier transform
on the UNL transformed shape image. Even though a fea-
ture selection process is followed, the dimension of the fea-
ture vector acquired this way is very high. Richard and
Hemami introduced a complex distance measurement, called
the true distance measurement, for measuring the similarity
between two set of FDs [50]. Since the true distance mea-
surement requires two Fourier transforms for each match-
ing, it involves 15 times more computation than a normal
distance measurement. Rui et al. [51] proposed a distance
measurement to classify similarity transformed characters
using Fourier transformed coe>cients. This distance mea-
surement is the weighting sum of the variance of magni-
tude ratios and the variance of phase di<erence between two
sets of Fourier coe>cients. The Fourier coe>cients are de-
rived from Fourier reconstructed shape boundary rather than
from original boundary. This is not di<erent from FD de-
rived from a smoothed boundary. Eichmann et al. proposed
the use of a short-time Fourier descriptor (SFD) for shape
description [39], however, Zhang and Lu have found that
SFD is outperformed by conventional FD methods in shape
retrieval [53]. This is because SFD cannot capture global
shape features although it can capture local shape features
more accurately.
Recently, several researchers have proposed the use of
WD for shape description [54–56]. Although WD has the
advantage over FD in that it is of multi-resolution in both
spatial space and spectral space, the increase of spatial res-
olution will certainly sacri1ce frequency resolution. For ex-
ample, in [55], only wavelet coe>cients of the few low
frequencies are used to represent shape. Most importantly,
the complicated matching scheme of wavelet representation
makes it impractical for online shape retrieval. In [56], the
similarity measurement algorithm needs 2L × N all-level
shift matching, where L is the number of levels of resolu-
tion of the wavelet transform and N is the number of nor-
malized boundary points. In [55], the number of matchings
for similarity measurement is not only large but also de-
pendent on the complexity of the shape, since the similarity
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 7
measurement is the all level shift matching of all the
zero-crossing points of the wavelet approximation of the
shape. Apart from the matching complexity, the dyadic
wavelets used can rarely associate the feature segments
on the shape boundary. Therefore, WD su<ers the same
drawback in primitive determination as that in the structural
approach, which will be discussed in Section 3.2.
FD is backed by the well-developed and well-understood
Fourier theory. The advantages of FD over many other shape
descriptors are (i) simple to compute; (ii) each descriptor
has speci1c physical meaning; (iii) simple to do normaliza-
tion, making shape matching a simple task; (iv) captures
both global and local features. With su>cient features for
selection, FD overcomes the weak discrimination ability of
those simple global descriptors. FD also overcomes the noise
sensitivity and di>cult normalization in the shape signature
representations.
Most FD based works are dedicated to character recogni-
tion and object classi1cation. The complex coordinates and
the cumulative angle function are dominantly used in these
works to derive FD. However, Zhang and Lu [13,57] have
found that for general shapes, the centroid distance function
is the most desirable shape signature to derive FD. They
have also found that 10 FD features are su>cient to repre-
sent shape, this is a signi1cant reduction in dimensions of
FD compared with 60 FD features usually used in shape
representation. Their results show that FD outperforms CSS
method in terms of retrieval performance and robustness.
3.1.9. Discussions
Global contour shape techniques take the whole shape
contour as the shape representation. The matching between
shapes can either be in space domain or in feature domain.
For shape description, there is always a trade-o< between
accuracy and e>ciency. On the one hand, shape should be
described as accurately as possible; on the other hand, a
shape description should be as compact as possible to sim-
plify indexing and retrieval. E>cient oSine feature extrac-
tion is also desirable. Simple global shape descriptors are
compact, however, they are very inaccurate shape descrip-
tors. They need to be combined with other shape descriptors
to create practical shape descriptors. Correspondence based
shape matching and signature based matching are not suit-
able for online shape matching, because they all involve the
2-D matching of two shapes. However, if partial matching
is a requirement, methods based on Hausdor< distance can
be a choice. Elastic matching and wavelet methods are com-
plex to implement and match. Autoregressive (AR) methods
involve matrix operations which are expensive and it is dif-
1cult to associate AR descriptors with any physical mean-
ing. The implementation and matching of CSS are com-
plex. However, the perceptually meaningful and compact
features are appealing for shape description and online re-
trieval. Fourier descriptor is simple to implement, and in-
volves less computation by either using fast Fourier trans-
form (FFT) or using truncated Fourier transform computa-
tion. The resulting descriptor is also compact and the match-
ing is very simple. Compared with CSS, FD is simpler to
compute and more robust. Boundary moment descriptor is
similar to Fourier descriptor, and is easy to acquire. How-
ever, unlike Fourier descriptor, only the few lower order
moment descriptors have physical interpretation.
3.2. Structural methods
Another member in the shape analysis family is the struc-
tural shape representation. With the structural approach,
shapes are broken down into boundary segments called
primitives. Structural methods di<er in the selection of
primitives and the organization of the primitives for shape
representation. Common methods of boundary decompo-
sition are based on polygonal approximation, curvature
decomposition and curve 1tting [58]. The result is encoded
into a string of the general form:
S = s1; s2; : : : ; sn; (3.9)
where si may be an element of a chain code, a side of a
polygon, a quadratic arc, a spline, etc. si may contain a
number of attributes like length, average curvature, maximal
curvature, bending energy, orientation etc. The string can
be directly used for description or can be used as input to a
higher level syntactic analyzer. In the following we describe
methods of shape representation and description using S.
3.2.1. Chain code representation
Chain code describes an object by a sequence of unit-size
line segments with a given orientation. The method was in-
troduced in 1961 by Freeman [59] who described a method
permitting the encoding of arbitrary geometric con1gura-
tions. In this approach, an arbitrary curve is represented by
a sequence of small vectors of unit length and a limited set
of possible directions, thus termed the unit-vector method.
In the implementation, a digital boundary of an image is
superimposed with a grid, the boundary points are approx-
imated to the nearest grid point, then a sampled image is
obtained. From a selected starting point, a chain code can
be generated by using 4-directional or 8-directional chain
code. N -directional (N ¿ 8 and N = 2k) chain code is also
possible, it is called general chain code [60].
If the chain code is used for matching it must be inde-
pendent of the choice of the 1rst boundary pixel in the se-
quence. One possibility for normalizing the chain code is
to 1nd the pixel in the border sequence which results in the
minimum integer number if the description chain is inter-
preted as a base four number—that pixel is then used as
the starting pixel. Alternatively, the boundary can be rep-
resented by the di9erences in the successive directions in
the chain code instead of representing the boundary by rel-
ative directions. This can be computed by subtracting each
element of the chain code from the previous one and tak-
ing the result modulo n, where n is the connectivity. After
8 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
these operations, a rotationally invariant chain code is ob-
tained by a cyclic permutation which produces the smallest
number. Such a normalized di<erential chain code is called
the shape number. Chain code derived in this way is not
scale invariant. Although it is possible to scale two similar
shapes into the same size, the resulted shape numbers can
have a di<erent number of digits, making it impractical to
do matching between two shapes.
The chain code usually has high dimensions and is sen-
sitive to noise. It is often used as an input to a higher level
analysis. For example, it can be used for polygon approx-
imation and for 1nding boundary curvature which is a im-
portant perceptual feature.
Iivarinen and Visa derive a chain code histogram (CCH)
for object recognition [61]. The CCH is computed as p(k)=
nk=n, where nk is the number of chain code values k in a
chain code and n is the number of links in a chain code. The
CCH reMects the probabilities of di<erent directions present
in a contour. The CHH is translation and scale invariant,
however, it is only invariant to a rotation of 90◦. Therefore,
the normalized CHH (NCHH) is proposed. It is de1ned as
p(k)=lknk =l, where nk is the same as in CHH, lk is the length
of the direction k and l is the length of the contour. Although
CHH reduces the dimensions of chain code representation,
it does not solve the noise sensitivity problem.
3.2.2. Polygon decomposition
In [62,63], shape boundary is broken down into line seg-
ments by polygon approximation. The polygon vertices are
used as primitives. The feature for each primitive is ex-
pressed as a four element string which consists of internal
angle, distance from the next vertex, and its x and y coordi-
nates. Obviously the feature is not translation, scale and rota-
tion invariant. The similarity between any two shapes is the
editing distance of the two feature strings. For e>ciency and
robustness reason, only a 1xed number (5) of sharpest ver-
tices are selected from each shape. Therefore, a collection of
features belonging to all models in the database is generated
for the feature index. The features are then organized into
a binary tree or m-nary tree. The matching between shapes
involves two steps, that is, feature-by-feature matching in
the 1rst step and model-by-model matching in the second
step. In the 1rst step, given a data feature of a query shape,
the feature is searched through the index tree, if a particular
model feature in the database is found to be similar to the
data feature, the list of shapes associated with the model fea-
ture are retrieved. In the second step, the matching between
the query shape and a retrieved model is matched based on
the editing distance between the two string of primitives.
In [64], Mehrotra and Gary represented a shape as a chain
of vectors. For a shape, a series of interest points are detected
from the polygonal approximation of the shape boundary.
Given a shape with n interest points, a pair is chosen to form
a basis vector. The basis vector is normalized as a unit vec-
tor along the x-axis. All other interest points of the shape
y
(x3, y3) (x4, y4)
(x5, y5)
Basis pair (0, 0) (1, 0) x
(a) (b)
Fig. 6. Chain vectors: (a) original boundary description; (b) nor-
malized boundary description (reproduced from [64]).
are transformed to this coordinate system. The shape is then
represented by the coordinate set (x1; y1); : : : ; (xn; yn), where
(xi; yi) are the normalized coordinates of the ith interest
point (Fig. 6). Four transform parameters are also added to
the coordinate set to create the 1nal feature vector, the four
parameters are S, Tx, Ty, , which represent the scale, trans-
lation and angle of the basis vector. To achieve start point
independence, all vectors formed by connecting two adja-
cent points are used as basis vectors in turn. The similarity
between two features is measured by the Euclidean distance.
Boundary feature vectors are organized into a k dimensional
B-tree or k dB-tree. During the query, for a given query fea-
ture of the query shape, the index is searched, and a list of
shapes with similar feature to the query feature is produced.
The matching of one or more features does not guarantee
a full shape match. Consequently, once shapes with similar
features are retrieved, shape similarity is checked by over-
laying each retrieved shape on the query shape and evaluat-
ing the amount of overlap between them.
All the above three methods approximated a shape as
a polygon, and the shape is represented as string of line
segments which are then organized into a tree data structure.
While it is expected to work well for man made objects, its
application for natural objects is impractical.
3.2.3. Smooth curve decomposition
Berretti et al. [65] extended the model used in [62] for
general shape retrieval. In [65], the curvature zero-crossing
points from a Gaussian smoothed boundary are used to ob-
tain primitives, called tokens (Fig. 7). The feature for each
token is its maximum curvature and its orientation, and the
similarity between two tokens is measured by the weighted
Euclidean distance. Since the feature includes curve orien-
tation, it is not rotation invariant. The authors addressed the
problem, but did not solve it. An M-tree is exploited to index
the tokens into the feature database. Given a query shape,
the retrieval of similar shapes from the database takes two
steps. The 1rst step is token retrieval. For all the N tokens on
the query shape, the similar tokens are found by traversing
the index tree N times. The set of retrieved tokens having
the same shape identi1er form a potential similar shape. The
second step is to match the query shape and the potential
similar shape using a model-by-model matching algorithm
which is the best match between tokens of the two shapes
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 9
Fig. 7. A horse shape has been divided into di<erent ‘tokens’. The
numbers corresponding to each token are the curvature and the
orientation of the token (reprinted from [65]).
and involves O(MN ) operations (M and N are the numbers
of tokens of two matching shapes, respectively). Matching
of tokens in both steps involves thresholding which is ad
hoc or empirical. Quantitative retrieval performance (preci-
sion and recall) and retrieval e>ciency are reported based
on a shape database extracted from classical painted images.
Since the tree is traversed a number of times in the shape
matching, it is not clear whether the indexing is better than
model-by-model indexing. Only matching performance us-
ing di<erent trees is reported. The matching e>ciency also
depends on the number of tokens for each shape, and on the
scale used in the smoothing stage.
3.2.4. Scale space method
In [62–65], the matching is a feature-by-feature match-
ing followed by model-by-model matching. Dudek and
Tsotsos [66] analyzed shape in scale space and employ
a model-by-model matching scheme. In this approach,
shape primitives are 1rst obtained from a curvature-tuned
smoothing technique. A segment descriptor consists of the
segment’s length, ordinal position, and curvature tuning
value extracted from each primitive. A string of segment
descriptors is then created to describe the shape. For two
shapes A and B represented with their string descriptors
A=(sA1 ; s
A
2 : : : ; s
A
N ) and B=(s
B
1 ; s
B
2 ; : : : ; s
B
M ), a model-by-model
matching using dynamic programming is exploited to ob-
tain the similarity score of the two shapes. To increase
robustness and to save matching computation, the shape
features are put into a curvature scale space so that shapes
can be matched in di<erent scales. However, due to the
inclusion of length in the segment descriptors, the descrip-
tors are not scale invariant. Only a small number (50) of
shapes from plant leaves were tested for the algorithm, and
no recognition or retrieval rate has been reported. The three
ad hoc or empirical parameters which are essential in the
algorithm make the algorithm application limited.
Fig. 8. Structural description of chromosome shape (reprinted from
[14]).
3.2.5. Syntactic analysis
Syntactic analysis is inspired by the phenomenon that
composition of a natural scene is an analog to the com-
position of a language, that is, sentences are built up from
phrases, phrases are built up from words and words are
built up from alphabets, etc. [67]. In syntactic methods,
shape is represented by a set of prede:ned primitives. The
set of prede1ned primitives is called the codebook and the
primitives are called codewords. For example, given the
codewords in the right of Fig. 8, the chromosome shape in
the left of Fig. 8 can be represented as a grammatical string
of S:
S = dbabcbabdbabcbab: (3.10)
The matching between shapes can use string matching by
1nding the minimal number of edit operations to convert
one string into another.
A more general method is to formulate the representation
as a string grammar. Each primitive is interpreted as a al-
phabet of some grammar, where a grammar is a set of rules
of syntax that govern the generation of sentences formed
from symbols of the alphabet. The set of sentences gener-
ated by a grammar G is called its language and is denoted
as L(G). Here, sentences are strings of symbols (which in
turn represent patterns), and languages correspond to pattern
class. After grammars have been established, the matching
is straightforward. For a sentence representing an unknown
shape, the task is to decide in which language the shape
represents a valid sentence.
Syntactic shape analysis is based on the theory of formal
language [68]. It attempts to simulate the structural and hi-
erarchical nature of the human vision system. However, it
is not practical in general applications due to the fact that it
is not possible to infer a pattern of grammar which can gen-
erate only the valid patterns. In addition, this method needs
a priori knowledge for the database in order to de1ne code-
words or alphabets. The knowledge is usually unavailable
for general applications.
10 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
The di<erence between the syntactic method and the
methods discussed in Sections 3.2.1–3.2.4 is that the prim-
itives in the former are prede1ned and the primitives in
the latter are adaptive to the shape database. The prede1-
nition approach is convenient if, in particular application,
shape boundary pro1les are known in general. However,
the alphabet set will be application dependent. The adaptive
approach is applicable to general applications, however, it
is di>cult to determine the types of primitives without the
knowledge of the database.
3.2.6. Shape invariants
Shape invariants can also be viewed as a structural ap-
proach, because they also represent shapes based on bound-
ary primitives. Designers of shape invariants argue that al-
though most of other shape representation techniques are
invariant under similarity transformations (rotation, transla-
tion and scaling), they depend on viewpoint [14]. Therefore,
techniques using invariants attempt to represent properties
of the boundary con1gurations which remain unchanged un-
der an appropriate class of transformations.
Generally, invariant theory is based on a collection of
transformations that can be composed and inverted. In vi-
sion, the projective group of transformations is considered
which contains all the perspectives as a subset. The group
approach provides a mathematical tool for generating in-
variants. The change of coordinates due to the projective
transformation is generalized as a group action. Lie group
theory is especially useful in designing new invariants.
Invariant is usually named according to the number of
features used to de1ne it. An order one invariant is de1ned
on a single feature, and is called an unary invariant; an order
two invariant is de1ned between two features, and is called
a binary invariant; similarly, ternary invariant, quaternary
invariant and so on. The total number of higher order invari-
ants that can exist under a certain group of transformations
is larger than that of lower order ones [69].
Common invariants include (i) geometric invariants such
as cross-ratio, length ratio, distance ratio, angle, area [69],
triangle [70], invariants from coplanar points [14]; (ii) al-
gebraic invariants such as determinant, eigenvalues [71],
trace [14]; (iii) di<erential invariants such as curvature,
torsion and Gaussian curvature. Geometric invariants and
algebraic invariants are suitable in situations where bound-
aries can be represented by straight lines or algebraic curves.
Typical applications of them are for man-made object recog-
nition. If object boundaries cannot be represented by lines
or algebraic curves, di<erential invariants can be formed.
Di<erential invariants are local in nature and are very large
in number.
Shape representation using invariants has several prob-
lems. First, invariants are usually derived from pure ge-
ometric transformation of shape. In reality, shape rarely
changes according strict geometric transformations, espe-
cially shapes from non-rigid objects. Second, the invariants
are very sensitive to boundary noise and errors. Third, de-
sign of new invariants is di>cult. Fourth, perhaps the most
challenging to most of invariant methods is the matching.
The matching generally adopts the ‘parts and relationship’
techniques. These techniques require some form of subgraph
matching [69,72] which is known to be an NP-complete
problem [71]. The challenge is thus to 1nd an algorithm that
can 1nd an acceptable solution in reasonable time.
Recently, Kliot and Rivlin proposed the use of invariant
signature for shape description [73]. Geometric invariants,
such as length, angle, areas ratio, cross-ratio and length ra-
tio, are used to derive several invariant signatures (called
multi-valued signature) for each of the boundary curves.
The multi-valued signature is put into a matrix which is used
for the matching between two curves on two correspond-
ing shapes. To increase matching e>ciency, the signature
histogram is constructed and used for the initial matching.
Once the curves pass the initial matching, they are subject
to matrix matching. The retrieval is tested on a dataset com-
posed of the SQUID [74] 1sh database and three small data
sets. E>ciency performance is given, however, no average
e<ectiveness performance is shown.
Squire and Caelli also use invariance signature for shape
description [71]. The invariance signature is a probability
density function derived from the boundary represented by
piecewise algebraic curves. The signature is invariant under
similarity transformations, they are, rotation, translation and
scaling transformations. A histogram is then created from
the quantized invariance signature and is used for shape
description and matching. The histogram is then put into
a neural network for character classi1cation. Results show
that the invariance signature descriptor is less e<ective than
Fourier-Mellin descriptor, indicating that the signature needs
further processing for robust shape description.
Although the invariance signature methods attenuate
the load of shape matching using ‘parts and relationship’
method, the matching is still very costly. In addition, shape
matching using signature has been well studied by Davies
[11], it is not clear whether shape matching using invariance
signatures is better than shape matching using common
shape signatures.
3.2.7. Discussions
The merits of the structural approach are its capability of
handling occlusion problem in the scene and allowing partial
matching. However, the merits are at the cost of several
drawbacks.
• The main drawback of the structural approach is the gen-
eration of primitives and features. Because there is no for-
mal de1nition for an object or shape, the number of prim-
itives required for each shape is not known. Therefore,
the success of applying this method depends on the a pri-
ori knowledge of the shape boundary features held in the
database. While structural methods are expected to work
under particular assumptions, it is impractical to apply
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 11
Fig. 9. Ambiguity of structural shape representation.
them for general applications, because it is impossible to
know in advance the types of primitives in a generic shape
database. For example, if the feature primitives from a
query shape are not presented in the database, then the
retrieval fails.
• The second drawback of the structural approach is its
computation complexity, especially its complex match-
ing. Di<erent from those global methods, the matching
schemes used in structural methods adopt non-metric sim-
ilarity measurements. Since these methods allow partial
matching between shapes, sub-graph matching using an
optimal solution is inevitable. Most of these methods
avoid the optimal solution issue, they do not guarantee
best match.
• Failure to capture global shape features which are equally
important for shape representation. The equal importance
of local and global shape features can be shown by the
example of observing a city through zooming views. A
few zoom-in views of the city does not necessarily mean
you have learned much about the city, zoom-out views
are also essential to learn more about the city. Unless the
city has a unique landmark which distinguishes it from
other city, we cannot identify a city from other cities from
the map by just a few zoom in views. As an example,
Fig. 9 shows two gothic building shapes and a banana
shape. Using structural method, the 1rst shape is likely to
be more similar to the banana shape although it is more
similar to the second shape perceptually. This will not be
a problem with global method.
• Sensitivity to noise. Because the structural representa-
tion does not preserve the topological structure of the
object. Variations of object boundaries can cause signi1-
cant changes to local structures, therefore, in these cases,
global features are more reliable.
4. Region-based shape representation and description
techniques
In region based techniques, all the pixels within a shape
region are taken into account to obtain the shape representa-
tion, rather than only use boundary information as in contour
base methods. Common region based methods use moment
descriptors to describe shapes. Other region based methods
include grid method, shape matrix, convex hull and media
axis. Similar to contour based methods, region based shape
methods can also be divided into global and structural meth-
ods, depending on whether they separate shapes into sub
parts or not.
4.1. Global methods
Global methods treat shape as a whole, the result
representation is a numeric feature vector which can be used
for shape description. Similarity between shapes is sim-
ply measured by the metric distance between their feature
vectors.
4.1.1. Geometric moment invariants
Historically, Hu published the 1rst signi1cant paper on the
use of image moment invariants for two-dimensional pattern
recognition applications [75]. His approach is based on the
work of the 19th century mathematicians Boole, Cayley and
Sylvester, and on the theory of algebraic forms:
mpq =
∑
x
∑
y
xpyqf(x; y); p; q = 0; 1; 2; : : : : (4.1)
Using nonlinear combinations of the lower order moments,
a set of moment invariants (usually called geometric mo-
ment), which has the desirable properties of being invariant
under translation, scaling and rotation, are derived. The use
of higher order moments for pattern analysis has not been
addressed. Since the values of the acquired moment invari-
ants are usually very small, a normalization process, such as
zscore normalization [76], is needed in the implementation.
Geometric moment invariants have attracted wide atten-
tion [14,15,77–80] and have been used in many applications
[46,81–84]. The main problem with geometric moments is
that only a few invariants derived from lower order moments
is not su>cient to accurately describe shape. Higher order
invariants are di>cult to derive.
Zhang and Lu have tested geometric moment invariants
on a standard shape database used by MPEG-7 [57]. They
have found that geometric moment invariants perform very
well on similarity transformed and a>nely transformed
contour-based shapes. They even outperform grid descriptor
for these simple shapes. However, they perform poorly for
arbitrarily distorted contour-based shapes. For region-based
shapes which have interior content, they only perform sat-
isfactorily on rotated shapes; while for scaled shapes, per-
spectively transformed shapes and subjective test shapes,
they perform poorly. The 1nding indicates that geometric
moment invariants are suitable for describing simple shapes.
4.1.2. Algebraic moment invariants
Algebraic moment invariants have been introduced by
Taubin and Cooper [85,86], and has been used in QBIC
[17,9]. The algebraic moment invariants are computed from
the 1rst m central moments and are given as the eigenval-
ues of prede1ned matrices,M[j; k], whose elements are scaled
factors of the central moments. Di<erent from Hu’s geo-
metric moment invariants, the algebraic moment invariants
12 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
can be constructed up to arbitrary order and are invariant to
a>ne transformations. However, results from [9] show that
algebraic moment invariants performed either very well or
very poorly on each of the query objects. They tend to work
well on objects where the distribution of the pixels, and not
the outline of the shape, is important. On objects where the
con1guration of the outline is important, as in the di<erence
between an S shape and a snake shape, algebraic moment
invariants perform poorly.
4.1.3. Orthogonal moments
The algebraic moment transform of (4.1) can be ex-
tended to generalized form by replacing the conven-
tional transform kernel xpyq with a more general kernel
of Pp(x)Pq(y). Teague [79] uses this idea to introduce
orthogonal moments—Legendre moments and Zernike
moments—by replacing xp yq in (4.1) with Legendre
polynomial and Zernike polynomial, respectively.
Legendre moments are given by
3mn =
(2m+ 1)(2n+ 1)
4
∑
x
∑
y
Pm(x)Pn(y)f(x; y);
(4.2)
where
Pn(x) =
1
2nn!
dn
dxn
(x2 − 1)n
Zernike moments are given by
Anm =
n+ 1
4
∑
x
∑
y
V ∗nm(x; y)f(x; y); x
2 + y26 1;
(4.3)
where
Vnm(x; y) = Vnm(6 cos ; 6 sin ) = Rnm(6) exp(jm)
and
Rnm(6) =
(n−|m|)=2∑
s=0
(−1)s
× (n− s)!
s!((n+ |m|)=2− s)!((n− |m|)=2− s)! 6
n−2s
6 and  are, respectively, the radius and the angle of pixel
(x; y) with respect to the center of gravity of the shape.
Since Legendre and Zernike polynomials are both com-
plete sets of an orthogonal basis, Legendre moments and
Zernike moments are called orthogonal moments. Other or-
thogonal moments are pseudo-Zernike moments which are
obtained by using real-value radial polynomials in Zernike
polynomials as the moment transform kernel. Orthogonal
moments allow for accurate reconstruction of the described
shape, and makes optimal utilization of shape information.
Teh and Chin [80] have made a detailed study of or-
thogonal moments: Legendre moments, Zernike moments,
pseudo-Zernike moments; and non-orthogonal moments:
geometric moments, complex moments, rotation moments.
Their results show that geometric moments, complex mo-
ments and pseudo-Zernike moments are less a<ected by
noise, while Legendre moments are more severely a<ected
by noise. Zernike moments and pseudo-Zernike moments
have more reconstruction power than Legendre moments
for both noisy and normal image. The results also show
that the reconstruction error for noisy images reaches a
minimum value and then starts to increase as the number of
moments increases, indicating that higher order moments
are less reliable in a noise environment. The number of
moments where the error reaches a minimum depends on
the signal-to-noise ratio. This provides a clue for select-
ing an optimal number of moments to describe shape. For
example, under the noise level of SNR = 30, the optimal
number of Zernike moments for shape description is 10.
If SNR = 200, there is little di<erence between using 30
moments and using over 30 moments. Their conclusion is
that Zernike moments and pseudo-Zernike moments are the
preferable shape descriptors.
Liao and Pawlak [78] extend Teh and Chin’s work by in-
troducing techniques to increase the accuracy and e>ciency
of moments. Speci1cally, they studymoment accuracy under
di<erent image resolutions. Their results show that coarser
quantisation of image produces more accurate moments.
They also introduce the alternative extended Simpson’s rule
to speed up calculation of higher order moments.
Moment shape descriptors are usually concise, robust,
easy to compute and match. The disadvantage of mo-
ment methods is that it is di>cult to correlate high order
moments with the shape’s physical features. Among the
many moment shape descriptors, Zernike moments are the
most desirable for shape description. Due to the incorpo-
ration of a sinusoid function into the kernel, they have
similar properties of spectral features which are well un-
derstood. Shape description using Zernike moments proves
to be very promising [87,88]. Zernike moment descriptor
has been adopted by MPEG-7 as a region-based shape
descriptor [33].
4.1.4. Generic Fourier descriptor
Although Zernike moment descriptor has a robust per-
formance, it has several shortcomings. First, the kernel of
Zernike moments is complex to compute, and the shape has
to be normalized into a unit disk before deriving the moment
features. Second, the radial features and circular features
captured by Zernike moments are not consistent, one is in
spatial domain and the other is in spectral domain. It does
not allow multi-resolution analysis of a shape in radial di-
rection. Third, the circular spectral features are not captured
evenly at each order, this can result in loss of signi1cant fea-
tures which are useful for shape description. To overcome
these shortcomings, a generic Fourier descriptor (GFD) has
been proposed by Zhang and Lu [89]. The GFD is ac-
quired by applying a 2-D Fourier transform on a polar-raster
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 13
Fig. 10. (a) An original shape in polar space; (b) polar-raster sampled image plotted in Cartesian space.
Fig. 11. (a) Grid representation of two contour shapes; (b) two similar contour shapes with di<erent grid representations; (c) two similar
region shapes with di<erent grid representations.
sampled shape image (Fig. 10):
PF2(6; 8) =
∑
r
∑
i
f(r; i)exp
[
j24
(
r
R
6+
24i
T
8
)]
;
(4.4)
where 06 r ¡R and i= i(24=T ) (06 i ¡T ); 06 6¡R,
068¡T . R and T are the radial frequency resolution and
angular frequency resolution respectively. The normalized
coe>cients are the GFD. The similarity between two shapes
are measured by the city block distance between their GFDs.
Compared with Zernike moments, GFD is simpler to com-
pute, the features are pure spectral features and have bet-
ter retrieval performance due to multi-resolution analysis in
both radial and circular directions of the shape. With an
enhanced process, GFD can achieve retrieval performance
on perspectively transformed shapes as high as it achieves
on similarity transformed shapes [90]. Zhang and Lu have
also shown that GFD outperforms contour shape descrip-
tors such as CSS, FD and region-based shape descriptors
such as Zernike moments, geometric moments and grid
method [57].
4.1.5. Grid based method
The grid shape descriptor is proposed by Lu and Sajjan-
har [91] and has been used in [92–94]. Basically, a grid of
cells is overlaid on a shape, the grid is then scanned from
left to right and top to bottom. The result is a bitmap. The
cells covered by the shape are assigned 1 and those not
covered by the shape are assigned 0. The shape can then be
represented as a binary feature vector. The binary Ham-
ming distance is used to measure the similarity between
two shapes. For example, the grid descriptors for the two
shapes in Fig. 11(a) are 001111000 011111111 111111111
111111111 111110011 001100011 and 001100000
011100000 111100000 111100000 011111100 000111000,
respectively, and the distance between the two shapes will
14 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
be 27 by the XOR operation on the two sets. In order to
accommodate translation, rotation and scaling of the shape,
the shape is 1rst normalized before scanning. The shape is
scaled into a 1xed size rectangle, shifted to the upper left
of the rectangle and rotated so that the major axis of the
shape is horizontal. Mirrored and Mipped shapes should be
considered separately.
Chakrabarti et al. [92] improves grid descriptor by using
an adaptive resolution (AR) representation and used it in
MARS [94]. The AR grid descriptor is acquired by applying
quadtree decomposition on the bitmap representation of the
shape.
The advantages of the grid descriptor are its simplicity in
representation, conformance to intuition, and also agreement
with shape coding method in MPEG-4. The main problem
with this method is the major-axis based rotation normaliza-
tion. The major axis is sensitive to noise and unreliable. For
example, the two similar shapes in (b) have very di<erent
grid representations. For region-based shapes, the grid rep-
resentation is not rotation invariant. For example, the two
shapes in Fig. 11(c) are similar shapes, however, their grid
representations are very di<erent.
4.1.6. Shape matrix
Normal shape methods use rectangular grid sampling to
acquire shape information. The shape representation derived
this way is usually not translation, rotation and scaling in-
variant. Extra normalization is therefore required. Goshtasby
proposes the use of a shape matrix which is derived from a
circular raster sampling technique [95]. The idea is similar
to normal raster sampling. However, rather than overlay the
normal square grid on a shape image, a polar raster of con-
centric circles and radial lines is overlaid in the center of the
mass (Fig. 12(a)). The binary value of the shape is sampled
at the intersections of the circles and radial lines. The shape
matrix is formed so that the circles correspond to the ma-
trix columns and the radial lines correspond to the matrix
rows. Prior to the sampling, the shape is scale normalized
using the maximum radius of the shape. The result matrix
representation is invariant to translation, rotation, and scal-
ing. Since the sampling density is not constant with the po-
lar sampling raster, Taza and Suen represent shape using a
weighed shape matrix which gives more weight to peripheral
samples [96].
Since a shape matrix is a sparse sampling of shape, it is
easily a<ected by noise. Besides, shape matching using a
shape matrix is too expensive. Perui et al. propose a shape
description based on the relative areas of the shape contained
in concentric rings located in the shape center of the mass
[97,98]. Let L be the maximum radius of the shape S to be
described, Ck , be the kth ring of n concentric rings obtained
by sectioning the maximum radius L into n equal segments.
An area-ratio invariant is de1ned as
xi =
A(S ∩ Ci)
A(Ci)
; (4.5)
Fig. 12. (a) polar raster sampling of shape (reprinted from [97]);
(b) a star shape formed by line strips; (c) a rectangle shape.
where A(·) is the area function. The shape descriptor is the
feature vector of x = [x1; : : : ; xn]T. Although the area ratio
descriptor is more compact and robust than the shape matrix,
it ignores the pattern alterations within the measured ring.
Consequently, the two shapes in Fig. 12(b) and (c) will
be the same under this descriptor. The problems presented
here can be solved using the spectral transform discussed in
Section 4.1.4.
4.1.7. Discussions
Global region based methods treat the shape region as a
whole and make e<ective use of all the pixel information
within the region. These methods measure pixel distribution
of the shape region, which are less likely a<ected by noise
and variations. As a result, they usually can cope well with
shape of signi1cant defection, which poses a problem for
contour-based methods. Particularly popular region meth-
ods are moment methods. Moment methods extract statisti-
cal distribution of region pixels. The lower order moments
or moment invariants carry physical meanings associated
with region pixel distribution. However, it is di>cult to as-
sociate higher order moments with physical interpretation.
Grid methods are subject to noise due to the use of the ma-
jor axis for normalization, and it is not rotation invariant for
region-based shapes. Shape matrix methods are not robust
due to the sparse sampling approach. Although the area-ratio
invariant is more robust than shape matrix representation, it
does not capture pattern alterations e<ectively. The use of
spectral transforms on the densely polar raster sampled im-
age takes the advantages of both the moment methods and
shape matrix methods, while overcoming the problems pre-
sented in all the other region-based methods discussed in
this paper.
4.2. Structural methods
Similar to the contour structural methods, region-based
structural methods decompose the shape region into parts
which are then used for shape representation and description.
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 15
Fig. 13. (a) Convex hull and its concavities; (b) Concavity tree representation of convex hull (reprinted from [14]).
4.2.1. Convex hull
A region R is convex if and only if for any two points
x1; x2 ∈R, the whole line segment x1x2 is inside the re-
gion. The convex hull of a region is the smallest convex
region H which satis1es the condition R ⊂ H . The dif-
ference H − R is called the convex de:ciency D of the
region R. The extracting of the convex hull can use both
boundary tracing method [14] and morphological methods
[11,15]. Since shape boundaries tend to be irregular because
of digitization, noise and variations in segmentation, these
e<ects usually result in a convex de1ciency that has small,
meaningless components scattered randomly throughout the
boundary. Common practice is to 1rst smooth a boundary
prior to partitioning. The polygon approximation is particu-
larly attractive, because it can reduce the computation time
of extracting the convex hull from O(n2) to O(n) (n is the
number of points in the shape). The extraction of convex
hull can be a single process which 1nds signi1cant convex
de1ciencies along the boundary. The shape can then be rep-
resented by a string of concavities. A fuller representation
of the shape may be obtained by a recursive process which
results in a concavity tree. Here the convex hull of an ob-
ject is 1rst obtained with its convex de1ciencies, then the
convex hulls and de1ciencies of the convex de1ciencies are
found, then the convex hulls and de1ciencies of these con-
vex de1ciencies—and so on until all the derived convex de-
1ciencies are convex. Fig. 13(a) illustrates this process. The
shape is then represented as a concavity tree (Fig. 13(b)).
Each concavity can be described by its area, bridge (the line
connects the cut of the concavity) length, maximum curva-
ture, distance from maximum curvature point to the bridge.
The matching between shapes becomes a string or a graph
matching.
4.2.2. Medial axis
Like the convex hull, a region skeleton can also be em-
ployed for shape representation and description. A skeleton
may be de1ned as a connected set of medial lines along the
limbs of a 1gure [11]. For example, in the case of thick
hand-drawn characters, the skeleton may be taken to be the
path actually traveled by the pen. In fact, the basic idea
Fig. 14. Construction of the medial axis of a rectangular shape.
(reprinted from [101]).
of the skeleton is that of eliminating redundant information
while retaining only the topological information concerning
the structure of the object that can help with recognition.
The skeleton methods are represented by Blum’s medial
axis transform (MAT) [99]. The medial axis is the locus of
centers of maximal disks that 1t within the shape. This is
illustrated in Fig. 14. The bold line in the 1gure is the skele-
ton of the shaded rectangular shape. The skeleton can then
be decomposed into segments and represented as a graph
according to certain criteria. The matching between shapes
becomes a graph matching. The computation of the medial
axis is a rather challenging problem. In addition, medial
axis tends to be very sensitive to boundary noise and vari-
ations. Preprocessing the contour of the shape and 1nding
its polygonal approximation has been suggested as a way
of overcoming these problems. But, as has been pointed out
by Pavlidis [100], obtaining such polygonal approximation
can be quite su>cient in itself for shape description.
The medial axis obtained by Morse is computed from
scale space. The medial axis acquired in this way is called
the core of the shape [101].
4.2.3. Discussions
The region structural methods have similar problems to
the contour structural approach. Apart from their complex
computation and implementation, the graph matching is also
an issue which needs to be solved itself. It should be noted,
both types of region structural methods described here need
to know shape contour information.
16 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
5. Summary and conclusions
In this paper, existing shape representation and descrip-
tion techniques have been reviewed. Generally, there are two
classes of approaches in shape representation and descrip-
tion: contour-based versus region-based. Under each class,
the methods can be divided into structural and global meth-
ods. The di<erent methods can be further distinguished be-
tween methods working in space domain and methods work-
ing in transform domain.
Contour-based approaches are more popular than
region-based approaches in literature. This is because hu-
man beings are thought to discriminate shapes mainly by
their contour features. Another reason is because in many of
the shape applications, the shape contour is the only interest,
whilst the shape interior content is not important. However,
there are several limitations with contour-based methods.
First, contour shape descriptors are generally sensitive to
noise and variations because they only use a small part of
shape information, that is, contour information. Second, in
many cases, the shape contour is not available. Third, in
some applications, shape content is more important than
the contour features. These limitations can be overcome
by using region-based methods. The 1ndings in the survey
are in favor of region-based methods. Region-base meth-
ods are more robust as they use all the shape information
available; they can be applied to general applications; and
they generally provide more accurate retrieval. In addition,
region-based methods can cope well with shape defection,
which is a common problem for contour-based shape repre-
sentation techniques. Although region-based methods make
use of all the shape information, it is not necessarily more
complex than contour-based methods, as some promising
methods such as the moment methods and GFD are simple
to implement.
Compared with global approaches, structural approaches
are too complex to implement. The high indexing andmatch-
ing complexity makes them a family of unstable shape rep-
resentations. For example, in a typical structural represen-
tation of shape, there are at least four ad hoc parameters
involved in the di<erent processes of the feature acquisition
and matching. These parameters are: the threshold in the
smoothing process, the threshold in the separation of shape
into primitives, the threshold in the primitive matching pro-
cess, and the threshold of determining similarity between
primitives of the two shapes in the model matching process.
The fact that the majority of the structural approaches use
angle as a feature adds another parameter into the system to
accommodate the rotation invariant. These parameters need
to be 1nely tuned for di<erent applications. The advantage
of structural approaches, however, is that they can do par-
tial matching. This is useful when the contour of the bound-
ary is not closed and large part of the shape is missing or
occluded. Partial matching can also be done using methods
based on the Hausdor< distance, which is a more expen-
sive matching method. However, the advantage of methods
based on the Hausdor< distance is that they can match two
general images based on the images’ edge maps, which are
usually unconnected or even scattered. Hausdor< distance
methods can be used to locate a given object in an image,
or to match a sub-image in a large image.
In the review, it has been found that methods working in
spatial domain su<er from two main drawback: noise sen-
sitivity and high dimension. The problems can be solved
in four ways: histogram, moments, scale space and spec-
tral transforms. Among the four solutions, spectral trans-
forms, especially Fourier transform, is the most promising.
Although histogram and scale space increase robustness to
noise and compactness, matching using histogram and scale
space can be very expensive. Moments is robust and com-
pact, however, higher order moments are either di>cult to
obtain or without physical meaning. Shape representation
using Fourier descriptor, either in 1-D space or 2-D space,
is simple to compute, robust and compact. Fourier descrip-
tors can be constructed to arbitrary order and all the Fourier
descriptors have physical meanings. The retrieval perfor-
mance of the generic Fourier descriptor (GFD) demonstrates
it is a desirable solution to generic shape representations,
regardless they are contour-based shapes (without interior
content) or region-based shapes (with interior content). The
hierachical representation of GFD can achieve the same re-
trieval e>ciency as those 1-D methods like moments, scale
space or FD. Although GFD cannot do partial matching, it
works well in situations where a signi1cant part of a shape
has been missing or occluded.
In summary, structural approaches are useful in applica-
tions where partial matching is needed; methods based on
the Hausdor< distance are useful for locating objects in an
image or sub-image matching. Both types of methods have
limited applications. For general shape applications, meth-
ods based on complex moments and spectral transforms,
such as Zernike moments and GFD, are the best choices.
They satisfy the six principles set by MPEG-7: good re-
trieval accuracy, compact features, general application, low
computation complexity, robust retrieval performance and
hierarchical coarse to 1ne representation. If storage is a con-
cern, FD can be considered.
Acknowledgements
The authors thank Mr Templar Hankinson of Gippsland
School of Computing and Info Tech, Monash University for
his valuable help during the preparation of the manuscript.
The authors are also grateful for the constructive and valu-
able comments from the reviewer of this paper.
References
[1] H. Kim, J. Kim, Region-based shape descriptor invariant
to rotation, scale and translation, Signal Process. Image
Commun. 16 (2000) 87–93.
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 17
[2] I. Yong, J. Walker, J. Bowie, An analysis technique for
biological shape, Comput. Graphics Image Process. 25
(1974) 357–370.
[3] M. Peura, J. Iivarinen, E>ciency of simple shape descriptors,
in: Proceedings of the Third International Workshop on
Visual Form, Capri, Italy, May, 1997, pp. 443–451.
[4] D. Chetverikov, Y. Khenokh, Matching for shape defect
detection, Lecture Notes in Computer Science, Vol. 1689,
Springer, Berlin, 1999, pp. 367–374.
[5] D.P. Huttenlocher, G.A. Klanderman, W.J. Rucklidge,
Comparing images using the Hausdor< distance, Technical
Report, CUCS-TR-91-1211, Department of Computer
Science, Cornell University, 1991.
[6] D.P. Huttenlocher, W.J. Rucklidge, A multi-resolution
technique for comparing images using the Hausdor< distance,
Technical Report, TR-92-1321, Department of Computer
Science, Cornell University, 1992.
[7] T. Meier, Segmentation for video object plane extraction and
reduction of coding artifacts, Ph.D. Thesis, Department of
Electrical and Electronic Engineering, University of Western
Australia, Australia, 1998.
[8] W.J. Rucklidge, E>cient locating objects using Hausdor<
distance, Int. J. Comput. Vision 24 (3) (1997) 251–270.
[9] B. Scassellati, S. Slexopoulos, M. Flickner, Retrieving
images by 2D shape: a comparison of computation methods
with human perceptual judgments, in: SPIE Proceedings on
Storage and Retrieval for Image and Video Databases II,
Vol. 2185, San Jose, CA, USA 1994, pp. 2–14.
[10] S. Belongie, J. Malik, J. Puzicha, Matching shapes, in:
Proceedings of Eighth IEEE International Conference on
Computer Vision (ICCV2001), Vol. I, Vancouver, Canada,
July, 2001, pp. 454–461.
[11] E.R. Davies, Machine Vision: Theory, Algorithms, Practi-
calities, Academic Press, New York, 1997, pp. 171–191.
[12] P.J. van Otterloo, A Contour-Oriented Approach to Shape
Analysis, Prentice-Hall International (UK) Ltd, Englewood
Cli<s, NJ, 1991, pp. 90–108.
[13] D.S. Zhang, G. Lu, A comparative study of Fourier
descriptors for shape representation and retrieval, in:
Proceedings of the Fifth Asian Conference on Computer
Vision (ACCV02), Melbourne, Australia, January 22–25,
2002, pp. 646–651.
[14] M. Sonka, V. Hlavac, R. Boyle, Image Processing, Analysis
and Machine Vision, Chapman & Hall, London, UK, NJ,
1993, pp. 193–242.
[15] R.C. Gonzalez, R.E. Woods, Digital Image Processing,
Addison-Wesley, Reading, MA, 1992, pp. 502–503.
[16] A. Del Bimbo, P. Pala, Visual image retrieval by elastic
matching of user sketches, IEEE Trans. Pattern Anal. Mach.
Intell. 19 (2) (1997) 121–132.
[17] W. Niblack, R. Barber, W. Equitz, M. Flickner, E. Glasman,
D. Petkovic, P. Yanker, C. Faloutsos, G. Taubin, The QBIC
project: querying image by content using color, texture and
shape, in: Proceedings of SPIE Storage and Retrieval for
Image and Video Databases, Vol. 1908, San Jose, CA, USA
1993, pp. 173–187.
[18] K. Hirata, T. Kato, Query by visual example—content based
image retrieval, in: Proceedings of the Third International
Conference on Extending Database Technology (EDBT’92),
Vienna, Austria, 1992, pp. 56–71.
[19] R. Chellappa, R. Bagdazian, Fourier coding of image
boundaries, IEEE Trans. Pattern Anal. Mach. Intell. 6 (1)
(1984) 102–105.
[20] M. Das, M.J. Paulik, N.K. Loh, A bivariate autoregressive
modeling technique for analysis and classi1cation of planar
shapes, IEEE Trans. Pattern Anal. Mach. Intell. 12 (1) (1990)
97–103.
[21] S.R. Dubois, F.H. Glanz, An autoregressive model approach
to two-dimensional shape classi1cation, IEEE Trans. Pattern
Anal. Mach. Intell. 8 (1986) 627–637.
[22] K. EOM, J. Park, Recognition of shape by statistical
modeling of centroidal pro1le, Proceedings of the Tenth
International Conference on Pattern Recognition, Vol. 1,
Atlantic City, NJ, 1990, pp. 860–864.
[23] K.L. Kashyap, R. Chellappa, Stochastic models for closed
boundary analysis: representation and reconstruction, IEEE
Trans. Inform. Theory 27 (1981) 627–637.
[24] Y. He, A. Kundu, 2—D shape classi1cation using hidden
Markov model, IEEE Trans. Pattern Anal. Mach. Intell. 13
(11) (1991) 1172–1184.
[25] I. Sekita, T. Kurita, N. Otsu, Complex autoregressive model
for shape recognition, IEEE Trans. Pattern Anal. Mach.
Intell. 14 (1992) 489–496.
[26] H. Asada, M. Brady, The curvature primal sketch, MIT AI
Memo 758, 1984.
[27] H. Asada, M. Brandy, The curvature primal sketch, IEEE
Trans. Pattern Anal. Mach. Intell. 8 (1) (1986) 2–14.
[28] F. Mokhtarian, A. Mackworth, Scale-based description and
recognition of planar curves and two-dimensional shapes,
IEEE Pattern Anal. Mach. Intell. 8 (1) (1986) 34–43.
[29] F. Mokhtarian, S. Abbasi, J. Kittler, Robust and e>cient
shape indexing through curvature scale space, Proceedings
of the British Machine Vision Conference, Edinburgh, UK,
1996, pp. 53–62.
[30] F. Mokhtarian, S. Abbasi, J. Kittler, E>cient and robust
retrieval by shape content through curvature scale space,
International Workshop on Image DataBases and Multimedia
Search, Amsterdam, The Netherlands, 1996, pp. 35–42.
[31] S. Abbasi, F. Mokhtarian, J. Kittler, Curvature scale space
image in shape similarity retrieval, Multimedia Systems 7
(1999) 467–476.
[32] S. Abbassi, F. Mokhtarian, J. Kittler, Enhancing CSS-based
shape retrieval for objects with shallow concavities, Image
Vision Comput. 18 (2000) 199–211.
[33] S. Jeannin (Ed.), MPEG-7 Visual part of experimentation
model version 5.0, ISO/IEC JTC1/SC29/WG11/N3321,
Nordwijkerhout, March, 2000.
[34] M. Daoudi, S. Matusiak, Visual image retrieval by multiscale
description of user sketches, J. Visual Lang. Comput. 11
(2000) 287–301.
[35] D.H. Eberly, Geometric methods for analysis of ridges in
N-dimensional images, Ph.D. Thesis, University of North
Carolina at Chapel Hill, 1994.
[36] K. Arbter, A>ne-invariant Fourier descriptors, in: J.C. Simon
(Ed.), From Pixels to Features, Elsevier Science Publishers
B.V. (North-Holland), Amsterdam, 1989, pp. 153–164.
[37] K. Arbter, W.E. Snyder, H. Burkhardt, G. Hirzinger,
Application of a>ne-invariant Fourier descriptors to
recognition of 3-D objects, IEEE Trans. Pattern Anal. Mach.
Intell. 12 (7) (1990) 640–647.
[38] E.L. Brill, Character recognition via Fourier descriptors,
WESCON, Session 25, Qualitative Pattern Recognition
18 D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19
Through Image Shaping, Los Angeles, CA, 1968,
pp. (25/3)1–10.
[39] G. Eichmann, et al., Shape representation by Gabor
expansion, Hybrid Image and Signal Processing II, SPIE
Vol. 1297, Orlando, Florida, USA 1990, pp. 86–94.
[40] G. Granlund, Fourier preprocessing for hand print character
recognition, IEEE Trans. Comput. 21 (1972) 195–201.
[41] H. Kauppinen, T. Seppanen, M. Pietikainen, An experimental
comparison of autoregressive and Fourier-based descriptors
in 2D shape classi1cation, IEEE Trans. Pattern Anal. Mach.
Intell. 17 (2) (1995) 201–207.
[42] A. Krzyzak, S.Y. Leung, C.Y. Suen, Reconstruction of two
dimensional patterns from Fourier Descriptors, Mach. Vision
Appl. 2 (1989) 123–140.
[43] C.C. Lin, R. Chellappa, Classi1cation of partial 2D shapes
using Fourier descriptors, IEEE Trans. Pattern Anal. Mach.
Intell. 9 (5) (1987) 686–690.
[44] C.S. Lin, C.L. Hwang, New forms of shape invariants
from elliptic Fourier descriptors, Pattern Recognition 20 (5)
(1987) 535–545.
[45] F.J.S. Marine, Automatic recognition of biological shapes
with and without representation of shape, Artif. Intell. Med.
18 (2000) 173–186.
[46] B.M. Mehtre, M.S. Kankanhalli, W.F. Lee, Shape measures
for content based image retrieval: a comparison, Inf. Process.
Manage. 33 (3) (1997) 319–337.
[47] O.R. Mitchell, T.A. Grogan, Global and partial shape
discrimination for computer vision, Opt. Eng. 23 (5) (1984)
484–491.
[48] E. Persoon, K.S. Fu, Shape discrimination using Fourier
descriptors, IEEE Trans. System Man Cybernet. SMC-7 (3)
(1977) 170–179.
[49] T.W. Rauber, Two-dimensional shape description, Technical
Report: GR UNINOVA-RT-10-94, University Nova de
Lisboa, Portugal, 1994.
[50] C.W. Richard, H. Hemami, Identi1cation of three-
dimensional objects using Fourier descriptors of the
boundary curve, IEEE Trans. System Man Cybernet. SMC-4
(4) (1974) 371–378.
[51] Y. Rui, A.C. She, T.S. Huang, A modi1ed Fourier descriptor
for shape matching in MARS, in: A.W.M. Smeulders, R.
Jain (Eds.), Image Databases and Multimedia Search, World
Scienti1c Publishing Co., Singapore, 1997, pp. 165–177.
[52] C.T. Zahn, R.Z. Roskies, Fourier descriptors for plane closed
curves, IEEE Trans. Comput. C-21 (3) (1972) 269–281.
[53] D.S. Zhang, G. Lu, A comparison of shape retrieval using
Fourier descriptors and short-time Fourier descriptors, in:
Proceedings of the Second IEEE Paci1c-Rim Conference on
Multimedia (PCM01), Beijing, China, October 24–26, 2001,
pp. 855–860.
[54] J.R. Ohm, F.B. Bunjamin, W. Liebsch, B. Makai, K. Muller,
A. Somlic, D. Zier, A set of visual feature descriptors and
their combination in a low-level description scheme, Signal
Process. Image Commun. 16 (2000) 157–179.
[55] Q.M. Tieng, W.W. Boles, Recognition of 2D object contours
using the wavelet transform zero-crossing representation,
IEEE Trans. Pattern Anal. Mach. Intell. 19 (8) (1997)
910–916.
[56] H.S. Yang, S.U. Lee, K.M. Lee, Recognition of 2D object
contours using starting-point-independent wavelet coe>cient
matching, J. Visual Commun. Image Represent. 9 (2) (1998)
171–181.
[57] D.S. Zhang, Image retrieval based on shape, Ph.D. Thesis,
Monash University, Australia, March, 2002.
[58] T. Pavlidis, Algorithms for Graphics and Image Processing,
Computer Science Press, Rockville, MD, 1982, p. 143.
[59] H. Freeman, On the encoding of arbitrary geometric
con1gurations, IRE Trans. Electron. Comput. EC-10 (1961)
260–268.
[60] H. Freeman, A. Saghri, Generalized chain codes for planar
curves, in: Proceedings of the Fourth International Joint
Conference on Pattern Recognition, Kyoto, Japan, November
7–10, 1978, pp. 701–703.
[61] J. Iivarinen, A. Visa, Shape recognition of irregular objects,
in: D.P. Casasent (Ed.), Intelligent Robots and Computer
Vision XV: Algorithms, Techniques, Active Vision, and
Materials Handling, Proc. SPIE 2904 (1996) 25–32.
[62] W.I. Groskey, R. Mehrotra, Index-based object recognition in
pictorial data management, Comput. Vision Graphics Image
Process. 52 (1990) 416–436.
[63] W.I. Groskey, P. Neo, R. Mehrotra, A pictorial index
mechanism for model-based matching, Data Knowledge Eng.
8 (1992) 309–327.
[64] R. Mehrotra, J.E. Gary, Similar-shape retrieval in shape data
management, IEEE Comput. 28 (9) (1995) 57–62.
[65] S. Berretti, A.D. Bimbo, P. Pala, Retrieval by shape similarity
with perceptual distance and e<ective indexing, IEEE Trans.
Multimedia 2 (4) (2000) 225–239.
[66] G. Dudek, J.K. Tsotsos, Shape representation and
recognition from multiscale curvature, Comput. Vision
Image Understanding 68 (2) (1997) 170–189.
[67] K.S. Fu, Syntactic Methods in Pattern Recognition,
Academic Press, New York, 1974.
[68] N. Chomsky, Syntactic Structures, Mouton, The Hague,
Berlin, 1957.
[69] S.Z. Li, Shape matching based on invariants, in: O. Omidvar
(Ed.), Shape Analysis, Progress in Neural Networks, Vol. 6,
Ablex, Norwood, NJ, 1999, pp. 203–228.
[70] C.-L. Huang, D.-H. Huang, A content-based image retrieval
system, Image Vision Comput. 16 (1998) 149–163.
[71] D.M. Squire, T.M. Caelli, Invariance signature:
characterizing contours by their departures from invariance,
Comput. Vision Image Understanding 77 (2000) 284–316.
[72] S.Z. Li, Matching: invariant to translations, rotations and
scale changes, Pattern Recognition 25 (1992) 583–594.
[73] M. Kliot, E. Rivlin, Invariant-based shape retrieval in
pictorial databases, Comput. Vision Image Understanding 71
(2) (1998) 182–197.
[74] http://www.ee.surrey.ac.uk/Research/VSSP/imagedb.
[75] M.K. Hu, Visual pattern recognition by moment invariants,
IRE Trans. Inf. Theory IT-8 (1962) 179–187.
[76] R.L. Kennedy, Y. Lee, B.V. Roy, C.D. Reed, R.P. Lippmann,
Solving Data Mining Problems Through Pattern Recognition,
Prentice-Hall, PTR, Upper Saddle River, NJ, 1998,
pp. 11–16 (Chapter 9).
[77] B. Jahne, Digital Image Processing—Concepts, Algorithms
and Scienti1c Applications, Springer, Berlin, Heidelberg,
1997, pp. 509–512.
[78] S.X. Liao, M. Pawlak, On image analysis by moments, IEEE
Trans. Pattern Anal. Mach. Intell. 18 (3) (1996) 254–266.
[79] M.R. Teague, Image analysis via the general theory of
moments, J. Opt. Soc. Am. 70 (8) (1980) 920–930.
D. Zhang, G. Lu / Pattern Recognition 37 (2004) 1–19 19
[80] C.-H. Teh, R.T. Chin, On image analysis by the methods
of moments, IEEE Trans. Pattern Anal. Mach. Intell. 10 (4)
(1988) 496–513.
[81] A.S. Dudani, K.J. Breeding, R.B. McGhee, Aircraft
identi1cation by moment invariants, IEEE Trans. Comput.
C-26 (1) (1977) 39–46.
[82] S.O. Belkasim, M. Shridhar, M. Ahmadi, Pattern recognition
with moment invariants: a comparative study and new results,
Pattern Recognition 24 (12) (1991) 1117–1138.
[83] R.J. Prokop, A.P. Reeves, A survey of moment-based
techniques for unoccluded object representation recognition,
Graph. Models Image Process. 54 (1992) 438–460.
[84] A. Sajjanhar, A technique for similarity retrieval of shapes,
Master Thesis, Monash University, Australia, 1997.
[85] G. Taubin, D.B. Cooper, Recognition and positioning of rigid
objects using algebraic moment invariants, SPIE Conference
on Geometric Methods in Computer Vision, Vol. 1570,
University of Florida, Florida, USA 1991, pp. 175–186.
[86] G. Taubin, D.B. Cooper, Object recognition based on
moment (or Algebraic, in: J. Mundy, A. Zisserman (Eds.),
Geometric Invariance in Computer Vision, MIT Press,
Cambridge, MA, 1992, pp. 375–397.
[87] Y.-S. Kim, W.-Y. Kim, Content-based trademark retrieval
system using a visually salient feature, Image Vision Comput.
16 (1998) 931–939.
[88] W.-Y. Kim, Y.-S. Kim, A region-based shape descriptor
using Zernike moments, Signal Process. Image Commun. 16
(2000) 95–102.
[89] D.S. Zhang, G. Lu, Generic Fourier descriptor for
shape-based image retrieval, in: Proceedings of IEEE
International Conference on Multimedia and Expo
(ICME2002), Vol. 1, Lausanne, Switzerland, August 26–29,
2002, pp. 425–428.
[90] D.S. Zhang, G. Lu, Enhanced generic Fourier descriptor
for object-based image retrieval, Proceedings of the IEEE
International Conference on Acoustics, Speech, and Signal
Processing (ICASSP2002), Vol. 4, Orlando, FL, USA, May
13–17, 2002, pp. 3668–3671.
[91] G.J. Lu, A. Sajjanhar, Region-based shape representation and
similarity measure suitable for content-based image retrieval,
Multimedia Syst. 7 (2) (1999) 165–174.
[92] K. Chakrabarti, M.O. Binderberger, K. Porkaew, S.
Mehrotra, Similar shape retrieval in MARS, in: Proceedings
of IEEE International Conference on Multimedia and Expo,
Vol. 2, New York, USA, 2000, pp. 709–712.
[93] M. Safar, C. Shahabi, X. Sun, Image retrieval by shape:
a comparative study, in: Proceedings of IEEE International
Conference on Multimedia and Expo, Vol. 1, New York,
USA, 2000, pp. 141–144.
[94] T.S. Huang, S. Mehrotra, K. Ramachandran, Multimedia
analysis and retrieval system (MARS) project, in:
Proceedings of 33rd Annual Clinic on Library Application
of Data Processing—Digital Image Access and Retrieval,
University of Illinoisat Urbana-Champaign, Illinois, USA
1996, pp. 101–117.
[95] A. Goshtasby, Description and discrimination of planar
shapes using shape matrices, IEEE Trans. Pattern Anal.
Mach. Intell. 7 (1985) 738–743.
[96] A. Taza, C. Suen, Discrimination of planar shapes using
shape matrices, IEEE Trans. Syst. Man Cybern. 19 (1989)
1281–1289.
[97] S. Loncaric, A survey of shape analysis techniques, Pattern
Recognition 31 (8) (1998) 983–1001.
[98] S. Parui, E. Sarma, D. Majumder, How to discriminate shapes
using the shape vector, Pattern Recognition Lett. 4 (1986)
201–204.
[99] H. Blum, A transformation for extracting new descriptors of
shape, in: W. Whaten-Dunn (Ed.), Models for the Perception
of Speech and Visual Forms, MIT Press, Cambridge, MA,
1967, pp. 362–380.
[100] T. Pavlidis, Algorithms for shape analysis of contours and
waveforms, IEEE Trans. Pattern Anal. Mach. Intell. 2 (4)
(1980) 301–312.
[101] B.S. Morse, Computation of object cores from grey-level
images, Ph.D. Thesis, University of North Carolina at Chapel
Hill, 1994.
About the Author—DR. DENGSHENG ZHANG received B.Sc. in Mathematics and B.A. in English in 1985 and 1987, respectively, both
from China. He spent 12 years on teaching Math and Computing before he was involved in his Ph.D. program in 1999. He received Ph.D.
in Computer Technology from Monash University, Australia, in 2002. He is now a lecturer in Gippsland School of Computing and Info
Tech of Monash University. Dr. Zhang has over 10 years research experience in the area of multimedia and has published over 20 referred
international journal and conference papers. His main research interests include OCR, CSCW, image/video retrieval.
About the Author—DR. GUOJUN LU obtained his Ph.D. in 1990 from Loughborough University of Technology, and BEng in 1984 from
Nanjing Institute of Technology (now South East University). He is currently an associate professor at Gippsland School of Computing
and Information Technology, Monash University, Australia. He has held positions in Loughborough University of Technology, National
University of Singapore, and Deakin University. Dr. Lu’s main research interests are in multimedia information indexing and retrieval,
multimedia data compression, quality of service management, and multimedia compression. He has published over 50 technical papers
in these areas and authored the books Communication and Computing for Distributed Multimedia Systems (Artech House, 1996), and
Multimedia Database Management Systems (Artech House, to appear in 1999). He has over ten years research experience in multimedia
computing and communications. Projects that he has worked on include UK Alvey project UNISON (on multimedia networking), European
RACE project MultiMed (on multimedia applications in telemedicine), fractal image compression, networked multimedia synchronization,
and integrated image retrieval systems.

