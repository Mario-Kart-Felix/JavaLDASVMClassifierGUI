Collaborative-controlled LASSO for Constructing Propensity
Score-based Estimators in High-Dimensional Data
Cheng Ju 1, Richard Wyss2, Jessica M. Franklin2,
Sebastian Schneeweiss2, Jenny Häggström 3,
Mark J. van der Laan 1
1 Division of Biostatistics, University of California, Berkeley
2 Division of Pharmacoepidemiology and Pharmacoeconomics, Department of Medicine,
Brigham and Womens Hospital and Harvard Medical School
3 Department of Statistics, USBE, Ume̊a University
Abstract
Propensity score (PS) based estimators are increasingly used for causal inference in obser-
vational studies. However, model selection for PS estimation in high-dimensional data has re-
ceived little attention. In these settings, PS models have traditionally been selected based on the
goodness-of-fit for the treatment mechanism itself, without consideration of the causal parame-
ter of interest. Collaborative minimum loss-based estimation (C-TMLE) is a novel methodology
for causal inference that takes into account information on the causal parameter of interest when
selecting a PS model. This “collaborative learning” considers variable associations with both
treatment and outcome when selecting a PS model in order to minimize a bias-variance trade
off in the estimated treatment effect. In this study, we introduce a novel approach for collabo-
rative model selection when using the LASSO estimator for PS estimation in high-dimensional
covariate settings. To demonstrate the importance of selecting the PS model collaboratively, we
designed quasi-experiments based on a real electronic healthcare database, where only the po-
tential outcomes were manually generated, and the treatment and baseline covariates remained
unchanged. Results showed that the C-TMLE algorithm outperformed other competing esti-
mators for both point estimation and confidence interval coverage. In addition, the PS model
selected by C-TMLE could be applied to other PS-based estimators, which also resulted in
substantive improvement for both point estimation and confidence interval coverage. We illus-
trate the discussed concepts through an empirical example comparing the effects of non-selective
nonsteroidal anti-inflammatory drugs with selective COX-2 inhibitors on gastrointestinal com-
plications in a population of Medicare beneficiaries.
Keywords: Propensity Score; Average Treatment Effect; LASSO; Model Selection; Electronic
Healthcare Database; Collaborative Targeted Minimum Loss-based Estimation;
1 Introduction
1.1 Purpose
The propensity score (PS) is defined as the conditional probability of treatment assignment, given a
set of pre-treatment covariates [Imbens, 2000, Rosenbaum and Rubin, 1983]. The PS, which we will
denote as g0, is widely used to control for confounding bias in observational studies. In practice,
the PS is usually unknown and PS based estimators must rely on an estimate of the PS, which we
will denote as gn.
1
ar
X
iv
:1
70
6.
10
02
9v
1 
 [
st
at
.M
E
] 
 3
0 
Ju
n 
20
17
Accurately modeling and assessing the validity of fitted PS models is crucial for all PS-based
methods. It is generally recommended that PS models be validated through measures of covari-
ate balance across treatment groups after PS adjustment. In high-dimensional covariate settings,
however, evaluating covariate balance on very large numbers of variables can be difficult. Using
covariate balance to validate PS models in high-dimensional covariate settings is further compli-
cated when applying machine learning algorithms and penalized regression methods to reduce the
dimension of the covariate set, as it is not always clear on what variables balance should be evalu-
ated. Cross-validated prediction diagnostics can greatly simplify validation of the PS model when
applying machine learning algorithms for PS estimation in high-dimensional covariate settings.
[Westreich et al., 2010] suggested that machine learning (ML) methods (e.g. support vector
machines) could enhance the validity of propensity score estimation, and that “external” cross-
validation (CV) can be used for model selection. [Lee et al., 2010] further investigated PS weighted
estimators when the PS was estimated by multiple ML algorithms, where the hyper-parameters of
the ML algorithms were selected by minimizing the CV loss for treatment prediction. Estimation
procedures that are based on external CV will result in estimated models that optimize the bias-
variance tradeoff for treatment prediction (i.e., the true PS function), but they do not consider
the ultimate goal of optimizing the bias-variance tradeoff for the treatment effect estimate. We
conjecture that PS estimators that are selected by CV will tend to be over-smoothed in order to
reduce variability in the prediction of treatment assignment, and that the optimal estimator in
reducing bias in the estimated treatment effect should be less smooth compared to the estimator
selected by external CV.
To address this limitation of external CV, we studied two recently proposed variations of the
C-TMLE algorithm [Ju et al., 2017b, van der Laan et al., 2017], and compared them to other
widely used estimators using multiple simulation studies. We focused on strategies that combined
the C-TMLE algorithms with LASSO regression, an l-1 regularized logistic regression [Tibshirani,
1996], for PS estimation. Previous studies have shown that LASSO regression can perform well for
variable selection when estimating high-dimensional PSs [Franklin et al., 2015]. However, selecting
the optimal tuning parameters to optimize confounding control remains challenging. Combining
variations of the C-TMLE algorithm with LASSO regression provides a robust data adaptive ap-
proach to PS model selection in high-dimensional covariate datasets, but remains untested. We
used quasi-experiments based on a real empirical dataset to evaluate the performance of combining
variations of the C-TMLE algorithm with LASSO regression and demonstrate that exernal CV for
model selection is insufficient.
The article is organized as follows. In section 1.2, we introduce the structure of the observed
data, the scientific question, the parameter of interest, the average treatment effect (ATE), and
the necessary assumptions for making the parameter of interest identifiable. In section 2 we briefly
review some commonly used estimators of the ATE. In section 3, we review the targeted minimum-
loss based estimator. In section 4, we introduce two recently proposed C-TMLE algorithms which
extend the vanilla TMLE algorithm. In section 5 we describe the electronic healthcare database
used in the simulations and empirical analyses. In section 6 we describe how the simulated data
are generated from the empirical dataset, and how results were analyzed from the simulation,
including point estimation (subsection 6.3), confidence interval (subsection 6.4), and pair-wise
comparisons (subsection 6.5) of estimators. In section 7 we apply the vanilla TMLE and novel
C-TMLE algorithms to analyze the empirical dataset. Finally, in section 8, we discuss the results
from the simulations and the scientific findings from the empirical data analysis.
2
1.2 Data Structure, Scientific Question, and Identification
Suppose we observe n independent and identically distributed (i.i.d.) observations, Oi = (Yi, Ai,Wi),
i ∈ 1, . . . , n, from some unknown but fixed data generating distribution P0. Consider a simple set-
ting, where Wi is a vector of some pre-treatment baseline covariates of the i-th observation, and
Ai is a binary indicator taking on a value of 1 if observation i is in the treatment group and is
0 otherwise. Further, suppose that each observation has a counterfactual outcome pair, (Yi0, Yi1),
corresponding to the potential outcome if patient i is in the control group (Ai = 0) or the treatment
group (Ai = 1). Thus, for each observation, we only observe one of the potential outcomes, Yi,
which corresponds with either Yi0 or Yi1, depending on whether the individual received treatment
or remained untreated. For simplicity, we refer to Q0(W ) as the marginal distribution of W , g0(W )
as the conditional expectation of A|W , and Q̄0(A,W ) as the conditional expectation of Y |A,W .
We will let g0 represent the PS, under the data generating distribution P0. In addition, we will let
E0 represent the expectation under the unknown true data generating distribution P0. Consider
the ATE as the parameter of interest:
Ψ0 = E0(Y1)− E0(Y0).
This parameter of interest is identifiable under following assumptions:
Assumption 1 (Consistency).
Yi = Yi,Ai = Yi0(1−Ai) + Yi1Ai.
Assumption 2 (Conditional Randomization).
(Y0, Y1) |= A|W.
Assumption 2 has also been called strong ignorability, or unconfoundedness [Rubin, 1990].
Under assumption 1 and 2, the conditional probability of Y = y given A = a,W = w can be
written as:
P (Y = y|A = a,W = w) = P (Ya = y|W = w),
thus the conditional expectation of Y given A = a,W = w can be written as:
E(Y |A = a,W = w) = E(Ya|W = w),
and the parameter of interest, ATE, can be written as:
Ψ0 = E(Y1)− E(Y0)
= E0(E0(Y |A = 1,W ))− E0(E0(Y |A = 0,W ))
Assumption 3 (Positivity).
0 < g0(W ) < 1
almost everywhere.
Assumption 3 is necessary for the identification. Otherwise, the model is not identifiable, as we
can never observe one of the potential outcomes for the units with certain baseline covariates W .
3
2 Brief Review of Some Common Estimators
One of the well-studied estimators for the ATE in observational studies is the G-computation
estimator (or outcome regression model), which estimates Q̄0 with Q̄n, and then estimates ATE by
the following formula:
ΨG−compn =
1
n
n∑
i=1
[
Q̄n(A = 1,W = Wi)− Q̄n(A = 0,W = Wi)
]
.
As long as the aforementioned assumptions hold, and the conditional response model estimator Q̄n
for Q̄0 is consistent, the resulting estimator Ψ
G−comp
n is also consistent.
Another widely used estimator is the Inverse Probability of Treatment Weighting (IPW) esti-
mator. It only relies on the estimator gn of g0:
ΨIPWn =
1
n
n∑
i=1
[
AiYi
gn(Wi)
− (1−Ai)Yi
1− gn(Wi)
]
,
where gn is usually fitted by a supervised model (e.g. logistic regression), which regresses A on the
pre-treatment confounders W . Similar to G-computation, the IPW estimator is consistent as long
as all of the aforementioned assumptions hold, and the estimated PS, gn, is consistent. However,
the IPW estimator can be highly unstable since extreme values of the estimated PS can lead to
overly large and unstable weights for some units. This phenomenon is called the practical positivity
violation. To overcome this issue, [Hájek, 1971] proposed a stabilized estimator:
ΨHajek−IPWn =
n∑
i=1
[
AiYi/gn(Wi)∑n
i=1Ai/gn(Wi)
− (1−Ai)Yi/(1− gn(Wi))∑n
i=1(1−Ai)/(1− gn(Wi))
]
,
where the denominator n is replaced by the weight normalization term Aign(Wi) and (1−Ai)(1−
gn(Wi)). It is easy to show that this estimator is also consistent as long as gn is a consistent
estimator.
All of the estimators mentioned above are not robust in the sense that misspecification of the
first stage modeling (of conditional outcome, or the PS) could lead to biased estimation for the
causal parameter of interest. This is the reason why double robust (DR) estimators are preferable.
DR estimators usually rely on the estimation of both Q̄0 and g0. As long as one of them is estimated
consistently, the resulting final estimator would be consistent. Weighted Regression (WR) is one of
the commonly used DR-estimators [Bang and Robins, 2005, Kang and Schafer, 2007]. In comparison
to G-computation, it estimates Q̄0 by minimizing the weighted empirical loss:
Q̄WRn = arg min
Q̄
n∑
i=1
[ωi(gn)L(Q̄(Ai,Wi), Yi)]
where the weight is defined ωi(gn) = [Ai/gn(Wi)+(1−Ai)/(1−gn(Wi))], and L is the loss function.
The estimator for the causal parameter is defined as:
ΨWRn =
1
n
n∑
i=1
[Q̄WRn (A = 1,W = Wi)
−Q̄WRn (A = 0,W = Wi)].
4
The WR estimator is also called the weighted least squares (WSL) estimator, if the loss function
is the squared error L(x, y) = (x− y)2.
Augmented IPW (A-IPW, or DR-IPW) is another DR-estimator which can be written as:
ΨDR−IPWn =
1
n
n∑
i=1
Hgn(Ai,Wi)[Yi − Q̄n(Ai,Wi)]
+Q̄n(1,Wi)− Q̄n(0,Wi)
(1)
where
Hgn(A,W ) =
A
gn(W )
− 1−A
1− gn(W )
,
is designed based on the target parameter, ATE. ΨDR−IPWn also relies on both Q̄n and gn. It
was first proposed by [Cassel et al., 1976, 1977] where it was called the “bias-corrected estimator”.
It corrects the bias from the initial estimate, Q̄n, with the weighted residual from the initial fit.
[Robins et al., 1994] proposed a class of estimators which contains 1, and [Robins and Rotnitzky,
1995] further showed that 1 is a locally semiparametric efficient estimator.
Similar to the IPW estimator, A-IPW is also influenced by extreme weights, as it uses in-
verse probability weighting. However, a Hajek style stabilization could mitigate concerns of overly
influential weights:
ΨHBC−IPWn =
n∑
i=1
[(
A/gn(W )∑n
i=1A/gn(W )
− (1−A)/(1− gn(W ))∑n
i=1(1−A)/(1− gn(W ))
)
(Yi − Q̄n(Ai,Wi)
+
1
n
Q̄n(1,Wi)−
1
n
Q̄n(0,Wi)
]
.
(2)
For simplicity, we will call the estimator in equation 2 the HBC (Hajek type bias-correction)
estimator. Although this estimator no longer enjoys some attractive theoretical properties (e.g.
efficiency) of A-IPW, it is still DR, and it can potentially improve finite sample performance. It
is also possible that these modifications could improve the robustness of the estimated treatment
effects when both of the models are misspecified [Kang and Schafer, 2007].
3 Brief Review of Targeted Minimum Loss-based Estimation (TMLE)
Targeted minimum loss-based estimation is a general template to estimate a user-specified param-
eter of interest, given a user-specified loss function, and fluctuation sub-model. In this study, we
consider the ATE as our target parameter, the negative likelihood as the loss function, and the
logistic fluctuation. Let Y represent a binary variable, or a continuous variable within the range
(0, 1) 1. The TMLE estimator for the ATE can be written as:
ΨTMLEn =
1
n
n∑
i=1
(Q̄∗n(1,Wi)− Q̄∗n(0,Wi)). (3)
In equation 3, Q̄∗n (which is within the range (0, 1)) is updated from an initial estimate, Qn, by
a logistic fluctuation sub-model:
logit(Q̄∗n(A,W )) = logit(Q̄n(A,W )) + Hgn(A,W ). (4)
1otherwise, we could simply normalize Y into (0, 1) and finally rescale the estimate ΨTMLEn back
5
The fluctuation parameter  is estimated through maximum likelihood estimation, or equivalently,
minimizing the negative log-likelihood loss:
L() =
n∑
i=1
Yi(Q̄
∗
n(Ai,Wi)) + (1− Yi)(1− Q̄∗n(Ai,Wi)).
If either the propensity model or outcome model is consistent, then the TMLE estimator is con-
sistent. If both of them are consistent, then the TMLE estimator is also efficient. To consistently
estimate Q̄0 and g0, we suggest using Super Learner, a data-adaptive ensemble method, for predic-
tion modeling [Benkeser et al., 2016, Ju et al., 2017a,c, Pirracchio et al., 2015, Polley and van der
Laan, 2010, van der Laan et al., 2007].
In addition to double robustness and asymptotic efficiency, TMLE has following advantages:
1. Equation 3 shows that TMLE is a plug-in estimator and therefore, respects the global con-
straints of the model. For instance, suppose Y is binary. The ATE, therefore, should be
between [−1, 1]. However, some competing estimators may produce estimates out of such
bounds. Since TMLE maps the targeted estimate P ∗ of P0 into the mapping Ψ, it respects
knowledge of the model.
2. The targeting step in TMLE is a minimum loss estimation 2, which offers a metric to evaluate
the goodness-of-fit for gn and Q̄n, w.r.t. the parameter of interest Ψ0.
3. In the empirical/simulation studies by [Porter et al., 2011], TMLE is more robust than IPW
and A-IPW to positivity, or near positivity, violations , where gn is too close to 0 or 1.
4 Brief Review of Collaborative TMLE
4.1 C-TMLE for Variable Selection
In the TMLE algorithm, the estimate of Q̄0 is updated by the fluctuation step, while the estimate of
g0 is estimated externally and then held fixed. One extension of TMLE is to find a way to estimate
g0 in a collaborative manner. Motivated by the second advantage of TMLE, collaborative TMLE
was proposed to make this extension feasible [van der Laan et al., 2010]. Here we first briefly review
the general template for C-TMLE:
1. Compute the initial estimate Q̄0n of Q̄0.
2. Compute a sequence of estimates gn,k and Q̄
∗
n,k for g0 and Q̄0 respectively, with k = 1, . . . ,K.
With k increasing, the empirical loss for both gn,k and Q̄
∗
n,k would decrease. In addition, we
require gn,K to be asymptotically consistent for g0.
3. Build a sequence of TMLE candidate estimators, based on a given fluctuation model.
4. Use cross-validation for step 3 to select the Q̄∗n,k, that minimizes the cross-validated risk, and
denote this TMLE estimator as the C-TMLE estimator.
This is a high-level template for the general C-TMLE algorithm. There are many variations
of instantiations of this template. For example the greedy C-TMLE was proposed by [Gruber and
van der Laan, 2010, van der Laan et al., 2010] for variable selection in a discrete setting. The
following are some details of greedy C-TMLE:
2it is maximum likelihood estimation (MLE) if the loss is negative log-likelihood
6
• In step 2, the greedy C-TMLE algorithm starts from an intercept model (which fits the PS
with its mean), and then builds the sequence of gn,k by using a forward selection algorithm:
during each iteration k, for each of the remaining covariates Wj , that have not been selected
yet, we add it into the previous PS model gn,k−1, which yields a larger PS model g
j
n,k andHgjn,k
.
We then compute Q̄∗,jn,k by equation 4. For all j, we select the PS model that corresponds
to the Q̄∗,jn,k with the smallest empirical loss. For simplicity we call this the forward selection
step at the k-th iteration.
• For the initial estimate in equation 4, we start with Q̄n,1 = Q̄n. For each iteration k, we first
try Q̄n,k = Q̄n,k−1. If all of the possible Q̄
∗,j
n,k mentioned above do not improve the empirical
fit compared to Q̄∗n,k−1, we update Q̄n,k = Q̄
∗
n,k−1 and rerun the forward selection step at
the k-th iteration. Notice, that as we use the last TMLE estimator as the candidate, all of
the current candidate Q̄∗,jn,k are guaranteed to have a better empirical fit compared to their
initial estimate Q̄n,k. Otherwise if there is at least one candidate that improves the empirical
fit, we just move to the next forward selection step. In this manner, we make sure that the
empirical loss for each candidate Q̄∗n,k is monotonically decreasing.
[Ju et al., 2017d] also proposed scalable versions of the discrete C-TMLE algorithm as new
instantiations of the C-TMLE template. These scalable C-TMLE algorithms avoid the forward
selection step by enforcing a user-specified ordering of the covariates. [Ju et al., 2017d] showed that
these scalable C-TMLE algorithms have all of the asymptotic theoretical properties of the greedy
C-TMLE algorithm, but with much lower time complexity.
4.2 C-TMLE for Model Selection of LASSO
To the best of our knowledge, C-TMLE has primarily been applied for variable selection. However,
it can easily be adapted to more general model selection problems. In our recent work [Ju et al.,
2017b, van der Laan et al., 2017], two instantiations of the C-TMLE algorithm were proposed
for a general model selection problem with a one-dimensional hyper-parameter. In this study, we
consider an example where the PS model is estimated by LASSO:
βn,λ = min
β∈Rp
(
1
n
n∑
i=1
L(Ai, logit(βWi)) + λ‖β‖1
)
gn,λ(Wi) = logit(βn,λWi)
where L is the negative log-likelihood for the Bernoulli distribution, as A is binary. We used
C-TMLE to select the PS estimator, gn,λ, with the best penalty parameter λ. We applied two
C-TMLE algorithms for model selection of LASSO. Here, we provide a brief outline for each of the
algorithms. Details are provided in the supplemental appendices.
• C-TMLE1: First, we briefly introduce the C-TMLE1 algorithm. According to the C-TMLE
template outlined above, C-TMLE1 first builds an initial estimate for Q̄n and a sequence
of propensity score estimators, gn,λk , for k ∈ 0, . . . ,K, each with a penalty λk, where λk
is monotonically decreasing. We recommend to set λ1 = λCV because the cross-validation
usually selects the over-smoothed PS estimator, thus it is unnecessary to consider λ1 > λCV .
Then, we just follow step 3 in the template described previously, and build a sequence of
estimators, Q̄∗n,λ, each corresponding to gn,λ. We then select the best Q̄
∗
n,λctmle
by using cross-
validation, with its corresponding initial estimate Q̄n,λctmle . Finally we fluctuate the selected
7
initial estimate Q̄n,λctmle with each gn,λ for λK < λ < λctmle, yielding a new sequence Q̄
∗
n,λ.
We choose Q̄∗n = Q̄
∗
n,λ , which minimizes the empirical loss, as our final estimate. The final
step guarantees that a critical equation:
PnD
+(Q̄∗n,λ, gn,λ)
=
∂
∂λ
n∑
i=1
Hgn,λ(Ai,Wi)(Yi − Q̄
∗
n,λ(Ai, Yi)) = 0
(5)
is solved [Ju et al., 2017b, van der Laan et al., 2017]. This guarantees that the resulting
C-TMLE estimator is asymptotically linear under regularity conditions even when Q̄n is not
consistent. A detailed description of C-TMLE1 is provided in appendix A.
• C-TMLE0: the C-TMLE0 algorithm does not select the PS estimator collaboratively. Instead,
it is exactly the same as the TMLE algorithm, except it updates the estimate by equation 6:
logit(Q̄∗n(A,W )) = logit(Q̄n(A,W ))
+1Hgn,λk (A,W ) + 2H̃gn,λk (A,W )
(6)
where
H̃gn,λk (A,W ) =
∂Hgn,λ(A,W )
∂λ
|λ=λk
=
1−A
(1− gn,λk(W ))2
∂(1− gn,λ)
∂λ
|λ=λk
+
A
gn,λ(W )2
∂gn,λk
∂λ
|λ=λk .
Note we still call it C-TMLE as it solves the critical equation 6. Solving the additional clever
covariate H̃gn,λk (A,W ) could be considered as an approximation of the collaborative selection
in C-TMLE1 [Ju et al., 2017b, van der Laan et al., 2017]. More details of C-TMLE0 can be
found in appendix B.
5 Data Source
In previous work by [Ju et al., 2017c], Super Learner was applied to three electronic healthcare data
sets for propensity score estimation. In two of the data sets (NOAC study and Vytorin study), the
PS model showed strong non-linearity patterns, where non-linear algorithms (gbm) outperformed
main term LASSO (w.r.t. the predictive performance of the estimated PS) with the same covariate
set. Thus the main term linear model may result in strong model misspecification for such a dataset.
To better demonstrate C-TMLE for LASSO selection under mild model misspecification, we only
considered the NSAID dataset, where the treatment mechanism could be estimated satisfactorily
with main term linear models. This data set was first created by [Brookhart et al., 2006], and
further studied by [Rassen and Schneeweiss, 2012, Schneeweiss et al., 2009].
5.1 Nonsteroidal Anti-inflammatory Drugs Study
In this study, the observations were sampled from a population of patients aged 65 years and older
who were enrolled in both Medicare and the Pennsylvania Pharmaceutical Assistance Contract for
the Elderly (PACE) programs between 1995 and 2002. The treatment is a binary indicator taking
on values of 1 for patients who received a selective COX-2 inhibitor and 0 for patients who received
8
a non-selective nonsteroidal anti-inflammatory drug. The outcome is also a binary indicator taking
on values of 1 for patients who are diagnosed with gastrointestinal (GI) complications during the
follow-up periods, and 0 otherwise.
To adjust for potential confounders, some predefined baseline pre-treatment covariates were
collected (e.g. age, gender, race). To further adjust for confounding we implemented a widely
used variable selection algorithm for healthcare claims databases, known as the high-dimensional
propensity score (hdPS) (discussed further below) [Schneeweiss et al., 2009]. The dataset for this
study included 9, 470 claims codes, which were clustered into 8 categories, including ambulatory
diagnoses, ambulatory procedures, hospital diagnoses, hospital procedures, nursing home diagnoses,
physician diagnoses, physician procedures and prescription drugs. The value for each claims code
denotes the number of times the respective patient received the healthcare procedure corresponding
to the code during a 12 month baseline period prior to treatment initiation. Thus all of the claims
data are non-negative integers.
Table 1: Brief summary of the NSAID study databases
Sample Size 49, 653
# of Baseline Covariates 22
# of Code Resource 8
# of Claims Code 9, 470
5.2 The High-Dimensional Propensity Score (hdPS) to Learn from Health In-
surance Data
Claims data are usually high-dimensional (pc = 9, 470 in this study) due to large amounts of
healthcare diagnoses and procedures. Further, claims data are often highly sparse as each patient
often receives only a few diagnoses. To address these issues, the hdPS variable selection algorithm
was introduced by [Schneeweiss et al., 2009] to generate hundreds of baseline variables from claims
codes, and then rank them by their potential confounding impact. Its core part is outlined in the
following steps:
1. Cluster the codes according to their source 3: this is determined manually based on the origin
and quality of data feeds and is unique to the database being used. In this study, the codes
come from 8 sources.
2. Identify candidate codes in each cluster: for each code count c, compute its empirical preva-
lence pn,c = En I(c > 0), rank all covariates by max(pn,c, 1−pn,c), and select the top k1 codes
within each cluster. In the NSAID study, we have 8k1 claims covariates left after this step.
3. Generate hdPS covariates: For each claims covariates, ci, for each individual, i, construct
three indicator variables where: c
(1)
i is equal to one if and only if (iff) ci is positive, c
(2)
i is
equal to one iff ci is larger than the median of {ci : 1 ≤ i ≤ n}, and c(3)i is equal to one iff ci
is larger than the 75%-quantile of {ci : 1 ≤ i ≤ n}. We denote these new covariates as “hdPS
covariates”. For the empirical example in this study, this step results in 24k1 generated hdPS
covariates.
4. Select hdPS covariates for confounding adjustment: Use the Bross formula [Bross, 1954,
Schneeweiss et al., 2009] to rank each hdPS covariate, c, by its potential for confounding bias:
3We replace the term “data dimension” in [Schneeweiss et al., 2009] with “source” to avoid ambiguity.
9
Bias(c) =
En(c = 1|A = 1)(rrn(c)− 1) + 1
En(c = 1|A = 0)(rrn(c)− 1) + 1
with
rrn(c) =
En(Y = 1|c = 1)
En(Y = 1|c = 0)
where En denotes the empirical distribution of data.
Covariates are then ranked by descending order of | log(Bias(c))|. We then select the first k2
ordered hdPS covariates among the total 24k1 hdPS (generated) covariates from step 3.
The hdPS algorithm has been used in studies evaluating the effectiveness of prescription drugs
and medical procedures using healthcare claims data in the U.S. [Kumamaru et al., 2016, Le et al.,
2013, Patorno et al., 2014, Schneeweiss et al., 2010], Canada [Dormuth et al., 2014, Filion et al.,
2013, Guertin et al., 2016] , Europe [Enders et al., 2017, Garbe et al., 2013, Hallas and Potteg̊ard,
2017], and electronic health records [Neugebauer et al., 2015, Toh et al., 2011]. [Schneeweiss
et al., 2017] evaluated a range of algorithms to improve covariate ranking based on the empirical
covariate outcome relationship without any meaningful improvement over the ranking using the
Bross formula. [Ju et al., 2017c] evaluated various choices for the parameters k1 and k2 within the
hdPS algorithm, and found that the performance of the hdPS was not sensitive to choices for k1
and k2 as long as the hyper-parameter pair were within a reasonable range. For this study, we let
k1 = 100 and k2 = 200. For simplicity, we denote the combined set of predefined baseline covariates
and selected hdPS covariates as W .
6 Quasi-Experiment
6.1 Simulation Setting
In this simulation, we generated partially synthetic data based on the NSAID data set. We designed
our own conditional distribution of the outcome, Y , given treatment, A, and baseline covariates,
W , while keeping the structure of the treatment mechanism g0(A|W ) so that the relationships
between covariates with treatment assignment were preserved [Franklin et al., 2014]. In our study,
the conditional distribution of the outcome was defined as:
Yi = 2 + βWi +Ai + i (7)
where i is drawn independently from the standard normal distribution. We then selected 40
covariates that had the highest Pearson correlation with treatment A. The coefficient of β in
equation 7 was set to zero for all the non-selected covariates. The coefficient for the selected
covariates was sampled from separate and independent standard normal distributions, and were
fixed across all simulations. We define the marginal distribution of W as the empirical distribution
of Wi for i ∈ 1 . . . n. The parameter of interest is the ATE, thus it is identifiable if we know the
distribution of the conditional response Y |A,W and marginal distribution of W .
In our simulation, we considered two settings. In the first setting, only the first 10 out of 40
confounders were used to estimate Q̄0. In the second setting, Q̄0 was estimated using the first 20
out of 40 confounders.
By the description above, we have the following:
10
• There are only 40 confounders in total.
• The true value of the parameter of interest (ATE) is 1.
• The treatment mechanism g0(A|W ) comes from a real world data generating distribution,
which is usually non-linear. [Ju et al., 2017c] showed that the PS in this example can be
estimated well by linear models. Therefore, in this example the PS model is only mildly
misspecified.
• Both Q̄0 and g0 are estimated with a misspecified model: Q̄0 is estimated with an incomplete
predictor set; g0 is estimated with linear model, while there is no reason to believe it is truly
linear.
The results are computed across 500 replications, each with sample sizes of 1000.
6.2 Competing Estimators
In this study, we focused on PS based estimators, including inverse probability of treatment weight
(IPW) estimator, Hajek type IPW estimator, double robust (augmented) inverse probability of
treatment weight (DR-IPW, or A-IPW) estimator, Hajek type Bias-correction (HBC) Estimator,
weighted regression (WR) estimator, targeted maximum likelihood estimator (TMLE), and the
proposed two collaborative-TMLE estimators.
For all PS based estimators, we consider two variations. For the first variation, we first used
the cross-validated LASSO (CV-LASSO) algorithm to find the regularization parameter λCV of
LASSO for PS estimation, and then plugged it into the final estimators. In the second variation,
we first applied C-TMLE1, and use LASSO with the regularization parameter λC−TMLE selected
by C-TMLE1 to estimate the PS, and then plug it into the estimator. Taking IPW as example, we
used “IPW” to denote the first variation, and “IPW*” for the second variation.
It is important to note that in this case, “TMLE*” is actually a variation of collaborative
TMLE, as the PS model is selected collaboratively [Gruber and van der Laan, 2010, van der Laan
et al., 2010]. However, it is different from the proposed C-TMLE algorithms, as it does not solve
the critical equation 5.
It is also important to note that both C-TMLE and CV-LASSO use cross-validation. For sim-
plicity, and to avoid ambiguity, we use term “CV” to denote the non-collaborative model selection
procedure which relies on the cross-validation w.r.t. the prediction performance for the treatment
mechanism itself (e.g. the model selection step in CV-LASSO).
6.3 Point Estimation
We first compared the variance, bias, and mean square error (MSE) for the point estimation from
all the competing estimators in two settings.
Table 2 and figure 1 show the performance of all the competing estimators. IPW has very
large variance and bias, which might due to the violation of the positivity assumption. We can
see that TMLE*, C-TMLE1, CTMLE0, and CTMLE0* outperformed other estimators, with each
having similar performance. In addition, C-TMLE0* did not show any improvement compared to
C-TMLE0. This is consistent with previous results [Ju et al., 2017b, van der Laan et al., 2017].
We also evaluated the relative performance of other PS based estimators with gn selected by
C-TMLE, compared with gn selected by CV. For IPW, the performance was still poor. However, for
all of the other estimators that rely on the estimated PS, the performance improved considerably.
Taking the first setting as an example, the relative empirical efficiency of DR-IPW* compared
11
●●● ●
●●●
●● ●●● ●
●●●●
●● ●● ●
●● ● ●● ●●●
●● ● ●
●● ●
● ●● ●●
●●●
● ●● ●●● ●
● ●● ●
●●● ●● ● ●
● ●● ●●●●
G−comp
Hajek−IPW
Hajek−IPW*
DR−IPW
DR−IPW*
HBC
HBC*
WR
WR*
TMLE
TMLE*
CTMLE0
CTMLE0*
CTMLE1
0.50 0.75 1.00 1.25 1.50
Estimated ATE
E
st
im
at
or
●● ●
●●
●● ●●●
● ●
●●
●●●● ●●
●●●
● ●
●●
●
●
●●● ●
● ●●● ● ●
●●
G−comp
Hajek−IPW
Hajek−IPW*
DR−IPW
DR−IPW*
HBC
HBC*
WR
WR*
TMLE
TMLE*
CTMLE0
CTMLE0*
CTMLE1
0.50 0.75 1.00 1.25 1.50
Estimated ATE
E
st
im
at
or
Figure 1: Boxplot of the estimated ATE for each estimator across 500 replications, when the initial
estimate is fit on 10/20 out of 40 confounders.
to DR-IPW was MSE(DR-IPW)MSE(DR-IPW*) = 1.52, while for TMLE it was
MSE(TMLE)
MSE(TMLE*) = 1.66. The relative
empirical efficiency for both of these estimators is improved with a reduction in bias and slight
increase in variance. These empirical results are consistent with previous theory [Ju et al., 2017b,
van der Laan et al., 2017] showing that the model selected by external CV is usually over-smoothed.
These results illustrate the weakness of using “external” CV for PS model selection.
6.4 Confidence Interval
In this section, we evaluate the coverage and the length of the confidence intervals (CIs) for all the
double robust estimators.
In both settings, TMLE* and C-TMLE1 had the best coverage. We can see that for other
estimators, the length of the CIs were usually smaller/under-estimated. This resulted in a less
satisfactory coverage even though the point estimation had similar performance (e.g. compare
C-TMLE0 to C-TMLE1). With collaboratively selected gn, the coverage of TMLE and DR-IPW
improved significantly. These empirical results illustrate that a more targeted propensity score
model selection can improve both causal estimation and inference.
6.5 Pairwise Comparison of Efficient Estimators
In this subsection, we studied the pairwise comparisons for several pairs of the efficient estimators,
TMLE, C-TMLE, and DR-IPW, with different PS estimators. The purpose of these pairwise
comparisons is to help in understanding the contribution of the collaborative estimation of the PS.
We used the shape and color of the points to represent the coverage information of the CIs for each
estimates.
6.5.1 Impact of Collaborative Propensity Score Model Selection
We first compared the two pairs. Within the pair, both of the estimators were identical except
each had a different PS estimator. The first pair compared TMLE to TMLE*, and the second pair
compared C-TMLE0 to CTMLE0*.
From figure 2a and 2b, we can see that a more targeted PS model contributes substantially to
the estimation. The vanilla TMLE underestimated the ATE, while TMLE* is close to unbiased.
The variance of the two estimators are similar.
From figure 3a and 3b we can see that the improvement for the CTMLE0 pair is not as significant
as the improvement for the TMLE pair. Interestingly, most of the poor performance in the CIs
12
Table 2: Performance of Point Estimation for Estimators when the initial estimate Q̄n of Q̄0 is
estimated on 10 and 20 out of 40 confounders. The results are computed based on simulations
across 500 replications, each with a sample size of 1000 based on the NSAID study. All of the
numeric values are on a scale of 10−2.
Initial Fit unadj G-comp WR WR* Hajek-BC Hajek-BC*
10/40 Bias -59.29 -9.69 -5.68 -3.11 -15.54 -12.29
SE 8.43 3.36 2.66 2.75 5.80 6.63
MSE 35.87 1.05 0.39 0.17 2.75 1.95
20/40 Bias -59.91 -4.72 -2.77 -2.12 -7.56 -5.47
SE 8.36 2.73 2.27 1.92 4.10 4.54
MSE 36.59 0.30 0.13 0.08 0.74 0.51
Initial Fit IPW IPW* Hajek-IPW Hajek-IPW* DR-IPW DR-IPW*
10/40 Bias 95.43 128.97 -25.86 -13.61 -6.07 -3.12
SE 36.55 91.38 4.85 8.21 2.63 3.02
MSE 104.40 249.69 6.92 2.53 0.44 0.19
20/40 Bias 97.11 125.85 -25.60 -13.70 -2.92 -1.95
SE 35.98 90.85 4.77 8.56 2.26 2.17
MSE 107.23 240.75 6.78 2.61 0.14 0.09
Initial Fit TMLE TMLE* CTMLE1 CTMLE0 CTMLE0*
10/40 Bias -5.49 -1.23 -1.40 0.70 -0.64
SE 2.57 3.46 3.56 3.38 4.40
MSE 0.37 0.13 0.15 0.12 0.20
20/40 Bias -2.68 -1.28 -1.38 0.08 -0.95
SE 2.19 2.53 2.53 2.85 3.07
MSE 0.12 0.08 0.08 0.08 0.10
Table 3: Coverage of the 95% confidence intervals for semi-parametric efficient estimators when
the initial estimate Q̄n of Q̄0 is estimated on 10 and 20 out of 40 confounders. The results are
computed across 500 replications, each with sample sizes of 1000 based on the NSAID study. All
of the numerical values are multiplied by 100.
CTMLE1 CTMLE0 CTMLE0* DR-IPW DR-IPW* TMLE TMLE*
10/40 Coverage 0.926 0.920 0.910 0.458 0.914 0.526 0.942
Average Length 0.142 0.115 0.142 0.120 0.159 0.119 0.144
20/40 Coverage 0.934 0.872 0.898 0.748 0.928 0.790 0.946
Average Length 0.105 0.087 0.103 0.088 0.112 0.087 0.106
for CTMLE0 is from the over-estimated point estimate, while for CTMLE0* is mainly from under-
estimation of the point estimate.
As discussed in [Ju et al., 2017b, van der Laan et al., 2017], such ignorable improvement with
collaboratively selecting gn for the CTMLE0 pair might be due to the redundant collaborative
estimation step. Thus, it is not necessary to both select the PS model using C-TMLE and solve
for the extra clever covariate.
6.5.2 Contribution of Solving Extra Critical Equation
We compared TMLE with C-TMLE0. The only difference between these two estimators is that
C-TMLE0 solves for the extra clever covariate, which guarantees that the critical equation is solved.
Figure 4 shows the improvement of solving an additional clever covariate. C-TMLE0 is less
biased compared with TMLE. It is interesting to see that the performance of the estimator can
improve substantially with such small change. In addition, this additional change almost requires
no additional computation, which makes it more favorable among proposed C-TMLEs when the
13
● ● ●
●
●
●
●
●
●
●
●
●
●●
●●
●●
●
●●
●
●●
●●
●
●
●
●
●
●
●
●
●●
●●● ●●
●
●
●
●● ●●
●
●
●
●
●
● ●
●
● ●●
●●●
●
●
●●
●
●
●
●
●
0.8
0.9
1.0
1.1
1.2
0.8 0.9 1.0 1.1 1.2
TMLE*
T
M
LE
●
None of the CIs covered
CI of y−axis covered
CI of x−axis covered
Both of the CIs covered
(a) Comparison of TMLE and
TMLE*, with the initial estimate Q0n
adjusting for 10 out of 40 confounders.
●●●
● ●
●
●
● ●●
●●
●●●●
●● ●●●
●
●
●●●●
●
● ●
●
0.8
0.9
1.0
1.1
1.2
0.8 0.9 1.0 1.1 1.2
TMLE*
T
M
LE
●
None of the CIs covered
CI of y−axis covered
CI of x−axis covered
Both of the CIs covered
(b) Comparison of TMLE and
TMLE*, with the initial estimate Q0n
adjusting for 20 out of 40 confounders.
Figure 2: Comparison of TMLE wand TMLE*. The only difference within the pair the how the
estimator gn is selected
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
0.8
0.9
1.0
1.1
1.2
0.8 0.9 1.0 1.1 1.2
CTMLE0
C
T
M
LE
0*
●
None of the CIs covered
CI of y−axis covered
CI of x−axis covered
Both of the CIs covered
(a) Comparison of C-TMLE0 and C-
TMLE0*, with the initial estimate Q0n
adjusting for 10 out of 40 confounders.
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
0.8
0.9
1.0
1.1
1.2
0.8 0.9 1.0 1.1 1.2
CTMLE0
C
T
M
LE
0*
●
None of the CIs covered
CI of y−axis covered
CI of x−axis covered
Both of the CIs covered
(b) Comparison of C-TMLE0 and C-
TMLE0*, with the initial estimate Q0n
adjusting for 20 out of 40 confounders.
Figure 3: Comparison of CTMLE0 and CTMLE0*. The only difference within the pair the how
the estimator gn is selected
computation resources are limited.
6.5.3 Comparison of Variations of C-TMLE
We compared the two pairs of variations of C-TMLEs. We used C-TMLE1 as the benchmark, as
it gave the best performance for both point estimation and confidence interval coverage.
Figure 5a and 5b show the pairwise performance of C-TMLE1 and C-TMLE0. Both estimators
performed well with respect to the MSE. Although the distribution of points looks similar and have
variances that appear similar, there were more CIs from C-TMLE0 that failed to cover the truth. In
addition, the failures from C-TMLE1 mainly resulted from the under-estimation of the estimates. In
comparison, the failures from C-TMLE0 primarily came from both under/over-estimated estimates.
This suggests that the relatively poor CI coverage of C-TMLE0 might be due to its under-estimated
standard error.
14
●●●●
●
●
●●
●
●
● ● ●
●●
●● ●● ●● ●
●
● ●●
●
●
●●
●
●
●
●●
●
●
● ●●
●●
●
●
●
●
●
●
●●
●
●
●
●
●
●
0.8
0.9
1.0
1.1
1.2
0.8 0.9 1.0 1.1 1.2
CTMLE0
T
M
LE
●
None of the CIs covered
CI of y−axis covered
CI of x−axis covered
Both of the CIs covered
(a) Comparison of TMLE and C-
TMLE0, with the initial estimate Q0n
adjusting for 10 out of 40 confounders.
●
●
●●
●
●●
●
●●
● ●● ●
●●
● ●
●
●
●
●
● ●●
● ●
0.8
0.9
1.0
1.1
1.2
0.8 0.9 1.0 1.1 1.2
CTMLE0
T
M
LE
●
None of the CIs covered
CI of y−axis covered
CI of x−axis covered
Both of the CIs covered
(b) Comparison of TMLE and C-
TMLE0, with the initial estimate Q0n
adjusting for 20 out of 40 confounders.
Figure 4: We compared TMLE with C-TMLE0, where the only difference between the two estima-
tors is that C-TMLE0 solves the extra critical equation with additional clever covariates.
●●
●
●
●
●
●●
●
●
●
●
●
●
●
●
● ●
● ●
●●
●
●
● ●
●●
●
0.8
0.9
1.0
1.1
1.2
0.8 0.9 1.0 1.1 1.2
CTMLE1
C
T
M
LE
0
●
None of the CIs covered
CI of y−axis covered
CI of x−axis covered
Both of the CIs covered
(a) Comparison of C-TMLE1 and C-
TMLE0, with the initial estimate Q0n
adjusting for 10 out of 40 confounders.
●
●
●●●
● ●
●
●
● ●
●●●
●●
●
●
●
●
●
●
●
● ●
●
●
●
●
●●●
●
●
0.8
0.9
1.0
1.1
1.2
0.8 0.9 1.0 1.1 1.2
CTMLE1
C
T
M
LE
0
●
None of the CIs covered
CI of y−axis covered
CI of x−axis covered
Both of the CIs covered
(b) Comparison of C-TMLE1 and C-
TMLE0, with the initial estimate Q0n
adjusting for 20 out of 40 confounders.
Figure 5: We compared C-TMLE1 with C-TMLE0.
7 Real Data Analysis
In this section, we applied the methods described previously to the NSAID study. As discussed
previously, the goal of this study is to compare the effectiveness of two treatments on improving the
risk (probability) of being diagnosed with severe gastrointestinal complications during the follow-up
period. The treatment group was prescribed a selective COX-2 inhibitor, while the control group
was prescribed a non-selective nonsteroidal anti-inflammatory drug. To compare the safety of the
two treatments, we used the average treatment effect (ATE) as our target parameter.
7.1 Method
We followed the hdPS procedure in subsection 5.2, where we generated the hdPS covariates with
k1 = 100 and k2 = 200.
We investigated three kinds of initial estimate Q̄0n for TMLE and C-TMLE:
• The initial estimate was given by the group means of the treatment and control group.
• The initial estimate was estimated by Super Learner with only baseline covariates.
15
Table 4: The point estimates for all TMLE/C-TMLE estimators. All the values are on a scale of
10−2.
names TMLE TMLE* CTMLE1 CTMLE0 CTMLE0*
Point Estimate -0.2381 -0.2491 -0.2491 -0.2208 -0.2093
Estimated SE 0.1414 0.1487 0.1486 0.1417 0.1502
• The initial estimate was estimated by Super Learner with both baseline covariates and hdPS
covariates.
For Super Learners [Polley and van der Laan, 2010, van der Laan et al., 2007], we used library with
LASSO [Friedman et al., 2009], Gradient Boosting Machine [Ridgeway et al., 2006], and Extreme
Gradient Boosting [Chen and He, 2015].
7.2 Results
●
●
●
●
●
TMLE
TMLE*
CTMLE1
CTMLE0
CTMLE0*
−0.0075 −0.0050 −0.0025 0.0000
Estimated ATE
E
st
im
at
or
(a) Influence curve based con-
fidence interval for all TMLE
based estimators for NSAID
study, with the group means as
initial estimate.
●
●
●
●
●
TMLE
TMLE*
CTMLE1
CTMLE0
CTMLE0*
−0.0075 −0.0050 −0.0025 0.0000
Estimated ATE
E
st
im
at
or
(b) Influence curve based con-
fidence interval for all TMLE
based estimators for NSAID
study, with initial estimate pro-
vided by Super Learner with
baseline covariates.
●
●
●
●
●
TMLE
TMLE*
CTMLE1
CTMLE0
CTMLE0*
−0.0075 −0.0050 −0.0025 0.0000
Estimated ATE
E
st
im
at
or
(c) Influence curve based con-
fidence interval for all TMLE
based estimators for NSAID
study, with the initial estimate
provided by Super Learner with
baseline covariates and hdPS co-
variates.
Figure 6: Confidence intervals for TMLE based estimators for the NSAID study.
Figure 6 shows the point estimates and 95% CIs for all TMLE and C-TMLE estimators. We
use the blue line to denote the null hypothesis (H0 : Ψ0 = 0), the green line denotes the initial
estimate, and use red line to denote the results from the naive difference in means estimator
(Ψnaiven = 0.0949%).
Figure 6c shows that, after adjusting for selection bias using the TMLE/C-TMLE algorithms,
all the estimators have similar results, with the estimated ATE being in the negative direction.
Similar to the results in simulation, the CIs for TMLE* and C-TMLE0* were wider with PS
estimator selected by C-TMLE1, than with PS estimator selected by CV. The details of the point
estimates and confidence intervals are reported in table 4. We computed the analytic influence
curve based confidence interval. None of these intervals, except C-TMLE0*, covered the naive
estimate. However, all of them covered the null hypothesis.
In addition, we also compared the results from different initial estimator. Figure 6 shows the
results for all estimators, with group means (6a), Super Learner with baseline covariates (6b), and
Super Learner with both baseline and hdPS covariates (6c). The CV.LASSO PS estimator selected
16
137 covariates, with regularization parameter λ = 0.001159. The C-TMLE estimator with naive
initial estimate selected 164 covariates, with λ = 0.000266. The C-TMLE estimator uses the initial
estimate provided by SL with only baseline covariate have similar results: it selected 166 covariates
with λ = 0.000238. For the C-TMLE with initial estimate provided by SL with all covariates,
it selected the same model as CV.LASSO. It shows when the initial estimate is biased, C-TMLE
selected model with less regularization, thus adjusted more potential confounders. In addition,
all the covariates that included by LASSO selected by C-TMLE but not by CV.LASSO are hdPS
covariates. This suggests such additional hdPS covariates can be confounder. However, as they
have relatively weaker predictive performance for treatment mechanism, they would be mistakenly
removed by CV.LASSO.
−8 −7 −6 −5 −4 −3
1.
20
1.
24
1.
28
log(Lambda)
B
in
om
ia
l D
ev
ia
nc
e
166 156 132 97 64 41 26 10 3
Figure 7: Binomial deviance for λ selected by CV.LASSO and C-TMLE with different initial
estimators.
Figure 7 shows the details of the CV loss for each selected PS estimator. The blue line is the λ
selected by C-TMLE1 with naive estimator. Its CV binomial deviance (twice the binomial negative
log-likelihood) is 1.199632. The purple line is the λ selected by C-TMLE1 with initial estimator
provided by SL with only baseline covariates. Its CV binomial deviance is 1.199668. The red line
is the λ selected by CV.LASSO, and C-TMLE1 with initial estimator provided by SL with both
baseline and hdPS covariates. Its CV binomial deviance is 1.199288. This may be due to the signals
in all the initial estimates are too weak: all the initial estimates of ATE are very close to 0. In
addition, all the confidence intervals covered null hypothesis. The additive treatment effect in this
study is not statistically significant.
7.3 Conclusions from the Empirical Study
Patients who received selective COX-2 inhibitors were less likely to get severe gastrointestinal
complications during the follow-up period, compared to the patients who received a non- selective
nonsteroidal anti-inflammatory drug. The average additive treatment effect was approximately
−0.249%, which was estimated using TMLE* and C-TMLE1 (the two estimators achieved the best
performance in simulations). The point estimates for other estimators were similar.
Based on the results, the additive treatment effect was not statistically significant. However, this
17
does not necessary imply that there is no difference between the two treatments. More observations
or better designed studies are necessary for further comparison of these treatments.
8 Conclusion
In this study, we described two variations of C-TMLE, and assessed their performance on quasi-
experiments based on real empirical data. We assessed the performance of several well studied PS-
based estimators in settings where estimated models for both the conditional response E(Y |A,W )
and the propensity score E(A|W ) were misspecified. In particular, we focused on using the LASSO
estimator for the PS model. In comparison to our previous work, this study provides a more de-
tailed evaluation of all the estimators by not only assessing their point estimation, but also the
confidence intervals for each of the estimators. Results showed that the C-TMLE1 and C-TMLE0
estimators had the best performance in terms of both point estimation and CI. We also evaluated
the impact of directly applying the model that was collaboratively selected by C-TMLE1 to other
PS non-collaborative estimators. Results showed that all of the PS-based estimators, except the
vanilla IPW estimator, improved substantially, in terms of the point estimation, when the collab-
oratively selected model was applied to these estimators. However, C-TMLE0* did not improve
when compared to C-TMLE0 for point estimation. Finally, pairwise comparisons of estimators
were also evaluated to help in understanding the contribution of the collaborative model selection.
In comparison to previous work, this study is the first to thoroughly investigate and compare
the confidence intervals coverage and length for the novel C-TMLE algorithms, as well as some
commonly used competitors. Further, it offers detailed pair-wise comparisons with other competing
estimators using different PS model selection procedures. Finally, this study utilizes the quasi-
experiments based on a real electronic healthcare dataset and then makes inference on the same
database. This makes the conclusions from the real data analysis more convincing.
In conclusion, this study introduces a new direction for PS model selection. It shows the
insufficiency of using “external” cross-validation for the LASSO estimator. Thus, we conclude
that the ensemble PS estimators, which rely on “external” cross-validation, are not optimal (w.r.t.
the causal parameter) for maximizing confounding control. Ensemble learning that is based on
C-TMLE is a potential solution to address this issue. We leave this for the future work.
18
References
H. Bang and J. M. Robins. Doubly robust estimation in missing data and causal inference models.
Biometrics, 61(4):962–973, 2005.
D. Benkeser, S. D. Lendle, C. Ju, and M. J. van der Laan. Online cross-validation-based ensemble
learning. U.C. Berkeley Division of Biostatistics Working Paper Series., page Working Paper
355. http://biostats.bepress.com/ucbbiostat/paper355, 2016.
M. A. Brookhart, P. Wang, D. H. Solomon, and S. Schneeweiss. Evaluating short-term drug
effects using a physician-specific prescribing preference as an instrumental variable. Epidemiology
(Cambridge, Mass.), 17(3):268, 2006.
I. Bross. Misclassification in 2 x 2 tables. Biometrics, 10:478–486, 1954.
C. M. Cassel, C. E. Särndal, and J. H. Wretman. Some results on generalized difference estimation
and generalized regression estimation for finite populations. Biometrika, 63(3):615–620, 1976.
C.-M. Cassel, C. E. Särndal, and J. H. Wretman. Foundations of inference in survey sampling.
Wiley, 1977.
T. Chen and T. He. Xgboost: extreme gradient boosting. R package version 0.4-2, 2015.
C. R. Dormuth, K. B. Filion, J. M. Paterson, M. T. James, G. F. Teare, C. B. Raymond, E. Rahme,
H. Tamim, and L. Lipscombe. Higher potency statins and the risk of new diabetes: multicentre,
observational study of administrative databases. BMJ, 348:g3244, 2014.
D. Enders, C. Ohlmeier, and E. Garbe. The potential of high-dimensional propensity scores in
health services research: An exemplary study on the quality of care for elective percutaneous
coronary interventions. Health Services Research, 2017.
K. B. Filion, D. Chateau, L. E. Targownik, A. Gershon, M. Durand, H. Tamim, G. F. Teare,
P. Ravani, P. Ernst, C. R. Dormuth, et al. Proton pump inhibitors and the risk of hospitalisation
for community-acquired pneumonia: replicated cohort studies with meta-analysis. Gut, pages
gutjnl–2013, 2013.
J. M. Franklin, S. Schneeweiss, J. M. Polinski, and J. A. Rassen. Plasmode simulation for the
evaluation of pharmacoepidemiologic methods in complex healthcare databases. Computational
Statistics & Data Analysis, 72:219–226, 2014.
J. M. Franklin, W. Eddings, R. J. Glynn, and S. Schneeweiss. Regularized regression versus the
high-dimensional propensity score for confounding adjustment in secondary database analyses.
American journal of epidemiology, 187(7):651–659, 2015.
J. Friedman, T. Hastie, and R. Tibshirani. glmnet: Lasso and elastic-net regularized generalized
linear models. R package version, 1, 2009.
E. Garbe, S. Kloss, M. Suling, I. Pigeot, and S. Schneeweiss. High-dimensional versus conventional
propensity scores in a comparative effectiveness study of coxibs and reduced upper gastrointesti-
nal complications. European Journal of Clinical Pharmacology, 69(3):549–557, 2013.
S. Gruber and M. J. van der Laan. An application of collaborative targeted maximum likelihood
estimation in causal inference and genomics. The International Journal of Biostatistics, 6(1):
Article 18, 2010.
19
J. R. Guertin, E. Rahme, and J. LeLorier. Performance of the high-dimensional propensity score
in adjusting for unmeasured confounders. European Journal of Clinical Pharmacology, 72(12):
1497–1505, 2016.
J. Hájek. Comment on a paper by D. Basu. Foundations of Statistical Inference, 236, 1971.
J. Hallas and A. Potteg̊ard. Performance of the high-dimensional propensity score in a nordic
healthcare model. Basic & Clinical Pharmacology & Toxicology, 120(3):312–317, 2017.
G. W. Imbens. The role of the propensity score in estimating dose-response functions. Biometrika,
87(3):706–710, 2000.
C. Ju, A. Bibaut, and M. J. van der Laan. The relative performance of ensemble methods with
deep convolutional neural networks for image classification. arXiv preprint arXiv:1704.01664,
2017a.
C. Ju, A. Chambaz, J. Häggström, and M. J. van der Laan. On model slection for treat-
ment/censoring mechanism. Working Paper, 2017b.
C. Ju, M. Combs, S. D. Lendle, J. M. Franklin, R. Wyss, S. Schneeweiss, and M. J. van der
Laan. Propensity score prediction for electronic healthcare databases using super learner and
high-dimensional propensity score methods. arXiv preprint arXiv:1703.02236, 2017c.
C. Ju, S. Gruber, S. D. Lendle, A. Chambaz, J. M. Franklin, R. Wyss, S. Schneeweiss, and M. J.
van der Laan. Scalable collaborative targeted learning for high-dimensional data. arXiv preprint
arXiv:1703.02237, 2017d.
J. D. Kang and J. L. Schafer. Demystifying double robustness: A comparison of alternative strate-
gies for estimating a population mean from incomplete data. Statistical Science, 22(4):523–539,
2007.
H. Kumamaru, J. J. Gagne, R. J. Glynn, S. Setoguchi, and S. Schneeweiss. Comparison of high-
dimensional confounder summary scores in comparative studies of newly marketed medications.
Journal of Clinical Epidemiology, 76:200–208, 2016.
H. V. Le, C. Poole, M. A. Brookhart, V. J. Schoenbach, K. J. Beach, J. B. Layton, and T. Stürmer.
Effects of aggregation of drug and diagnostic codes on the performance of the high-dimensional
propensity score algorithm: an empirical example. BMC Medical Research Methodology, 13(1):
142, 2013.
B. K. Lee, J. Lessler, and E. A. Stuart. Improving propensity score weighting using machine
learning. Statistics in Medicine, 29(3):337–346, 2010.
R. Neugebauer, J. A. Schmittdiel, Z. Zhu, J. A. Rassen, J. D. Seeger, and S. Schneeweiss. High-
dimensional propensity score algorithm in comparative effectiveness research with time-varying
interventions. Statistics in Medicine, 34(5):753–781, 2015.
E. Patorno, R. J. Glynn, S. Hernández-Dı́az, J. Liu, and S. Schneeweiss. Studies with many
covariates and few outcomes: selecting covariates and implementing propensity-score–based con-
founding adjustments. Epidemiology, 25(2):268–278, 2014.
R. Pirracchio, M. L. Petersen, and M. van der Laan. Improving propensity score estimators’
robustness to model misspecification using super learner. American Journal of Epidemiology,
181(2):108–119, 2015.
20
E. C. Polley and M. J. van der Laan. Super learner in prediction. U.C. Berkeley Division of
Biostatistics Working Paper Series., page Working Paper 266. http://biostats.bepress.com/
ucbbiostat/paper266, 2010.
K. E. Porter, S. Gruber, M. J. van der Laan, and J. S. Sekhon. The relative performance of targeted
maximum likelihood estimators. The International Journal of Biostatistics, 7(1):Article 31, 2011.
J. A. Rassen and S. Schneeweiss. Using high-dimensional propensity scores to automate confounding
control in a distributed medical product safety surveillance system. Pharmacoepidemiology and
Drug Safety, 21(S1):41–49, 2012.
G. Ridgeway et al. gbm: Generalized boosted regression models. R package version, 1(3):55, 2006.
J. M. Robins and A. Rotnitzky. Semiparametric efficiency in multivariate regression models with
missing data. Journal of the American Statistical Association, 90(429):122–129, 1995.
J. M. Robins, A. Rotnitzky, and L. P. Zhao. Estimation of regression coefficients when some
regressors are not always observed. Journal of the American Statistical Association, 89(427):
846–866, 1994.
P. R. Rosenbaum and D. B. Rubin. The central role of the propensity score in observational studies
for causal effects. Biometrika, pages 41–55, 1983.
D. B. Rubin. Formal mode of statistical inference for causal effects. Journal of Statistical Planning
and Inference, 25(3):279–292, 1990.
S. Schneeweiss, J. A. Rassen, R. J. Glynn, J. Avorn, H. Mogun, and M. A. Brookhart. High-
dimensional propensity score adjustment in studies of treatment effects using health care claims
data. Epidemiology (Cambridge, Mass.), 20(4):512, 2009.
S. Schneeweiss, A. R. Patrick, D. H. Solomon, C. R. Dormuth, M. Miller, J. Mehta, J. C. Lee, and
P. S. Wang. Comparative safety of antidepressant agents for children and adolescents regarding
suicidal acts. Pediatrics, 125(5):876–888, 2010.
S. Schneeweiss, W. Eddings, R. J. Glynn, E. Patorno, J. Rassen, and J. M. Franklin. Variable selec-
tion for confounding adjustment in high-dimensional covariate spaces when analyzing healthcare
databases. Epidemiology, 28(2):237–248, 2017.
R. Tibshirani. Regression shrinkage and selection via the lasso. Journal of the Royal Statistical
Society. Series B (Methodological), 58(1):267–288, 1996.
S. Toh, L. A. Garćıa Rodŕıguez, and M. A. Hernán. Confounding adjustment via a semi-automated
high-dimensional propensity score algorithm: an application to electronic medical records. Phar-
macoepidemiology and Drug Safety, 20(8):849–857, 2011.
M. van der Laan, A. Chambaz, and C. Ju. C-TMLE for continuous tuning. working paper or
preprint, Mar. 2017. URL https://hal.archives-ouvertes.fr/hal-01490380.
M. J. van der Laan, E. C. Polley, and A. E. Hubbard. Super learner. Statistical Applications in
Genetics and Molecular Biology, 6(1):Article 25, 2007.
M. J. van der Laan, S. Gruber, et al. Collaborative double robust targeted maximum likelihood
estimation. The International Journal of Biostatistics, 6(1):Article 17, 2010.
21
D. Westreich, J. Lessler, and M. J. Funk. Propensity score estimation: machine learning and
classification methods as alternatives to logistic regression. Journal of Clinical Epidemiology, 63
(8):826, 2010.
22
Appendix
A C-TMLE 1
C-TMLE1 is a straightforward instantiation of the general C-TMLE template, which generates
a sequence of PS estimators, with corresponding TMLE estimators. Then it selects the TMLE
estimator with the smallest cross-validated loss w.r.t. the causal parameter. Finally it takes one
more targeting step to make sure the critical equation 5 is solved [Ju et al., 2017b, van der Laan
et al., 2017]. Algorithm 1 shows the details of the C-TMLE1 algorithm.
Algorithm 1 Collaborative Targeted Maximum Likelihood Estimation Algorithm I
1: Construct an initial estimate Q̄0n for Q̄0 = E0(Y | A,W ).
2: Construct a sequence of propensity score model gn,λ indexed by λ, where a larger λ implies
a smoother estimator (e.g. larger regularization for LASSO, or larger bandwidth for kernel
estimator). We further set λ within the set Λ = [λmin, λcv].
3: Bound the estimated propensity score gn,λ = max{0.025,min{gn,λ, 0.975}}
4: Set k = 0
5: while Λ is not empty do
6: Apply targeting step for each gn,λ, with λ ∈ Λ, with initial estimate Q̄kn and clever covariate
Hgn,λ(A,W ) =
1−A
1−gn,λ(W ) +
A
gn,λ(W )
.
7: Select Q̄∗n,λk with the smallest empirical risk L(Q̄
∗
n,λk
(A,W )).
8: For λ ∈ [λk, λk−1], compute the corresponding TMLE using initial estimate Q̄k−1n and
propensity score estimate gn,λ. We denote such estimate with Q̄
∗
n,λ and record them.
9: Set a new initial estimate Q̄kn = Q̄
∗
n,λk
.
10: Set Λ = [λmin, λk).
11: Set k = k + 1.
12: end while
13: Select the best candidate Q̄∗n,λctmle among Q̄
∗
n,λ, with the smallest cross-validated loss, using
the same loss function as in the TMLE targeting step.
14: Pick up the corresponding initial estimate Q̄n,λctmle for Q̄
∗
n,λctmle
15: Apply targeting step to Q̄n,λctmle from the last step, with each gn,λ, λ ∈ [λmin, λctmle), yielding
a new sequence of estimate Q̄∗n,λ.
16: Select Q̄∗n = arg minQ̄∗n,λ
L(Q̄∗n,λ), λ ∈ [λmin, λctmle) with the smallest empirical loss from the
sequence in last step as the final estimate.
B C-TMLE 0
In the C-TMLE0 algorithm, we only fluctuate the initial estimate using two clever covariates,
Hgn,λ(A,W ) and H̃gn,λ(A,W ), with propensity score estimate gn,λ = gn,λcv pre-selected by external
cross-validation.
One of the main strength of this method is its computational efficiency: without generating
sequence of TMLE estimators and applying cross-validation for model selection, it is much faster
compared to C-TMLE1. Algorithm 2 shows the detail of the C-TMLE0 algorithm.
23
Algorithm 2 Collaborative Targeted Maximum Likelihood Estimation 0
1: Construct an initial estimate Q̄0n for Q̄0 = E0(Y | A,W ).
2: Estimate the propensity score and select the hyper-parameter using external cross-validation:
gn,λ = gn,λcv .
3: Apply targeting step in (4) with initial estimate Q̄0n and two clever covariates
Hgn,λ(A,W ) =
1−A
1− gn,λ(W )
+
A
gn,λ(W )
and
H̃gn,λ =−
1−A
(1− gn,λ(W ))2
(gn,λ+δ − gn,λ)
+
A
gn,λ(W )
(gn,λ+δ − gn,λ),
which gives a new estimate Q̄∗n,λcv .
4: Return the TMLE: Q̄∗n = Q̄
∗
n,λcv
24

