ar
X
iv
:1
70
6.
08
08
2v
1 
 [
st
at
.M
L
] 
 2
5 
Ju
n 
20
17
Target contrastive pessimistic risk
for robust domain adaptation
Wouter M. Kouwa,∗, Marco Looga,b
aPattern Recognition Laboratory
Delft University of Technology
Mekelweg 4, 2628 CD Delft, The Netherlands
bThe Image Group
University of Copenhagen
Universitetsparken 5, DK-2100 Copenhagen, Denmark
Abstract
In domain adaptation, classifiers with information from a source domain adapt
to generalize to a target domain. However, an adaptive classifier can perform
worse than a non-adaptive classifier due to invalid assumptions, increased sen-
sitivity to estimation errors or model misspecification. Our goal is to develop
a domain-adaptive classifier that is robust in the sense that it does not rely on
restrictive assumptions on how the source and target domains relate to each
other and that it does not perform worse than the non-adaptive classifier. We
formulate a conservative parameter estimator that only deviates from the source
classifier when a lower risk is guaranteed for all possible labellings of the given
target samples. We derive the classical least-squares and discriminant analysis
cases and show that these perform on par with state-of-the-art domain adaptive
classifiers in sample selection bias settings, while outperforming them in more
general domain adaptation settings.
Keywords: Domain adaptation, Sample Selection Bias, Covariate Shift,
Empirical Risk Minimization, Minimax
∗Corresponding author
Email address: W.M.Kouw@tudelft.nl (Wouter M. Kouw)
Preprint submitted to Pattern Recognition June 27, 2017
1. Introduction
Generalization in supervised learning relies on the fact that future samples
should originate from the same underlying distribution as the ones used for
training. However, this is not the case in settings where data is collected from
different locations, different measurement instruments are used or there is only
access to biased data. In these situations the labeled data does not represent
the distribution of interest. This problem setting is referred to as a domain
adaptation setting, where the distribution of the labeled data is called the source
domain and the distribution that one is actually interested in is called the target
domain. Most often, data in the target domain is not labeled and adapting a
source domain classifier, i.e. changing its predictions to be more suited to the
target domain, is the only means by which one can make predictions for the
target domain. Unfortunately, depending on the domain dissimilarity, adaptive
classifiers can perform worse than non-adaptive ones. In this work, we formulate
a conservative adaptive classifier that always performs at least as well as the
non-adaptive one.
Biased samplings tend to occur when one samples locally from a much larger
population [1, 2]. For instance, in computer-assisted diagnosis, biometrics col-
lected from two different hospitals will be different due to differences between the
patient populations: ones diet might not be the same as the others. Nonethe-
less, both patient populations are subsamples of the human population as a
whole. Adaptation in this example corresponds to accounting for the differ-
ences between patient populations, training a classifier on the corrected labeled
data from one hospital, and applying the adapted classifier to the other hos-
pital. Additionally, different measurement instruments cause different biased
samplings: photos of the same object taken with different cameras lead to dif-
ferent distributions over images [3]. Lastly, biases arise when one only has
access to particular subsets, such as data from individual humans in a activity
recognition task [4].
In the general setting, domains can be arbitrarily different and contain al-
2
most no mutual information, which means generalization will be extremely diffi-
cult. However, there are cases where the problem setting is more structured: in
the covariate shift setting, the marginal data distributions differ but the class-
posterior distributions are equal [5, 6, 7]. This means that the underlying true
classification function is the same in both domains, implying that a correctly
specified adaptive classifier converges to the same solution as the target classi-
fier. Adaptation occurs by weighing each source sample by how important it is
under the target distribution and training on the importance-weighed labeled
source data. A model that relies on equal class-posterior distributions can per-
form very well when its assumption is true, but it can deviate in detrimental
ways when its assumption is false.
Considering their potential, a number of papers have looked at conditions
and assumptions that allow for successful adaptation. A particular robust one
specifies the existence of a common latent embedding, represented by a set of
transfer components [8]. After mapping data onto these components, one can
train and test standard classsifiers again. Other possible assumptions include
low-data-divergence [9, 10, 11], low-error joint prediction [10, 11], the existence
of a domain manifold [12, 13, 14], restrictions to subspace transformations [15],
conditional independence of class and target given source data [16] and uncon-
foundedness [17]. The more restrictive an assumption is, the worse the classifier
tends to perform when it is invalid. One of the strengths of the estimator that
we develop in this paper is that it does not require making any assumptions on
the relationship between the domains.
The domain adaptation and covariate shift settings are very similar to the
sample selection bias setting in the statistics and econometrics communities
[18, 19, 7]. There, the bias is explicitly modeled as a variable that denotes
how likely it is for a particular sample to be selected for the training set. One
hopes to generalize to an unbiased sample, i.e., the case where each sample is
equally likely to be selected. As such, this setting can also be viewed as a case
of domain adaptation, with the biased sample set as the source domain and the
unbiased sample set as the target domain. In this case, there is even additional
3
information: the support of the source domain will be contained in the support
of the target domain. This information can be exploited, as some methods
rely on a non-zero target probability for every source sample [6, 20] Lastly, the
causal inference community has also considered causes for differing training and
testing distributions, including how to estimate and control for these differences
[21, 22, 2].
. Although not often discussed, a variety of papers have reported adaptive
classifiers that, at times, perform worse than the non-adaptive source classifier
[6, 23, 13, 24, 25, 16]. On closer inspection, this tends to happen when a classi-
fier with a particular assumption is deployed in a problem setting for which this
assumption is not valid. For example, if the assumption of a common latent rep-
resentation does not hold or when the domains are too dissimilar to recover the
transfer components, then mapping both source and target data onto the found
transfer components will result in mixing of the class-conditional distributions
[8]. Additionally, one of the most popular covariate shift approaches, kernel
mean matching (kmm), assumes that the support of the target distribution is
contained in the support of the source distribution [26, 20]. When this is not the
case, the resulting estimated weights can become very bimodal: a few samples
are given very large weights and all other samples are given near-zero weights.
This greatly reduces the effective sample size for the subsequent classifier [27].
Since the validity of the aforementioned assumptions are difficult, if not
impossible, to check, it is of interest to design an adaptive classifier that is at
least guaranteed to perform as well as the non-adaptive one. Such a property
is often framed as a minimax optimization problem in statistics, econometrics
and game theory [28]. Wen et al. constructed a minimax estimator for the
covariate shift setting: Robust Covariate Shift Adjustment (rcsa) [29] accounts
for estimation errors in the importance weights by considering their worst-case
configuration. However, this can sometimes be too conservative, as the worst-
case weights can be very disruptive to the subsequent classifier optimization.
Another minimax strategy, dubbed the Robust Bias-Aware (rba) classifier [25],
4
plays a game between a risk minimizing target classifier and a risk maximizing
target class-posterior distribution, where the adversary is constrained to pick
posteriors that match the moments of the source distribution statistics. This
constraint is important, as the adversary would otherwise be able to design
posterior probabilities that result in degenerate classifiers (e.g. assign all class-
posterior probabilities to 1 for one class and 0 for the other). However, it also
means that their approach loses predictive power in areas of feature space where
the source distribution has limited support, and thus is not suited very well for
problems where the domains are very different.
. The main contribution of our paper is that we provide an empirical risk mini-
mization framework to train a classifier that will always perform at least as well
as the naive source classifier. Furthermore, we show that a discriminant analysis
model derived from our framework will always be likelier than the naive source
model. To the best of our knowledge, strict improvements have not been shown
before.
. The paper continues as follows: section 2 presents the motivation and general
formulation of our method, with the specific case of a least-squares classifier
in section 3 and the specific case of a discriminant analysis classifier in section
4. Sections 5.2 and 5.3 show experiments on sample selection bias problems
and general domain adaptation problems, respectively, and we conclude with
discussing some limitations and implications in section 6.
2. Target Contrastive Pessimistic Risk
This section starts with the problem definition, followed by our risk formu-
lation.
2.1. Problem definition
Given a sample space, a domain refers to a particular probability measure
over this sample space. One has access to labeled data from one domain, denoted
5
the source domain, and aims to generalize to another domain, denoted the target
domain, where no labels are available. Assuming that the labels follow a random
variable Y taking values in the set {1, . . . ,K}, let S denote the random variable
associated with the source domain, with n samples drawn from pS,Y , referred
to as {(xi, yi)}ni=1, and let T denote the random variable associated with the
target domain, with m samples drawn from pY,T , referred to as {(zj , uj)}mj=1.
Both the source and target domain are measured in a D-dimensional vector
space, on the same features. The target labels u are unknown at training time
and the goal is to predict them, using only the given unlabeled target samples
{zj}mj and the given labeled source samples {(xi, yi)}
n
i .
2.2. Target Risk
The risk minimization framework formalizes risk, or the expected loss ℓ
incurred by classification function h, mapping data to classes hS : S → Y,
with respect to a particular joint labeled data distribution pS,Y (x, y); R(h) =
EpS,Y ℓ (h(x), y). By minimizing empirical risk, i.e. the approximation of the
expectation with the sample average over labeled samples {(xi, yi)}
n
i , with re-
spect to classifiers from a space of hypothetical classification functions H , one
hopes to find the function that generalizes most to novel samples. Additionally,
a regularization term that punishes classifier complexity is often incorporated
to avoid finding classifiers that are too specific to the given labeled data. For
a given data distribution, the choice of loss function, the hypothesis space and
amount of regularization largely determine the behavior of the resulting classi-
fier.
. The empirical risk in the source domain can be computed as follows:
R̂ (h | x, y) =
1
n
n
∑
i=1
ℓ (h | xi, yi) ,
with the source classifier being the classifier that is found by minimizing this
risk:
ĥS = argmin
h∈H
R̂ (h | x, y) . (1)
6
Since the source classifier does not incorporate any target data, it is essentially
entirely naive of the target domain. But, if we assume that the domains are
related in some way, then it makes sense to apply the source classifier on the
target data. To evaluate ĥS in the target domain, the empirical target risk, i.e.
the risk of the classifier with respect to target samples, is measured:
R̂
(
ĥS | z, u
)
=
1
m
m
∑
j=1
ℓ
(
ĥS | zj, uj
)
. (2)
Training on the source domain and testing on the target domain is our baseline,
non-adaptive approach. Although the source classifier does not incorporate
information from the target domain nor any knowledge on the relation between
the domains, it is often not the worst classifier. In cases where approaches rely
heavily on assumptions, the adaptive classifiers can deviate from the source
classifier in ways that lead to even larger target risks.
2.3. Contrast
We are interested in finding a classifier that is never worse than the source
classifier in terms of the empirical target risk. We formalize this desire by
subtracting the source classifiers target risk in (2) from the target risk of a
different classifier h:
R̂
(
h | z, u
)
− R̂
(
ĥS | z, u
)
(3)
If such a contrast is used as a risk minimization objective, i.e. min
h∈H
R̂(h | z, u) −
R̂(ĥS | z, u), then the risk of the resulting classifier is bounded above by the risk
of the source classifier: the maximal value of the contrast is 0, which occurs
when the same classifier is found, h = ĥS . Classifiers that lead to larger target
risks are not valid solutions to the minimization problem, which implies that
certain parts of the hypothesis space H will never be reached. As such, the
contrast implicitly constrains H in a similar way as projection estimators [30].
2.4. Pessimism
However, (3) still incorporates the target labels u, which are unknown. Tak-
ing a conservative approach, we use a worst-case labeling instead, achieved by
7
maximizing risk with respect to a hypothetical labeling q. For any classifier h,
the risk with respect to this worst-case labeling will always be larger than the
risk with respect to the true target labeling:
R̂ (h | z, u) ≤ max
q
R̂ (h | z, q) . (4)
Unfortunately, maximizing over a set of discrete labels is a combinatorial prob-
lem and is computationally very expensive. To avoid this expense, we represent
the hypothetical labeling probabilistically: qkj := p(yj = k | zj). Such a repre-
sentation is sometimes also referred to as a soft label [31]. Additionally, it means
that qj is constrained to be an element of aK−1 simplex, ∆K−1. Form samples,
there are m simplices: ∆K−1 ×∆K−1 · · · = ∆mK−1. Note that known labels can
also be represented probabilistically, for example yi = 1 ⇔ p(yi = 1 | xi) = 1,
and are sometimes referred to as crisp labels.
2.5. Target Contrastive Pessimistic Risk
Joining the contrastive target risk from (3) with the pessimistic labeling q
from (4) forms the following risk function:
R̂TCP
(
h | ĥS , z, q
)
=
1
m
m
∑
j=1
ℓ
(
h | zj , qj
)
− ℓ
(
ĥS | zj, qj
)
. (5)
We refer to the risk in equation 5 as the Target Contrastive Pessimistic risk
(tcp). Minimizing it with respect to a classifier h and maximizing it with
respect to the hypothetical labeling q, leads to the new tcp target classifier:
ĥT = argmin
h∈H
max
q∈∆m
K−1
R̂TCP
(
h | ĥS , z, q
)
. (6)
. Note that the tcp risk expresses only the performance on the target domain.
It is different from the ones used in [25] and [29], because those incorporate the
classifiers performance on the source domain as well. Our formulation contains
no evaluation on the source domain, and focuses solely on the performance gain
we can achieve with respect to the source classifier.
8
2.6. Optimization
If the loss function ℓ is restricted to be globally convex and the hypothesis
space H is a convex set, then the tcp risk with respect to h will be globally
convex and there will be a unique optimum with respect to h. The tcp risk
with respect to q is bounded linear due to the simplex, which means that it
is possible that the optimum is not unique. Nonetheless, the combination is
globally convex-linear and the existence of a saddle point, i.e. an optimum with
respect to both h and q, for the minimax objective is guaranteed [32].
Finding the saddle point can be done through first performing a gradient
descent step according to the partial derivative with respect to h, followed by
a gradient ascent step according to the partial derivative with respect to q.
However, this last step causes the updated q to leave the simplex. In order to
enact the constraint, it is projected back onto the simplex after performing the
gradient step. This projection P maps a point outside the simplex a to the
point on the simplex b that is closest in terms of Euclidean distance: P(a) =
argmin
b∈∆
‖a − b‖2 [33, 34]. Unfortunately, the projection step complicates the
computation of the step size, which we replace by a learning rate αt, decreasing
over iterations t. This results in the overall update: qt+1 ← P(qt + αt∇qt).
Lastly, a gradient descent - gradient ascent procedure for globally convex-linear
objectives is guaranteed to converge to the saddle point (c.f. proposition 4.4
and corollary 4.5 of [32]).
3. Least-squares
Discriminative classification models make no assumptions on the data dis-
tributions and directly optimize predictions. We incorporate a discriminative
model through the least-squares classifier, which is defined by a quadratic loss
function ℓLS(h | xi, yi) = (h(xi) − yi)2 [35]. For multi-class classification, we
employ a one-hot label encoding, also known as a one-vs-all scheme [36].
Furthermore, we chose a linear hypothesis space, h(z) =
∑D
d zdθkd + θk0,
which we will denote as the inner product zθk between the data row vector,
9
implicitly augmented with a constant 1, and the classifier parameter vector.
θ is an element of a (D + 1) × K-dimensional parameter space Θ and in the
following, we will refer to the classifier optimization step, i.e. minimization
over h ∈ H , as a parameter estimation step, i.e. minimization over θ ∈ Θ. In
summary, the least-squares loss of a sample is:
ℓLS(θ | zj , qj) =
K
∑
k=1
(zjθk − qkj)
2
. (7)
Plugging (7) into (5), the tcp-ls risk is defined as:
R̂TCPLS
(
θ | θ̂S , z, q) =
1
m
m
∑
j=1
ℓLS
(
θ | zj , qj)− ℓLS
(
θ̂S | zj , qj)
=
1
m
m
∑
j=1
K
∑
k=1
(
zjθk − qkj)
2 −
(
zj θ̂
S
k − qkj)
2 ,
with the resulting estimate:
θ̂TLS = argmin
θ∈Θ
max
q∈∆m
K−1
R̂TCPLS (θ | θ̂
S , z, q) . (8)
. For fixed q, the minimization over θ has a closed form solution. For each class,
the parameter vector is:
∂
∂θk
R̂TCPLS (θ | θ̂
S , z, q) = 0
1
m
m
∑
j=1
2 z⊤j (zjθk − qkj) = 0
θk =
(
m
∑
j=1
z⊤j zj
)−1(
m
∑
j=1
z⊤j qkj
)
.
. Keeping θ fixed, the gradient with respect to qkj is linear:
∂
∂qkj
R̂TCPLS (θ | θ̂
S , z, q) =
−2
m
(zjθk − qkj)−
−2
m
(zj θ̂
S
k − qkj)
=
2
m
(
zj θ̂
S
k − zjθk
)
.
Algorithm 1 gives pseudo-code for tcp-ls.
10
Algorithm 1 tcp-ls
Input: source data x (size n×D), labels y (size n×K), target data z (size
m×D), learning rate α, convergence criterion ǫ.
Output: θ̂TLS = (θ1, . . . , θK)
Initialize: qkj ← 1/K ∀k, j
for all classes do
θ̂Sk =
(
∑n
i x
⊤
i xi
)−1(
∑n
i x
⊤
i yki
)
end for
repeat
for all classes do
θk =
(
∑m
j z
⊤
j zj
)−1(∑m
j z
⊤
j qkj
)
for all samples do
∇qkj = 2
(
zj θ̂
S
k − zjθk
)
/m
end for
end for
qt+1 ← P
(
qt − αt∇qt
)
until ‖ R̂TCPLS
(
θt+1 | θ̂S , z, qt+1
)
− R̂TCPLS
(
θt | θ̂S , z, qt
)
‖ ≤ ǫ
4. Discriminant Analysis
As a generative classification model, we chose the classical discriminant anal-
ysis model (da). It fits a Gaussian distribution to each class, N (x, y | θk),
and classifies new samples x∗ according to the largest probability over Gaus-
sians; h(z) = argmax
k
N (x∗, k | θk). Again, we will refer to the classifier opti-
mization step as a parameter estimation step. For da models, the parameter
space Θ consists of priors, means and covariance matrices for the Gaussian
distributions; θk = (πk, µk,Σk). The model is incorporated in the empirical
risk minimization framework by setting the loss function to the negative log-
likelihood, ℓ(θ | zj , uj) = − logN (zj , uj | θu). The probabilistic labeling q is
incorporated by weighing the likelihood over each class’ Gaussian distribution:
ℓ(θ | zj, qj) =
∑K
k −qkj logN (zj , k | θk).
11
4.1. Quadratic Discriminant Analysis
If one fits one Gaussian distribution per class, the resulting classifier is a
quadratic function of the difference in means and covariances, and is hence
referred to as quadratic discriminant analysis (qda):
ℓQDA(θ | zj , qj) =
K
∑
k=1
−qkj logN (zj , k | θk) (9)
=
K
∑
k=1
−qkj
[
log πk −
1
2
log
[
(2π)D det(Σk)
]
−
1
2
(zj − µk)Σ
−1
k (zj − µk)
⊤
]
,
where det refers to the determinant and π refers to the irrational constant.
Plugging the loss from (9) into (5), the tcp-qda risk becomes:
R̂TCPQDA(θ | θ̂
S , z, q) =
1
m
m
∑
j=1
ℓQDA(θ | zj , qj)− ℓQDA(θ̂
S | zj , qj)
=
1
m
m
∑
j=1
K
∑
k=1
−qkj log
πk p(zj, k | µk,Σk)
π̂Sk p(zj , k | µ̂
S
k , Σ̂
S
k )
, (10)
where the estimate itself is:
θ̂TQDA = argmin
θ∈Θ
max
q∈∆m
K−1
R̂TCPQDA(θ | θ̂
S , z, q) .
. Minimization with respect to θ also has a closed-form solution for discriminant
analysis models. For each class, the parameter estimates are:
πk =
1
m
m
∑
j=1
qkj ,
µk =
(
m
∑
j=1
qkj
)−1
m
∑
j=1
qkjzj ,
Σk =
(
m
∑
j=1
qkj
)−1
m
∑
j=1
qkj(zj − µk)
⊤(zj − µk) .
One of the properties of a discriminant analysis model is that it requires the
estimated covariance matrix Σk to be non-singular. It is possible for the max-
imizer over q in tcp-qda to assign less samples than dimensions to one of the
classes, causing the covariance matrix for that class to be singular. To prevent
this, we regularize its estimation by first restricting Σk to minimal eigenvalues
12
of 0 and then adding a scalar multiple of the identity matrix λI. Essentially, the
estimated covariance matrix is constrained to a minimum size in each direction.
. Keeping θ fixed, the gradient with respect to qkj is linear:
∂
∂qkj
R̂TCPQDA
(
θ | θ̂S , z, q) = −
1
m
log
πk p(zj, k | µk,Σk)
π̂Sk p(zj , k | µ̂
S
k , Σ̂
S
k )
.
Algorithm 2 lists pseudo-code for tcp-qda.
Algorithm 2 tcp-qda
Input: source data x (size n×D), labels y (size n×K), target data z (size
m×D), learning rate α, convergence criterion ǫ.
Output: θ̂TQDA = (π1, . . . , πK , µ1, . . . , µK ,Σ1, . . . ,ΣK)
Initialize: qkj ← 1/K ∀k, j
for all classes do
π̂Sk = n
−1
∑n
i yki
µ̂Sk =
(
∑n
i yki
)−1 ∑n
i ykixi
Σ̂Sk =
(
∑n
i yki
)−1 ∑n
i yki(xi − µ̂
S
k )
⊤(xi − µ̂
S
k )
end for
repeat
for all classes do
πk = m
−1
∑m
j qkj
µk =
(
∑m
j qkj
)−1 ∑m
j qkjzj
Σk =
(
∑m
j qkj
)−1∑m
j qkj(zj − µk)
⊤(zj − µk)
for all samples do
∇qkj = − log
[
πk p(zj , k | µk,Σk) / π̂Sk p(zj , k | µ̂
S
k , Σ̂
S
k )
]
end for
end for
qt+1 ← P(qt − αt∇qt)
until ‖ R̂TCPQDA
(
θt+1 | θ̂S , z, qt+1
)
− R̂TCPQDA
(
θt | θ̂S , z, qt
)
‖ ≤ ǫ
13
4.2. Linear Discriminant Analysis
If one constrains the model to share a single covariance matrix for each class,
the resulting classifier is a linear function of the difference in means and is hence
termed linear discriminant analysis (lda). This constraint is enforced through
the weighted sum over class covariance matrices Σ =
∑K
k πkΣk.
4.3. Performance Guarantee
The discriminant analysis model has a very surprising property: it obtains
a strictly smaller risk than the source classifier. To our knowledge, this is the
first time that such a performance guarantee can be given in the context of
domain adaptation, without using any assumptions on the relation between the
two domains.
Theorem 1. For a continuous target distribution, with more unique samples
than features for every class, mk > D, the empirical target risk of a discriminant
analysis model R̂DA with tcp estimated parameters θ̂
T is strictly smaller than
the empirical target risk of a discriminant analysis model with parameters θ̂S
estimated on the source domain:
R̂DA
(
θ̂T | z, u
)
< R̂DA
(
θ̂S | z, u
)
The reader is referred to Appendix A for the proof. It follows similar steps
as a robust guarantee for discriminant analysis in semi-supervised learning [37].
It should be noted that the risks of tcp-lda and tcp-qda are always strictly
smaller with respect to the given target samples, but not necessarily strictly
smaller with respect to new target samples. Although, when the given target
samples are a good representation of the target distribution, one does expect
the adapted model to generalize well to new target samples. Additionally, as
long as the same amount of regularization λ is added to both the source θ̂S and
the tcp classifier θ̂T , the guarantee also holds for a regularized model.
14
5. Experiments
Our experiments compare the risks of the tcp classifiers with that of the
source classifier and the corresponding oracle target classifier, as well as their
performance with respect to various state-of-the-art domain adaptive classi-
fiers through their areas under the ROC-curve. In all experiments, all target
samples are given, unlabeled, to the adaptive classifiers. They make predic-
tions for those given target samples and their performance is evaluated with
respect to those target samples’ true labels. Cross-validation for regularization
parameters was done by holding out source data, as that is the only data for
which labels are available at training time. The range of values we tested was
[
0 10−6 10−5 10−4 10−3 10−2 10−1 100 101 102 103
]
.
5.1. Compared methods
We implemented transfer component analysis (tca) [8], kernel mean match-
ing (kmm) [26], robust covariate shift adjustment (rcsa) [29] and the robust
bias-aware (rba) classifier [25] for the comparison (see cited papers for more
information). tca and kmm are chosen because they are popular classifiers with
clear assumptions. rcsa and rba are chosen because they also employ minimax
formulations but from different perspectives; rcsa as a worst-case and rba as
a moment-matching importance weighing. Their implementations details are
discussed shortly below.
Transfer Component Analysis. tca assumes that there exists a common latent
representation for both domains and aims to find this representation by means
of a cross-domain nonlinear component analysis [8]. In our implementation, we
employ a radial basis function kernel with a bandwidth of 1 and set the trade-off
parameter µ to 1/2. After mapping the data onto their transfer components, we
train a logistic regressor on the mapped source data and apply it to the mapped
target data.
15
Kernel Mean Matching. kmm assumes that the class-posterior distributions are
equal in both domains and that the support of the target distribution is con-
tained within the source distribution [26, 20]. When the first assumption fails,
kmm will have deviated from the source classifier in a manner that will not lead
to better results on the target domain. When the second assumptions fails, the
variance of the importance-weights increases to the point where a few samples
receive large weights and all other samples receive very small weights, reducing
the effective training sample size and leading to pathological classifiers. We use
a radial basis function kernel with a bandwidth of 1, kernel regularization of
0.001 to favor estimates with lower variation over weights and upper bound the
weights by 10 000. After estimating importance weights, we train a weighed
least-squares classifier on the source samples.
Robust Covariate Shift Adjustment. rcsa also assumes equal class-posterior dis-
tributions and containment of the support of the target distribution within the
source distribution, but additionally incorporates a worst-case labeling [29]. To
be precise, it maximizes risk with respect to the importance weights. We used
the author’s publicly available code with 5-fold cross-validation for its hyper-
parameters. Interestingly, the authors also discuss a relation between covariate
shift and model misspecification, as described by [38]. They argue for a two-
step (estimate weights - train classifier) approach in a game-theoretical form
[39, 40, 29], which is done by all importance-weighted classifiers in this paper.
Robust Bias-Aware. rba assumes that the moments of the feature statistics
are approximately equal up to a particular order [25]. In their formulation,
the adversary plays a classifier whose class-posterior probabilities are used as a
labeling of the target samples, but who is also constrained to match the moments
with the source domain’s statistics. The player then proposes an importance-
weighted classifier that aims to perform well on both domains. Note that the
constraints on the adversary are, among others, necessary to avoid the players
switching strategies constantly. We implement rba using first-order feature
statistics for the moment-matching constraints, which was also done by the
16
authors in their paper. Furthermore, we use a ratio of normal distributions for
the weights and bound them above by 1000.
5.2. Experiments in a sample selection bias setting
Sample selection bias settings occur when data is collected locally from a
larger population. For regression problems, these settings are usually created
through a parametric sampling of the feature space [5, 26]. We created some-
thing similar but for classification problems: samples are concentrated around
a certain subset of the feature space, but with equal class priors as the whole
set. For each class:
1. Find the sample closest to the origin; x0.
2. Compute distance d(x0, xk) to all other samples of the same class.
3. Draw without replacement πkn
S samples proportional to exp(−d(x0, xk)).
where nS denotes the total number of samples to draw and πk refers to the class-
prior distributions of the whole set. Note that drawing πkn samples from each
class leads to approximately the same class prior distributions in the source
domain as the target domain. We chose the squared Mahalanobis distance:
d(x0, xk) := (x0 − xk)Σ−1(x0 − xk)⊤, with the covariance matrix estimated on
all data, since that takes scale differences between features into account. Figure
1 presents an example, showing the first two principal components of the pima
diabetes dataset. Red/blue squares denote the selected source samples, black
circles denote all samples and the green stars denote the seed points (x0 for each
class).
5.2.1. Data
We collected the following datasets from the UCI machine learning repos-
itory: cylinder bands printing (bands), car evaluation (car), credit approval
(credit), ionosphere (iono), mammographic masses (mamm), pima diabetes
(pima) and tic-tac-toe endgame (t3). Table 1 lists their characteristics. All
missing values have been imputed to 0. For each dataset, we draw nS = 50
samples as the source domain while treating all samples as the target domain.
17
0 2 4 6 8 10 12
PC1
-2
0
2
4
6
P
C
2
z
x|y=-1
x|y=+1
seed
Figure 1: Example of a biased sampling. Shown are the first two principal components of
the pima diabetes dataset, with all target samples in black, the selected source samples in
red/blue and the samples closest to 0 of each class in green (seeds).
5.2.2. Results
The risks (average negative log-likelihoods for the discriminant analysis mod-
els and mean squared errors for the least-squares classifiers) in Table 2 belong
to the source classifiers, the tcp classifiers and the oracle target classifiers. The
oracles represent the best possible result, as they comprise the risk of a classifier
trained on all target samples with their true labels. The results show varying
degrees of improvement for the tcp classifiers. tcp-lda approaches t-lda more
closely than the other two versions, with tcp-ls being the most conservative
one. For the ionosphere and tic-tac-toe datasets, the improvement is quite dra-
matic, indicating that the source classifier is a poor model for the target domain.
Note also that some overfitting might be occurring as tcp-qda does not always
have a lower risk than tcp-lda, even though t-qda does always have a lower
risk than t-lda.
Table 3 compares the performances of the adaptive classifiers on all datasets
through their area under the ROC-curves (AUC). Although there is quite a
variety between datasets, the variation between classifiers within a dataset is
relatively small; all approaches perform similarly well. However, with our se-
18
Table 1: Sample selection bias datasets characteristics.
bands
car
credit
iono
mamm
pima
t3
#Samples #Features #Missing Class (-1|+1)
539 39 569 312 | 227
1728 6 0 1210 | 518
690 15 67 307 | 383
351 34 0 126 | 225
961 5 162 516 | 445
768 8 0 500 | 268
958 9 0 332 | 626
Table 2: Risks (average negative log-likelihoods and mean squared errors) of the naive source
classifiers (s-lda, s-qda, s-ls), the tcp classifiers (tcp-lda, tcp-qda, tcp-ls) and the oracle
target classifiers (t-lda, t-qda, t-ls) on the sample selection bias datasets.
bands
car
credit
iono
mamm
pima
t3
s-lda tcp-lda t-lda
-216.3 -218.4 -218.8
17.16 2.850 2.148
-80.04 -83.64 -83.65
199.5 -8.480 -8.782
8.133 -10.40 -11.22
-15.92 -23.44 -24.15
18.77 6.136 4.734
s-qda tcp-qda t-qda
-215.3 -217.8 -219.1
57.39 18.77 2.049
-78.99 -83.73 -84.61
26.30 -9.325 -18.78
31.66 -10.08 -11.68
-7.486 -23.09 -24.30
117.3 39.13 4.611
s-ls tcp-ls t-ls
1.170 1.109 0.827
1.968 1.205 0.672
2.430 0.973 0.757
17.06 0.815 0.350
0.818 0.668 0.580
1.083 1.012 0.633
1.401 1.401 0.849
lection bias procedure, the moments of the target statistics do not match the
source statistics (e.g. the target’s variance is by construction always larger)
which affect rba’s performance negatively. Interestingly, the tcp discriminant
analysis models are quite competitive in cases where their improvement over the
source classifier was larger. Unfortunately, like rba, the more conservative tcp-
ls never outperforms all other methods simultaneously on any of the datasets.
Still, in the average it reaches competitive performance overall. In summary,
the tcp classifiers perform on par with the other adaptive classifiers.
19
Table 3: Sample selection bias datasets. Areas under the ROC-curves for a range of domain
adaptive classifiers.
bands
car
credit
iono
mamm
pima
t3
mean
tca kmm rcsa rba tcp-ls tcp-lda tcp-qda
.578 .620 .562 .504 .588 .548 .589
.736 .776 .742 .684 .734 .758 .699
.716 .694 .655 .702 .662 .646 .663
.741 .817 .835 .687 .731 .894 .826
.656 .804 .749 .762 .836 .824 .847
.691 .630 .760 .271 .692 .684 .637
.608 .532 .439 .446 .520 .529 .606
.675 .696 .677 .579 .680 .698 .695
5.3. Experiments in a domain adaptation setting
We performed a set of experiments on a dataset that is naturally split into
multiple domains: predicting heart disease in patients from hospitals in 4 dif-
ferent locations. It is a much more realistic setting because problem variables
such as prior shift, class imbalance and proportion of imputed features are not
controlled. As such, it is a harder problem than the sample selection bias set-
ting. In this setting, the target domains often only have limited overlap with
the source domain and can be very dissimilar. As the results will show, many of
the assumptions that the state-of-the-art domain adaptive classifiers rely upon,
do not hold and their performance degrades drastically.
5.3.1. Data
The hospitals are the Hungarian Institute of Cardiology in Budapest (data
collected by Andras Janosi), the University Hospital Zurich (collected byWilliam
Steinbrunn), the University Hospital Basel (courtesy of Matthias Pfisterer), the
Veterans Affairs Medical Center in Long Beach, California, USA, and the Cleve-
land Clinic Foundation in Cleveland, Ohio, USA (both courtesy of Robert De-
trano), which will be referred to as Hungary, Switzerland, California and Ohio
20
hereafter. The data from these hospitals can be considered domains as the
patients are all measured on the same biometrics but show different distri-
butions. For example, patients in Hungary are on average younger than pa-
tients from Switzerland (48 versus 55 years). Each patient is described by 13
features: age, sex, chest pain type, resting blood pressure, cholesterol level,
high fasting blood sugar, resting electrocardiography, maximum heart rate,
exercise-induced angina, exercise-induced ST depression, slope of peak exercise
ST, number of major vessels in fluoroscopy, and normal/defective/reversible
heart rate. Table 4 describes the number of samples (n, m), total number
of missing measurements that have been imputed (misS , misT ) the class bal-
ance (cS , cT ) and the empirical Maximum Mean Discrepancy for all pairwise
combinations of designating one domain as the source and another as the tar-
get. First of all, the sample size imbalance is not really a problem, as the
largest difference occurs in the Ohio - Switzerland combination with 303 and
123 samples respectively. However, the fact that the classes are severely im-
balanced in different proportions, for example going from 54% : 46% to 7%
: 93% in Ohio - Switzerland, creates a very difficult setting. A shift in the
prior distributions can be disastrous for some classifiers, such as rba which
relies on matching the source and target feature statistics. Furthermore, a
sudden increase in the amount of missing values (unmeasured patient biomet-
rics), such as in Ohio - California, means that a classifier relying on a certain
feature for discrimination degrades when this feature is missing in the target do-
main. Additionally, the empirical Maximum Mean Discrepancy measures how
far apart two sets of samples are: ˆMMD = ‖n−1
∑n
i φ(xi)−m
−1
∑m
j φ(zj)‖
2 =
n−2
∑n
i,i′ K(xi, xi′ ) − 2(nm)
−1
∑
i,j K(xi, zj) + m
−2
∑m
j,j′ K(zj, zj′) [26]. For
its kernel, we used a radial-basis function with a bandwidth of 1. An MMD
of 0 means that the two sets are identical, while larger values indicate larger
discrepancies between the two sets. The combinations Ohio - Switzerland and
Switzerland - Hungary have an MMD that is two orders of magnitude larger
than other combinations. Overall, looking at all three sets of descriptive statis-
tics, the combinations Ohio - Switzerland and Switzerland - Hungary should
21
pose the most difficulty for the adaptive classifiers.
Lastly, to further illustrate how the domains differ, we plotted histograms of
the age and resting blood pressure of all patients, split by domain (see Figure
2). Not only are they different on average, they tend to differ in variance and
skewness as well.
Table 4: Heart disease dataset properties, for all pairwise domain combinations (O=’Ohio’,
C=’California’, H=’Hungary’ and S=’Switzerland’). S denotes the source and T the target
domain, n the amount of source and m the amount of target samples, cS the class balance
(-1,+1) in the source domain and cT the class balance in the target domain. MMD denotes
the empirical Maximum Mean Discrepancy between the source and target data.
S T
O H
O S
O C
H S
H C
S C
H O
S O
C O
S H
C H
C S
n m misS misT cS cT MMD
303 294 6 782 164:139 188:106 0.0012
303 123 6 273 164:139 8:115 0.1602
303 200 6 698 164:139 51:149 0.0227
294 123 782 273 188:106 8:115 0.1384
294 200 782 698 188:106 51:149 0.0151
123 200 273 698 8:115 51:149 0.0804
294 303 782 6 188:106 164:139 0.0012
123 303 273 6 8:115 164:139 0.1602
200 303 698 6 51:149 164:139 0.0227
123 294 273 782 8:115 188:106 0.1384
200 294 698 782 51:149 188:106 0.0151
200 123 698 273 51:149 8:115 0.0804
5.3.2. Results
Table 5 lists the target risks (average negative log-likelihoods for the discrim-
inant analysis models and mean squared errors for the least-squares classifiers)
with the given target samples’ true labels for all source, tcp and oracle target
classifiers. Note that the tcp risks range between the source and the oracle
target risk. For some combinations tcp is extremely conservative, e.g. Switzer-
22
30 40 50 60 70 80
age
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
p
ro
b
a
b
il
it
y
ohio
hungary
switzerland
california
80 100 120 140
blood pressure
0
0.05
0.1
0.15
0.2
0.25
0.3
p
ro
b
a
b
il
it
y
ohio
hungary
switzerland
california
Figure 2: (Left top) Histogram of the age of patients in each domain, (right) histogram of the
resting blood pressure of patients in each domain.
land - Ohio, Switzerland - Hungary for the least-squares case, and for others, it
is much more liberal, e.g. Hungary - Switzerland, Hungary - Ohio, Hungary -
California for the discriminant analysis models. In general, the discriminative
model (tcp-ls) deviates much less and is much more conservative than the gen-
erative models (tcp-lda and tcp-qda). Note that the order of magnitude of
the improvement with tcp-da in the Hungary - Switzerland, Hungary - Ohio
and Hungary - California settings is due to the fact that the two domains lie far
apart; the target samples lie very far in the tails of the source models’ Gaussian
distribution and evaluate to very small likelihoods, which become very large
negative log-likelihoods.
Looking at the areas under the ROC-curves in Figure 6, one observes a dif-
ferent pattern in the classifier performances. tca, kmm, rcsa and rba perform
much worse, often below chance level. It can be seen that, in some cases, the
assumption of equal class-posterior distributions still holds approximately, as
kmm and rcsa sometimes perform quite well, e.g. in Hungary - Ohio. tca’s
performance varies around chance level, indicating that it is difficult to recover
a common latent representation in these settings. That makes sense, as the
domains lie further apart this time. rba’s performance drops most in cases
where the differences in priors and proportions of missing values are largest,
e.g. Hungary - California, which also makes sense as it is expecting similar fea-
ture statistics in both domains. tcp-ls performs very well in almost all cases;
23
Table 5: Heart disease dataset. Target risks (average negative log-likelihoods (left, mid-
dle) and mean squared errors (right)) for all pairwise combinations of domains (O=’Ohio’,
C=’California’, H=’Hungary’ and S=’Switzerland’; smaller values are better).
S T
OH
OS
OC
H S
H C
S C
H O
S O
C O
S H
C H
C S
s-lda tcp-lda t-lda
-53.55 -57.18 -57.35
-8.293 -16.76 -17.54
-37.84 -53.88 -54.69
-12.50 -16.08 -17.54
-41.70 -53.91 -54.69
494.9 -54.49 -54.69
-48.91 -55.08 -55.23
709.9 -54.07 -55.23
-49.21 -55.00 -55.23
649.9 -56.09 -57.35
-53.05 -57.19 -57.35
-15.45 -17.43 -17.54
s-qda tcp-qda t-qda
-53.55 -57.20 -57.62
-8.293 -16.76 -17.54
-37.83 -53.73 -54.89
-12.80 -16.44 -17.54
-40.08 -54.45 -54.89
498.9 -54.44 -54.89
-49.20 -54.84 -55.53
709.9 -54.10 -55.53
-49.17 -55.05 -55.53
650.3 -56.19 -57.62
-53.15 -57.17 -57.62
-15.47 -17.44 -17.54‘
s-ls tcp-ls t-ls
0.580 0.579 0.444
1.449 1.449 0.213
1.441 1.441 0.613
1.068 1.068 0.213
1.120 1.104 0.613
0.904 0.904 0.671
0.642 0.638 0.463
1.700 1.700 0.696
1.833 1.833 0.470
2.102 2.102 0.740
0.582 0.582 0.444
0.415 0.415 0.236
the conservative strategy is paying off. tcp-lda is also performing very well,
even outperforming tcp-qda in all cases. The added flexibility of a covari-
ance matrix per class is not beneficial because it is much more difficult to fit
correctly. Note that the domain combinations are asymmetrical; for example,
rcsa’s performance is quite strong when Switzerland is the source domain and
Ohio the target domain, but it’s performance is much weaker when Ohio is the
source domain and Switzerland the target domain. In some combinations, as-
sumptions on how two domains are related to each other might be valid that are
not valid in their reverse combinations. Overall, in this more general domain
adaptation setting, our more conservative approach works best, as shown by the
mean performances.
24
Table 6: Heart disease dataset. Area under the ROC-curve for all pairwise combinations
of domains (O=’Ohio’, C=’California’, H=’Hungary’ and S=’Switzerland’; larger values are
better.
S T
O H
O S
O C
H S
H C
S C
H O
S O
C O
S H
C H
C S
mean
tca kmm rcsa rba tcp-ls tcp-lda tcp-qda
.699 .710 .372 .481 .881 .882 .817
.590 .551 .634 .670 .714 .671 .671
.496 .476 .560 .450 .671 .668 .476
.455 .501 .646 .602 .668 .665 .666
.528 .533 .585 .434 .727 .709 .662
.475 .573 .464 .603 .605 .546 .480
.616 .742 .751 .510 .864 .876 .863
.582 .353 .750 .449 .753 .589 .426
.484 .337 .551 .557 .671 .831 .828
.407 .370 .629 .484 .697 724 .604
.472 .427 .538 .616 .805 .878 .824
.511 .593 .462 .474 .709 .503 .535
.526 .514 .578 .528 .730 .712 .654
5.3.3. Visualization of the worst-case labeling
The adversary in tcp’s minimax formulation maximizes the objective with
respect to the probability qkj that a sample j belongs to class k. However, note
that the worst-case labeling corresponds to the labeling that maximizes the
contrast: it looks for the labeling for which the difference between the source
parameters and the current parameters is largest. It would be interesting to
visualize this labeling at the saddle point. Figure 3 shows the first two principal
components of Hungary, with the probabilities of belonging to class 1, i.e. qjk=1.
The top left figure shows the true labeling, the top right the probabilities for
tcp-ls, the bottom left for tcp-lda and the bottom right for tcp-qda. In
all three tcp cases the labeling is quite smooth and does not vary too much
between neighboring points. One would expect a rough labeling, but note that
25
labellings that are bad for the source classifier will most likely also be bad for the
tcp classifier, and the resulting contrast will be small instead of maximal. The
probabilities for tcp-ls lie closer to 0 and 1 than for tcp-lda and tcp-qda.
-400 -200 0 200 400
PC 1
-200
-150
-100
-50
0
50
100
P
C
 2
0
0.2
0.4
0.6
0.8
1
-400 -200 0 200 400
PC 1
-200
-150
-100
-50
0
50
100
P
C
 2
0
0.2
0.4
0.6
0.8
1
-400 -200 0 200 400
PC 1
-200
-150
-100
-50
0
50
100
P
C
 2
0
0.2
0.4
0.6
0.8
1
-400 -200 0 200 400
PC 1
-200
-150
-100
-50
0
50
100
P
C
 2
0
0.2
0.4
0.6
0.8
1
Figure 3: Scatter plots of the first two principal components of Hungary in the heart disease
dataset. (Top left) True labeling, (top right) qk=1 for tcp-ls, (bottom left) qk=1 for tcp-lda,
(bottom right) qk=1 for tcp-qda.
6. Discussion
Although the tcp classifiers are never worse than the source classifier by
construction, they will not automatically lead to improvements in the error
rate. This is due to the difference between optimizing a surrogate loss and
evaluating the 0/1-loss [41, 42, 43]. There is no one-to-one mapping between
the minimizer of the surrogate loss and the minimizer of the 0/1-loss.
One peculiar advantage of our tcp model is that we do not explicitly require
source samples at training time. They are not incorporated in the risk formula-
tion, which means that they do not have to be retained in memory. It is suffi-
26
cient to receive the parameters of a trained classifier that can serve as a baseline.
Our approach is therefore more efficient than for example importance-weighing
techniques which require source samples for importance-weight estimation and
subsequent training. Additionally, it would be interesting to construct a con-
trast with multiple source domains. The union of source classifiers might serve
as a very good starting point for the tcp model.
For each adaptive classifier in this paper, regularization parameters are es-
timated through cross-validation on held-out source samples. However, this
procedure is known to be biased as it does not account for domain dissimilarity
[44, 45]. What is optimal with respect to held-out source samples, need not be
optimal with respect to target samples. Performance of many adaptive models
might be improved with appropriate adaptive validation techniques.
7. Conclusion
We have designed a risk minimization formulation for a domain-adaptive
classifier whose performance, in terms of risk, is always at least as good as
that of the non-adaptive source classifier. Furthermore, for the discriminant
analysis case, its performance is always strictly better. Our target contrastive
pessimistic model performs on par with state-of-the-art domain adaptive clas-
sifier on sample selection bias settings and outperforms them on more realistic
domain adaptation problem settings.
Acknowledgments
This work was supported by the Netherlands Organization for Scientific
Research (NWO; grant 612.001.301).
Appendix A
Theorem. For a continuous target distribution, with more unique samples than
features for every class, mk > D, the empirical target risk of a discriminant
27
analysis model R̂DA with tcp estimated parameters θ̂
T is strictly smaller than
the empirical target risk of a discriminant analysis model with parameters θ̂S
estimated on the source domain:
R̂DA
(
θ̂T | z, u
)
< R̂DA
(
θ̂S | z, u
)
Proof. Let {(xi, yi)}ni=1 and {(zj, uj)}
m
j be sample sets of size n,m drawn from
continuous distributions pS and pT , respectively. Consider a discriminant anal-
ysis model parameterized either as θ = (π1, . . . , πK , µ1, . . . , µK ,Σ1, . . .ΣK) for
qda or θ = (π1, . . . , πK , µ1, . . . , µK ,Σ) for lda. R̂DA denotes empirical risk
measured with the Gaussian average negative log-likelihood weighed by a set
of soft labels q: m−1
∑m
j=1
∑K
k=1−qkj logN (zj , k | θk). The sample covariance
matrix is required to be non-singular, which is guaranteed when there are more
unique samples than features for every class, mk > D. In the lda case, D+K
unique samples are sufficient. Let θ̂S be the parameters estimated on labeled
source data; θ̂S = argmin
θ∈Θ
R̂DA
(
θ | x, y
)
.
Firstly, for fixed q, the minimized contrast between the target risk of any
parameter θ and the source parameters θ̂S is non-positive, because both param-
eters sets are elements of the same parameter space, θ, θ̂S ∈ Θ:
min
θ∈Θ
R̂DA
(
θ | z, q
)
− R̂DA
(
θ̂S | z, q
)
≤ 0 .
θ’s that result in a larger target risk than that of θ̂S are not minimizers of the
contrast. The maximum value it can attain is 0 which occurs when exactly the
same parameters are found; θ = θ̂S . Considering that the contast is non-positive
for any labeling q, it is also non-positive with respect to the worst-case labeling:
min
θ∈Θ
max
q∈∆m
K−1
R̂DA
(
θ | z, q
)
− R̂DA
(
θ̂S | z, q
)
≤ 0 . (11)
Secondly, given that the empirical risk with respect to the true labeling is
always less than or equal to the empirical risk with the worst-case labeling,
R̂(θ |z, u) ≤ max
q
R̂(θ |z, q), the target contrastive risk (3) with the true labeling
28
u is always less than or equal to the target contrastive pessimistic risk (5):
min
θ∈Θ
R̂DA
(
θ | z, u
)
− R̂DA
(
θ̂S | z, u
)
≤
min
θ∈Θ
max
q∈∆m
K−1
R̂DA
(
θ | z, q
)
− R̂DA
(
θ̂S | z, q
)
. (12)
Let (θ̂T , q∗) be the minimaximizer of the target contrastive pessimistic risk
on the right-handside of (12). Plugging these estimates in into (12) produces:
R̂DA
(
θ̂T | z, u
)
− R̂DA
(
θ̂S | z, u
)
≤ R̂DA
(
θ̂T | z, q∗)− R̂DA
(
θ̂S | z, q∗
)
. (13)
Combining inequalities 11 and 13 gives:
R̂DA
(
θ̂T | z, u
)
− R̂DA
(
θ̂S | z, u
)
≤0
R̂DA
(
θ̂T | z, u
)
≤ R̂DA
(
θ̂S | z, u
)
. (14)
However, equality of the two risks in 14 occurs with probability 0, which we will
show in the following.
The total mean for the source classifier consists of the weighted combination
of the class means, resulting in the overall source sample average:
µS =
K
∑
k=1
πSk µ
S
k
=
K
∑
k=1
∑n
i yki
n
[
1
∑n
i yki
n
∑
i=1
ykixi
]
=
1
n
n
∑
i=1
xi . (15)
The total mean for the tcp-da estimator is similarly defined, resulting in
29
the overall target sample average:
µT =
K
∑
k=1
πTk µ
T
k
=
K
∑
k=1
∑m
j qkj
m


1
∑m
j qkj
m
∑
j=1
qkjzj


=
K
∑
k=1
1
m
m
∑
j=1
qkjzj (16)
=
1
m
m
∑
j=1
zj . (17)
Note that since q consists of probabilities, the sum over classes
∑K
k qkj in (16)
is 1, for every sample j. Equal risks for these parameter sets, R̂DA
(
θT | z, u
)
=
R̂DA(θ̂
S | z, u), implies equality of the total means, µT = µS . By Equations
15 and 17, equal total means imply equal sample averages: m−1
∑m
j=1 zj =
n−1
∑n
i=1 xi. Drawing two sets of samples with exactly equal sample averages
constitutes the union of two single events:
Pr
[
x̄ = z̄
]
= pS
(
S1 = x1,S2 = x2, . . . ,Sn = xn | x̄ = z̄
)
∪ pT
(
T1 = z1, T2 = z2, . . . , Tm = zm | z̄ = x̄
)
,
where the bars over the samples x̄, z̄ denote the sample averages. By definition,
single events under continuous distributions have probability 0. Therefore, a
strictly smaller risk occurs almost surely:
R̂DA
(
θ̂T | z, u
)
< R̂DA
(
θ̂S | z, u
)
.
References
References
[1] J. Quionero-Candela, M. Sugiyama, A. Schwaighofer, N. D. Lawrence,
Dataset shift in machine learning, The MIT Press, 2009.
30
[2] J. G. Moreno-Torres, T. Raeder, R. Alaiz-RodŕıGuez, N. V. Chawla,
F. Herrera, A unifying view on dataset shift in classification, Pattern Recog-
nition 45 (1) (2012) 521–530.
[3] B. Gong, Y. Shi, F. Sha, K. Grauman, Geodesic flow kernel for unsuper-
vised domain adaptation, in: Computer Vision and Pattern Recognition
(CVPR), 2012 IEEE Conference on, IEEE, 2012, pp. 2066–2073.
[4] H. Hachiya, M. Sugiyama, N. Ueda, Importance-weighted least-squares
probabilistic classifier for covariate shift adaptation with application to
human activity recognition, Neurocomputing 80 (2012) 93–101.
[5] H. Shimodaira, Improving predictive inference under covariate shift by
weighting the log-likelihood function, Journal of statistical planning and
inference 90 (2) (2000) 227–244.
[6] C. Cortes, M. Mohri, M. Riley, A. Rostamizadeh, Sample selection bias
correction theory, in: Algorithmic learning theory, 2008, pp. 38–53.
[7] S. Bickel, M. Brückner, T. Scheffer, Discriminative learning under covariate
shift, The Journal of Machine Learning Research 10 (2009) 2137–2155.
[8] S. J. Pan, I. W. Tsang, J. T. Kwok, Q. Yang, Domain adaptation via
transfer component analysis, IEEE Transactions on Neural Networks 22 (2)
(2011) 199–210.
[9] S. Ben-David, J. Blitzer, K. Crammer, F. Pereira, et al., Analysis of repre-
sentations for domain adaptation, Advances in neural information process-
ing systems 19 (2007) 137.
[10] S. Ben-David, T. Lu, T. Luu, D. Pál, Impossibility theorems for do-
main adaptation, in: International Conference on Artificial Intelligence and
Statistics, 2010, pp. 129–136.
[11] S. Ben-David, J. Blitzer, K. Crammer, A. Kulesza, F. Pereira, J. W.
Vaughan, A theory of learning from different domains, Machine learning
79 (1-2) (2010) 151–175.
31
[12] R. Gopalan, R. Li, R. Chellappa, Domain adaptation for object recognition:
An unsupervised approach, in: 2011 international conference on computer
vision, IEEE, 2011, pp. 999–1006.
[13] M. Baktashmotlagh, M. Harandi, B. Lovell, M. Salzmann, Domain adap-
tation on the statistical manifold, in: Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, 2014, pp. 2481–2488.
[14] V. M. Patel, R. Gopalan, R. Li, R. Chellappa, Visual domain adaptation:
A survey of recent advances, IEEE signal processing magazine 32 (3) (2015)
53–69.
[15] B. Fernando, A. Habrard, M. Sebban, T. Tuytelaars, Unsupervised visual
domain adaptation using subspace alignment, in: Proceedings of the IEEE
International Conference on Computer Vision, 2013, pp. 2960–2967.
[16] W. M. Kouw, J. H. Krijthe, M. Loog, L. J. P. van der Maaten, Feature-level
domain adaptation, Journal of Machine Learning Research 17 (171) (2016)
1–32.
[17] G. W. Imbens, D. B. Rubin, Causal inference in statistics, social, and
biomedical sciences, Cambridge University Press, 2015.
[18] J. J. Heckman, Sample selection bias as a specification error (with an ap-
plication to the estimation of labor supply functions) (1977).
[19] B. Zadrozny, Learning and evaluating classifiers under sample selection
bias, in: Proceedings of the twenty-first international conference on Ma-
chine learning, ACM, 2004, p. 114.
[20] A. Gretton, A. Smola, J. Huang, M. Schmittfull, K. Borgwardt,
B. Schölkopf, Covariate shift by kernel mean matching, Dataset shift in
machine learning 3 (4) (2009) 5.
[21] A. Storkey, When training and test sets are different: characterizing learn-
ing transfer, Dataset shift in machine learning (2009) 3–28.
32
[22] B. Schölkopf, D. Janzing, J. Peters, E. Sgouritsa, K. Zhang, J. Mooij, On
causal and anticausal learning, arXiv preprint arXiv:1206.6471.
[23] B. Gong, K. Grauman, F. Sha, Connecting the dots with landmarks: Dis-
criminatively learning domain-invariant features for unsupervised domain
adaptation, in: Proceedings of The 30th International Conference on Ma-
chine Learning, 2013, pp. 222–230.
[24] C. Cortes, M. Mohri, Domain adaptation and sample bias correction theory
and algorithm for regression, Theoretical Computer Science 519 (2014) 103–
126.
[25] A. Liu, B. Ziebart, Robust classification under sample selection bias, in:
Advances in Neural Information Processing Systems, 2014, pp. 37–45.
[26] J. Huang, A. J. Smola, A. Gretton, K. M. Borgwardt, B. Schölkopf, et al.,
Correcting sample selection bias by unlabeled data, Advances in neural
information processing systems 19 (2007) 601.
[27] A. B. Owen, Monte Carlo theory, methods and examples, 2013.
[28] J. O. Berger, Statistical decision theory and Bayesian analysis, Springer
Science & Business Media, 2013.
[29] J. Wen, C.-N. Yu, R. Greiner, Robust learning under uncertain test distri-
butions: Relating covariate shift to model misspecification, in: Proceedings
of the 31st International Conference on Machine Learning (ICML-14), 2014,
pp. 631–639.
[30] J. H. Krijthe, M. Loog, Projected estimators for robust semi-supervised
classification, Machine Learning (2017) 1–16.
[31] L. I. Kuncheva, J. C. Bezdek, R. P. Duin, Decision templates for multiple
classifier fusion: an experimental comparison, Pattern recognition 34 (2)
(2001) 299–314.
33
[32] A. Cherukuri, B. Gharesifard, J. Cortes, Saddle-point dynamics: conditions
for asymptotic stability of saddle points, SIAM Journal on Control and
Optimization 55 (1) (2017) 486–511.
[33] Y. Chen, X. Ye, Projection onto a simplex, arXiv preprint arXiv:1101.6081.
[34] L. Condat, Fast projection onto the simplex and the 1 ball, Preprint HAL
1056171.
[35] J. Friedman, T. Hastie, R. Tibshirani, The elements of statistical learning,
Vol. 1, Springer series in statistics Springer, Berlin, 2001.
[36] M. Mohri, A. Rostamizadeh, A. Talwalkar, Foundations of machine learn-
ing, MIT press, 2012.
[37] M. Loog, Contrastive pessimistic likelihood estimation for semi-supervised
classification, IEEE Transactions on Pattern Analysis & Machine Intelli-
gence 38 (3) (2016) 462–475.
[38] H. White, Consequences and detection of misspecified nonlinear regression
models, Journal of the American Statistical Association 76 (374) (1981)
419–433.
[39] P. D. Grünwald, A. P. Dawid, Game theory, maximum entropy, minimum
discrepancy and robust bayesian decision theory, Annals of Statistics (2004)
1367–1433.
[40] M. Sugiyama, K.-R. Müller, Model selection under covariate shift, in: Ar-
tificial Neural Networks: Formal Models and Their Applications–ICANN
2005, Springer, 2005, pp. 235–240.
[41] P. Bartlett, Prediction algorithms: complexity, concentration and convex-
ity, in: Proceedings of the 13th IFAC Symposium on System Identification,
2003, pp. 1507–1517.
34
[42] P. L. Bartlett, M. I. Jordan, J. D. McAuliffe, Convexity, classification,
and risk bounds, Journal of the American Statistical Association 101 (473)
(2006) 138–156.
[43] M. Loog, A. C. Jensen, Semi-supervised nearest mean classification through
a constrained log-likelihood, IEEE transactions on neural networks and
learning systems 26 (5) (2015) 995–1006.
[44] M. Sugiyama, M. Krauledat, K.-R. Müller, Covariate shift adaptation by
importance weighted cross validation, The Journal of Machine Learning
Research 8 (2007) 985–1005.
[45] W. M. Kouw, M. Loog, On regularization parameter estimation under co-
variate shift, in: Pattern Recognition (ICPR), 2016 23nd International
Conference on, IEEE, 2016, pp. 426–431.
35

