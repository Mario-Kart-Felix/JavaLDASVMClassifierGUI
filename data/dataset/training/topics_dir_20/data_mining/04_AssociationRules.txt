1
Mining Association Rules 
2
Mining Association Rules
What is Association rule mining
Apriori Algorithm
Additional Measures of rule interestingness
Advanced Techniques
3
What Is Association Rule Mining?
Association rule mining
Finding frequent patterns, associations, correlations, or causal
structures among sets of items in transaction databases
Understand customer buying habits by finding associations and 
correlations between the different items that customers place in
their “shopping basket”
Applications
Basket data analysis, cross-marketing, catalog design, loss-leader 
analysis, web log analysis, fraud detection (supervisor->examiner)
4
Rule form
Antecedent → Consequent [support, confidence]
(support and confidence are user defined measures of interestingness)
Examples
buys(x, “computer”)  → buys(x, “financial management 
software”) [0.5%, 60%]
age(x, “30..39”) ^ income(x, “42..48K”) buys(x, “car”) [1%,75%]
What Is Association Rule Mining?
5
Probably mom was 
calling dad at 
work to buy 
diapers on way 
home and he 
decided to buy a 
six-pack as well. 
The retailer 
could move 
diapers and beers 
to separate 
places and
position high-
profit items of 
interest to young 
fathers along the 
path.
How can Association Rules be used?
6
Let the rule discovered be
{Bagels,...} → {Potato Chips}
Potato chips as consequent => Can be used to determine what 
should be done to boost its sales
Bagels in the antecedent => Can be used to see which products 
would be affected if the store discontinues selling bagels
Bagels in antecedent and Potato chips in the consequent => 
Can be used to see what products should be sold with Bagels 
to promote sale of Potato Chips
How can Association Rules be used?
7
Association Rule: Basic Concepts
Given:
(1) database of transactions, 
(2) each transaction is a list of items purchased by a customer 
in a visit
Find:
all rules that correlate the presence of one set of items 
(itemset) with that of another set of items
E.g., 98% of people who purchase tires and auto accessories 
also get automotive services done
8
A ⇒ B [ s, c ]
Support: denotes the frequency of the rule within 
transactions. A high value means that the rule involve a 
great part of database.
support(A ⇒ B [ s, c ]) =  p(A ∪ B)
Confidence: denotes the percentage of transactions 
containing A which contain also B. It is an estimation of 
conditioned probability .
confidence(A ⇒ B [ s, c ]) =  p(B|A) = sup(A,B)/sup(A).
Rule basic Measures: Support and Confidence
9
For minimum support = 50% and minimum confidence = 50%, we have 
the following rules
A => C   with 50% support and   66%   confidence
C => A   with 50% support and   100% confidence
Example
Itemset:
A,B    or    B,E,F
Support of an itemset:
Sup(A,B)=1    Sup(A,C)=2 
Frequent pattern: 
Given min. sup=2, {A,C} is a 
frequent pattern
B,E,F4
A,B,C3
A,C2
A,D1
Purchased ItemsTrans. Id
10
Mining Association Rules
What is Association rule mining
Apriori Algorithm
Additional Measures of rule interestingness
Advanced Techniques
11
Each transaction is 
represented by a 
Boolean vector
Boolean association rules
12
Mining Association Rules - An Example
For rule A ⇒ C :
support = support({A , C }) = 50%
confidence = support({A , C }) / support({A }) = 66.6%
Transaction ID Items Bought
2000 A,B,C
1000 A,C
4000 A,D
5000 B,E,F
Frequent Itemset Support
{A} 75%
{B} 50%
{C} 50%
{A,C} 50%
Min. support 50%
Min. confidence 50%
13
The Apriori principle
Any subset of a frequent itemset must 
be frequent
A transaction containing {beer, diaper, nuts} also contains 
{beer, diaper}
{beer, diaper, nuts} is frequent {beer, diaper} must also be 
frequent
14
Apriori principle
No superset of any infrequent itemset should be
generated or tested
Many item combinations can be pruned
15
Itemset Lattice
null
AB AC AD AE BC BD BE CD CE DE
A B C D E
ABC ABD ABE ACD ACE ADE BCD BCE BDE CDE
ABCD ABCE ABDE ACDE BCDE
ABCDE
16
Apriori principle for pruning candidates
If an itemset is 
infrequent, then all of its 
supersets must also be 
infrequent
Found to be 
Infrequent
null
AB AC AD AE BC BD BE CD CE DE
A B C D E
ABC ABD ABE ACD ACE ADE BCD BCE BDE CDE
ABCD ABCE ABDE ACDE BCDE
ABCDE
Pruned 
supersets
17
Mining Frequent Itemsets (the Key Step)
Find the frequent itemsets: the sets of items that 
have minimum support
A subset of a frequent itemset must also be a frequent 
itemset
Generate length (k+1) candidate itemsets from length k 
frequent itemsets, and
Test the candidates against DB to determine which are in fact 
frequent
Use the frequent itemsets to generate association 
rules.
Generation is straightforward
18
The Apriori Algorithm — Example
TID Items
100 1 3 4
200 2 3 5
300 1 2 3 5
400 2 5
Database D itemset sup.
{1} 2
{2} 3
{3} 3
{4} 1
{5} 3
itemset sup.
{1} 2
{2} 3
{3} 3
{5} 3
Scan D
C1 L1
itemset
{1 2}
{1 3}
{1 5}
{2 3}
{2 5}
{3 5}
itemset sup
{1 2} 1
{1 3} 2
{1 5} 1
{2 3} 2
{2 5} 3
{3 5} 2
itemset sup
{1 3} 2
{2 3} 2
{2 5} 3
{3 5} 2
L2
C2 C2
Scan D
C3 L3itemset
{2 3 5}
Scan D itemset sup
{2 3 5} 2
Min. support: 2 transactions
19
The items in Lk-1 are listed in an order
Step 1: self-joining Lk-1
insert into Ck
select p.item1, p.item2, …, p.itemk-1, q.itemk-1
from Lk-1 p, Lk-1 q
where p.item1=q.item1, …, p.itemk-2=q.itemk-2, p.itemk-1 < q.itemk-1
FDA
EDA
How to Generate Candidates?
= = <
20
Step 2: pruning
for all itemsets c in Ck do
for all (k-1)-subsets s of c do
if (s is not in Lk-1) then delete c from Ck
How to Generate Candidates?
FEDA
21
Example of Generating Candidates
L3={abc, abd, acd, ace, bcd}
Self-joining: L3*L3
abcd from abc and abd
acde from acd and ace
Pruning (before counting its support):
acde is removed because ade is not in L3
C4={abcd}
22
The Apriori Algorithm
Ck: Candidate itemset of size k    Lk : frequent itemset of size k
Join Step: Ck is generated by joining Lk-1 with itself
Prune Step:  Any (k-1)-itemset that is not frequent cannot be a 
subset of a frequent k-itemset
Algorithm:
L1 = {frequent items};
for (k = 1; Lk !=∅; k++) do begin
Ck+1 = candidates generated from Lk;
for each transaction t in database do
increment the count of all candidates in Ck+1 that are 
contained in t
Lk+1 = candidates in Ck+1 with min_support
end
return L = ∪k Lk;
23
How to Count Supports of Candidates?
Why counting supports of candidates a problem?
The total number of candidates can be very huge
One transaction may contain many candidates
Method:
Candidate itemsets are stored in a hash-tree
Leaf node of hash-tree contains a list of itemsets and counts
Interior node contains a hash table
Subset function: finds all the candidates contained in a transaction
24
Generating AR from frequent intemsets
Confidence (A⇒B) = P(B|A) = 
For every frequent itemset x, generate all non-empty 
subsets of x 
For every non-empty subset s of x, output the rule 
“ s  ⇒ (x-s) ” if 
,support_count({A B})
support_count({A})
min_conf
unt({s})support_co
unt({x})support_co
≥
25
From Frequent Itemsets to Association Rules 
Q: Given frequent set {A,B,E}, what are possible 
association rules? 
A => B, E
A, B => E
A, E => B
B => A, E
B, E => A
E => A, B 
__ => A,B,E (empty rule), or true => A,B,E
26
Generating Rules: example
Trans-ID Items
1 ACD
2 BCE
3 ABCE
4 BE
5 ABCE Frequent Itemset Support
{BCE},{AC} 60%
{BC},{CE},{A} 60%
{BE},{B},{C},{E} 80%
Min_support: 60%
Min_confidence: 75%
Rule Conf.
{BC} =>{E} 100%
{BE} =>{C} 75%
{CE} =>{B} 100%
{B} =>{CE} 75%
{C} =>{BE} 75%
{E} =>{BC} 75%
27
Exercice
Coke, Bread, Diaper, Milk7
Beer, Bread, Diaper, Milk, Mustard6
Coke, Bread, Diaper, Milk5
Beer, Bread, Diaper, Milk, Chips4
Beer, Coke, Diaper, Milk3
Beer, Diaper, Bread, Eggs2
Bread, Milk, Chips, Mustard1
ItemsTID
Bread Milk Chips Mustard Beer Diaper Eggs Coke
1 1 1 1 0 0 0 0
1 0 0 0 1 1 1 0
0 1 0 0 1 1 0 1
1 1 1 0 1 1 0 0
1 1 0 0 0 1 0 1
1 1 0 1 1 1 0 0
1 1 0 0 0 1 0 1
Converta os dados para o 
formato booleano e para um 
suporte de 40%, aplique o 
algoritmo apriori.
28
0.4*7= 2.8
C1 L1 C2 L2
Bread 6 Bread 6 Bread,Milk 5 Bread,Milk 5
Milk 6 Milk 6 Bread,Beer 3 Bread,Beer 3
Chips 2 Beer 4 Bread,Diaper 5 Bread,Diaper 5
Mustard 2 Diaper 6 Bread,Coke 2 Milk,Beer 3
Beer 4 Coke 3 Milk,Beer 3 Milk,Diaper 5
Diaper 6 Milk,Diaper 5 Milk,Coke 3
Eggs 1 Milk,Coke 3 Beer,Diaper 4
Coke 3 Beer,Diaper 4 Diaper,Coke 3
Beer,Coke 1
Diaper,Coke 3
C3 L3
Bread,Milk,Beer 2 Bread,Milk,Diaper 4
Bread,Milk,Diaper 4 Bread,Beer,Diaper 3
Bread,Beer,Diaper 3 Milk,Beer,Diaper 3
Milk,Beer,Diaper 3 Milk,Diaper,Coke 3
Milk,Beer,Coke
Milk,Diaper,Coke 3
8 8
2 38 92 24+ + = >>C C
29
Challenges of Frequent Pattern Mining
Challenges
Multiple scans of transaction database
Huge number of candidates
Tedious workload of support counting for candidates
Improving Apriori: general ideas
Reduce number of transaction database scans
Shrink number of candidates
Facilitate support counting of candidates
30
Improving Apriori’s Efficiency
Problem with Apriori: every pass goes over whole data.
AprioriTID: Generates candidates as apriori but DB is 
used for counting support only on the first pass. 
Needs much more memory than Apriori
Builds a storage set C^k that stores in memory the frequent sets 
per transaction
AprioriHybrid: Use Apriori in initial passes; Estimate the 
size of C^k; Switch to AprioriTid when C^k is expected to 
fit in memory
The switch takes time, but it is still better in most cases
31
2 5400
1 2 3 5300
2 3 5200
1 3 4100
ItemsTID
{ {2},{5} }400
{ {1},{2},{3},{5} }300
{ {2},{3},{5} }200
{ {1},{3},{4} }100
Set-of-itemsetsTID
3{5}
3{3}
3{2}
2{1}
SupportItemset
{3 5}
{2 5}
{2 3}
{1 5}
{1 3}
{1 2}
itemset
2{3 5}
3{2 5}
3{2 3}
2{1 3}
SupportItemset
{2 3 5}
itemset
2{2 3 5}
SupportItemset
C^1
L2
{ {2 5} }400
{ {1 2},{1 3},{1 5},
{2 3}, {2 5}, {3 5} }
300
{ {2 3},{2 5} {3 5} }200
{ {1 3} }100
Set-of-itemsetsTID
C2 C^2
C^3
L1
L3C3
{ {2 3 5} }300
{ {2 3 5} }200
Set-of-itemsetsTID
32
Improving Apriori’s Efficiency
Transaction reduction: A transaction that does not 
contain any frequent k-itemset is useless in subsequent 
scans
Sampling: mining on a subset of given data. 
The sample should fit in memory
Use lower support threshold to reduce the probability of 
missing some itemsets. 
The rest of the DB is used to determine the actual itemset 
count. 
33
Partitioning: Any itemset that is potentially frequent in DB must be 
frequent in at least one of the partitions of DB (2 DB scans)
(support in a partition is lowered to be proportional to the number of
elements in the partition)
Improving Apriori’s Efficiency
Trans.
in D
Divide D 
into n
Non-
overlapping
partitions
Find frequent 
itemsets local 
to each 
partition
(parallel alg.)
Combine 
results to 
form a global 
set of 
candidate 
itemset
Find global 
frequent 
itemsets 
among 
candidates
Freq. 
itemsets 
in D
Phase I
Phase II
34
Dynamic itemset counting: partitions the DB into several blocks 
each marked by a start point. 
At each start point, DIC estimates the support of all itemsets that are 
currently counted and adds new itemsets to the set of candidate 
itemsets if all its subsets are estimated to be frequent.  
If DIC adds all frequent itemsets to the set of candidate itemsets 
during the first scan, it will have counted each itemset’s exact support 
at some point during the second scan; 
thus DIC can complete in two scans.
Improving Apriori’s Efficiency
35
Comment
Traditional methods such as database queries: 
support hypothesis verification about a relationship such as 
the co-occurrence of  diapers & beer.
Data Mining methods automatically discover significant 
associations rules from data.
Find whatever patterns exist in the database, without the user 
having to specify in advance what to look for (data driven). 
Therefore allow finding unexpected correlations
36
Mining Association Rules
What is Association rule mining
Apriori Algorithm
Additional Measures of rule interestingness
Advanced Techniques
37
Interestingness Measurements
Are all of the strong association rules discovered  interesting 
enough to present to the user?
How can we measure the interestingness of a rule?
Subjective  measures 
A rule (pattern) is interesting if
• it is unexpected (surprising to the user); and/or
• actionable (the user can do something with it)
• (only the user can judge the interestingness of a rule) 
38
Objective measures of rule interest
Support
Confidence or strength
Lift or Interest or Correlation
Conviction
Leverage or Piatetsky-Shapiro
Coverage
39
Criticism to Support and Confidence
Example 1: (Aggarwal & Yu, 
PODS98)
Among 5000 students
3000 play basketball
3750 eat cereal
2000 both play basket ball 
and eat cereal
basketball not basketball sum(row)
cereal 2000 1750 3750 75%
not cereal 1000 250 1250 2 5%
sum(col.) 3000 2000 5000
6 0 % 4 0 %
play basketball ⇒ eat cereal [40%, 66.7%] 
misleading because the overall percentage of students eating cereal is 
75% which is higher than 66.7%.
play basketball ⇒ not eat cereal [20%, 33.3%] 
is more accurate, although with lower support and confidence
40
Lift of a Rule
Lift (Correlation, Interest)
A and B negatively correlated, if the value is less than 1; 
otherwise A and B positively correlated
X 1 1 1 1 0 0 0 0
Y 1 1 0 0 0 0 0 0
Z 0 1 1 1 1 1 1 1
rule Support Lift
X ⇒Y 25% 2.00
X⇒Z 37.50% 0.86
Y⇒Z 12.50% 0.57
sup( , ) ( | )Lift( )
sup( ) sup( ) ( )
A B P B AA B
A B P B
→ = =
⋅
41
Lift of a Rule
Example 1 (cont)
play basketball ⇒ eat cereal [40%, 66.7%] 
play basketball ⇒ not eat cereal [20%, 33.3%]
basketball not basketball sum(row)
cereal 2000 1750 3750
not cereal 1000 250 1250
sum(col.) 3000 2000 5000
89.0
5000
3750
5000
3000
5000
2000
LIFT =
×
=
33.1
5000
1250
5000
3000
5000
1000
LIFT =
×
=
42
Problems With Lift
Rules that hold 100% of the time may not have the highest 
possible lift. For example, if 5% of people are Vietnam veterans 
and 90% of the people are more than 5 years old, we get a lift of 
0.05/(0.05*0.9)=1.11 which is only slightly above 1 for the rule
Vietnam veterans -> more than 5 years old.
And, lift is symmetric:
not eat cereal ⇒ play basketball [20%, 80%]
33.1
5000
3000
5000
1250
5000
1000
LIFT =
×
=
43
Conviction of a Rule
Note that A -> B can be rewritten as ¬(A,¬B)
Conviction is a measure of the implication and has value 1 if items are 
unrelated.
play basketball ⇒ eat cereal [40%, 66.7%] 
eat cereal ⇒ play basketball conv:0.85
play basketball ⇒ not eat cereal [20%, 33.3%]
not eat cereal ⇒ play basketball conv:1.43
1sup( ) sup( ) ( ) ( ) ( )( ( ))( )
( ) ( , )sup( , ) ( , )
A B P A P B P A P BConv A B
P A P A BA B P A B
⋅ ⋅ −
→ = = =
−
75.0
5000
2000
5000
3000
5000
37501
5000
3000
Conv =
−
⎟
⎠
⎞
⎜
⎝
⎛ −
=
125.1
5000
1000
5000
3000
5000
12501
5000
3000
Conv =
−
⎟
⎠
⎞
⎜
⎝
⎛ −
=
44
Leverage of a Rule
Leverage or Piatetsky-Shapiro
PS (or Leverage):
is the proportion of additional elements covered by both the 
premise and consequence above the expected if independent.
P ( ) sup( , ) sup( ) sup( )S A B A B A B→ = − ⋅
45
Coverage of a Rule
coverage( ) sup( )A B A→ =
46
Association Rules Visualization
The coloured column indicates the association rule B→C. 
Different icon colours are used to show different metadata values of 
the association rule.
47
Association Rules Visualization
48
Size of ball equates to total support
Height 
equates to 
confidence
Association Rules Visualization
49
Association Rules Visualization - Ball graph
50
The Ball graph Explained
A ball graph consists of a set of nodes and arrows. All the nodes are yellow, green 
or blue. The blue nodes are active nodes representing the items in the rule in which 
the user is interested. The yellow nodes are passive representing items related to 
the active nodes in some way. The green nodes merely assist in visualizing two or 
more items in either the head or the body of the rule. 
A circular node represents a frequent (large) data item. The volume of the ball 
represents the support of the item. Only those items which occur sufficiently 
frequently are shown
An arrow between two nodes represents the rule implication between the two 
items. An arrow will be drawn only when the support of a rule is no less than the 
minimum support
51
Association Rules Visualization
52
Mining Association Rules
What is Association rule mining
Apriori Algorithm
FP-tree Algorithm
Additional Measures of rule interestingness
Advanced Techniques
53
Multiple-Level Association Rules
Fresh ⇒ Bakery [20%, 60%]
Dairy ⇒ Bread [6%, 50%]
Fruit ⇒ Bread [1%, 50%] is not valid
FoodStuff
Frozen Refrigerated Fresh Bakery Etc...
Vegetable Fruit Dairy Etc....
Banana Apple Orange Etc...
Items often form hierarchy. 
Flexible support settings: Items at the lower level are expected to have lower support.
Transaction database can be encoded based on dimensions and levels explore shared multi-level 
mining
54
Multi-Dimensional Association Rules
Single-dimensional rules:
buys(X, “milk”)  ⇒ buys(X, “bread”)
Multi-dimensional rules: ≥ 2 dimensions or predicates
Inter-dimension association rules (no repeated predicates)
age(X,”19-25”)  ∧ occupation(X,“student”) ⇒ buys(X,“coke”)
hybrid-dimension association rules (repeated predicates)
age(X,”19-25”) ∧ buys(X, “popcorn”) ⇒ buys(X, “coke”
55
Quantitative Association Rules
age(X,”30-34”) ∧ income(X,”24K - 48K”) ⇒ buys(X,”high resolution 
TV”)
Mining Sequential Patterns
10% of customers bought 
“Foundation” and “Ringworld” in one transaction, 
followed by 
“Ringworld Engineers” in another transaction.
56
Given
A database of customer transactions ordered by increasing
transaction time
Each transaction is a set of items
A sequence is an ordered list of itemsets
Example:
10% of customers bought “Foundation“ and “Ringworld" in one 
transaction, followed by “Ringworld Engineers" in another transaction.
10% is called the support of the pattern
(a transaction may contain more books than those in the pattern)
Problem
Find all sequential patterns supported by more than a user-specified 
percentage of data sequences  
Sequential Pattern Mining
61
Application Difficulties
Wal-Mart knows that customers who buy Barbie dolls 
(it sells one every 20 seconds) have a 60% likelihood of 
buying one of three types of candy bars. What does 
Wal-Mart do with information like that? 
'I don't have a clue,' says Wal-Mart's chief of 
merchandising, Lee Scott. 
See - KDnuggets 98:01 for many ideas 
www.kdnuggets.com/news/98/n01.html
62
Some Suggestions
By increasing the price of Barbie doll and giving the type of candy bar 
free, wal-mart can reinforce the buying habits of that particular types of
buyer 
Highest margin candy to be placed near dolls.
Special promotions for Barbie dolls with candy at a slightly higher margin.
Take a poorly selling product X and incorporate an offer on this which is 
based on buying Barbie and Candy. If the customer is likely to buy these 
two products anyway then why not try to increase sales on X? 
Probably they can not only bundle candy of type A with Barbie dolls, but 
can also introduce new candy of Type N in this bundle while offering 
discount on whole bundle. As bundle is going to sell because of Barbie 
dolls & candy of type A, candy of type N can get free ride to customers 
houses. And with the fact that you like something, if you see it often, 
Candy of type N can become popular. 
63
References
Jiawei Han and Micheline Kamber, “Data Mining: 
Concepts and Techniques”, 2000
Vipin Kumar and Mahesh Joshi, “Tutorial on High 
Performance Data Mining ”, 1999
Rakesh Agrawal, Ramakrishnan Srikan, “Fast Algorithms 
for Mining Association Rules”, Proc VLDB, 1994
(http://www.cs.tau.ac.il/~fiat/dmsem03/Fast%20Algorithms%20for%20Mining%20Association%
20Rules.ppt)
Alípio Jorge, “selecção de regras: medidas de interesse
e meta queries”, 
(http://www.liacc.up.pt/~amjorge/Aulas/madsad/ecd2/ecd2_Aulas_AR_3_2003.pdf)
64
Thank you !!!

