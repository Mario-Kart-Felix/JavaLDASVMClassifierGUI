Introduction to 
Computational Mathematics 
MATH 365 
Introduction 
Computational Mathematics: 
•  Concerned with the design, analysis, and implementation of 
algorithms for the numerical solution of problems that have 
no tractable analytical solution.  
•  Combines:  
1.  Numerical analysis 
2.  Mathematical modeling 
3.  Computer science 
4.  Applied mathematics 
5.  Science and engineering. 
 
•  Recognized as a genuine field of the mathematical sciences. 
MATH 365 
Scientific process 
•  Why is computational mathematics important? 
•  Consider the following simplified model of the scientific process: 
Physical system Conceptual interpretation 
Mathematical 
model 
Interpret results and 
compare to 
experimental data 
Make predictions 
(get rich)  
Observe and collect data 
A
pply physical law
s 
Solve the model 
R
efi
ne
 b
as
ed
 o
n 
re
su
lts
 
Su
cc
es
s 
•  Computational math fits in the solution phase, and often in the 
interpretation phase. 
MATH 365 
Scientific process 
•  Why is computational mathematics important? 
•  Consider the following simplified model of the scientific process: 
Physical system Conceptual interpretation 
Mathematical 
model 
Interpret results and 
compare to 
experimental data 
Make predictions 
(get rich)  
Observe and collect data 
A
pply physical law
s 
Solve the model 
R
efi
ne
 b
as
ed
 o
n 
re
su
lts
 
Su
cc
es
s 
•   Why: The resulting models can essentially never be solved completely 
using analytical (pencil and paper) methods.  
Model for fluid dynamics: 
MATH 365 
Simple example with no analytical solution 
•  Consider the function (called the error function): 
•  Suppose some set of measurements follow a normal distribution with 
mean zero and standard deviation σ. 
•  Then the probability that the error of a measurement is within ±ε is 
given by 
•  The definite integral defining f cannot be determined in terms of 
elementary functions for a general ε. 
•  One must result to numerical approximation! 
MATH 365 
Much more complicated examples 
MATH 365 
Computational science 
“Computational science now constitutes what many call the 
third pillar of the scientific enterprise, a peer alongside theory 
and physical experimentation.”  
 
Report to the President : Computational Science : Ensuring America’s 
Competitiveness”, June 2005. 
 
Computational 
and applied 
math 
Computer 
Science 
Science and 
engineering  = Computational Science 
MATH 365 
Algorithms 
•  Algorithms are the main product of computational mathematics. 
•  A mathematical algorithm is a formal procedure describing an 
ordered sequence of operations to be performed a finite number of 
times. 
•  Algorithms are like recipes with the basic building blocks of 
addition, subtraction, multiplication, and division, as well as 
programming constructs like for, while, and if. 
Simple Example: Compute mean and variance of a collection of data x1,x2,…,xN. 
Algorithm written in pseudo code 
MATH 365 
Algorithms 
•  Three primary concerns for algorithms: 
 
§  Accuracy: How good is the algorithm at approximating the 
underlying quantity. 
 
§  Stability: Is the output of the algorithm sensitive to small changes in 
the input data. 
 
§  Efficiency: How much time does it take the algorithm to obtain a 
reasonable approximation. 
•  We will briefly discuss these for the algorithms considered in this course; a 
more thorough discussion and analysis is part of a more advanced course 
in numerical analysis. 
•  Some other important concerns include robustness, storage, and 
parallelization. 
MATH 365 
Algorithms 
•  Algorithms can be classified into two types: 
 
§  Direct methods: Obtain the solution in a finite number of steps, 
assuming no rounding errors. 
Example: Solving a linear system with Gaussian elimination 
 
§  Iterative methods: Generate a sequence of approximation that 
converge to the solution as the number of steps approaches infinity. 
Example: 
 
MATH 365 
Errors 
•  Major sources of errors in computational math: 
 
§  Truncation errors: Result from the premature termination of an 
infinite computation. 
Example: 
 
These are the primary concern of computational math. 
 
§  Round off errors: Result from using floating point arithmetic. 
 
Less significant than truncation errors, but nevertheless can result in 
catastrophic problems (some examples). 
•  Other errors that must be accounted for: 
Human errors, modeling errors, and measurement errors. 
MATH 365 
Measuring errors 
•  This course is about learning numerical methods for approximating 
solutions to problems. 
•  Let p be an approximation to p*, then we have two ways of measuring the 
error: 
 
§  Absolute error:  
 
 
 
§  Relative error: 
•  Relative error is typically the best, but it depends on the problem. 
•  To illustrate this point consider the following simple example 
Example: 
What are the absolute and relative errors in these cases?   
Which value makes the most sense to use? 
MATH 365 
Overview of the course 
§  We will cover the following material: 
²  Floating point arithmetic 
²  Solving large linear systems of equations 
²  Interpolation and curve fitting 
²  Solving non-linear equations and optimization 
²  Numerical integration and differentiation 
²  Least squares methods for over/underdetermined problems. 
²  Numerical solutions of initial and boundary value problems. 
 
§  We will discuss the methods associated with these topics and the 
corresponding MATLAB routines. 
§  You will develop your own MATLAB codes for solving some applied 
problems. 
 

