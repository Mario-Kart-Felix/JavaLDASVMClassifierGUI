 
                            Gesellschaft    für    Operations    Research    e.V. 
___________________________________________________________________________________________________________ 
                              
Joseph-Sommer-Straße 34, 41812 Erkelenz, Tel.: 02431 9026710, Fax: 02431 9026711 
 
 
 
 
 
 
 
 
85th Meeting of the GOR Working Group 
 
Practice of the Mathematical Optimization 
 
Modeling Languages in Mathematical Optimization  
– Overview, Opportunities & Challenges in Application Development – 
 
18–29 November, 2010 
Physikzentrum, Bad Honnef, Germany  
(www.pbh.de)  
 
 
 
Organisation 
 
Josef Kallrath & Alexander Lavrov 
GOR AG „Praxis der mathematischen Optimierung“ 
 
 
 
 
 
 

Modeling Languages in Mathematical Optimization  
– Overview, Opportunities & Challenges in Application Development – 
 
This symposium deals in a unique combination with the aspects of model-building and solving real 
world-optimization problems. It treats in a systematic way all major modeling languages and model 
language software used to solve mathematical optimization problems.  
Speakers of all major modeling language providers will be present and will give deep insight into 
their motivations and conceptual design features of the software, highlight their advantages but al-
so discuss critically their limits.  
Roughly speaking, a modeling language is a means of describing problems to a computer system 
in the same way that people describe those problems to each other. Of course in reality it is not 
exactly in the same way, but the resemblance has to be close enough to spare the user any signif-
icant translation. Of course, in this symposium we focus on modeling languages used in mathe-
matical optimization. As an example, when practitioner or researchers describe large-scale linear 
programs to each other, they use summations and subscripting. To give a negative definition first: 
Probably one would not consider a language lacking in these features to be a modeling language 
for large-scale LP. This can be turned into a positive definition: A modeling language in mathemat-
ical optimization needs to support the expressions and symbols used in the mathematical optimi-
zation community. Therefore, it is naturally an algebraic modeling language supporting the con-
cepts of data, variables, constraints and objective function. Those entities are connected by alge-
braic operations (+,-,x) but also nonlinear functions. 
The earliest algebraic modeling languages appeared in the late 1970s and early 1980s. They were 
already very useful supporting analysts to feed their problems to solvers. In the midst 1980s, 
when, for instance, AMPL or XPress-MP appeared, the software developers were already trying to 
improve on previous designs, by taking advantage of faster computers and better computing envi-
ronments.   
By showing the strengths and characteristic features we hope to give novices and practitioners in 
mathematical optimization, supply chain management, finance industry and other areas of industry 
a useful overview of these different software packages and support decision makers when they 
have to decide which way to go. 
This two-days event will give an overview of the current state of the art including new topics such 
as grid computing, stochastic optimization, and hybrid methods. A special focus is on application 
layers above the algebraic modeling languages. Such structures we find, for instance, in the ener-
gy, supply chain and refinery sectors. Please contact Alexander Lavrov or myself if you are inter-
ested to contribute a talk or a presentation. 
 
In  regular talks, each approx. 30-45 minutes, and 60 minutes blocks (including several small con-
tributions) by the modelling language providers experts from practice, research institutions or soft-
ware companies, will present selected problems and the corresponding solutions. Confirmations 
for their talks have been obtained from the following speakers: 
 
Dr. Oliver Bastert, Dr. Yves Colombani & Dr. Susanne Heipcke  
The Xpress-Mosel Environment                  (Xpress Team, FICO, München & Marseille, FR) 
 
Dr. Bert Beisiegel  (B2 Software-Technik GmbH, Mülheim/Ruhr, Germany) 
Modeling Languages: What I liked in the Past and what I hope for in the Future  
 
Dr. Wolfgang Britz (Institute for Food And Resource Economics, University Bonn, Germany) 
GAMS Models in Agricultural Economics 
 
Prof. Dr. Robert Fourer & Dr. David M. Gay (AMPL Optimization LLC, Albuquerque, NM, US) 
Recent Developments in Model and Solver Support in the AMPL Modeling Language  
 
Jan-H. Jagla (GAMS Software GmbH, Köln, Germany) 
GAMS - Features you might not know about 
 
Dr. Ferenc Katai (IBM ILOG SWG AIM, Valbonne, France) 
IBM ILOG Optimization Programming Language (OPL): Powerful Combinations of Different Modeling Worlds 
 
Dr. Thorsten Koch (Zuse Institute Berlin, Berlin, Germany)   
The ZIB Optimization Suite 
 
Prof. Dr. Josef Kallrath (GOR „Real World Optimization“, Germany)   
Polylithic Modeling and Solution Approaches 
 
Bjarni Kristjansson (Maximal Software, UK)   
Current Developments for the MPL Modeling System and Optimax Component Library  
 
Alexander Meeraus (GAMS Development Corporation, Washington, D.C., US) 
GAMS Past - Present - Future  
 
Arnold Neumaier, Peter Schodl & Kevin Kofler (University of Vienna, Vienna, Austria) 
FMathL -- Formal Mathematical Language  
 
Dr. Olaf Syben (ProCom GmbH, Luisenstr. 41, 52070 Aachen, Germany) 
BoFiT, a Graphical Modeling Framework for Mixed Integer Programs 
   
In particular, the following thematic fields will be addressed:  
 
• Algebraic modeling languages  
• Data interfacing  
• Graphical modelling frameworks 
• Practioners’ views 
 
 
We expect an interesting overview on the current status of modeling languages, reflecting modern 
requirements, possibilities, and limitations. Part of the official program is a visit and a guided tour 
through the private house of the German chancellor, Konrad Adenauer. 
 
 
 
 
 
 
 
 
 
 
 
Joseph-Sommer-Straße 34, 41812 Erkelenz, Tel.: 02431 9026710, Fax: 02431 9026711 
 
 
85. Sitzung der GOR Arbeitsgruppe 
Praxis der Mathematischen Optimierung  
 
Modeling Languages in Mathematical Optimization  
– Overview, Opportunities & Challenges in Application Development – 
 
Physikzentrum, Bad Honnef, November 18 & 19, 2010 
 
 
     Thursday, Nov. 18 - 2010 : 09:30 – 23:00 
 
09:30-09:40 Opening and Welcome Session (J. Kallrath & A. Lavrov) 
 
09:40-10:15  Bert Beisiegel  B2 Software-Technik GmbH, Mülheim/Ruhr, Germany 
              Modeling Languages: What I liked in the Past and what I hope for in the Future 
 
10:15-10:30  Alexander Meeraus  GAMS Development Corp., Washington, D.C., US 
              GAMS Past - Present - Future 
 
10:30-10:50 ------------------------------  Coffee Break --------------------------------- 
 
10:50-11:35  Jan-H. Jagla                          GAMS Software GmbH, Cologne, Germany 
GAMS - Features you might not know about                
 
11:35-13:00 --------------------------  Lunch Break --------------------------------- 
 
13:00-13:40  Arnold Neumaier, Peter Schodl & Kevin Kofler (University of Vienna,  
FMathL -- Formal Mathematical Language                     Vienna, Austria) 
 
13:40-14:20  Thorsten Koch (Zuse Institute Berlin, Berlin, Germany)   
          The ZIB Optimization Suite 
 
14:20-14:45 ------------------------------  Coffee Break --------------------------------- 
14:45-16:45 ----- Visit & Guided Tour: Stiftung Bundeskanzler-Adenauer-Haus -------- 
 
16:45-17:30  Josef Kallrath  GOR Arbeitsgruppe, Weisenheim am Berg, Germany   
          Polylithic Modeling and Solution Approaches 
 
17:30-18:30  Olaf Syben (ProCom GmbH, Aachen, Germany) 
BoFiT, a Graphical Modeling Framework for Mixed Integer Programs 
 
18:35-18:45  Internal Meeting of the Working Group   
19:00 - Conference Dinner – Buffet; get-together in the wine-cellar  
            Celebrating the 85th Meeting of our GOR Working Group  
 
 
Friday, Nov. 19 - 2010 : 09:15 – 16:30 
 
   
 
 
09:15-10:15  Robert Fourer & David M. Gay (AMPL Optimization LLC, Albuquerque) 
Recent Developments in Model and Solver Support in the AMPL Modeling Language 
 
10:15-10:45 --------------------------  Coffee Break --------------------------------- 
 
10:45-11:45  Bjarni Kristjansson (Maximal Software, London, UK) 
Current Developments for the MPL Modeling System and Optimax Component 
 Library  
 
11:45-12:30  Wolfgang Britz  Inst. for Food And Resource Economics, Univ. Bonn  
          GAMS Models in Agricultural Economics 
 
 
12:30-14:00 -------------------------------------  Lunch Break  ---------------------- 
 
 
14:00-15:00  Oliver Bastert, Yves Colombani & Susanne Heipcke  
The Xpress-Mosel Environment  (Xpress Team, FICO, München & Marseille)   
 
 
15:00-15:20 --------------------------  Coffee Break --------------------------------- 
 
 
15:20-16:20  Ferenc Katai (IBM ILOG SWG AIM, Valbonne, France) 
IBM ILOG Optimization Programming Language (OPL): Powerful Combinations  
of Different Modeling Worlds 
 
 
16:20-16:30 Final Discussion – End of the Workshop 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
The Speakers
Oliver Bastert is product manager for the FICO Xpress Optimization suite. Before joining
FICO in 2008, he has worked for almost a decade as a software developer and consultant
at Dash Optimization. He has published several scientific papers and delivers university
lectures and presentations on optimization periodically. Oliver Bastert holds a diploma in
mathematics and computer science from the University of Cologne, Germany, and a doctorate
degree in applied mathematics from the Munich University of Technology, Germany.
Bert Beisiegel runs a tiny company for more than twenty years; see the abstract of his talk
for more information. He has studied mathematics (and physics) at the Johannes Gutenberg
University at Mainz; his thesis (from 1975) has dealt with finite simple groups, an alge-
braic topic, certainly remote from ”algebraic” modeling languages. More can be found at
www.b2st.de/1 1 ich.html.
Wolfgang Britz, senior researcher and lecturer at the Institute for Food and Resource
Economics, University Bonn, focuses since two decades on economic simulation models for
impact assessment of agricultural policies. Besides methodological work, project management
and applications for policy support, he his also involved in IT implementation and GUI
development of large-scale economic modeling systems.
Michael R. Bussieck is a Senior Research Analyst at GAMS Software GmbH. From 1999
to 2004 he worked at the GAMS Development headquarters in Washington DC, USA. He
received his Ph.D. from Technical University Braunschweig, Germany.
Yves Colombani is a computer scientist from Marseille (France). For his PhD, awarded in
1997, he worked on scheduling problems and implemented a constraint solver on intervals of
integers. He then joined Dash Optimization (now: FICO). Yves has entirely designed and
implemented Mosel and continues the development of its core functionality.
Robert Fourer is a partner of AMPL Optimization LLC and has been a member of the
faculty of the Industrial Engineering and Management Sciences Department at Northwestern
University for over 30 years. His involvement in the creation of the AMPL modeling languages
dates to a sabbatical visit to Bell Laboratories in 1985-86. He received a Ph.D. from Stanford
University in 1980.
David M. Gay is a partner of AMPL Optimization LLC and a research professor at the
University of New Mexico. Previously he worked for over six years at Sandia National Labs in
Albuquerque, New Mexico, and for nearly 20 years at Bell Labs in Murray Hill, New Jersey,
where he helped create the AMPL modeling language. He received a Ph.D. from Cornell
University in 1975.
Susanne Heipcke worked for BASF-AG (Germany) before joining Dash Optimization in
1998. Her Ph.D. research (awarded in 1999 by the University of Buckingham) focused on the
solution of large-scale industrial problems by a combination of constraint programming and
mixed integer programming. More recently she has worked on various aspects of modeling,
including the development of teaching material for Mosel (including the book ”Applications
of optimization with Xpress-MP” published in September 2002), and interfaces to different
types of solvers and solution methods. Her responsibilities at FICO comprise the model
builder library Xpress-BCL, coordination of the development of the constraint programming
software Xpress-Kalis, consulting projects in various business sectors, training courses and
the organization of specialist training events.
Jan-H. Jagla studied mathematical economics at the Technical University Braunschweig,
Germany and the University of Zaragoza, Spain. Since 2006 he is an optimization analyst at
GAMS Software GmbH.
Ferenc Katai received his Theoretical Mathematician diploma in Hungary/Szeged in 1987
and then went on to do research in a Hungarian Academy affiliated Reserch Institute to solve
chemical industry related problems ranging from reactor modeling/reactor sizing with efficient
start-ups - including writing LP/MIP and NLP solvers -, and to conduct research on chemical
process scheduling. In 1992 he received a scholarship to pursue his Ph.D. in the Research
Laboratory of Resource Utilization of Tokyo Institut of Technology/Japan on Stochastic
Learning in Genetic Algorithms applied for checmical scheduling processes. After he got his
Ph.D. he spent two years as an Assistant Processor in the same University but in different
laboratory building simulation architectures for chemical plants. In 1998 he joined ILOG
Japan as a senior consultant of optimization and then became the Director of Consulting for
ILOG Japan office. He had first hand experience how to model/solve large size problems in
different industries in logistics/manufacturing/manpower related/etc. Since 2007 he has been
product manager of the product called IBM ILOG CPLEX Optimization Studio(formerly
called ILOG OPL Studio). He published over 20 papers during his research years - and some
after that as well -, and participated in many conferences on optimization/scheduling.
Thorsten Koch is a member of the research staff of the Discrete Methods Division at the
Zuse Institute Berlin (ZIB) since 1998. He has worked in several areas, especially Telecom-
munication, Chip Verification, Mathematical Education and Integer Programming. In 2001
he became a member of the DFG research center Matheon and is now head of the project B20
Optimization of Gas Networks. He received his Ph.D in 2004 from TU Berlin for his thesis
on Rapid Mathematical Programming. Since 2009 he is director of the Scientific Information
department at ZIB and also head of the Linear and Non-linear Integer Programming Group.
Gertjan de Lange joined Paragon Decision Technology in 1995. Paragon is the developer of
AIMMS, an optimization platform that enables organizations to incorporate Operations Re-
search to support complex decision making in a straightforward manner (www.aimms.com).
Currently, he is responsible for the Product Strategy of AIMMS. In 2006, Gertjan started the
US office of Paragon in Kirkland, WA from which he returned early 2010. He has an MSc in
Applied Operations Research from University of Twente (NL).
Annette Mura is working in the products department of ProCom and is responsible for the
specification of requirements of BoFiT. During her studies of mathematics at the TU Berlin
she specialized on optimization methods and modeling of mixed integer problems using differ-
ent modeling languages. Starting as consultant for optimization problems in different areas
at ProCom in 2007 she is now responsible for the mathematical design of the optimization
components in BoFiT.
Alexander Meeraus is president of GAMS Development Corporation (GDC). For 17 years
he worked in research at the World Bank heading Analytic Support. 1987 he founded GDC
to turn GAMS, the research product, into a viable commercial system.
Arnold Neumaier is since 1994 full professor for computational mathematics at the Univer-
sity of Vienna. He has very broad interests, with long term activities in many fields of pure
and applied mathematics, computer science, and physics, including software development
and analysis of algorithms in optimization, numerical analysis, and statistics, and uncer-
tainty modeling in high dimensions. Successful software packages include the VCE covariance
estimation software; MCS, the only global optimization code in the huge NAG library; and
SNOBFIT, a user-friendly package for expensive parallel noisy optimization. He is also the au-
thor of several books and extensive survey articles, in particular on topics from numerical anal-
ysis and optimization. His extensive web site at http://www.mat.univie.ac.at/∼neum/ is
one of the most visible ones in mathematics and adjacent areas, among those owned and
maintained by a single person who is also responsible for the contents.
Dr. Olaf Syben is heading the products department of ProCom and is thereby responsible
for the development of BoFiT. After his Ph.D. in the field of elementary particle physics he
has been working in IT projects for more than 12 years. His main subjects have been the
specification of requirements and the translation of customer requirements and needs to IT
solutions.
Lutz Westermann is an Optimization Analyst at GAMS Software GmbH since 2006. He
graduated as Dipl.-Math. oec. at the Technical University Braunschweig, Germany.
The Xpress-Mosel Environment
O. Bastert, Y. Colombani, S. Heipcke
Xpress Team, FICO
Leam House, 64 Trinity Street
Leamington Spa, CV32 5YN, UK
e-mail: [OliverBastert,YvesColombani,SusanneHeipcke]@fico.com
April 2010
1. Introduction to the Mosel language and the associated tools
The first talk gives an overview of the Mosel language, presenting its use as a math-
ematical modelling language and equally its programming functionality that makes it
possible to implement complete optimization applications in a single environment. De-
velopment and analysis of optimization models is aided by the graphical environment
Xpress-IVE, and tools such as the Mosel debugger and profiler, and the Xpress-Tuner.
The Mosel libraries provide the neccessary functionality for a tight integration into
existing (C/Java/.net) applications for model deployment.
2. Decomposition schemes in Mosel
This talk presents possibilities for problem decomposition and concurrent solving from
a modelling point of view (that is, excluding ”parallel MIP” and other solver-internal
options). We provide examples of problem classes suitable for the different approaches
and hint at their implementation with Xpress-Mosel, using Mosel’s capacity of handling
multiple models, multiple problems within a model, and as a new feature, distributed
computation using multiple processors. Some remarks on the ”doability” for less expert
modellers close the discussion.
3. Application demos
By design, Mosel has an open, modular architecture. Besides various solver modules and
data connectors, the Mosel distribution also includes the module Xpress-XAD for the
development of graphical user interfaces to optimization models. In this talk we show
various examples of applications from different industry sector developed with XAD,
that is simply just another add-on module to the Mosel language, with a dedicated a
drag-and-drop editor in IVE.
Modeling Languages: What I liked in the past and what I hope
for in the future
Bert Beisiegel
B2 Software-Technik GmbH
Gracht 157, 45472 Mülheim an der Ruhr
e-mail: bert.beisiegel@b2st.de
B2ST implements tailor made application software for steel works including various types of
charge design and alloy calculations and static metallurgical models for vessels such as AOD,
VAD and VOD. All these calculations have to solve LP- (and slightly NLP-) problems.
For many years, we have used our own solvers (written in FORTRAN and C). In 2003 we have
finally abandoned those and moved on to use commercial solvers and a modeling language. I
will comment on why we made this move and how we selected a specific modeling language.
I consider a modeling language quite beneficial not only for OR experts, but for users. too.
Unfortunately, users are rarely aware of the benefits of the modeling language; in most cases
they are not aware of the modeling language at all. I will present some suggestions on how
”the community” could change this.
I will conclude with some of my wishes for additional and/or enhanced features of modeling
languages.
GAMS Models in Agricultural Economics
Wolfgang Britz
Institute for Food And Resource Economics, University Bonn
Nussallee 21, 53115 Bonn, Germany
e-mail: wolfgang.britz@ilr.uni-bonn.de
Economic simulation models in agricultural economics are applied at quite different scales
from single farms to globe and for quite different purposes such as policy impact assessment
or farm level planning. The paper aims to summarize pros and cons of using GAMS for
agricultural simulation models, drawing mostly on experiences gathered by a team in Bonn
and by contacts with other agricultural economists.
The major advantages of GAMS can be summarized as follows. A notation close to equations
in a scientific paper eases documentation and training. Its set driven concept based on ele-
ments wise operations in multi-dimensional matrices avoids explicit loops and if statements
and leads to compact code, and supports separation of data and code. It comprises trans-
parent links to high-performance solvers for LP, NLP, MIP, CNS, and MCP. In combination,
these features lead to its relatively wide spread use in agricultural economic simulation models
and a vivid user community.
There are some clear restrictions. GAMS declares all symbols as global and does (basically)
not feature the concept of a function and sub-routine. That decreases learning costs, but
hinders a modular design. Moreover, GAMS supports only a few types of objects: double
precision multi-dimensional arrays (including scalars) indexed with string collections the
so-called sets -, sets, and the objects around a model. It does not allow handling of other
data types/objects, and does not comprise in-built functions for even basic statistics. All
matrix operations must be programmed element wise. I/O is restricted to the proprietary
GDX format or plain text/CSV. However, GDX interfacing tools and an API for the GDX
format are available.
Summarizing, the relatively simple language structure of GAMS allows economists even with-
out IT training to set-up and apply relatively quickly an even large-scale simulation model.
Its future market share could depend on two issues. Firstly, how far will GAMS benefit from
parallel execution to answer the growing demand for stochastic simulations and large-scale
sensitivity analysis? Secondly, will it be possible for GAMS, without losing its appealing
simplicity, to support a more modular design to ease application in large-scale projects and
exchange of libraries.
Recent Developments in Model and Solver Support
in the AMPL Modeling Language
Robert Fourer, David M. Gay
AMPL Optimization LLC
900 Sierra Place SE
Albuquerque, NM 87108-3379
4er@ampl.com, dmg@ampl.com
We describe extensions that enable the AMPL modeling language to more naturally express
certain discrete and stochastic optimization problems. Only a modest number of straight-
forward changes to the language are necessitated by these extensions. However we have also
faced a range of challenges in conveying these extensions from models to problem instances
to varied solvers, in such a way that each solver can take best advantage of the problem
structure. To explain these challenges we describe several AMPL-solver links that have been
implemented in the past year.
GAMS - Features you might not know about
Jan-H. Jagla
GAMS Software GmbH
Eupener Str. 135-137, 50933 Cologne, Germany
e-mail: jhjagla@gams.com
In the last decade the General Algebraic Modeling System (GAMS) has been improved in
various ways. Improvements like the availability of new solvers are visible and known to most
of the users. Other enhancements are more hidden and the user might not know that these
exist. In this talk we give an overview of features which were added in the recent and not so
recent past.
Polylithic Modeling and Solution Approaches
Josef Kallrath
GOR Arbeitsgruppe Praxis der mathematischen Optimierung
Am Mahlstein 8, 67273 Weisenheim am Berg, Germany
e-mail: firstname.lastname@web.de
Based on the Greek term monolithos (stone consisting of one single block) Kallrath (2009)
introduced the corresponding term polylithic for modeling and solution approaches in which
mixed integer or non-convex nonlinear optimization problems are solved by a tailor-made
methods involving several models and/or algorithmic components. A monolithic model is
just one model with data, a set of variables and a set of constraints and one solve statement
calling a solver, e.g., CPLEX, Gurobi, or Xpress. In contrast, a polylithic model contains a
set of models which are somehow connected in their data flow of input and output data, i.e.,
the solution of one model is input to another one. This can be exploited to initialize certain
variables, or to provide bounds on them. Examples of polylithic models are decomposition
approaches, column generation as in Gilmore & Gomory (1961)] and Branch&Price [see, for
instance, Barnhart et al. (1998)] or hybrid techniques [see, for instance, Pochet and Wolsey
(2006)] in which constructive heuristics and local search improvement methods are coupled
with exact MIP algorithms to produce feasible points and tight lower and upper bounds.
Thus, we observe that the sub-models of polylithic models are often connected in such a way
that they represent a tailor-made algorithm.
Tailor-made polylithic solution approaches with thousands or millions of solve statement to
be executed put an extreme challenge on algebraic modeling languages. Hot-start techniques
avoiding that the whole matrix is re-generated become essential.
In this talk we present illustrative examples from the paper and metals industries, scheduling
in the process industry, and planning of hydro-thermal plants in the energy industry. Lexico-
graphic goal programming, a useful approach in multi-criteria planning problems, is another
example of a polylithic modeling.
References
C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsberg, and P. H. Vance. Branch-
and-Price: Column Generation for Solving Huge Integer Programs. Operations Research,
46(3):316–329, 1998.
P. C. Gilmore and R. E. Gomory. A Linear Programming Approach to the Cutting Stock
Problem. Operations Research, 9:849–859, 1961.
J. Kallrath. Combined Strategic Design and Operative Planning in the Process Industry.
Computers and Chemical Engineering, 33:1983–1993, 2009.
Y. Pochet and L. A. Wolsey. Production Planning by Mixed Integer Programming. Springer,
New York, 2006.
IBM ILOG Optimization Programming Language (OPL):
Powerful Combinations of Different Modeling Worlds
Ferenc Katai
IBM ILOG SWG AIM
1681 routes des Dolines, Les Taissounieres HB2, 0650 Valbonne
e-mail: ferenc.katai@fr.ibm.com
Linear/integer/quadratic programming models along with combinatorial optimization mod-
els arise in a variety of application areas, which include planning, scheduling, sequencing,
resource allocation, design, and configuration to name a few. Usually modelers choose the
technology - the underlying solving engine - first, and then they use a language in which
they can write their models and then access their choice of solving engine. The IBM ILOG
Optimization Language (OPL) does not close all the doors for model developers since thru
the OPL language they can access mathematical programming - for linear and mixed integer
models - (MP), constraint programming and constraint-based scheduling - for combinatorial
models - (CP and CP-based scheduling) models thru the same language/language environ-
ment. Then the modeler can try out different techniques/models which suits the best to
problem at hand. In addition OPL would like to make modelers lives easy simplifying the
modeling and the model development process itself. The presentation consists of three parts.
First a description of OPL as a language - along with the utility tools built in/on the language
- is given focusing on the three possible techniques (MP/CP/CP-based scheduling). Then
the second part discusses how CP-based scheduling-based models can outperform/out-scale
MP-based models on scheduling problems. In the same section how a combination of (MP
and CP) model chaining can be achieved using ILOG Scripting language will outlined. In fact
OPL itself is not limited by the underlying solving engines, it provides APIs for embedding
into virtually any code base (Java/C++/.Net). Or the modeler could write her own external
algorithms in Java and connect to the OPL model. This will be shown in the third part. At
the last part some of the applications where OPL is used are highlighted and conclusions are
drawn.
Keywords: Mathematical programming, integer programming, constraint programming, constraint-
based scheduling, optimization modeling language, IDE, solving engine,
The ZIB Optimization Suite
Thorsten Koch
Konrad-Zuse-Zentrum für Informationstechnik Berlin
Takustrae 7, 14195 Berlin-Dahlem, Germany
e-mail: koch@zib.de
We present the ZIB Optimization Suite, a toolset for mathematical programming, which is
freely available for academic use including complete source code. It consists of the algebraic
modeling language ZIMPL, the (non)linear mixed integer programming solver SCIP, and
the LP solver SoPlex. Using these tools it is possible to model, solve, and analyze large
mathematical programming instances in the classroom (and on the students Laptops) and
can therefore enhance the teaching of problem solving issues. Using some examples, the
ZIMPL modeling language will be introduced and the main features of the SCIP solver.
GAMS Past - Present - Future
Alexander Meeraus
GAMS Development Corporation
1217 Potomac Street NW, Washington, DC 20007, USA
e-mail: AMeeraus@gams.com
From the beginning in the 1970 at the World Bank till today, GAMS, the General Alge-
braic Modeling System, has evolved continuously in response to user requirements, changes
in computing environments and advances in the theory and practice of mathematical pro-
graming. These changes and improvements where guided by a few basic principles: Platform
independence, open architecture with interfaces to other systems, balanced mix of declara-
tive and procedural elements and the separation of interface, data, model and solver. These
fundamental concepts will also be constants during future development.
FMathL – Formal Mathematical Language
Arnold Neumaier, Peter Schodl, Kevin Kofler
Faculty of Mathematics
University of Vienna
Nordbergstr. 15, A-1090 Wien, Austria
e-mail: Arnold.Neumaier@univie.ac.at
FMathL is the working title for a modeling and documentation language for mathematics,
suited to the habits of mathematicians, to be developed in a project at the University of
Vienna.
The goal of the FMathL project is to combine the universality of the common mathematical
language to describe completely arbitrary problems and the user-friendliness of mathemati-
cal modeling systems such as AMPL or GAMS for the flexible definition of large-scale opti-
mization problems. Formal models are specified close to how they would be communicated
informally when describing them in a lecture or paper, except that no relevant details are
suppressed.
FMathL enables users to express arbitrary mathematics in a form that is translated into a
semantically faithful internal representation. Application modules can therefore be fed by
algorithms that extract from this description the relevant information.
FMathL allows to specify problems in their natural mathematical form, with functions, sets,
operators, measures, quantifiers, tables, cases rather than loops, indices, diagrams, etc.. It
will also allow to define high-level strategies for combining algorithms with well-defined input
output behavior to solve problems of a given category.
At present we have a fragment of FMathL designed to encode, analyze, and translate into
AMPL code the problem classes described in the OR-Library. We already successfully en-
coded about 1/3 of the problem classes described there. It is planned to develop this fragment
into a comfortable front end for conventional modeling languages.
BoFiT, a Graphical Modeling Framework for Mixed Integer
Programs
Dr. Olaf Syben
ProCom GmbH
Luisenstr. 41, 52070 Aachen
e-mail: Olaf.Syben@ProCom.de
BoFiT is a standard optimization product for applications in the energy sector delivered
by the ProCom GmbH. The solution covers the complete process starting with the modeling
of mixed integer programs and ending with the automized integration of optimization runs
and results in the business processes of the customers. The supported business processes
range from intraday and day ahead calculations up to long term scenarios for fuel planning
or investment decisions. BoFiT is able to cover problems containing e.g. thermal produc-
tion, power exchange, fuel contracts, storages, emission trading or district heat distribution.
The modelling of the optimization problems is based on a graphical approach in terms of a
material flow problem. A large number of pre-defined modelling components as contracts,
turbines or balance nodes is combined to a model. Each component represents a given subset
of mathematical equations while the connections between the components represent addi-
tional restrictions on the variables. By introducing constraints to the different variables the
mathematical problem is completed and solved by commercially available standard solvers.
In the actual BoFiT release the graphical editor is developed in a way that it derives its
modelling capabilities from a configuration file. The file contains the component definitions,
their modeling behaviour (connections) and their internal parameters. Thus the exchange of
the configuration file would lead to a graphical editor with new modelling capabilities. This
leads to new applications of BoFiT in different sectors where a graphical modelling language
can help the users to express their needs in terms of optimization problems. The newest
invention within BoFiT is a general component where the mathematical equations can be
defined using a standard modelling language. With help of that component BoFiT opens a
link between the mathematical modelling languages to the graphical modelling and combines
the advantages of the two approaches: graphical models are easy to read and to understand
but have a given library of equations while programming languages are hard to read but free
in the modelling capabilities.

