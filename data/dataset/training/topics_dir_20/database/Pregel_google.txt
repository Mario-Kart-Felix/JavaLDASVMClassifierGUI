 Feedback
 Subscribe (Full Service)   Register (Limited Service, Free)   Login
 
Search:   The ACM Digital Library   The Guide 
 
   
Pregel: a system for large-scale graph processing
Full text Pdf (485 KB) 
Source International Conference on Management of Data archive
Proceedings of the 2010 international conference on Management of data table
of contents
Indianapolis, Indiana, USA
SESSION: Graph data & querying table of contents
Pages: 135-146  
Year of Publication: 2010
ISBN:978-1-4503-0032-2
Authors Grzegorz Malewicz  Gogle, Inc., Mountain View, CA, USA
Matthew H. Austern  Google, Inc., Mountain View, CA, USA
Aart J.C Bik  Google, Inc., Mountain View, CA, USA
James C. Dehnert  Google, Inc., Mountain View, CA, USA
Ilan Horn  Google, Inc., Mountain View, CA, USA
Naty Leiser  Google, Inc., Mountain View, CA, USA
Grzegorz Czajkowski Google, Inc., Mountain View, CA, USA
Sponsor SIGMOD: ACM Special Interest Group on Management of Data 
Publisher ACM  New York, NY, USA
Bibliometrics Downloads (6 Weeks): 381,   Downloads (12 Months): 866,   Citation Count: 0
Additional
Information: abstract   references   index terms   collaborative colleagues  
Tools and Actions:  Request Permissions    Review this Article  
Save this Article to a Binder    Display Formats: BibTeX  EndNote ACM Ref
  
DOI Bookmark: Use this link to bookmark this Article: http://doi.acm.org/10.1145/1807167.1807184
What is a DOI?
ABSTRACT
Many practical computing problems concern large graphs. Standard examples include the
Web graph and various social networks. The scale of these graphs - in some cases billions
of vertices, trillions of edges - poses challenges to their efficient processing. In this paper
we present a computational model suitable for this task. Programs are expressed as a
sequence of iterations, in each of which a vertex can receive messages sent in the previous
iteration, send messages to other vertices, and modify its own state and that of its outgoing
edges or mutate graph topology. This vertex-centric approach is flexible enough to express
a broad set of algorithms. The model has been designed for efficient, scalable and fault-
tolerant implementation on clusters of thousands of commodity computers, and its implied
synchronicity makes reasoning about programs easier. Distribution-related details are
hidden behind an abstract API. The result is a framework for processing large graphs that is
expressive and easy to program.
REFERENCES
Note: OCR errors may be found in this Reference List extracted from the full text article.
ACM has opted to expose the complete List rather than only correct and linked references.
1 Thomas E. Anderson , Susan S. Owicki , James B. Saxe , Charles P. Thacker,
High-speed switch scheduling for local-area networks, ACM Transactions on
Computer Systems (TOCS), v.11 n.4, p.319-352, Nov. 1993
 [doi>10.1145/161541.161736]
 2 David A. Bader , Kamesh Madduri, Designing Multithreaded Algorithms for
Breadth-First Search and st-connectivity on the Cray MTA-2, Proceedings of the
2006 International Conference on Parallel Processing, p.523-530, August 14-18,
2006  [doi>10.1109/ICPP.2006.34]
 3 Luiz André Barroso , Jeffrey Dean , Urs Hölzle, Web Search for a Planet: The
Google Cluster Architecture, IEEE Micro, v.23 n.2, p.22-28, March 2003
 [doi>10.1109/MM.2003.1196112]
 4 Mohsen Bayati, Devavrat Shah, and Mayank Sharma, Maximum Weight Matching
via Max-Product Belief Propagation. in Proc. IEEE Intl. Symp. on Information
Theory, 2005, 1763--1767.
 5 Richard Bellman, On a routing problem. Quarterly of Applied Mathematics 16(1),
1958, 87--90.
 6 Olaf Bonorden , Ben Juurlink , Ingo von Otte , Ingo Rieping, The Paderborn
University BSP (PUB) library, Parallel Computing, v.29 n.2, p.187-207, February
2003  [doi>10.1016/S0167-8191(02)00218-1]
 7 Sergey Brin , Lawrence Page, The anatomy of a large-scale hypertextual Web
search engine, Proceedings of the seventh international conference on World
Wide Web 7, p.107-117, April 1998, Brisbane, Australia
 8 Albert Chan and Frank Dehne, CGMGRAPH/CGMLIB: Implementing and Testing
CGM Graph Algorithms on PC Clusters and Shared Memory Machines. Intl. J. of
High Performance Computing Applications 19(1), 2005, 81--97.
9 Fay Chang , Jeffrey Dean , Sanjay Ghemawat , Wilson C. Hsieh , Deborah A.
Wallach , Mike Burrows , Tushar Chandra , Andrew Fikes , Robert E. Gruber,
Bigtable: A Distributed Storage System for Structured Data, ACM Transactions
on Computer Systems (TOCS), v.26 n.2, p.1-26, June 2008
 [doi>10.1145/1365815.1365816]
 10 Boris V. Cherkassky , Andrew V. Goldberg , Tomasz Radzik, Shortest paths
algorithms: theory and experimental evaluation, Mathematical Programming:
Series A and B, v.73 n.2, p.129-174, May 31, 1996  [doi>10.1007/BF02592101]
 11 Jonathan Cohen, Graph Twiddling in a MapReduce World, Computing in Science
and Engineering, v.11 n.4, p.29-41, July 2009  [doi>10.1109/MCSE.2009.120]
 12 Joseph R. Crobak, Jonathan W. Berry, Kamesh Madduri, and David A. Bader,
Advanced Shortest Paths Algorithms on a Massively-Multithreaded Architecture.
in Proc. First Workshop on Multithreaded Architectures and Applications, 2007,
1--8.
 13 J. T. Daly, A higher order estimate of the optimum checkpoint interval for
restart dumps, Future Generation Computer Systems, v.22 n.3, p.303-312,
February 2006  [doi>10.1016/j.future.2004.11.016]
 14 Jeffrey Dean , Sanjay Ghemawat, MapReduce: simplified data processing on
large clusters, Proceedings of the 6th conference on Symposium on Opearting
Systems Design & Implementation, p.10-10, December 06-08, 2004, San
Francisco, CA
 15 Edsger W. Dijkstra, A Note on Two Problems in Connexion with Graphs.
Numerische Mathematik 1, 1959, 269--271.
 16 Martin Erwig, Inductive graphs and functional graph algorithms, Journal of
Functional Programming, v.11 n.5, p.467-492, September 2001
 [doi>10.1017/S0956796801004075]
 17 Lester R. Ford, L. R. and Delbert R. Fulkerson, Flows in Networks. Princeton
University Press, 1962.
 18 Ian Foster , Carl Kesselman, The Grid 2: Blueprint for a New Computing
Infrastructure, Morgan Kaufmann Publishers Inc., San Francisco, CA, 2003
19 Sanjay Ghemawat , Howard Gobioff , Shun-Tak Leung, The Google file system,
Proceedings of the nineteenth ACM symposium on Operating systems principles,
October 19-22, 2003, Bolton Landing, NY, USA  [doi>10.1145/945445.945450]
 20 Michael T. Goodrich and Roberto Tamassia, Data Structures and Algorithms in
JAVA. (second edition). John Wiley and Sons, Inc., 2001.
 21 Mark W. Goudreau , Kevin Lang , Satish B. Rao , Torsten Suel , Thanasis
Tsantilas, Portable and Efficient Parallel Computing Using the BSP Model, IEEE
Transactions on Computers, v.48 n.7, p.670-689, July 1999
 [doi>10.1109/12.780876]
 22 Douglas Gregor and Andrew Lumsdaine, The Parallel BGL: A Generic Library for
 
Distributed Graph Computations. Proc. of Parallel Object-Oriented Scientific
Computing (POOSC), July 2005.
23 Douglas Gregor , Andrew Lumsdaine, Lifting sequential graph algorithms for
distributed-memory parallel computation, Proceedings of the 20th annual ACM
SIGPLAN conference on Object-oriented programming, systems, languages, and
applications, October 16-20, 2005, San Diego, CA, USA
 [doi>10.1145/1094811.1094844]
 24 Jonathan L. Gross , Jay Yellen, Graph Theory and Its Applications, Second
Edition (Discrete Mathematics and Its Applications), Chapman & Hall/CRC, 2005
 25 Aric A. Hagberg, Daniel A. Schult, and Pieter J. Swart, Exploring network
structure, dynamics, and function using NetworkX. in Proc. 7th Python in
Science Conf., 2008, 11--15.
 26 Jonathan M. D. Hill , Bill McColl , Dan C. Stefanescu , Mark W. Goudreau , Kevin
Lang , Satish B. Rao , Torsten Suel , Thanasis Tsantilas , Rob H. Bisseling,
BSPlib: The BSP programming library, Parallel Computing, v.24 n.14, p.1947-
1980, Dec. 1998  [doi>10.1016/S0167-8191(98)00093-3]
27 Michael Isard , Mihai Budiu , Yuan Yu , Andrew Birrell , Dennis Fetterly, Dryad:
distributed data-parallel programs from sequential building blocks, Proceedings
of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems
2007, March 21-23, 2007, Lisbon, Portugal  [doi>10.1145/1272996.1273005]
 28 Paris Christos Kanellakis , Alex A. Shvartsman, Fault-Tolerant Parallel
Computation, Kluwer Academic Publishers, Norwell, MA, 1997
29 Donald E. Knuth, The Stanford GraphBase: a platform for combinatorial
computing, ACM, New York, NY, 1993
 30 U. Kang , Charalampos E. Tsourakakis , Christos Faloutsos, PEGASUS: A Peta-
Scale Graph Mining System Implementation and Observations, Proceedings of
the 2009 Ninth IEEE International Conference on Data Mining, p.229-238,
December 06-09, 2009  [doi>10.1109/ICDM.2009.14]
 31 Andrew Lumsdaine, Douglas Gregor, Bruce Hendrickson, and Jonathan W. Berry,
Challenges in Parallel Graph Processing. Parallel Processing Letters 17, 2007, 5--
20.
 32 Kamesh Madduri, David A. Bader, Jonathan W. Berry, and Joseph R. Crobak,
Parallel Shortest Path Algorithms for Solving Large-Scale Graph Instances.
DIMACS Implementation Challenge - The Shortest Path Problem, 2006.
 33 Kamesh Madduri, David Ediger, Karl Jiang, David A. Bader, and Daniel
Chavarria-Miranda, A Faster Parallel Algorithm and Efficient Multithreaded
Implementation for Evaluating Betweenness Centrality on Massive Datasets, in
Proc. 3rd Workshop on Multithreaded Architectures and Applications (MTAAP'09),
Rome, Italy, May 2009.
 34 Grzegorz Malewicz, A Work-Optimal Deterministic Algorithm for the Certified
 
Write-All Problem with a Nontrivial Number of Asynchronous Processors, SIAM
Journal on Computing, v.34 n.4, p.993-1024, 2005
 [doi>10.1137/S0097539703428014]
 35 Kurt Mehlhorn , Stefan Näher, LEDA: a platform for combinatorial and geometric
computing, Cambridge University Press, New York, NY, 1999
 36 Ulrich Meyer and Vitaly Osipov, Design and Implementation of a Practical I/O-
efficient Shortest Paths Algorithm. in Proc. 3rd Workshop on Multithreaded
Architectures and Applications (MTAAP'09), Rome, Italy, May 2009.
 37 U. Meyer , P. Sanders, Δ-stepping: a parallelizable shortest path algorithm,
Journal of Algorithms, v.49 n.1, p.114-152, 1 October 2003
 [doi>10.1016/S0196-6774(03)00076-2]
 38 Richard Miller, A Library for Bulk-Synchronous Parallel Programming. in Proc.
British Computer Society Parallel Processing Specialist Group Workshop on
General Purpose Parallel Computing, 1993.
 39 Kameshwar Munagala , Abhiram Ranade, I/O-complexity of graph algorithms,
Proceedings of the tenth annual ACM-SIAM symposium on Discrete algorithms,
p.687-694, January 17-19, 1999, Baltimore, Maryland, United States
40 Christopher Olston , Benjamin Reed , Utkarsh Srivastava , Ravi Kumar , Andrew
Tomkins, Pig latin: a not-so-foreign language for data processing, Proceedings of
the 2008 ACM SIGMOD international conference on Management of data, June
09-12, 2008, Vancouver, Canada  [doi>10.1145/1376616.1376726]
 41 Rob Pike , Sean Dorward , Robert Griesemer , Sean Quinlan, Interpreting the
data: Parallel analysis with Sawzall, Scientific Programming, v.13 n.4, p.277-
298, October 2005
 42 Protocol Buffers-Google's data interchange format.
http://code.google.com/p/protobuf/ 2009.
 43 The boost graph library: user guide and reference manual, Addison-Wesley
Longman Publishing Co., Inc., Boston, MA, 2002
44 Mikkel Thorup, Undirected single-source shortest paths with positive integer
weights in linear time, Journal of the ACM (JACM), v.46 n.3, p.362-394, May
1999  [doi>10.1145/316542.316548]
45 Leslie G. Valiant, A bridging model for parallel computation, Communications of
the ACM, v.33 n.8, p.103-111, Aug. 1990  [doi>10.1145/79173.79181]
 46 Andy Yoo , Edmond Chow , Keith Henderson , William McLendon , Bruce
Hendrickson , Umit Catalyurek, A Scalable Distributed Parallel Breadth-First
Search Algorithm on BlueGene/L, Proceedings of the 2005 ACM/IEEE conference
on Supercomputing, p.25, November 12-18, 2005  [doi>10.1109/SC.2005.4]
 47 Yuan Yu, Michael Isard, Dennis Fetterly, Mihai Budiu, Ulfar Erlingsson, Pradeep
Kumar Gunda, and Jon Currey, DryadLINQ: A System for General-Purpose
Distributed Data-Parallel Computing Using a High-Level Language. in Proc. 8th
USENIX Symp. on Operating Syst. Design and Implementation, 2008, 10--14.
INDEX TERMS
Primary Classification: 
  D. Software
   D.2 SOFTWARE ENGINEERING
         D.2.13 Reusable Software
             Subjects: Reusable libraries 
Additional Classification: 
  D. Software
   D.1 PROGRAMMING TECHNIQUES
       D.1.3 Concurrent Programming
           Subjects: Distributed programming 
General Terms: 
Algorithms, Design
Keywords: 
distributed computing, graph algorigthms
Collaborative Colleagues:
Grzegorz Malewicz: colleagues
Matthew H. Austern: colleagues
Aart J.C Bik: colleagues
James C. Dehnert: colleagues
Ilan Horn: colleagues
Naty Leiser: colleagues
Grzegorz Czajkowski: colleagues
The ACM Portal is published by the Association for Computing Machinery. Copyright © 2010 ACM, Inc.
Terms of Usage   Privacy Policy   Code of Ethics   Contact Us 
Useful downloads:  Adobe Acrobat     QuickTime     Windows Media Player     Real Player

