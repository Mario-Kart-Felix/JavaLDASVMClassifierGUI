CIS - Course Descriptions News & Events Directories CIS Home Penn Home Information For: Prospective Students Why Penn CIS? Undergraduate Programs Offered Admissions Engineering Project Demos Tuition & Fees Financial Aid Tours Accreditation Graduate All Degrees Offered Doctoral Program CIS Master's CGGT Master's EMBS Master's MCIT Master's Robotics Master's Admissions Tuition & Fees Fellowships & Aid Research Areas Graduate Group Faculty Current Students Undergraduate Degree Requirements CS Minor CS Second Major Submatriculation Courses Advising Tutoring Student Groups Undergraduate Research Job Opportunities Penn Emerging Scholars Program Graduate Get Started! Doctoral Program MSE CGGT MCIT Robotics Embedded Systems Courses Advising Student Handbook Research Areas Graduate Group Faculty All Student Resources Faculty and Staff Helpful Links Faculty Affairs Research Policies Departmental Contacts School Buildings School Leadership Research and Academic Services Human Resources Open Positions Post Docs Resources List Research Areas Research Facilities Seminar Series Alumni and Friends Welcome Back! Make a Gift Request a Transcript Alumni Society Alumni Events Penn Engineering Magazine Corporate Partners CIS Collaboration Recruiting Graduates Faculty Expertise Visitors Visiting CIS Visiting SEAS Accommodations Campus Map Driving Directions   DEPARTMENT Chair's Welcome Department Overview CIS History News & Events TA Hall of Fame Seminar Series PEOPLE Faculty Staff Postdoctoral Fellows Alumni ACADEMICS Undergradaute Chair's Letter Majors & Minors Accreditation Graduate Master's & Doctoral Degrees RESEARCH Research Areas Research Presentations Centers & Institutes Graduate Group Faculty Undergraduate Research CIS Technical Reports OUTREACH Overview High School Programs WICS HS Day for Girls Veterans at Penn QUICK LINKS Contact CIS Courses Canvas CIS Feature Stories Scholarly Publications Open Positions Career Services Tech Support (CETS) Facilities Support (EOS) Engineering Library   Important Note: All current course information at Penn, including descriptions, instructors, and provided syllabi, is accessible by PennKey using Penn InTouch . Students, faculty and staff can log in to search for a particular course by subject code and number (Ex: CIS100), or by keyword and or/instructor. Penn InTouch is the only way to access course information that is verified as accurate by the University. University Course Links: Penn Registrar Course Register (all Penn Courses) Course and Room Roster CIS Undergraduate Links: Fall Course Schedule Spring Course Schedule Summer Course Schedule CIS Graduate Links: Fall Course Schedule Spring Course Schedule Summer Course Schedule Program-Specific Schedules CIS Course Descriptions Undergraduate Courses: 100 Level | 200 Level | 300 Level | 400 Level | NETS Courses Graduate Courses: 500 Level | 600 Level | 700-900 Level | MCIT Courses Undergraduate Courses CIS 99 - Undergraduate Research/Independent Study An opportunity for the student to become closely associated with a professor (1) in a research effort to develop research skills and techniques and/or (2) to develop a program of independent in-depth study in a subject area in which the professor and student have a common interest. The challenge of the task undertaken must be consistent with the student's academic level. To register for this course, the student must submit a detailed proposal, signed by the independent study supervisor, to the SEAS Office of Academic Programs (111 Towne Building) no later than the end of the "add" period. Offered Fall 2016 and Spring 2017. CIS 101 - Introduction to Computer Science: Principles of Information and Computation Co-requisite: Math 104 or 150 This course is an introduction to the basic principles and great ideas of computer science intended for non-engineering students. It covers some of the essential topics of contemporary computer science from a mathematical perspective. No programming experience necessary. Open to all non-SEAS students. SEAS students my not take for credit toward engineering degree. Semesters Offered: TBA | May not be counted in the Engineering category. CIS 105 Computational Data Exploration The primary goal of this course is to introduce computational methods of interacting with data. In this course, students will be introduced to the IPython programming environment. They will learn how to gather data and store it in appropriate data structures. They will then write their own programs, building on existing libraries to analyze the data and display the salient information it contains. Data will be drawn from a variety of domains, including but not limited to travel, entertainment, politics, economics, biology etc. This course cannot count for engineering credit. Engineering school students can use it as a free elective. Students who have already taken CIS110 or 120 should not take this course. Offered Fall 2016 Course Website CIS 106 - Visualizing the Past/Peopling the Past Cross-listed with ANTH 258, ANTH 620 Most people’s information about the Past is drawn from coffee table picture books, popular movies, video games, documentaries about discoveries of “ancient, mysterious, and lost” civilizations, and tours often lead by guides of limited or even dubious credentials. How are these ideas presented, formed, and circulated? Who creates and selects the information presented in this diverse media? Are these presentations accurate? Do they promote or hurt scientific explanations?  Can the artistic, aesthetic, and scientific realms be bridged to effectively promote and interpret the past? How can modern technologies be applied to do a better job at presenting what is difficult to experience firsthand? This class will focus on case studies, critiques, and methods of how archaeology and the past are created, presented and used in movies, museums, games, the internet, and art. Each year, the studio-seminar focuses on a project. In addition to exploring general concepts of archaeology and the media, students will work in teams to produce an interactive, digital media exhibit using the latest modeling visualization programs for presenting the sacred landscape of the Inca capital of Cuzco, Peru. Cuzco is one of the most important UNESCO World Heritage sites and visited by nearly a million tourists a year. Potential class projects include fly-throughs of architectural and landscape renderings, simulations of astronomy and cosmology, modeling of human behavior within architectural and landscape settings, and study artifacts in the Penn Museum. Offered Fall 2016| Course Website CIS 110 - Introduction to Computer Programming (with Java, for Beginners) Introduction to Computer Programming is the first course in our series introducing students to computer science. In this class you will learn the fundamentals of computer programming in Java, with emphasis on applications in science and engineering. You will also learn about the broader field of computer science and algorithmic thinking, the fundamental approach that computer scientists take to solving problems. Offered Fall 2016, Spring 2017, and Summer 2017. | Course Website CIS 120 - Programming Languages and Techniques I Prerequisite(s): Some previous programming experience A fast-paced introduction to the fundamental concepts of programming and software design.  This course assumes some previous programming experience, at the level of a high school computer science class or CIS110.  (If you got at least 4 in the AP Computer Science A or AB exam, you will do great.)  No specific programming language background is assumed: basic experience with any language (for instance Java, C, C++, VB, Python, Perl, or Scheme) is fine.  If you have never programmed before, you should take CIS 110 first. Offered Fall 2016 and Spring 2017. | Course Website CIS 121 - Programming Languages and Techniques II Prerequisite(s): CIS 120, CIS 160 This is a course about Algorithms and Data Structures using the JAVA programming language. We introduce the basic concepts about complexity of an algorithm and methods on how to compute the running time of algorithms. Then, we describe data structures like stacks, queues, maps, trees, and graphs, and we construct efficient algorithms based on these representations. The course builds upon existing implementations of basic data structures in JAVA and extends them for the structures like trees, studying the performance of operations on such structures, and their efficiency when used in real-world applications. A large project introducing students to the challenges of software engineering concludes the course. Offered Fall 2016 and Spring 2017. | Course Website CIS 125 - Technology and Policy   Have you ever wondered why sharing music and video generates such political and legal controversies?  Is information on your PC safe and should law enforcement be able to access information you enter on the Web?  Will new devices allow tracking of your every move and every purchase? CIS 125 is focused on developing an understanding of existing and emerging technologies, along with the political, societal and economic impacts of those technologies.  The technologies are spread across a number of engineering areas and each of them raise issues that are of current concern or are likely to be a future issue. Offered Spring 2017. | May not be counted in the Engineering category CIS 140 - Introduction to Cognitive Science Prerequisite(s): None Cross-listed with: Phil044, Ling105, Psych107, COGS 001, PPE 140 How do minds work? This course surveys a wide range of answers to this question from disciplines ranging from philosophy to neuroscience. The course devotes special attention to the use of simple computational and mathematical models. Topics include perception, learning, memory, decision making, emotion and consciousness. Offered Fall 2016. | Course Website CIS 160 - Mathematical Foundations of Computer Science What are the basic mathematical concepts and techniques needed in computer science? This course provides an introduction to proof principles and logics, functions and relations, induction principles, combinatorics and graph theory, as well as a rigorous grounding in writing and reading mathematical proofs. Offered Fall 2016, Spring 2017, and Summer 2017. | Course Website CIS 190 - C++ Programming Prerequisite(s): CIS 240 This course will provide an introduction to programming in C++ and is intended for students who already have some exposure to programming in another language such as Java. C++ provides the programmer with a greater level of control over machine resources and are commonly used in situations where low level access or performance are important. This course will illuminate the issues associated with programming at this level and will cover issues such as explicit memory management, pointers, the compilation process and debugging. The course will involve several programming projects which will provide students with the experience they need to program effectively in these languages. This course assumes programming experience equivalent to CIS 110, CIS 120 or ESE 112 as a prerequisite. Semesters Offered: TBA CIS 191 - Using and Understanding Unix and Linux Prerequisite(s): CIS 110 or equivalent Unix, in its many forms, runs much of the world's computer infrastructure, from cable modems and cell phones to the giant clusters that power Google and Amazon. This half-credit course provides a thorough introduction to Unix and Linux. Topics will range from critical basic skills such as examining and editing files, compiling programs and writing shell scripts, to higher level topics such as the architecture of Unix and its programming model.  The material learned is applicable to many classes, including CIS 240, CIS 331, CIS 341, CIS 371/372, and CIS 380. Semesters Offered: TBA | Course Website CIS 192 - Python Programming Prerequisite(s): CIS 120 or ESE 112 Python is an elegant, concise, and powerful language that is useful for tasks large and small. Python has quickly become a popular language for getting things done efficiently in many in all domains: scripting, systems programming, research tools, and web development. This course will provide an introduction to this modern high-level language using hands-on experience through programming assignments and a collaborative final application development project. Semesters Offered: TBA | Course Website CIS 193 - C# Programming Prerequisite(s): CIS 110 C# is the premier programming language for the .NET framework.  Over the last decade, the language has evolved to meet the needs of a variety of programming styles while supporting the ever-growing capabilities of the .NET runtime and libraries.  This course provides a thorough introduction to the C# language and the .NET framework, building on the skills gained in the introductory programming courses (CIS 110, CIS 120, or ESE 112).  In addition to providing the student with a solid background in C#, this course also explores topics that the .NET platform exposes such as object-oriented design, .NET runtime internals, and others based on class interest.  A series of short, weekly homework assignments reinforces the concepts introduced in class and a group-based final project of the students' design allows them to apply their C# knowledge toward a substantial problem. Semesters Offered: TBA | Course Website CIS 194 - Haskell Programming Haskell is a high-level, purely functional programming language with a strong static type system and elegant mathematical underpinnings. It is being increasingly used in industry by organizations such as Facebook, AT&T, and NASA, along with several financial firms. We will explore the joys of functional programming, using Haskell as a vehicle. The aim of the course will be to allow you to use Haskell to easily and conveniently write practical programs. All are welcome, including those with no programming experience. Evaluation will be based on regular homework assignments and class participation. Semesters Offered: TBA CIS 195 - iPhone Application Development Prerequisite(s): CIS 120 and CIS 240.  Students should come with a strong understanding of the fundamentals of programming, especially the C language and memory management. This project-oriented course is centered around application development on the iOS platform, Apple’s mobile operating system developed for the iPhone and other Apple mobile devices. The first half of the course will involve fundamentals of iPhone development, where students learn the Objective-C programming language for iOS, an object-oriented C dialect with Smalltalk-style messaging, as well as efficient memory management and event-based programming on the iOS platform.  In the second half of the course, students work in teams to conceptualize and develop a significant iPhone application. Creativity and originality are highly encouraged! Semesters Offered: TBA CIS 196 - Ruby on Rails Web Development Prerequisite(s): CIS 120 This course will teach the fundamentals of developing web applications using Ruby on Rails, a rapid-development web framework developed by 37signals. The topics covered will start with Ruby, the language that powers Rails, and include all topics required to develop and deploy production-ready web applications with Rails. During the entire course, students will be working on a project of their own choosing which will develop as they learn additional concepts. Upon completion of the course this application will be deployed and accessible to the public. Students will be encouraged to continue building their applications even after the course given support from the Philadelphia Ruby community. Semesters Offered: TBA CIS 197 - JavaScript This course provides an introduction to modern web development frameworks, techniques, and practices used to deliver robust client side applications on the web. The emphasis will be on developing JavaScript programs that run in the browser. Topics covered include the JavaScript language, web browser internals, the Document Object Model (DOM), HTML5, client-side app architecture and compile-to-JS languages like (Coffeescript, TypeScript, etc.). This course is most useful for students who have some programming and web development experience and want to develop moderate JavaScript skills to be able to build complex, interactive applications in the browser. Semesters Offered: TBA CIS 240 - Introduction to Computer Architecture Prerequisite(s): CIS 110 or equivalent experience You know how to program, but do you know how computers really work? How do millions of transistors come together to form a complete computing system? This bottom-up course begins with transistors and simple computer hardware structures, continues with low-level programming using primitive machine instructions, and finishes with an introduction to the C programming language. This course is a broad introduction to all aspects of computer systems architecture and serves as the foundation for subsequent computer systems courses, such as Digital Systems Organization and Design (CIS 371), Computer Operating Systems (CIS 380), and Compilers and Interpreters (CIS 341). Offered Fall 2016 and Spring 2017. | Course Website CIS 261 - Discrete Probability, Stochastic Processes, and Statistical Inference Prerequisite(s): CIS 160 The purpose of this course is to provide a 1 CU educational experience which tightly integrates the theory and applications of discrete probability, discrete stochastic processes, and discrete statistical inference in the study of computer science. The intended audience for this class is both those students who are CS majors as well as those intending to be CS majors. Specifically, it will be assumed that the students will know: Set Theory, Mathematical Induction, Number Theory, Functions, Equivalence Relations, Partial-Order Relations, Combinatorics, and Graph Theory at the level currently covered in CIS 160. This course could be taken immediately following CIS 160. Computation and Programming will play an essential role in this course. The students will be expected to use the Maple programming environment in homework exercises which will include: numerical and symbolic computations, simulations, and graphical displays. Offered Fall 2016 | Course Website CIS 262 - Automata, Computability, and Complexity Prerequisite(s): CIS 160 This course explores questions fundamental to computer science such as which problems cannot be solved by computers, can we formalize computing as a mathematical concept without relying upon the specifics of programming languages and computing platforms, and which problems can be solved efficiently. The topics include finite automata and regular languages, context-free grammars and pushdown automata, Turing machines and undecidability, tractability and NP-completeness. The course emphasizes rigorous mathematical reasoning as well as connections to practical computing problems such as text processing, parsing, XML query languages, and program verification. Offered Fall 2016 and Spring 2017. | Course Website CIS 298 - Study Abroad CIS 320 - Introduction to Algorithms Prerequisite(s): CIS 120,121,160,262 How do you optimally encode a text file? How do you find shortest paths in a map? How do you design a communication network? How do you route data in a network? What are the limits of efficient computation? This course gives a comprehensive introduction to design and analysis of algorithms, and answers along the way to these and many other interesting computational questions. You will learn about problem-solving; advanced data structures such as universal hashing and red-black trees; advanced design and analysis techniques such as dynamic programming and amortized analysis; graph algorithms such as minimum spanning trees and network flows; NP-completeness theory; and approximation algorithms. Offered Fall 2016 and Spring 2017. CIS 330 - Design Principles of Information Systems Prerequisite(s):CIS 121 and CIS 160 Introduction to database management systems and principles of design. The Entity-Relationship model as a modeling tool. The relational model: formal languages, the industry standard SQL, relational design theory, query optimization. Storing and querying XML data. Recursive queries. Views and data integration. Overview of system level issues: physical data organization, indexing techniques, and transactions. Connecting databases to the Web. Course work requires programming in several different query languages, several written homeworks and a team project. Semesters Offered: TBA | Course Website CIS 331 - Intro to Networks and Security Prerequisites: CIS 160, CIS 240 This course introduces principles and practices of computer and network security. We will cover basic concepts, threat models, and the security mindset; an introduction to cryptography and cryptographic protocols including encryption, authentication, message authentication codes, hash functions, public-key cryptography, and secure channels; an introduction to networks and network security including IP, TCP, routing, network protcols, web architecture, attacks, firewalls, and intrusion detection systems; an introduction to software security including defensive programming, memory protection, buffer overflows, and malware; and discuss broader issues and case studies such as privacy, security and the law, digital rights management, denial of service, and ethics. Offered Spring 2017. CIS 334 - Advanced Topics in Algorithms Prerequisite(s): CIS 320 Can you check if two large documents are identical by examining a small number of bits? Can you verify that a program has correctly computed a function without ever computing the function? Can students compute the average score on an exam without ever revealing their scores to each other? Can you be convinced of the correctness of an assertion without ever seeing the proof? The answer to all these questions is in the affirmative provided we allow the use of randomization. Over the past few decades, randomization has emerged as a powerful resource in algorithm design. This course would focus on powerful general techniques for designing randomized algorithms as well as specific representative applications in various domains, including approximation algorithms,  cryptography and number theory, data structure design, online algorithms, and parallel and distributed computation. Semesters Offered: TBA CIS 341 - Compilers and Interpreters Prerequisite(s): CIS121 and CIS240 You know how to program, but do you know how to implement a programming language? In CIS341 you'll learn how to build a compiler. Topics covered include: lexical analysis, grammars and parsing, intermediate representations, syntax-directed translation, code generation, type checking, simple dataflow and control-flow analyses, and optimizations. Along the way, we study objects and inheritance, first-class functions (closures), data representation and runtime-support issues such as garbage collection. This is a challenging, implementation-oriented course in which students build a full compiler from a simple, typed object-oriented language to fully operational x86 assembly. The course projects are implemented using OCaml, but no knowledge of OCaml is assumed. Offered Fall 2016 CIS 350 - Software Design/Engineering Prerequisite(s): CIS 121 You know how to write a "program". But how do you create a software "product" as part of a team, with customers that have expectations of functionality and quality? This course introduces students to various tools (source control, automated build systems, programming environments, test automation, etc.) and processes (design, implementation, testing, and maintenance) that are used by professionals in the field of software engineering. Topics will include: software development lifecycle; agile and test-driven development; source control and continuous integration; requirements analysis; object-oriented design and testability; Android application development; software testing; refactoring; and software quality metrics. Offered Spring 2017. CIS 368 - User Interfaces and the Web Prerequisite(s): CIS 110, CIS 120, CIS 121, CIS 277 This course will teach the fundamentals of Human-Computer Interaction (theory, design, implementation, experimentation, evaluation) in the context of current web interaction mechanisms, technologies, and applications. The course content will emphasize and leverage open source technologies to design, prototype, implement, and test user-interfaces and functionality in the context of today's most intriguing web trend, social networking. Semesters Offered: TBA CIS 371 - Computer Organization and Design Prerequisite(s): CIS 240 This is the second computer organization course and focuses on computer hardware design. Topics covered are: (1) basic digital system design including finite state machines, (2) instruction set design and simple RISC assembly programming, (3) quantitative evaluation of computer performance, (4) circuits for integer and floating-point arithmetic, (5) datapath and control, (6) micro-programming, (7) pipelining, (8) storage hierarchy and virtual memory, (9) input/output, (10) different forms of parallelism including instruction level parallelism, data-level parallelism using both vectors and message-passing multi-processors, and thread-level parallelism using shared memory multiprocessors. Basic cache coherence and synchronization. Offered Spring 2017. | Course Website CIS 380 - Computer Operating Systems Prerequisite(s): CIS 240 or EE 300 This course surveys methods and algorithms used in operating systems. Concurrent distributed operation is emphasized. The main topics covered are as follows: process synchronization; interprocess communications; concurrent/distributed programming languages; resource allocation and deadlock; virtual memory; protection and security; distributed operation; distributed data; performance evaluation. Offered Fall 2016 CIS 390 - Robotics: Planning and Perception Prerequisite(s): CIS 121 and MATH 240 or equivalent This introductory course will present basic principles of robotics with an emphasis  to computer science aspects. Algorithms for planning and perception will be studied and implemented on actual robots. While planning is a fundamental problem in artificial intelligence and decision making, robot planning refers to finding a path from A to B in the presence of obstacles and by complying with the kinematic constraints of the robot. Perception involves the estimation of the robot’s motion and path as well as the shape of the environment from sensors. In this course, algorithms will be implemented in Python on mobile platforms on ground and in the air. No prior experience with Python is needed but we require knowledge of data structures, linear algebra, and basic probability. Offered Fall 2016 CIS 398 - Quantum Computer and Information Science Prerequisite(s): Physics 151, Math 240, Math 312/314, CIS 160, and CIS 262 The purpose of this course is to introduce undergraduate students in computer science and engineering to quantum computers (QC) and quantum information science (QIS). This course is meant primarily for juniors and seniors in CIS. No prior knowledge of quantum mechanics (QM) is assumed. Offered Spring 2017. CIS 400 - Senior Project Prerequisite(s): Senior standing or permission of instructor Design and implementation of a significant piece of work: software, hardware or theory. In addition, emphasis on technical writing and oral communication skills. Students must have an abstract of their Senior Project, which is approved and signed by a Project Adviser, at the end of the second week of Fall classes. The project continues during two semesters; students must enroll in CIS 401 during the second semester. At the end of the first semester, students are required to submit an intermediate report and give a class presentation describing their project and progress. Grades are based on technical writing skills (as per submitted report), oral presentation skills (as per class presentation) and progress on the project. These are evaluated by the Project Adviser and the Course Instructor. Offered Fall 2016. | Course Website CIS 401 - Senior Project Prerequisite(s): CIS 400, senior standing or permission of instructor Continuation of CIS 400. Design and implementation of a significant piece of work: software, hardware or theory. Students are required to submit a final written report and give a final presentation and demonstration of their project. Grades are based on the report, the presentation and the satisfactory completion of the project. These are evaluated by the Project Advisor and the Course Instructor. Offered Spring 2017. | Course Website CIS 421 - Artificial Intelligence Prerequisite(s): CIS 121. ESE 301 or STAT 430 recommended. This course investigates algorithms to implement resource-limited knowledge-based agents which sense and act in the world. Topics include, search, machine learning, probabilistic reasoning, natural language processing, knowledge representation and logic. After a brief introduction to the language, programming assignments will be in Python. Offered Fall 2016. CIS 430 - Intro to Human Language Technology Prerequisite(s): CIS 121 This course is an automatic summarization that can help alleviate the information overload problem caused by the unprecedented amount of online textual information. The building of a summarization system requires good understanding of the properties of human language and the use of various natural language tools. In this course we will build several summarization systems of increasing complexity and sophistication. In the process we will learn about various natural language processing tools and resources such as part of speech tagging, chunking, parsing, Wordnet, and machine learning toolkits. We will also cover probability and statistics concepts used in summarization, but also applicable to a wide range of other language-related tasks. Semesters Offered: TBA | Course Website CIS 441 - Embedded Software for Life-Critical Applications The goal of this course is to give students greater design and implementation experience in embedded software development and to teach them how to model, design, verify, and validate safety critical systems in a principled manner. Students will learn the principles, methods, and techniques for building life-critical embedded systems, ranging from requirements and models to design, analysis, optimization, implementation, and validation. Topics will include modeling and analysis methods and tools, real-time programming paradigms and languages, distributed real-time systems, global time, time-triggered communications, assurance case, software architecture, evidence-based certification, testing, verification, and validation. The course will include a series of projects that implements life-critical embedded systems (e.g., pacemaker, infusion pumps, closed-loop medical devices). Offered Fall 2016. CIS 450 - Database and Information Systems       Prerequisite: The course assumes mathematical and programming experience equivalent to CIS160 and CIS121. This course provides an introduction to the broad field of database and information systems, covering a variety of topicsrelating to structured data, ranging from data modeling to logical foundationsand popular languages, to system implementations. Wewill study the theory ofrelational and XML data design; the basics of query languages; efficientstorage of data, execution of queries and query optimization; transactions andupdates; web-database development; and "big data" and NoSQL systems. Offered Fall 2016 and Spring 2017 CIS 455 - Internet and Web Systems Prerequisite(s): Familiarity with threads and concurrency; strong Java programming skills. This course focuses on the challenges encountered in building Internet and web systems: scalability, interoperability (of data and code), security and fault tolerance, consistency models, and location of resources, services, and data. We will examine how XML standards enable information exchange; how web services support cross-platform interoperability (and what their limitations are); how to build high-performance application servers; how "cloud computing" services work; how to perform Akamai-like content distribution; and how to provide transaction support in distributed environments. We will study techniques for locating machines, resources, and data (including directory systems, information retrieval indexing, ranking, and web search); and we will investigate how different architectures support scalability (and the issues they face). We will also examine ideas that have been proposed for tomorrow's Web, and we will see some of the challenges, research directions, and potential pitfalls. An important goal of the course is not simply to discuss issues and solutions, but to provide hands-on experience with a substantial implementation project. This semester's project will be a peer-to-peer implementation of a Google-style search engine, including distributed, scalable crawling; indexing with ranking; and even PageRank. As a side-effect of the material of this course, you will learn about some aspects of large-scale software development: assimilating large APIs, thinking about modularity, reading other people's code, managing versions, debugging, etc. Offered Fall 2016 and Spring 2017. | Course Website CIS 460 - Interactive Computer Graphics Prerequisites: CIS 120. CIS 120 and CIS 240 are useful pre- or co-requisites This course focuses on programming the essential mathematical and geometric concepts underlying modern computer graphics. Using 3D interactive implementations, it covers fundamental topics such as mesh data structures, transformation sequences, rendering algorithms, and curve interpolation for animation. Students are also introduced to two programming languages widely used in the computer graphics industry: C++ and GLSL. The curriculum is heavily project-based, and culminates in a group project focused on building an interactive first-person world exploration application using the various real-time interaction and rendering algorithms learned throughout the semester. Offered Fall 2016 | Course Website CIS 461 - Advanced Computer Graphics Prerequisites: A working knowledge of C++ programming is  required (one year programming experience in general). Knowledge of vector geometry is useful. This course is designed to provide a comprehensive  overview to computer graphics techniques in 3D modeling, image synthesis, and rendering. Topics   cover: geometric transformations, geometric algorithms, software systems, 3D object models (surface, volume and implicit), visible surface algorithms, image synthesi
