Cloud computing - Wikipedia Cloud computing From Wikipedia, the free encyclopedia Jump to: navigation , search Cloud computing metaphor: For a user, the network elements representing the provider-rendered services are invisible, as if obscured by a cloud. Cloud computing is a type of Internet -based computing that provides shared computer processing resources and data to computers and other devices on demand. It is a model for enabling ubiquitous, on-demand access to a shared pool of configurable computing resources (e.g., computer networks, servers, storage, applications and services), [1] [2] which can be rapidly provisioned and released with minimal management effort. Cloud computing and storage solutions provide users and enterprises with various capabilities to store and process their data in either privately owned, or third-party data centers [3] that may be located far from the user–ranging in distance from across a city to across the world. Cloud computing relies on sharing of resources to achieve coherence and economy of scale , similar to a utility (like the electricity grid ) over an electricity network. Advocates claim that cloud computing allows companies to avoid up-front infrastructure costs (e.g., purchasing servers ). As well, it enables organizations to focus on their core businesses instead of spending time and money on computer infrastructure. [4] Proponents also claim that cloud computing allows enterprises to get their applications up and running faster, with improved manageability and less maintenance, and enables Information technology (IT) teams to more rapidly adjust resources to meet fluctuating and unpredictable business demand. [4] [5] [6] Cloud providers typically use a "pay as you go" model. This will lead to unexpectedly high charges if administrators do not adapt to the cloud pricing model. [7] In 2009, the availability of high-capacity networks, low-cost computers and storage devices as well as the widespread adoption of hardware virtualization , service-oriented architecture , and autonomic and utility computing led to a growth in cloud computing. [8] [9] [10] Companies can scale up as computing needs increase and then scale down again as demands decrease. [11] In 2013, it was reported that cloud computing had become a highly demanded service or utility due to the advantages of high computing power, cheap cost of services, high performance, scalability, accessibility as well as availability. Some cloud vendors are experiencing growth rates of 50% per year, [12] but being still in a stage of infancy, it has pitfalls that need to be addressed to make cloud computing services more reliable and user friendly. [13] [14] Contents 1 History 1.1 Origin of the term 1.2 1970s 1.3 1990s 1.4 2000s 2 Similar concepts 3 Characteristics 4 Service models 4.1 Infrastructure as a service (IaaS) 4.2 Platform as a service (PaaS) 4.3 Software as a service (SaaS) 4.4 Mobile "backend" as a service (MBaaS) 4.5 Serverless computing 5 Cloud clients 6 Deployment models 6.1 Private cloud 6.2 Public cloud 6.3 Hybrid cloud 6.4 Others 6.4.1 Community cloud 6.4.2 Distributed cloud 6.4.3 Intercloud 6.4.4 Multicloud 7 Architecture 7.1 Cloud engineering 8 Security and privacy 9 Limitations and disadvantages 10 Emerging trends 11 See also 12 References 13 Further reading 14 External links History Origin of the term The origin of the term cloud computing is unclear. The word "cloud" is commonly used in science to describe a large agglomeration of objects that visually appear from a distance as a cloud and describes any set of things whose details are not further inspected in a given context. [15] Another explanation is that the old programs that drew network schematics surrounded the icons for servers with a circle, and a cluster of servers in a network diagram had several overlapping circles, which resembled a cloud. [16] In analogy to the above usage, the word cloud was used as a metaphor for the Internet and a standardized cloud-like shape was used to denote a network on telephony schematics. Later it was used to depict the Internet in computer network diagrams . With this simplification, the implication is that the specifics of how the end points of a network are connected are not relevant for the purposes of understanding the diagram. The cloud symbol was used to represent networks of computing equipment in the original ARPANET by as early as 1977, [17] and the CSNET by 1981 [18] —both predecessors to the Internet itself. The term cloud has been used to refer to platforms for distributed computing . In Wired's April 1994 feature "Bill and Andy's Excellent Adventure II" on the Apple spin-off General Magic , Andy Hertzfeld commented on General Magic's distributed programming language Telescript that: "The beauty of Telescript ... is that now, instead of just having a device to program, we now have the entire Cloud out there, where a single program can go and travel to many different sources of information and create sort of a virtual service. No one had conceived that before. The example Jim White [the designer of Telescript, X.400 and ASN.1 ] uses now is a date-arranging service where a software agent goes to the flower store and orders flowers and then goes to the ticket shop and gets the tickets for the show, and everything is communicated to both parties." —  [19] References to "cloud computing" in its modern sense appeared as early as 1996, with the earliest known mention in a Compaq internal document. [20] The popularization of the term can be traced to 2006 when Amazon.com introduced its Elastic Compute Cloud . [21] 1970s During the 1960s, the initial concepts of time-sharing became popularized via RJE ( Remote Job Entry ); [22] this terminology was mostly associated with large vendors such as IBM and DEC . Full time-sharing solutions were available by the early 1970s on such platforms as Multics (on GE hardware), Cambridge CTSS, and the earliest UNIX ports (on DEC hardware). Yet, the "data center" model where users submitted jobs to operators to run on IBM mainframes was overwhelmingly predominant. 1990s In the 1990s, telecommunications companies, who previously offered primarily dedicated point-to-point data circuits, began offering virtual private network (VPN) services with comparable quality of service, but at a lower cost. By switching traffic as they saw fit to balance server use, they could use overall network bandwidth more effectively. [ citation needed ] They began to use the cloud symbol to denote the demarcation point between what the provider was responsible for and what users were responsible for. Cloud computing extended this boundary to cover all servers as well as the network infrastructure. [23] As computers became more diffused, scientists and technologists explored ways to make large-scale computing power available to more users through time-sharing. [ citation needed ] They experimented with algorithms to optimize the infrastructure, platform, and applications to prioritize CPUs and increase efficiency for end users. [24] 2000s Since 2000, cloud computing has come into existence. In early 2008, NASA 's OpenNebula , enhanced in the RESERVOIR European Commission-funded project, became the first open-source software for deploying private and hybrid clouds, and for the federation of clouds. [25] In the same year, efforts were focused on providing quality of service guarantees (as required by real-time interactive applications) to cloud-based infrastructures, in the framework of the IRMOS European Commission-funded project, resulting in a real-time cloud environment. [26] [27] By mid-2008, Gartner saw an opportunity for cloud computing "to shape the relationship among consumers of IT services, those who use IT services and those who sell them" [28] and observed that "organizations are switching from company-owned hardware and software assets to per-use service-based models" so that the "projected shift to computing ... will result in dramatic growth in IT products in some areas and significant reductions in other areas." [29] In August 2006 Amazon introduced its Elastic Compute Cloud . [21] Microsoft Azure was announced as "Azure" in October 2008 and was released on 1 February 2010 as Windows Azure, before being renamed to Microsoft Azure on 25 March 2014. [30] For a time, Azure was on the TOP500 supercomputer list, before it dropped off it. [31] In July 2010, Rackspace Hosting and NASA jointly launched an open-source cloud-software initiative known as OpenStack . The OpenStack project intended to help organizations offering cloud-computing services running on standard hardware. The early code came from NASA's Nebula platform as well as from Rackspace's Cloud Files platform. On March 1, 2011, IBM announced the IBM SmartCloud framework to support Smarter Planet . [32] Among the various components of the Smarter Computing foundation, cloud computing is a critical part. On June 7, 2012, Oracle announced the Oracle Cloud . [33] While aspects of the Oracle Cloud are still in development, this cloud offering is poised to be the first to provide users with access to an integrated set of IT solutions, including the Applications ( SaaS ), Platform ( PaaS ), and Infrastructure ( IaaS ) layers. [34] [35] [36] Similar concepts Cloud computing is the result of the evolution and adoption of existing technologies and paradigms. The goal of cloud computing is to allow users to take beneﬁt from all of these technologies, without the need for deep knowledge about or expertise with each one of them. The cloud aims to cut costs, and helps the users focus on their core business instead of being impeded by IT obstacles. [37] The main enabling technology for cloud computing is virtualization . Virtualization software separates a physical computing device into one or more "virtual" devices, each of which can be easily used and managed to perform computing tasks. With operating system–level virtualization essentially creating a scalable system of multiple independent computing devices, idle computing resources can be allocated and used more efficiently. Virtualization provides the agility required to speed up IT operations, and reduces cost by increasing infrastructure utilization . Autonomic computing automates the process through which the user can provision resources on-demand . By minimizing user involvement, automation speeds up the process, reduces labor costs and reduces the possibility of human errors. [37] Users routinely face difficult business problems. Cloud computing adopts concepts from Service-oriented Architecture (SOA) that can help the user break these problems into services that can be integrated to provide a solution. Cloud computing provides all of its resources as services, and makes use of the well-established standards and best practices gained in the domain of SOA to allow global and easy access to cloud services in a standardized way. Cloud computing also leverages concepts from utility computing to provide metrics for the services used. Such metrics are at the core of the public cloud pay-per-use models. In addition, measured services are an essential part of the feedback loop in autonomic computing, allowing services to scale on-demand and to perform automatic failure recovery. Cloud computing is a kind of grid computing ; it has evolved by addressing the QoS (quality of service) and reliability problems. Cloud computing provides the tools and technologies to build data/compute intensive parallel applications with much more affordable prices compared to traditional parallel computing techniques. [37] Cloud computing shares characteristics with: Client–server model — Client–server computing refers broadly to any distributed application that distinguishes between service providers (servers) and service requestors (clients). [38] Computer bureau —A service bureau providing computer services, particularly from the 1960s to 1980s. Grid computing —"A form of distributed and parallel computing, whereby a 'super and virtual computer' is composed of a cluster of networked, loosely coupled computers acting in concert to perform very large tasks." Fog computing —Distributed computing paradigm that provides data, compute, storage and application services closer to client or near-user edge devices, such as network routers. Furthermore, fog computing handles data at the network level, on smart devices and on the end-user client side (e.g. mobile devices), instead of sending data to a remote location for processing. Dew computing —In the existing computing hierarchy, the Dew computing is positioned as the ground level for the cloud and fog computing paradigms. Compared to fog computing, which supports emerging IoT applications that demand real-time and predictable latency and the dynamic network reconfigurability, Dew computing pushes the frontiers to computing applications, data, and low level services away from centralized virtual nodes to the end users. [39] Mainframe computer —Powerful computers used mainly by large organizations for critical applications, typically bulk data processing such as: census ; industry and consumer statistics; police and secret intelligence services; enterprise resource planning ; and financial transaction processing . Utility computing —The "packaging of computing resources , such as computation and storage, as a metered service similar to a traditional public utility, such as electricity." [40] [41] Peer-to-peer —A distributed architecture without the need for central coordination. Participants are both suppliers and consumers of resources (in contrast to the traditional client–server model). Green computing Cloud sandbox —A live, isolated computer environment in which a program, code or file can run without affecting the application in which it runs. Characteristics Cloud computing exhibits the following key characteristics: Agility for organizations may be improved, as cloud computing may increase users' flexibility with re-provisioning, adding, or expanding technological infrastructure resources. Cost reductions are claimed by cloud providers. A public-cloud delivery model converts capital expenditures (e.g., buying servers) to operational expenditure . [42] This purportedly lowers barriers to entry , as infrastructure is typically provided by a third party and need not be purchased for one-time or infrequent intensive computing tasks. Pricing on a utility computing basis is "fine-grained", with usage-based billing options. As well, less in-house IT skills are required for implementation of projects that use cloud computing. [43] The e-FISCAL project's state-of-the-art repository [44] contains several articles looking into cost aspects in more detail, most of them concluding that costs savings depend on the type of activities supported and the type of infrastructure available in-house. Device and location independence [45] enable users to access systems using a web browser regardless of their location or what device they use (e.g., PC, mobile phone). As infrastructure is off-site (typically provided by a third-party) and accessed via the Internet, users can connect to it from anywhere. [43] Maintenance of cloud computing applications is easier, because they do not need to be installed on each user's computer and can be accessed from different places (e.g., different work locations, while travelling, etc.). Multitenancy enables sharing of resources and costs across a large pool of users thus allowing for: centralization of infrastructure in locations with lower costs (such as real estate, electricity, etc.) peak-load capacity increases (users need not engineer and pay for the resources and equipment to meet their highest possible load-levels) utilisation and efficiency improvements for systems that are often only 10–20% utilised. [46] [47] Performance is monitored by IT experts from the service provider, and consistent and loosely coupled architectures are constructed using web services as the system interface. [43] [48] [49] Productivity may be increased when multiple users can work on the same data simultaneously, rather than waiting for it to be saved and emailed. Time may be saved as information does not need to be re-entered when fields are matched, nor do users need to install application software upgrades to their computer. [50] Reliability improves with the use of multiple redundant sites, which makes well-designed cloud computing suitable for business continuity and disaster recovery . [51] Scalability and elasticity via dynamic ("on-demand") provisioning of resources on a fine-grained, self-service basis in near real-time [52] [53] (Note, the VM startup time varies by VM type, location, OS and cloud providers [52] ), without users having to engineer for peak loads. [54] [55] [56] This gives the ability to scale up when the usage need increases or down if resources are not being used. [57] Security can improve due to centralization of data, increased security-focused resources, etc., but concerns can persist about loss of control over certain sensitive data, and the lack of security for stored kernels . Security is often as good as or better than other traditional systems, in part because service providers are able to devote resources to solving security issues that many customers cannot afford to tackle or which they lack the technical skills to address. [58] However, the complexity of security is greatly increased when data is distributed over a wider area or over a greater number of devices, as well as in multi-tenant systems shared by unrelated users. In addition, user access to security audit logs may be difficult or impossible. Private cloud installations are in part motivated by users' desire to retain control over the infrastructure and avoid losing control of information security. The National Institute of Standards and Technology 's definition of cloud computing identifies "five essential characteristics": On-demand self-service. A consumer can unilaterally provision computing capabilities, such as server time and network storage, as needed automatically without requiring human interaction with each service provider. Broad network access. Capabilities are available over the network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms (e.g., mobile phones, tablets, laptops , and workstations). Resource pooling. The provider's computing resources are pooled to serve multiple consumers using a multi-tenant model, with different physical and virtual resources dynamically assigned and reassigned according to consumer demand.  Rapid elasticity. Capabilities can be elastically provisioned and released, in some cases automatically, to scale rapidly outward and inward commensurate with demand. To the consumer, the capabilities available for provisioning often appear unlimited and can be appropriated in any quantity at any time. Measured service. Cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service (e.g., storage, processing, bandwidth, and active user accounts). Resource usage can be monitored, controlled, and reported, providing transparency for both the provider and consumer of the utilized service. — National Institute of Standards and Technology [2] Service models Though service-oriented architecture advocates "everything as a service" (with the acronyms EaaS or XaaS or simply aas ), [59] cloud-computing providers offer their "services" according to different models, of which the three standard models per NIST are Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS). [2] These models offer increasing abstraction; they are thus often portrayed as a layers in a stack : infrastructure-, platform- and software-as-a-service, [60] but these need not be related. For example, one can provide SaaS implemented on physical machines (bare metal), without using underlying PaaS or IaaS layers, and conversely one can run a program on IaaS and access it directly, without wrapping it as SaaS. Cloud computing service models arranged as layers in a stack The NIST's definition of cloud computing defines the service models as follows: [2] Software as a Service (SaaS). The capability provided to the consumer is to use the provider’s applications running on a cloud infrastructure. The applications are accessible from various client devices through either a thin client interface, such as a web browser (e.g., web-based email), or a program interface. The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, storage, or even individual application capabilities, with the possible exception of limited user-specific application configuration settings. Platform as a Service (PaaS). The capability provided to the consumer is to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming languages, libraries, services, and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, or storage, but has control over the deployed applications and possibly configuration settings for the application-hosting environment. Infrastructure as a Service (IaaS). The capability provided to the consumer is to provision processing, storage, networks, and other fundamental computing resources where the consumer is able to deploy and run arbitrary software, which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems, storage, and deployed applications; and possibly limited control of select networking components (e.g., host firewalls). Infrastructure as a service (IaaS) See also: Category:Cloud infrastructure According to the Internet Engineering Task Force (IETF), the most basic cloud-service model is that of providers offering computing infrastructure – virtual machines and other resources – as a service to subscribers. Infrastructure as a service (IaaS) refers to online services that abstract the user from the details of infrastructure like physical computing resources, location, data partitioning, scaling, security, backup etc. A hypervisor , such as Xen , Oracle VirtualBox , Oracle VM , KVM , VMware ESX/ESXi , or Hyper-V , runs the virtual machines as guests. Pools of hypervisors within the cloud operational system can support large numbers of virtual machines and the ability to scale services up and down according to customers' varying requirements. Linux containers run in isolated partitions of a single Linux kernel running directly on the physical hardware. Linux cgroups and namespaces are the underlying Linux kernel technologies used to isolate, secure and manage the containers. Containerisation offers higher performance than virtualization, because there is no hypervisor overhead. Also, container capacity auto-scales dynamically with computing load, which eliminates the problem of over-provisioning and enables usage-based billing. [61] IaaS clouds often offer additional resources such as a virtual-machine disk-image library, raw block storage , file or object storage , firewalls, load balancers, IP addresses, virtual local area networks (VLANs), and software bundles. [62] IaaS-cloud providers supply these resources on-demand from their large pools of equipment installed in data centers . For wide-area connectivity, customers can use either the Internet or carrier clouds (dedicated virtual private networks ). To deploy their applications, cloud users install operating-system images and their application software on the cloud infrastructure. [63] [ unreliable source? ] In this model, the cloud user patches and maintains the operating systems and the application software. Cloud providers typically bill IaaS services on a utility computing basis: cost reflects the amount of resources allocated and consumed. [64] [65] [66] [67] Platform as a service (PaaS) Main article: Platform as a service See also: Category:Cloud platforms PaaS vendors offer a development environment to application developers. The provider typically develops toolkit and standards for development and channels for distribution and payment. In the PaaS models, cloud providers deliver a computing platform , typically including operating system, programming-language execution environment, database, and web server. Application developers can develop and run their software solutions on a cloud platform without the cost and complexity of buying and managing the underlying hardware and software layers. With some PaaS offers like Microsoft Azure and Google App Engine , the underlying computer and storage resources scale automatically to match application demand so that the cloud user does not have to allocate resources manually. The latter has also been proposed by an architecture aiming to facilitate real-time in cloud environments. [68] [ need quotation to verify ] Even more specific application types can be provided via PaaS, such as media encoding as provided by services like bitcodin.com [69] or media.io. [70] Some integration and data management providers have also embraced specialized applications of PaaS as delivery models for data solutions. Examples include iPaaS (Integration Platform as a Service) and dPaaS (Data Platform as a Service) . iPaaS enables customers to develop, execute and govern integration flows. [71] Under the iPaaS integration model, customers drive the development and deployment of integrations without installing or managing any hardware or middleware. [72] dPaaS delivers integration—and data-management—products as a fully managed service. [73] Under the dPaaS model, the PaaS provider, not the customer, manages the development and execution of data solutions by building tailored data applications for the customer. dPaaS users retain transparency and control over data through data-visualization tools. [74] Platform as a Service (PaaS) consumers do not manage or control the underlying cloud infrastructure including network, servers, operating systems, or storage, but have control over the deployed applications and possibly configuration settings for the application-hosting environment. A recent specialized PaaS is the Blockchain as a Service (BaaS) , that some vendors such as Microsoft Azure have already included in their PaaS offering. [75] Software as a service (SaaS) Main article: Software as a service In the software as a service (SaaS) model, users gain access to application software and databases. Cloud providers manage the infrastructure and platforms that run the applications. SaaS is sometimes referred to as "on-demand software" and is usually priced on a pay-per-use basis or using a subscription fee. [76] In the SaaS model, cloud providers install and operate application software in the cloud and cloud users access the software from cloud clients. Cloud users do not manage the cloud infrastructure and platform where the application runs. This eliminates the need to install and run the application on the cloud user's own computers, which simplifies maintenance and support. Cloud applications differ from other applications in their scalability—which can be achieved by cloning tasks onto multiple virtual machines at run-time to meet changing work demand. [77] Load balancers distribute the work over the set of virtual machines. This process is transparent to the cloud user, who sees only a single access-point. To accommodate a large number of cloud users, cloud applications can be multitenant , meaning that any machine may serve more than one cloud-user organization. The pricing model for SaaS applications is typically a monthly or yearly flat fee per user, [78] so prices become scalable and adjustable if users are added or removed at any point. [79] Proponents claim that SaaS gives a business the potential to reduce IT operational costs by outsourcing hardware and software maintenance and support to the cloud provider. This enables the business to reallocate IT operations costs away from hardware/software spending and from personnel expenses, towards meeting other goals. In addition, with applications hosted centrally, updates can be released without the need for users to install new software. One drawback of SaaS comes with storing the users' data on the cloud provider's server. As a result, [ citation needed ] there could be unauthorized access to the data. For this reason, users are increasingly [ quantify ] adopting intelligent third-party key-management systems to help secure their data. [ citation needed ] Mobile "backend" as a service (MBaaS) Main article: Mobile backend as a service In the mobile "backend" as a service (m) model, also known as backend as a service (BaaS) , web app and mobile app developers are provided with a way to link their applications to cloud storage and cloud computing services with application programming interfaces (APIs) exposed to their applications and custom software development kits (SDKs). Services include user management, push notifications , integration with social networking services [80] and more. This is a relatively recent model in cloud computing, [81] with most BaaS startups dating from 2011 or later [82] [83] [84] but trends indicate that these services are gaining significant mainstream traction with enterprise consumers. [85] Serverless computing Main article: Serverless computing Serverless computing is a cloud computing code execution model in which the cloud provider fully manages starting and stopping virtual machines as necessary to serve requests, and requests are billed by an abstract measure of the resources required to satisfy the request, rather than per virtual machine, per hour. [86] Despite the name, it does not actually involve running code without servers. [86] Serverless computing is so named because the business or person that owns the system does not have to purchase, rent or provision servers or virtual machines for the back-end code to run on. Cloud clients See also: Category:Cloud clients and
