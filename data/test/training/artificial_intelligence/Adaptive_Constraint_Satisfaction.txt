Journal Artificial Intelligence Review, Kluwer Academic Publishers, Vol.13, 1999, pages 215227A Glimpse of Constraint SatisfactionEDWARD TSANGDepartment of Computer Science, University of Essex, Colchester, Essex CO4 3SQ, UKemail edwardessex.ac.ukURL httpcswww.essex.ac.ukCSPSUMMARYConstraint satisfaction has become an important field in computer science. This technology isembedded in millions of pounds of software used by major companies. Many researchers or software engineers in the industry could have benefited from using constraint technology without realizing it. The aim of this paper is to promote constraint technology by providing readers with a fairlyquick introduction to this field. The approach here is to use the well known 8queens problem toillustrate the basic techniques in constraint satisfaction without going into great details, and leaveinterested readers with pointers to further study this field. KEY WORDS 8queens problem, constraint satisfaction, search1.  INTRODUCTIONConstraint satisfaction problems CSPs appear in many areas of computer science, especially artificialintelligence. Following the foot steps of disciplines such as robotics and expert systems, constraint technology has come out of the laboratories and gone into real world applications see below. Constraint technology has been used or looked at by British Telecom, British Airway, French Railway, Cathay Pacific, Port ofSingapore and many other organizations. Constraintbased software has become a multimillion Poundsindustry. Many researchers or software engineers in the industry could have benefited from using constrainttechnology without necessarily realizing it. This article aims to promote constraint satisfaction technologyby explaining what it is about in simple relatively terms. By using the 8queens problem as an example Ishall attempt to a show that there are many ways to solve the same problem, and b introduce some of thebasic techniques that can be used. This should help readers to decide whether they should look further intothis technology. A Glimpse of Constraint Satisfaction Page 2 of 14Edward Tsang University of Essex1.1. What is constraint satisfaction A constraint satisfaction problem is a problem where one has to find a value for a finite set of variables satisfying a finite set of constraints Freuder  Mackworth 1994 Mackworth 1977 Tsang 1993. Researchin this field is about finding methods to solve such problems efficiently.Constraints can be found in many places in daily life regulations, restrictions, requirements, machine capacity and preferences are all constraints. One major application is scheduling. For example, airline companieshave to schedule crews to flights, and meet aviation regulations and company requirements. Staff rostering inhospitals must satisfy restrictions on team composition, personnel regulations and perhaps preferences. Inschools, timetables must be generated in such a way that no teacher will teach two different classes at thesame time in two different places. I shall use the famous 8queens problem here to introduce some of thebasic techniques used in constraint satisfaction. 1.2. What is the 8queens problem The 8queens problem is a well known puzzle among computer scientists. The problem is to place eightqueens on eight different squares on a chess board which has eight rows and eight columns, satisfying theconstraint that no two queens can threaten each other. A queen can threaten any other pieces on the samerow, column or diagonal. Figure 1 shows one of the many solutions to the 8queens problem. Why should anyone be interested in the 8queens problem While being an interesting intellectual challengeto some, the 8queens problem does not resemble any real life problems. The only reason for using this problem here is simplicity  this problem is simple to describe but sufficiently difficult to require the techniquesthat we want to illustrate here. Most real life problems need a lot of time to explain, and many details need tobe remembered in order to follow the discussion. 1.3. How to solve the 8queens problemThere are two basic classes of strategy for this or any other constraint satisfaction problem1 systematic search strategies  put one queen onto the board at a time and make sure that no constraintis violated, until all eight queens are placed. If at any point one cannot find a safe place for a queen,remove the queen just placed this is called backtracking, and place it in an alternative position whichhas not been tried. If the squares are tried systematically, all possible board situations will be tried ifnecessary. A Glimpse of Constraint Satisfaction Page 3 of 14September 16, 20022 repair strategies  put all eight queens onto the board initially at random then, if any queen threatensanother, try to move it to a new place. The hope is that solutions can eventually be found through suchrepairs. 2.  SYSTEMATIC SEARCH STRATEGIES2.1. Backtracking search, a naive strategyA simple backtracking strategy for solving the 8queens problem can be performed in the following wayrows 1 to 8 are looked at one at a time in numerical order. For each row, the columns A to H are looked atone at a time, from left to right, and a queen is placed in the first empty space which is not in conflict withany of the queens placed in the rows above so far. If all the spaces in the current row are illegal, thenremove the previous queen and attempt to place it in an alternative column. Backtrack again if necessary.For example, when simple backtracking is applied, the first five queens will be placed in the board shown infigure 2. Then it is found that no legal space is available in row 6. In this case, the preceding queen, 5D, isremoved. The queen in row 5 will be placed in the next legal space, which is 5H. Then the search will proceed to row 6 again. If it is found later that 5H leads to deadends too, then 4B will be repositioned, and soon. 12345678A B C D E F G HFigure 1 One solution to the 8queens problem no two queens are on the same row,same column or the same diagonal12345678A B C D E F G HFigure 2 No legal space is available in row 6A Glimpse of Constraint Satisfaction Page 4 of 14Edward Tsang University of Essex2.2. Lookahead so as to recognize deadends If one examines the situation carefully after putting each queen onto the board, one may be able to detectimpending deadends early. For example, after putting in the first four queens in Figure 2, it is possible todeduce that there is no place to put a queen in row 6 Figure 3 shows that each square in row 6 is attacked byat least one of the first four queens placed. Being able to recognize this is useful, because one can then backtrack before trying to place the fifth queen in 5D and 5H.In fact with the investment of more effort after putting each queen onto the board, one should be able todeduce that no solution exists after the first three queens are placed in figure 2 I shall not elaborate the logichere. Such lookahead is a commonly used technique in constraint satisfaction Dechter  Pearl 1988. The pointis that the effort spent in analysing the situation after each step has to be balanced against the potential gainin avoiding futile search. One of the simplest forms of lookahead is to invalidate all the threatened squares in the rows still without aqueen. This is known as the forward checking strategy Haralick  Elliott 1980. The gain in this examplewould, in fact, be small, because row 6 would be reached before detecting deadends, but there are manyother situations where the gain can be enormous. 12345678A B C D E F G HFigure 3 After four queens are placed, nolegal space is available in row 612345678A B C D E F G HFigure 4 recognizing culprits the earliestdecision which has ruled out eachsquare in row 6 are marked1 3 2 4 3 1 2 3A Glimpse of Constraint Satisfaction Page 5 of 14September 16, 20022.3. Backjumping and learning from failureAnother well known systematic search strategy is backjumping Haralick  Elliott 1980 Prosser 1993.There are several variations and here is a simple oneSuppose one does not perform lookahead but when deadend situations such as the one described in figure 2are encountered, one attempts to find out what caused the deadend. In Figure 4, the earliest decision whichhas ruled out each of the squares in row 6 is marked. For example, the earliest queen that attacks 6C is theone in row 2, although the queen in 5D attacks it as well. The listed decisions reveal that the latest culprit isthe decision made for row 4. Therefore, one can ignore the alternative positions in row 5 and undo 4B immediately. Note that the backjumping and the forward checking strategies described above both achieve the sameeffect alternatives in row 5 are ignored. More sophisticated backjumping and lookahead strategies canachieve different effects. It is also possible to combine lookahead and jumping back strategies, though thiswill require more bookkeeping. The general principle behind backjumping is to analyse the situation at deadend situations to find out whatthe culprits are, and undo the latest one. The alternatives for the queens between that culprit and the deadend are ignored.This principle can be pushed even further by analysing deadends more carefully, one can discover nogoods, combinations of decisions which can be rejected whenever they are encountered again Prosser1993 Richards et. al. 1995. For example, a little reflection should convince the readers that 1A, 2C, 3Eand 5D together can also cause a deadend in row 6. Therefore, when 4B is replaced by 4G or 4H later, 5Dcan be rejected immediately. In some cases, such savings can be very large.2.4. Ordering in placing the queensSo far, we have assumed that the queens are placed from row 1 to row 8, and for each row, the columns areconsidered from A to H. In fact, these orderings can significantly affect the efficiency of a search.One strategy, when applied to the 8queens problem, is to place a queen in the row which has the leastnumber of choices next. This strategy has been found to work well with many constraint satisfaction probA Glimpse of Constraint Satisfaction Page 6 of 14Edward Tsang University of Essexlems. It is sometimes referred to as the failfirst principle though recently it has been proved to be an inappropriate name interested readers should refer to Grant 1998 for details. This strategy works well with theforward checking strategy described above. Assume that the first three queens have been placed in rows 1 to3, and all the conflicting squares have been removed in the empty rows, as shown in figure 5.The number of available squares left in each of the empty rows is shown in figure 5. The most constrainedrow is row 6, which has only one square unattacked, namely, 6D. A sensible decision is to put the fourthqueen in 6D rather than 4B. In this example, we are putting a queen in a row with no alternatives, which isobviously sensible. The point is even if the most constrained row has more than one square available, it isstill a good idea to place a queen in this row next. Similarly, the order in which the available squares in a row are tried is significant for the efficiency of asearch. One idea is to pick the most promising square first. 3.  REPAIR STRATEGIESAll the above methods assume that one queen is placed in the board at a time, and backtracking when necessary. Another approach is to start with 8 queens on the board, which may attack each other, and keep repositioning those illegal queens in other words, repairing the board until a solution is found or one runs out ofpatience. Such repair strategies are often called heuristic search or stochastic strategies Reeves 1991. 12345678A B C D E F G HFigure 5 The numbers on the right indicates thenumber of safe squares left in that row.Row 6 has only one safe square left of squares left3313412345678A B C D E F G HFigure 6 Repair method 1A and 8H attackeach other if 1A is chosen for repositioning, squares 1A, 1E and 1H arebetter than the others as they areeach attacked by one queen onlyA Glimpse of Constraint Satisfaction Page 7 of 14September 16, 20023.1. A simple repair methodIn this section, we shall introduce a simple repair method called the minconflict heuristic repair methodMinton el. al. 1992. The starting point can be obtained by putting 8 queens in arbitrary positions in each ofthe 8 rows. Alternatively, one can attempt to engineer a board situation with as few conflicts as one can conveniently get. Figure 6 shows a situation which was created by putting one queen at a time from row 1 to row8, minimizing the number of attacks for each row. For example, a queen is placed in 7F since it is attacked byno other queens above it. A queen can be placed in 8A or 8H because they are both attacked by only oneother queen in figure 6, 8H is chosen arbitrarily. In figure 6, the only queens that attack each other are in 1A and 8H. One repair strategy is to pick one ofthem at random, and attempt to reposition it in the same row, in a square that is attacked by the least numberof queens, breaking ties randomly. Actually randomness is found to play an important role in repair methods.Assume that in figure 6, 1A is picked for repositioning. A count would reveal that 1A, 1E and 1H are eachattacked by one other queen only, while all the other squares in row 1 are attacked by two or more queens.There is nothing to stop 1A being picked if a random choice is to be made, but to make it more interesting,let us assume that 1E has been picked. The board situation after this repair is shown in figure 7.In figure 7, 1E and 3E are the only two attacked queens. One of them will be picked randomly for repair. If3E is picked, then 3A and 3E are better choices, as they are each attacked by one other queen, while all theother squares are attacked by two or more queens. The solution shown in figure 8 will be found if one by anychance moves 3E to 3A, 6D to 6 H, and then 8H to 8D. 3.2. Alternative repair strategiesBased on the observation that in every solution each column must be occupied by one queen, an alternativerepair method is to swap the columns of two queens in each repair. In the example in figure 6, had one chosen to move 1A to 1E, 3E will be moved to 3A at the same time. Similarly, the reposition of 6D by 6H and8H by 8D will be done in one repair iteration rather than two. This strategy exploits certain properties of the8queens problem and therefore is less general than the above repair strategy. Other ways of repairing a candidate solution have been proposed. For example, GSAT restarts from newA Glimpse of Constraint Satisfaction Page 8 of 14Edward Tsang University of Essexstarting points periodically Selman el. al. 1993, 1994 Gent  Walsh 1993. Tabu search imposes restrictions on repairs that one is allowed to make at any time Glover el. al. 1989, 1993. Simulated annealingallows poor moves i.e. moves which may increase the number of attacks under certain circumstancesAarts  Korst 1989 Chew el. al. 1992. Borrowing their ideas from nature, genetic algorithms maintainand manipulate a set called population of candidate solutions Eiben el. al. 1994 Ruttkay el. al. 1995Warwick  Tsang 1995 Lau  Tsang 1997. GENET Davenport el. al. 1994 and guided local searchVoudouris  Tsang 1996, 1997, 1998 learn about bad moves or bad combinations of positions. These areall interesting strategies, but detailed description of which is beyond the scope of this paper. 4.  USING CONSTRAINT SATISFACTION TO SOLVE PROBLEMSIn this section, we ask the question of how to apply constraint technology. Very little research has been doneon the software engineering aspect of constraint satisfaction, i.e. given a problem, how should one approachthe problem and, if appropriate, apply constraint techniques to solve it. Initial steps have been made in theCHIC httpwww.ecrc.deCHIC and Computeraided Constraint Programming CACP httpcswww.essex.ac.ukCSPcacp projects.Figure 9 shows a broad outline of applying constraint satisfaction techniques to solve problems. Given a12345678A B C D E F G HFigure 7  The queens in 1E and 3E attack eachother. If 3E is picked for repositioning,then 3A and 3E are the squaresattacked by the least number of queens12345678A B C D E F G HFigure 8 A solution which could be found byrepairing the board in figure 7 in thefollowing way move 3E to 3A, 6D to6 H, and then 8H to 8DA Glimpse of Constraint Satisfaction Page 9 of 14September 16, 2002problem description, one way to determine whether it can be solved by constraint satisfaction is to attempt todefine three components i variables, ii domains and iii constraints. If one can define these components,then one can apply constraint satisfaction techniques to solve the problem. In Section 2, we defined for the 8queens problem 8 variables, each representing the queen in one row. Each variable is allowed to take valuesA, B, ..., H. This set of values is called the domain of the variables. Assigning value H to variable 4, say, represents placing a queen on row 4, column H. Note that in this problem, all variables have the same domain.In other problems, this may not be the case. We can think of the constraints in this problem as a functiongiven any pair of assignments, it returns violated if the assignments represent two squares in the same column or the same diagonals it returns satisfied otherwise. It is important to note that there are likely to be many different ways to formulate the same problem as a constraint satisfaction problems by defining the set of variables, their domains and constraints differently. Someformulations could make the problem significantly easier or more difficult to solve than others. LittleGiven a problem descriptionFormulation a constraint satisfaction problem by defining the set of variables, their domains and all the relevant constraintsChoose an algorithm for solving the problem for complete search algorithms, choose variable and value ordering heuristicsChoose a package such as CHIP, ILOG Solver, PrologIV, ECLiPSe see text for references for solving the problemImplementation and actually solving the problemFigure 9 A broad outline of applying constraint satisfaction techniques to solve problemsOptionalControl flowStepsA Glimpse of Constraint Satisfaction Page 10 of 14Edward Tsang University of Essexprogress has been made in making problem formulation a mechanical procedure. Some preliminary stepshave been made by Nadel who presented many alternative ways to formulate the 8queens problem as aconstraint satisfaction problem Nadel 1990 and Borrett who extended Nadels work Borrett 1998. After formulating a constraint satisfaction, the next task is to find a way to solve it. One possibility is tochoose and implement one of the algorithms described above. Exactly which algorithm to choose is a nontrivial issue, which will be discussed in the next section. Details of the algorithms described above can befound in Tsang 1993. An alternative is to use packages such as ILOG Solver Puget 1995, CHIP Simonis1995, ECLiPSe Lever el. al. 1995 and Prolog IV Colmerauer 1990. These packages, which are allresults of sound constraint satisfaction research, have been applied to real life problems see, for example,Cras 1993 Wallace 1996 Zweben  Fox 1994. They have builtin procedures for solving constraint satisfaction problems, though expert users may implement their own constraints solving algorithm if they wantto. Two points should be noted when considering using commercial packages. Firstly, some users may find thelearning curve in certain packages steep. Secondly, the choice of variables, domains and constraints may becrucial to the efficiency, so knowledge about problem formulation and the algorithms used by these packagesis still very important. To alleviate these problems, consultancy is available at extra charge with most ofthese packages. 5.  CHOICE OF ALGORITHMSIn the previous sections, we have seen the principles behind the main techniques in constraint satisfaction.One important decision is the choice between systematic search and stochastic search, because they havevery different approaches and different resource requirements. In systematic search, one can ensure that all possibilities are tried and therefore solutions will be found ifthey exist. In a repairing approach, it is not that easy to ensure that all possibilities are exhausted. What onegains in the repairing approach is that solutions can be found more quickly in certain types of problems. The 8queens problem is relatively small and most people could find a solution without the aid of a computer. However there are many real life problems that are much larger and would take many months or years toA Glimpse of Constraint Satisfaction Page 11 of 14September 16, 2002solve without the aid of a computer. Imagine trying to find a solution to the 1,000,000 queens problem. Theminconflict heuristic repair method mentioned above can find a solution within minutes on todays computers. Systematic search would probably take days. On the other hand, almost all existing repair methods cannot tell when a problem has no solutions. They canonly keep on searching until resources run out. An interesting debate on whether systematic or repairbasedmethods are more promising can be found in Freuder el. al. 1995. It is reasonable to believe that systematicmethods are better for some problems and repairbased methods are better for others. Under each search paradigm, there are still many search algorithms to choose from. Besides, one maychoose heuristics for ordering the variables and values in systematic search. We introduced a heuristicnamely the failfirst principle for ordering the variables in a systematic search in Section 2.4. Many otherheuristics have been proposed in the literature. Their performance often vary when worked with differentsearch algorithms. The modern view is that different algorithms and heuristics are suitable for different problems. Unfortunately, very little work has been done in positioning the algorithms and heuristics among constraint satisfaction problems readers may refer to Tsang et. al. 1995 for preliminary work. This meansgiven a constraint satisfaction, it is extremely difficult to know which algorithm and heuristic are the mostefficient for solving it. Expert knowledge is needed. This software crisis the crisis that expert resources arethe bottleneck in engineering constraintbased software partly explains why constraint satisfaction has notbeen more popular, despite its wide applicability and its maturity in algorithms design. 6.  WHERE TO GO FROM HEREThis paper only describes some of the basic techniques in constraint satisfaction. It is not meant to be a survey. Many interesting techniques in this field have not been covered here. Rich  Knight 1991 gives agood though somewhat dated account of techniques developed in this field. Tsang 1993 provides a rigorous and thorough account of fundamental techniques. The newer ideas can only be found in research papers.One of the best places to start searching is the Constraints Archives see References. Freuder  Mackworth1994 collect some of the frontier research in this field. Research papers occupy a significant proportion ofconferences such as International Joint Conference on Artificial Intelligence, American National Conference on Artificial Intelligence, European Conference on Artificial Intelligence and Principles and PracticeA Glimpse of Constraint Satisfaction Page 12 of 14Edward Tsang University of Essexof Constraint Programming conference. AcknowledgementsThe author is grateful to Paul Chernett, Sam Steel, Michelle Straw and Gillian Kearney for their help inimproving the readability of this paper.References1 Aarts, E.  Korst, J., Simulated Annealing and Boltzmann Machines, John Wiley  Sons, 19892 Borrett, J., Formulation selection for constraint satisfaction problems a heuristic approach, PhD Thesis, Department of Computer Science, University of Essex, Colchester, UK, 1998 to appear3 Davenport, A., Tsang, E.P.K., Wang, C.J.  Zhu, K., GENET a connectionist architecture for solvingconstraint satisfaction problems by iterative improvement, Proc., 12th National Conference for Artificial Intelligence AAAI, 1994, 3253304 Chew, TL., David, JM., Nguyen, A.  Tourbier, Y., Solving constraint satisfaction problems withsimulated annealing the car sequencing problem revisited, Proceedings, International Workshop onExpert Systems  their Applications, Avignon, France, 1992, 4054165 Colmerauer, A., An introduction to Prolog III, CACM Vol.33, No7, July 1990, 69906 Constraints Archives httpwww.cirl.uoregon.educonstraints and httpwww.cs.unh.educccarchive7 Cras, JY., A review of industrial constraint solving tools, AI Perspective Series, AI Intelligence,Oxford, UK, 19938 Dechter, R.  Pearl, J., Networkbased Heuristics for constraintsatisfaction problems, ArtificialIntelligence, Vol.34, 1988, 1389 Eiben, A. E., Raue, PE.  Ruttkay, Zs., Solving constraint satisfaction problems using genetic algorithms, Proc., IEEE World Conference on Computational Intelligence, 1st IEEE Conference on Evolutionary Computation, 1994, 54354710 Freuder, E.C.  Mackworth, A., ed., Constraintbased reasoning, MIT Press, 199411 Freuder, E.C., Dechter, R., Ginsberg, M., Selman, B.  Tsang, E., Systematic versus stochastic constraint satisfaction, Panel Paper, in Mellish, C. ed., Proc., 14th International Joint Conference on AI,Montreal, Canada, August, 1995, 2027203212 Gent, I.P.  Walsh, T., An empirical analysis of search in GSAT, Journal of Artificial IntelligenceResearch 1 1993, 475913 Glover, F., Tabu search Part I, Operations Research Society of America ORSA Journal on Computing 1, 1989, 109206A Glimpse of Constraint Satisfaction Page 13 of 14September 16, 200214 Glover, F.  Laguna, M., Tabu search, in Reeves, C. ed, Modern Heuristic Techniques for Combinatorial Problems, Blackwell Scientific Publishing, 1993, 7114115 Grant, S.A., Phase transition behaviour in constraint satisfaction problems, PhD Thesis, School ofComputer Studies, University of Leeds, UK, 199816 Haralick, R.M.  Elliott, G.L., Increasing tree search efficiency for constraint satisfaction problems,Artificial Intelligence, Vol.14, 1980, 26331317 Lau, T.L.  Tsang, E.P.K., Solving the processor configuration problem with a mutationbasedgenetic algorithm, International Journal on Artificial Intelligence Tools IJAIT, World Scientific,Vol.6, No.4, December 1997, 56758518 Lever, J., Wallace, M.  Richards, B., Constraint logic programming for scheduling and planning,British Telecom Technology Journal, Vol.13, No.1., Martlesham Heath, Ipswich, UK, 1995, 738019 Mackworth, A.K., Consistency in networks of relations, Artificial Intelligence, Vol.8, No.1, 1977, 9911820 Minton, S., Johnston, M., Philips, A.B.  Laird, P., Minimizing conflicts a heuristic repair methodfor constraint satisfaction and scheduling problems, Artificial Intelligence, Vol.58, Nos.13, SpecialVolume on Constraint Based Reasoning, 1992, 161205 21 Nadel, B.A., Representation selection for constraint satisfaction a case study using nqueens, IEEEExpert, Vol.5, 1990, 162322 Prosser, P., Hybrid algorithms for the constraint satisfaction problem, Computational Intelligence,Vol.9, No.3, 1993, 26829923 Puget, JF., Applications of constraint programming, in Montanari, U.  Rossi, F. ed., Proceedings,Principles and Practice of Constraint Programming CP95, Lecture Notes in Computer Science,Springer Verlag, Berlin, Heidelberg  New York, 1995, 64765024 Reeves, C.R. ed., Modern Heuristic Techniques for Combinatorial Problems, Blackwell ScientificPublishing, 199325 Rich, E.  Knight, K., Artificial intelligence, McGraw Hill, Inc., 2nd Edition, 1991, 889426 Richards, T., Jiang, Y.  Richards, B., Ngbackmarking  an algorithm for constraint satisfaction,British Telecom Technology Journal, Vol.13, No.1., Martlesham Heath, Ipswich, UK, 1995, 10210927 Ruttkay, Zs., Eiben, A.E.  Raue, P.E., Improving the performances of GAs on a GAhard CSP, Proceedings, CP95 Workshop on Studying and Solving Really Hard Problems, 1995, 15717128 Selman, B.  Kautz, H., Domainindependent extensions to GSAT solving large structured satisfiability problems, Proc., 13th International Joint Conference on AI, 1993, 29029529 Selman, B., Kautz, H.A.  Cohen, B., Noise strategies for improving local search, Proc., 12thNational Conference for Artificial Intelligence AAAI, 1994, 337343A Glimpse of Constraint Satisfaction Page 14 of 14Edward Tsang University of Essex30 Simonis, H., The CHIP system and its applications, in Montanari, U.  Rossi, F. ed., Proceedings,Principles and Practice of Constraint Programming CP95, Lecture Notes in Computer Science,Springer Verlag, Berlin, Heidelberg  New York, 1995, 64364631 Tsang, E.P.K., Foundations of constraint satisfaction, Academic Press, London and San Diego, 1993see httpcswww.essex.ac.ukCSPedwardFCS.html for availability32 Tsang, E.P.K., Borrett, J.E.  Kwan, A.C.M., An attempt to map the performance of a range of algorithm and heuristic combinations, Proceedings, Artificial Intelligence and Simulated Behaviour Conference, April 1995, 20321633 Tsang, E.P.K.  Voudouris, C., Fast local search and guided local search and their application to British Telecoms workforce scheduling problem, Operations Research Letters, Elsevier Science Publishers, Amsterdam, Vol.20, No.3, March 1997, 11912734 Voudouris, C.  Tsang, E.P.K., Partial constraint satisfaction problems and guided local search,Proc., Practical Application of Constraint Technology PACT96, London, April, 1996, 33735635 Voudouris, C.  Tsang, E.P.K., Guided Local Search and its application to the traveling salesmanproblem, European Journal of Operational Research, to appear36 Wallace, M., Practical applications of constraint programming, Journal of Constraints, Kluwer Academic Publishers, Boston, Vol.1, Nos.12, 1996, 13916837 T. Warwick  E.P.K. Tsang, Tackling car sequencing problems using a generic genetic algorithm,Evolutionary Computation, Vol.3, No.3, 267298 199538 Zweben, M.  Fox, M.S. ed., Intelligent scheduling, Morgan Kaufmann, San Francisco, 1994
