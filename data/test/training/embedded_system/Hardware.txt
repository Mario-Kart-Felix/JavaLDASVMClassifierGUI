1Digital HomebrewingBob Okas  W3CDCopyright 2004 Robert P. Okas2IntroductionDigital Homebrewing is a broad topic that encompasses Hardware Logic Design Software design Combinations of both Embedded Systems3IntroductionPure hardware design uses only logic to get the job done. For example a CMOS keyer1. Pure software design assumes a general purpose platform and an operating system, such as a PC running Windows or Linux. Keyboards and mice let you know youre using a computer. 4IntroductionPC software can be considered digital homebrewing.WD6CNFs CW decoder program.2Digipan, MixW, etc. are all homebrewed.Software Defined Radio uses a PC platform for many functions.35IntroductionEmbedded systems are usually taskspecific and you dont interact with the processor like you would with a PC. Examples of embedded systems are NorCal keyer4, Small Wonder Labs FreqMite5 , PICEL6 or the microcontroller in modern rigs.Today, well focus is on homebrewing embedded systems.6Embedded SystemsHardwareLets start with the hardware.Embedded systems obviously require some sort of platform.The application dictates the size and method of construction.7Embedded SystemsHardwareThere are several approaches to digital hardwareWire WrapDead BugPC Board  Cadsoft7Manhattan Style  visit K7QOs Website8NoBrew8Embedded SystemsHardwareWirewrapped S100 Single Board ComputerFront9Embedded SystemsHardwareWirewrapped S100 Single Board ComputerBack10Embedded SystemsHardwarePrinted Circuit  Dead Bug Video Display PrototypeTop11Embedded SystemsHardwarePrinted Circuit  Dead Bug Video Display PrototypeBottom12Embedded SystemsHardwareHomebrew Printed Circuit13Embedded SystemsHardwareAA0ZZs Manhattan PICEL Prototype914Embedded SystemsHardwareNobrew Hardware optionsPICEL board10Micro 908 Board11Atmel Butterfly12Evaluation boards from Analog Devices, TI, Freescale and others15Embedded SystemsHardwarePICEL BoardUnfortunately, no longer availableFull hardware documentation on the Web10Elmer 160 Course is an excellent tutorial on PIC programming16Embedded SystemsHardwareMicro908Powerful, selfcontained processorAdapts easily to your base boardExcellent support by AmQRP1117Embedded SystemsHardwareAmQRP Micro90818Embedded SystemsHardwareAtmel ButterflyLow Cost  20 at DigiKey13SelfcontainedBattery poweredNumerous Enthusiasts14KD1JV Melt Solder projects15, 1619Embedded SystemsHardwareAtmel Butterfly20Embedded SystemsHardwareHomebrewing From ScratchWhat if NoBrew doesnt satisfy needs21Embedded SystemsHardwareHomebrewing From ScratchTime for a homebrew project1 Identify requirements2 Evaluate suitable processors3 Evaluate software development tools4 Repeat steps 1, 2  3 until satisfied22Embedded SystemsHardwareHomebrewing From ScratchChoosing a ProcessorMany Factors determine the best choiceCostPackageProcessing SpeedMemory Type and SizePower ConsumptionIO pins  FeaturesSoftware Development Environment23Embedded SystemsHardwareHomebrewing From ScratchCost  less that 10Package  DIP or Surface MountSpeed  Fast enough to do the jobMemory  Flash for the program, RAM for the variablesPower Consumption  The lower, the betterIO pins  Features  Depends on applicationSoftware Development Environment  Free is best24Embedded SystemsHardwareHomebrewing From ScratchConsider the Microchip PIC processorsInexpensiveAvailable in DIP packageVarious clock speedsVarious Flash memory sizes, limited RAMRISC Architecture yields high processing speedCurrent Consumption as low as 13 uALimited IO pins, but numerous features like USARTs, AD converters  TimersFree Development Software1725Embedded SystemsHardwareHomebrewing From ScratchConsider the Atmel processorsInexpensiveAvailable in DIP packageVarious clock speedsLarge program Flash memory and RAMRISC Architecture yields high processing speedLow power consumptionNumerous features like USARTs, AD converters  TimersFree Development Software1826Embedded SystemsSoftwareOnce the processor is selected, its time to start writing code.27Embedded SystemsSoftwareThere are two basic optionsAssembly LanguageHigh Level Language  C28Embedded SystemsSoftwareAssembly LanguageMost chip vendors provide free toolsIntegrated development environments provideContextsensitive editorsAssemblers  linkersSimulators29Embedded SystemsSoftwareAssembly LanguageMPLABMPLAB30Embedded SystemsSoftwareAssembly LanguageContextsensitive editorsProvide a convenient way to type in your programHighlight labels, variables, instructions and comments using various colorsHelp you avoid common mistakes31Embedded SystemsSoftwareAssembly LanguageAssemblersConvert your source program into opcodes the processor understands. They work on individual source files.LinkersCombine the outputs from the assembler and resolve references to labels jump and call instruction targets and any library functions.Produce the final binary program for the processor.32Embedded SystemsSoftwareAssembly LanguageSimulators provideA way to test your program without using actual hardwareA way to simulate hardware inputs33Embedded SystemsSoftwareCWhy use a High Level LanguageIt allows you to be efficient. A few lines of C replace several lines of assembly.You dont lose control of the hardware.You can easily port your program to another processor.34Embedded SystemsSoftwareCPros and ConsIts easy to port programs between chipsC is not supported on some processors.Commercial development packages cost .Development suites offer similar features as assembly languageEditorsProgram Build toolsSimulators  Debuggers35Embedded SystemsSoftwareCThere are alternatives to commercial packages.Just as homebrew software enthusiasts developed Linux, there are folks who develop microcontroller development tools.The good news is theyre freeWinAVR19 is one example36Embedded SystemsSoftwareCWinAVR Development Environment37Embedded SystemsChip ProgrammingSeveral options exist for programming the processorCommercial programmers 150  200Microchip ICD 2Quick WriterJTAGHomebrewSelfprogramming processors38Embedded SystemsChip ProgrammingJTAG can be used for programming and debuggingCommercial units are expensiveThe Web has plenty of homebrew designs39Embedded SystemsChip ProgrammingHomebrew DesignsPICEL boardKB0Ps programmer20Numerous other designs can be found on the Web40Embedded SystemsChip ProgrammingSelfprogramming processors come with builtin loader softwareA serial cable is all thats usually requiredAmQRP HC908Atmel ButterflyUse the supplied software to download the code and store it in the chip41Embedded SystemsSummaryPowerful, highly integrated microcontrollers dont require support logic.Hardware options are numerousHomebrew construction using various techniquesClub KitsLow cost evaluation modulesThere are numerous nocost software development packages availableChip vendors provide free assembly language toolsFree C language development tools.42Embedded SystemsSummaryHardware design is easyOnly a few chips at most are requiredMany examples of projects on the WebCopy or adapt existing an existing designUse your favorite construction methodSoftware development is easyOnline tutorials like Elmer160 help you get startedCopy or adapt existing software21Many low cost device programmers are available43References1 httpwww.io.comn5fckeyer.html2 httpwww.amqrp.orgprojectscwdecodcwdecod.htm3 httpwww.sdrforum.org4 httpwww.amqrp.orgkitsNCKeyer5 httpsmallwonderlabs.comswlfrq.htm6 httpwww.amqrp.orgelmer160boardindex.html7 httpwww.cadsoft.de8 httpwww.qsl.netk7qomanhattan.pdf9 httphome.comcast.netaa0zz10 httpwww.amqrp.orgelmer160boardindex.html11 httpwww.njqrp.orghc908index.html12 httpwww.atmel.comdynproductstoolscard.asptoolid314613 httpdkc3.digikey.comPDFT0430300.pdf14 httpwww.avrfreaks.net15 httpwww.qsl.netkd1jvbfydds.HTM16 httpwww.qsl.netkd1jvdigiswr.HTM17 Google MPLAB IDE for latest version18 httpwww.atmel.comdynproductstoolscard.asptoolid272519 httpwinavr.sourceforge.net20 httpwww.qsl.netkb0ppic.html21 httphome.earthlink.netvintage2
