Arduino IDE on Linux-based OS × Close Home Products Boards Shields Kits Accessories TinkerKit Buy Find Distributors Online Store Download Learning Getting Started Tutorials IDE Examples Boards Tutorials Advanced Guides Hackings Reference FAQ Forum Makers Blog Newsroom Press Releases Coverage Events Foundation Access Login Log in Forgot Login? Sign up Learning Getting Started Arduino Software Arduino IDE on Linux-based OS ARDUINO IDE v. 1.8.1 Arduino PRIMO Arduino STAR - OTTO Arduino UNO WiFi Arduino or Raspberry Pi? February 22 2017 New IDE for all Arduino boards! December 22 2016 MAR 09 Arduino Berlin Store Events for Teachers MAR 10 Arduino Berlin Store Workshops for Beginners MAR 14 Embedded world Conference News Blog Arduino IDE on Linux-based OS share -1 tweet -1 plus -1 share -1 Please follow these steps before running the Arduino IDE or Arduino Studio on Linux-based operating systems: STEP 1 Create the file 90-extraacl.rules file in the /etc/udev/rules.d folder :     $ sudo vim /etc/udev/rules.d/90-extraacl.rules     and paste into it the following lines :     KERNEL="ttyUSB[0-9]*", TAG+="udev-acl", TAG+="uaccess", OWNER="<your_username>" KERNEL="ttyACM[0-9]*", TAG+="udev-acl", TAG+="uaccess", OWNER="<your_username>"     this will allow the generic system user the use of the serial ports on the OS. Just replace <your_username> with your Linux username and then you're done. STEP 2 Grant yourself the permissions to the tty and dialout groups with :     $ sudo usermod -a -G tty <your_username> $ sudo usermod -a -G dialout <your_username>     if using SUSE Linux please run also :     $ sudo usermod -a -G uucp <your_username>     STEP 3 If installed, remove from your system the ModemManager program. If you're running a Debian-based linux distro, the typical command to run from shell is :     $ sudo apt-get remove modemmanager     otherwise if running Red Hat/Fedora/CentOS run :     $ yum remove modemmanager     or if running SUSE Linux run :     $ zypper rm modemmanager     be always sure to have administrator privileges before running these commands. Skip to STEP 5 if you do not own a M0 / M0 Pro STEP 4 (just for Arduino M0 / M0 Pro boards) To complete the setup with the Arduino IDE M0, create a file named 98-openocd.rules in the /etc/udev/rules.d folder :     $ sudo vim /etc/udev/rules.d/98-openocd.rules     and paste into it the following lines :     #Copy this file to /etc/udev/rules.d/   ACTION!="add|change", GOTO="openocd_rules_end" SUBSYSTEM!="usb|tty|hidraw", GOTO="openocd_rules_end"   #Please keep this list sorted by VID:PID   #CMSIS-DAP compatible adapters ATTRS{product}=="*CMSIS-DAP*", MODE="664", GROUP="plugdev"   LABEL="openocd_rules_end"     Any device that uses OpenOCD has necessarily to be added to this file using the standard syntax of UDEV. If running SUSE Linux please run these additional commands:     $ sudo addgroup plugdev $ sudo usermod -a -G plugdev <your_username>     and then reboot. STEP 5 (optional) If you want to use external devices in conjunction to the Arduino IDE, such as the AVR ISP programmers, create the fileavrisp.rules file in the /etc/udev/rules.d folder :     $ sudo vim /etc/udev/rules.d/avrisp.rules     and paste into it the following lines : avrisp     SUBSYSTEM!="usb_device", ACTION!="add", GOTO="avrisp_end"   # Atmel Corp. JTAG ICE mkII ATTR{idVendor}=="03eb", ATTRS{idProduct}=="2103", MODE="660", GROUP="dialout" # Atmel Corp. AVRISP mkII ATTR{idVendor}=="03eb", ATTRS{idProduct}=="2104", MODE="660", GROUP="dialout" # Atmel Corp. Dragon ATTR{idVendor}=="03eb", ATTRS{idProduct}=="2107", MODE="660", GROUP="dialout"   LABEL="avrisp_end"     STEP 6 Reload the udev rules with:     $ sudo udevadm control --reload-rules $ sudo udevadm trigger     Now you should be able to properly build and upload a sketch to your board. If not working, please reboot your system to complete the setup. Once logged in again into the workspace, the IDE should be fully working. Attached, the cheat sheet of the various package managers for major Linux distributions and the *.rules files as well. Please remember to edit the 90-extraacl.rules and type your username in the OWNER field :   share -1 tweet -1 plus -1 share -1 Download attachments: 90-extraacl.rules.txt (464 Downloads) 98-openocd.rules.txt (306 Downloads) avrisp.rules.txt (306 Downloads) ubuntu_cheatsheet.pdf (605 Downloads) unixlinux_cheatsheet.pdf (418 Downloads) yum_cheatsheet.pdf (28411 Downloads) zypper_cheatsheet.pdf (379 Downloads) Related items How to import a Library on Arduino IDE First steps with Arduino IDE The New Arduino IDE 1.7.10 is now available! New Arduino IDE 1.7.9 Arduino IDE 1.7.8 GETTING STARTED FIRST STEPS   WHAT IS ARDUINO   BASIC CONCEPTS Getting started with your board Start with Arduino UNO WiFi Start with Arduino UNO Start with Arduino Nano Start with Arduino Mega 2560 Start with Arduino Yun Start with Arduino Tian Start with Arduino Industrial 101 Start with Arduino M0 Pro Start with Arduino Leonardo ETH Start with Arduino DUE Start with Arduino M0 Start with Arduino Yun Mini Start with Arduino MEGA ADK Start with Arduino Leonardo Start with Arduino Robot Start with Arduino ETHERNET Start with Arduino Micro Start with Arduino Mini Start with Arduino ESPLORA Getting started with your shield Start with Arduino ETHERNET SHIELD 2 Start with Arduino GSM SHIELD 2 Start with Arduino WIFI SHIELD Getting started with your accessories Start with Arduino Robot LCD Start with Arduino ISP Start with Arduino USB 2 Serial Micro Start with Arduino USB 2 Serial Mini Start with Arduino Mini USB Adapter   DID YOU ENJOY YOURSELF WITH ARDUINO? JOIN THE COMMUNITY! SHARE YOUR PROJECT   DISCOVER OUR WHOLE STORY About us GET IN TOUCH WITH US Contact us FIND ALL OUR OPEN POSITIONS AND JOIN US!   JOB SEARCH NEWSLETTER facebook twitter Google+ Instagram youtube2  LinkedIn Pinterest Tumblr GitHub © 2017, Arduino AG Trademarks
