UrWeb Taking Syntax SeriouslyAdam ChlipalaMITSCRIPTNovember 13, 20132Dependent TypesSystem FA partial map of the programming languages landscapeTypeLevel ComputationProfitableCommercial Web ApplicationThe UrWeb language recently managed to make it across this gap, by putting out open source software and waiting 7 years for someone to be brave enough to use it.3There are at least several users whom I have never metThe first commercial UrWeb applicationBazQux Reader, by Vladimir ShabanovFeed reader with commentshttpwww.bazqux.comOn the order of 1000 paying users daily4Executive SummaryUrWeb is a domainspecific languagewith a fancy static type systemwith firstclass support for Web app architectureincluding strong encapsulationand statically checked metaprogrammingwith security by construction5Web Applications A Steaming Pile of TextWeb App Developer CompilerInterpreterHTML, CSS, JavaScript, SQL, URLs, JSON, ...Strings, strings, strings, ...6OWASP Top 10 Security Vulns.1. Injection2. Cross Site Scripting3. Broken Authentication and Session Mgmt.4. Insecure Direct Object References5. Cross Site Request Forgery6. Security Misconfiguration7. Insecure Cryptographic Storage8. Failure to Restrict URL Access9. Insufficient Transport Layer Protection10.Unvalidated Redirects and ForwardsList is a little old at this point7Ruled out by type system, if right security policy is writtenRuled out by static analysis, if right security policy is writtenmore researchy part that wont pop up any more in this talkRuled out by type systemHow UrWeb Does1. Injection2. Cross Site Scripting3. Broken Authentication and Session Mgmt.4. Insecure Direct Object References5. Cross Site Request Forgery6. Security Misconfiguration7. Insecure Cryptographic Storage8. Failure to Restrict URL Access9. Insufficient Transport Layer Protection10.Unvalidated Redirects and Forwards8Outline Big idea embedded language syntax via fancy types Strong encapsulation for the web Statically typed metaprogramming Demo9Hello WorldfunmainreturnxmlheadtitleHelloworldtitleheadbodyh1Helloworldh1bodyxmlSyntactic sugar for building ASTs in a rich type that enforces XML wellformedness10The Big IdeaWe could design a programming language with builtin static types for hash tables, redblack trees, splay trees, etc., but thats just no fun at all.Expressive static type systems make it possible to design new abstractions without extending the programming language.We could design a programming language with builtin static types for XML trees and SQL queries, etc., but thats just no fun at all.An expressive enough static type system allows implementation of XML, SQL, and more, with sound compiletime checking of syntax and typing rules, without extending the programming language.11Strong EncapsulationModule InterfaceHash Table Client CodeInsertLookup12Web 1.0 EncapsulationModule Interface Client CodeLogin CookieUsers Database Table13EncapsulationstructureAuthsigvalloginFormunitxbodyvalwhoamiunitstringendstructtableusersNamstring,PwstringcookieauthNamstring,PwstringfunrightInforoneRowSELECTCOUNTFROMusersWHERENamr.NamANDPwr.Pw1funloginrifrightInforthensetCookieauthrelseerrorWronginfofunloginFormFormhandledbylogin...funwhoamiletrgetCookieauthinifrightInforthenr.NamelseerrorWronginfoendSyntactic sugar for construction of ASTs in a rich type enforcing query validity14Some Client CodefunmainreturnxmlAuth.loginFormpWelcome.Youcouldalinksomewheregosomewherea.pxmlandsomewhereuserAuth.whoamiifuserFredFlintstonethenreturnxmlYabbadabbadooxmlelsereturnxmlBoringxmlandeviloneRowSELECTPwFROMAuth.userWHERENamAdmin15Web 2.0 EncapsulationModule Interface Client CodeSubtree of Dynamic Page Structure16FunctionalReactive GUIsThe Status QuoAB CDDocument Tree DOMScriptFind the node named B and replace its contents.Data SourceThe Reactive WayData Source....Pure FunctionAB CDScriptChange the value of this data source.ModuleD17A ClientSide CounterstructureCountersigtypetvalnewunittvalincrementtunitvalrendertxbodyendstructtypetsourceintfunnewsource0funincrementcngetcsetcn1funrendercxmldynsignalnsignalcreturnxmlbnbxmlxmlend18Counter ClientfunmaincCounter.newreturnxmlCounter.rendercbuttononclickCounter.incrementcBackupcopyCounter.rendercbuttononclicksetc1xml19ClientServer CommunicationAJAX and CometWeb ServerMessagepassing, a la pi calculus20Metaprogramming for the WebParameterized code generatorParameter AParameter BApplication Piece AApplication Piece BAlready very popular in Ruby on Rails and other frameworks21Automatic Admin InterfaceSQLTableSchemaId A B C DMetaprogram22InBrowser Spreadsheet23AdHoc Code GenerationSQLTableSchemaId A B C DscriptgeneratescaffoldTIdintAstringBfloatCstringDintMetaprogramappmodelspost.rbviewspostsindex.html.erbshow.html.erbconfigroutes.rb........Edit some source files to customize....Now change the database schema....24Metaprogramming in a NutshellRuntime Programming LanguageTuring completeCompiletime Programming LanguageAKA, type systemnot Turing complete, but includes basic lambda calculusIncluded inMetadata controlling code generation optionsMetaprogram SubWebMetadatas typeTypelevel program SubWebs typeKey Property 1These types are expressive enough to guarantee absence of code injection, abstraction violation, etc..Key Property 2Effective static checking that the metaprogram really has the claimed type25One Slide for Type System GeeksUrs type system isFTypelevel recordsAutomatic use of inductive theorems about records during type inference26table t1  Id  int, A  int, B  string,            C  float, D  bool  PRIMARY KEY Idopen Crud.Makestruct                   val tab  t1                                                val title  Crud1                                                  val cols  A  Crud.int A,                               B  Crud.string B,                               C  Crud.float C,                               D  Crud.bool D               endAn Example ApplicationSQLTableSchemaId A B C DMetaprogram27UrWeb Available Athttpwww.impredicative.comurIncluding online demos that Ill present now
