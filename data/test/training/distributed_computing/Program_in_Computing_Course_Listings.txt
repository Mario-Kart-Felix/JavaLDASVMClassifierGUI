Program in Computing Course Listings         REGISTRATION & CLASSES     FEES & RESIDENCE     ACADEMICS     STUDENT RECORDS     CALENDARS     FACULTY & STAFF     FORMS     ARCHIVES        UCLA General Catalog 2016-17 CATALOG HOME     ABOUT UCLA     COLLEGE AND SCHOOLS     UNDERGRADUATE STUDY     GRADUATE STUDY ACADEMIC POLICIES     CURRICULA AND COURSES     APPENDIXES     CATALOG PDF     Mathematics Faculty Roster Scope and Objectives Undergraduate Study Graduate Study Mathematics Courses Program in Computing Courses     Mathematics Program in Computing Courses Lower Division Courses 1. Introduction to Computers and Computing. (4) Lecture, three hours; laboratory, one hour. Not open for credit to students with credit for course 1S or 10A; may not be taken concurrently with course 1S or 10A. Fundamentals of computers and computing; editors, spreadsheets, file manager; machine organization and computer hardware; Internet; software applications. P/NP or letter grading. 1S. Software Tools for Information Management. (1) Lecture, one hour; laboratory, two hours. Preparation: some familiarity with computers. Not open for credit to students with credit for course 1; may not be taken concurrently with course 1. May be taken by students with credit for more advanced courses. Introduction to spreadsheets and databases in laboratory setting. P/NP grading. 3. Introduction to Computing for Social Sciences and Humanities. (4) Lecture, three hours; discussion, two hours. No prior programming knowledge required. Not open for credit to students pursuing specializations in Computing or to students with credit for course 20A. Basic principles of object-oriented programming and concepts, with applications from social sciences and humanities. Overview of Java programming language, programming with objects, control structures and functions, classes and object-oriented design, event-driven programming, application to multiagent models. P/NP or letter grading. 10A. Introduction to Programming. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. No prior programming experience assumed. Basic principles of programming, using C++; algorithmic, procedural problem solving; program design and development; basic data types, control structures and functions; functional arrays and pointers; introduction to classes for programmer-defined data types. P/NP or letter grading. 10B. Intermediate Programming. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Enforced requisite: course 10A. Abstract data types and their implementation using C++ class mechanism; dynamic data structures, including linked lists, stacks, queues, trees, and hash tables; applications; object-oriented programming and software reuse; recursion; algorithms for sorting and searching. P/NP or letter grading. 10C. Advanced Programming. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Enforced requisite: course 10B. More advanced algorithms and data structuring techniques; additional emphasis on algorithmic efficiency; advanced features of C++, such as inheritance and virtual functions; graph algorithms. P/NP or letter grading. 15. Introduction to Lisp and Symbolic Computation. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Enforced requisite: course 10A. Introduction to symbolic computation using Lisp programming language. Basics: list structures, recursion, function abstraction. Advanced topics: knowledge representation, higher-order functions, problem-solving algorithms and heuristics. P/NP or letter grading. 20A. Principles of Java Language with Applications. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Enforced requisite: course 10A. Not open for credit to students with credit for course 3. Introduction to Java computer language. Class and interface hierarchies; graphics components and graphical user interfaces; streams; multithreading; event and exception handling. Issues in class design and design of interactive Web pages. P/NP or letter grading. 20B. Advanced Aspects of Java Language with Applications. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Enforced requisite: course 20A. Further aspects of use of classes, graphics components, exception handling, multithreading, and multimedia. Additional topics may include networking, servlets, database connectivity, and JavaBeans. P/NP or letter grading. 20C. Seminar: Enterprise Computing with Java. (5) Lecture, three hours; discussion, two hours; laboratory, five hours. Enforced requisite: course 20B. Overview of Enterprise Java APIs: remote method invocation, database access with SQL, servlets, and JSP. Issues in implementation of server-side Java applications. Use of Java in conjunction with XML. Individual or group projects and presentations. P/NP or letter grading. 30. Machine Organization and Assembly Language Programming. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Enforced requisite: course 10B. Description of machine organization and operation. Representation of information, instruction sets and formats, addressing modes, memory organization and management, input/output (I/O) processing and interrupts. P/NP or letter grading. 40A. Introduction to Programming for Internet. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Enforced requisite: course 10A. Recommended: course 10B. Introduction to core technologies of Internet, with focus on client-side Web programming. Fundamental protocols, static Web pages, Perl language, Common Gateway Interface, XML. P/NP or letter grading. 40B. Advanced Topics in Programming for Internet. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Enforced requisite: course 40A. Study of advanced topics in Web programming, with focus on server-side technologies. P/NP or letter grading. 60. Data Structures and Algorithms. (4) Lecture, three hours; discussion, one hour; laboratory, five hours. Enforced requisites: course 10B, Mathematics 31A, 31B, 61. Review of basic data structures: arrays, stacks, queues, lists, trees. Advanced data structures: priority queues, heaps, balanced trees. Sorting, searching techniques. Corresponding algorithms. P/NP or letter grading. 97. Special Topics in Programming. (1 to 4) Lecture, one to three hours; discussion, zero to one hour. Enforced requisite: course 10A. Variable topics in programming not covered in regular program in computing courses. May be repeated for credit with topic change. P/NP or letter grading. Upper Division Courses 110. Parallel and Distributed Computing. (5) Lecture, three hours; discussion, two hours; laboratory, eight hours. Requisite: course 10B or equivalent familiarity with programming in C or C++ language. Introduction to programming of parallel computers. Shared and distributed memory parallel architectures; currently available parallel machines; parallel algorithms and program development; estimation of algorithmic performance; distributed computing; selected advanced topics. P/NP or letter grading. 130. Cryptography. (4) Lecture, three hours; discussion, one hour; laboratory, three hours. Requisites: course 10B, Mathematics 115A. Design and analysis of cryptosystems for confidentiality and authentication. Classical cryptosystems and their security, modern private-key cryptosystems and applications, public-key cryptography and applications; generating prime numbers, factoring integers, discrete logarithms, digital signatures, perfect secrecy. P/NP or letter grading. 187. Advanced Variable Topics in Programming. (4) Lecture, three hours; discussion, one hour. Variable topics in programming and mathematics of programming not covered in regular program in computing courses. May be repeated for credit with topic change. P/NP or letter grading. Graduate Courses 285C-285L. Seminars. (4 each) Seminar, three hours. Considered equivalent to Mathematics 285A through 285L for purposes of degree requirements. Topics in various computational fields by means of lectures and informal conferences with staff members. S/U or letter grading: 285C. Computational Algebra. 285D. Logic and Theory of Computation. 285J. Scientific Computation. 285K. Randomness and Computation. 285L. Computational Statistics. 296. Participating Seminar: Logic and Theory of Computation. (1 to 4) Seminar, to be arranged. Seminar and discussion by staff and students. S/U grading. 375. Teaching Apprentice Practicum. (1 to 4) Seminar, to be arranged. Preparation: apprentice personnel employment as teaching assistant, associate, or fellow. Teaching apprenticeship under active guidance and supervision of regular faculty member responsible for curriculum and instruction at UCLA. May be repeated for credit. S/U grading.                   About Us     Site Administration     Campus Directory     Student Affairs     MyUCLA     UCLA Home     © Regents UC Register to vote  
