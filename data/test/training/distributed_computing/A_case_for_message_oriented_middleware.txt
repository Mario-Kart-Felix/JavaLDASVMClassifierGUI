A Case for Message Oriented MiddlewareGuruduth Banavar Tushar Chandra Robert Strom and Daniel SturmanIBM T J Watson Research Center Hawthorne New YorkfbanavartusharstromsturmangwatsonibmcomAbstract With the emergence of the internet independent applications are starting to be integrated with each other This creates a needfor technology for glueing together applications both within and acrossorganizations without having to reengineer individual components Wepropose an approach for developing this glue technology based on message ows and discuss the open research problems in realizing this approach IntroductionRecent advances in networking and the pervasive deployment of the internet havecreated new opportunities for computing research Many applications are evolving from monolithic to distributed systems Business processes are increasinglybeing automated and interconnected in spontaneous ways Companies increasingly require the integration of once independent applications either becausethey are vertically integrating components of the business or because of mergers or outsourcing of function to separate organizations In summary there isa convergence to loosely integrated distributed systems where each componentcan evolve independentlyIn this paper we make the case for research in glue technology for looselyintegrating distributed systems The basic observation underlying this technology is that widely disseminated often realtime events or messages  egstock quotations advertisements oers to buy and sell weather reports trafc conditions etc  are becoming ubiquitously available through the InternetThese public events as well as internal events such as orders shipments deliveries manufacturing line changes can form the glue to link applicationswithin and across organizations Since this technology is based on messages weuse the term Message Oriented Middleware or MOM for short to refer to itConsider the opportunities that arise within a single company Today mostlarge companies consist of several smaller organizations that are supported byapplications that were developed and have evolved largely independently of eachother In most cases people provide the linkage between these smaller organizations For example when a sale occurs the sales representative sends a requestto manufacturing to produce the product In such cases what is needed is a technology that allows companies to automate such processes by tying together itsorganizations independent applications Once tied together the integrated computing system is potentially cheaper to operate faster and less prone to errorsthan the system in which humans glued together independent organizationsFurther this kind of integration opens up new opportunities for macroscopicanalysis such as forecasting and requirements analysis across the company thatcan further streamline operationsThe value of tying together applications can easily be extended to partnerships between companies One obvious scenario is when two companies mergeUsually each company has its own set of independent applications  the challenge is to provide computing glue to tie these applications together Anotherobvious scenario is when two companies do business with each other In todaysmodel people are heavily involved in transacting business between companiesBusiness integration oers the opportunity to automate business interactionsbetween companies by tying together their applicationsAs more consumers shop invest pay bills and taxes read and perform cooperative work and play online the same glue technology may be extended tosupport businesstoconsumer interactions Better integration between businesssoftware and enduser software such as web browsers oers the promise of morepower and greater ease of use to the enduserWe propose an approach for developing the glue technology required forMOM Our proposed approach is derived from the publish and subscribe modelOPSS and event delivery systems WIS In this model the basic unit of datais a message which corresponds to what are called events in publishsubscribeor event delivery systems SV Clients register as publishers or subscribers ofmessages Messages are sent to and delivered from information spaces each ofwhich has a predened message schema BKS Information spaces may betied together via message ow graphs that specify how messages are propagatedand transformed between producers and consumers A message ow graph mayroute a ltered subset of messages from one information space to another mergemessages from multiple sources or deliver a transformed version of a messagefrom one information space to another Some information spaces contain statessummarizing the message history of other information spaces This state can beremapped back into a message sequence often in more than one way Systemscan exploit this nondeterminism by relaxing the ordering of messages by dropping obsolete messages by compressing the past history being sent to a newlyconnecting subscriber or to a subscriber who has reconnected after being olineIn the near future we envision a pervasive MOM environment that glues together a large number of standalone applications Each application may evolveindependently from the others in this environment The MOM environment willsupport such evolution without requiring changes in other applications and infact without requiring the other applications to be aware of the addition andremoval of applications and clients The only exceptions would be those applications dealing with access control and security The MOM environment willallow new applications to tap into information generated by existing applications without disturbing them This will allow users to add higher order featuressuch as auditing monitoring and data mining on top of existing informationows after the fact and without disrupting the underlying applicationsSeveral crucial research problems remain unsolved in the MOM approach andeven those that are solved have not been completely implemented yet A completeand precise model for this approach has not yet emerged Several key distributedcomputing problems remain open such as scalability and how to provide endtoend guarantees on message delivery Some of the known algorithms tackle subsetsof the overall problem Questions related to faulttolerance security messageordering and topology changes that have been well studied in the context ofother types of messaging systems are open areas for further research in thecontext of MOMThere are several eorts from various other communities to provide glue technology to tie together applications and it is not clear at this stage whether asingle glue technology is best suited for all environments The database community has extended the classical ideas underlying databases to distributed environments via distributed transactions TGGL and federated databases HsiThe languages community has extended the concept of objects to a distributedenvironment via remote method invocation CORBA Gro RMI BN etcGroup communication systems such as Isis have also been used to glue togetherapplications in a distributed environment BCJBirEdi Finally thereexist higherlevel approaches such as Workow that are targeted towards specicsubsets of the overall problem WfMPPHC We will compare our proposedMOM approach with these other approachesThe rest of this paper is organized as follows In section  we examine several examples that motivate the need for message oriented middleware In section  we elaborate on the message oriented middleware model In section  wediscuss open areas for further research in this area In Section  we examinealternative approaches Section  concludes with work related to contentbasedpublishsubscribe systems ExamplesIn this section we provide two examples that motivate the need for MessageOriented Middleware and illustrate the various requirements imposed on thisapproach Stock Trading This example of application integration demonstrates theneed for MOMbased systems to be highly scalable and for onthey transformation of messages into formats suitable for dierent clients This example also illustrates the need for anonymity between message publishers andmessage subscribers Home Shopping This example is a home shopping application and furtherdemonstrates the need for crossdomain messaging This example also illustrates the need for interpreting message streams to capture applicationspecic meaning Stock TradingTo illustrate an instance of application integration consider a publishsubscribebased stock trading application written for a particular stock exchange saythe New York Stock Exchange Figure  In such an application stock tradesbids and sales are published as messages Brokers aliated with the NYSE haveaccess to this information and subscribe to events of particular interest to themStock trade events are published in a format beginning with the following fourattributes  NYSE ticker symbol  share price  share volume  brokerid In a similar application running at the NASDAQ stock exchange a separateapplication may also publish events corresponding to trades but with a dierentformat for the rst four attributes  NASDAQ ticker symbol  share price capital in this trade  broker code For both markets message rates are veryhigh thousands of messagessecond and there are large numbers of publishersand subscribers Thus an important requirement for MOM is performance andscalabilityNotice that to extend the system to new applications such as direct customer trading it is simply necessary to tap in to the message streams Provided that the infrastructure can scale from hundreds of brokers to hundreds ofthousands of online investors each investor can specify an appropriate selection of interest  such as the issues in his portfolio Of course the applicationsused by customers and by professional stockbrokers will be very dierent butthe message stream glue will remain the same This example illustrates boththe importance of anonymity between producers and consumers and the needto cross organizational barriers Applications posting events need not be awareof their destinations applications subscribing to events need not be aware oftheir sources Extending the system to bring stock trade events directly to homecomputers may change the system load but not the fundamental architectureNow let us suppose that brokers and analysts previously dealt separatelywith both the NYSE and NASDAQ exchanges and that in future they wishto run the same analysis programs for trades on both exchanges In order torun their internal analyses on information from both sources they may wishto convert the data into a common internal format Each of them will have toadminister access to multiple sources track changes to event formats etc It willbe substantially easier to access information from both exchanges by accessingone data stream instead of twoAn integrated application consisting of both the NYSE and NASDAQ stocktrading applications can solve this problem by transforming data from the twosources into a common format and merging the two information streams into asingle stream For instance both stock trade formats can be converted to a unied format consisting of the following rst four attributes  unique companyname  share price  share volume and  unique broker name That isthe MOM must transform those messages it is delivering to clients requestingthe common format while preserving the original format for legacy applicationsThe transformation enables clients accessing both stock exchanges to access thisintegrated data without disrupting the operation of legacy applicationsFig  Applications using both NYNEX and NYSE to exchange dataIn order to continue to use legacy client applications it may be necessary tointegrate these applications by performing other transformations For examplelegacy NYSE client applications may wish to access NASDAQ trade events inthe NYSE format and vice versa Home ShoppingConsider a home shopping application where consumers may request uptotheminute information and pricing on retail items from virtual markets for products such as automobiles computers or camera equipment Figure  Eachmessage represents a sellers ad the sellers identity and location the type ofarticle and attributevalue pairs representing the attributes of the article beingsold For example automobile advertisements would include the make modelyear mileage and options The price might either be xed or left open to competitive bidding in a realtime auction Additional messages represent bids bybuyers and the open and closing of auctions Consumers subscribe through anumber of tests on these attributes As in the previous example messages mustbe routed to some subset of all subscribers based on their information contentAn important function that MOM must support for this scenario is the communication of dynamic changes in the availability and the price of items Theseller may lower the price or withdraw his ad in response to lack of interest bycustomers Or buyers may raise the price as a result of competitive biddingTypically a buyer would subscribe not just to a stream of events but to a statedetermined by the message history such as the current price of items matchinghis criterion As a result new subscribers would not receive all messages fromthe beginning of time but instead only those messages representing the currentvalid prices for these selected items Messages which have become superseded byupdates or which correspond to items no longer available for sale need not bedelivered This example illustrates the importance of interpreting event historiesas a state  specifying such a summarization requires the system to understandthat a new price for the same item supersedes the previous price and that thetermination of an auction or the withdrawal of an ad cancels all previous pricesfor that itemThe ability to subscribe to a state summarizing a message history has additional eects on message delivery if the buyer wants to subscribe not merely tothe current oer for each selected item but instead wants to track for instancethe lowestpriced ad matching his criteria plus any items for which the buyeris still the low bidder In this case messages which do not impact the lowestprice because they are ads for articles with higher prices are not delivered Notethat if the lowpriced ad is modied or withdrawn or if its price is bid up inan auction so that it is no longer the lowpriced ad then it may be necessaryto either deliver the ad for the secondlowpriced item if it had previously beensuppressed or to redeliver it For example consider the auto advertisements inFigure  The  price is the low price so the  price is not deliveredHowever once the  price is withdrawn or raised above  the adfor the  automobile is delivered to replace itFig  Home ShoppingNotice that in this example there is no real organizational boundary Anyonemight register as a publisher potential seller or as a subscriber potential buyerof an information space for a particular product A FlowGraph Model for Message Oriented MiddlewareFor supporting the examples in the previous section we desire a model which facilitates expression of clients requirements  is easy to reason aboutboth for validating specications and implementations  is rigorous and permits the widest possible latitude for the implementorGood models are founded upon a small number of basic concepts For example the key concepts underlying transactional database models are atomicityand serializability The data whether distributed andor replicated whetherconcurrently accessed or not behave as if located at a single site and accessedone transaction at a time Similarly the key concepts underlying the Isis modelBCJ are group membership BirEdi and virtual synchrony BTOnce a model is chosen we have a rigorous requirement for developing cleverimplementations for preserving the appearances of the model under a wide variety of design points and physical environmentsThe Gryphon project at IBM Research httpwwwresearchibmcomgryphonis exploring a particular model for MOM based upon the concepts of information spaces and message ows A system is modeled as a message ow graphan abstract representation of the propagation of the messages in a system divorced from any realization on an actual network topology BKS A messageow graph is a directed acyclic graph whose nodes are information spaces andwhose arcs are message ows Information spaces are either totally ordered message histories or states derived from message histories Each information spacehas a schema that species the type of the messages or of the state Publishersand subscribers are source and sink message histories respectively Message owsspecify the propagation of messages or the updating of state in order to preservespecic relationships between information spaces as new messages are added tothe system These relationships include selection the destination message history receives a copy of the subset of thesource message history that satises some boolean predicate P For examplean analyst may request all trades of more than  shares of XYZ companyhaving a price greater than  per share transform the destination message history receives each message of thesource message history after applying a transform T For example the conversion Volume  CapitalPrice might be used to convert all messagesfrom the NASDAQ format to the NYSE format merge when multiple message histories have arcs to a single destinationthe destination receives a merge in a nondeterministic order of the allthe messages of the sources This operation is involved in any applicationinvolving multiple publishers collapse the destination state is computed by applying some summarizationfunction S over all the messages in the source message history In the homeshopping example a client may be interested in the lowest priced ad for Saabcars with less than  miles and a price under  expand expand is the inverse of collapse The source message history is nondeterministically computed to be any message history which summarizes tothe destination state under the summarization function S All such messagehistories are said to be equivalent  the system is free to choose which oneof the many message histories to deliver to a destinationMessage ow graphs can evolve dynamically and in fact the changes to thesegraphs and requests to change the graph are themselves metaevents that canbe subscribed to As in similar systems access control policies limit who mayadd and delete nodes and arcs and where they may be addedNotice that this model has some characteristics of database systems someof group communication systems and some unique characteristics of its ownInformation spaces in MOM are analogous to tables in relational databasesJust as database tables have data schemas information spaces have messageschemas The selection relation between information spaces is similar to theselect operator between relational tables Just as a relational database allowslinkages between tables and views MOM allows linkages between informationspaces via message ow graphsLike group communication systems messages ow from producers to consumers without explicit requests from consumers  ie both systems are pushbased In a pushbased environment it is natural that operations on the messageow such as selections transforms and summarizations are performed incrementallyDening and implementing the ow graph model gives rise to a number ofopen research issues These issues are discussed in detail in the next section Research Issues ModelThe message ow graph is a useful abstraction for specifying many problemssuch as the ones discussed in the previous section It is easy to explain to usersfamiliar with either dataow graphs or with spreadsheetsThere are however a number of open issues One is the type system fordening schemas for messages and information spaces Whereas it makes senseto organize relational databases as tables in normal formwith each row consistingof a tuple of scalars a similar normal form is probably not feasible for messagehistories One reason is that while relational tables containing rows of dierentformats can be factored into separate tables message histories cannot be sofactored without losing the intrinsic total order characteristic of histories Itis probably necessary to allow messages to contain variant types as well asembedded lists or bagsAnother open issue is the language for expressing the selection predicates thetransforms and the summary functions used by expand and collapse We wantto be able to express problems like cheapest current oer for a Saab without elaborate programming There is a tradeo between convenience expressivepower and analyzabilityAnother issue is how to handle access control In this model access controlcan involve more than merely saying this user may subscribe from this spaceSome subscriptions require all messages to be archived forever while others allowmessages to be expired relatively quickly  these dierences have consequencesfor physical resource requirements on broker servers so there should be a wayto allow access control to take these consequences into account ScalabilityThere are many dimensions of scalability In this section we deal with the potentially large fanout of select transform or summarization arcs from a single information space In a large application or in an anonymous environment such ashome shopping where a single information space may be advertised very widelythe number of subscribers may be very large  perhaps in the tens of thousands or more In this environment it becomes necessary to deploy algorithmsthat quickly match events against a large number of potential subscriptions we refer to this problem as the message matching problem Though the numberof subscriptions to an information space may be large say N where N may be or more we expect only a few subscriptions to match any single eventsay K Ecient algorithms exist for solving the message matching problem inmessaging systems based on subjectbased subscription a simple table lookupbased on the subject of the message yields a constant time algorithm which isalso optimal In the more general contentbased subscription systems this approach does not work since dierent subscriptions may refer to dierent eldsof the message schema Naive solutions take ON steps to solve the messagematching problem It is highly desirable to develop algorithms to solve the message matching problem that are sublinear in N This is an active area of ongoingresearch ASSNote that the message matching problem is complementary to the queryproblem in databases In a database query a single query typically a selectis matched against a large amount of data  the challenge here is to developalgorithms that are sublinear in the amount of data in the database In the message matching problem a single piece of data a message needs to be matchedagainst a large number of standing queries subscriptions Since the problemsare complementary neither solution is useful in the other context Note thatthe matching problem was rst studied in the context of active databases Ecient solutions to this problem are thus applicable in MOMs and in databasesHCKWA problem similar to the message matching problem arises when there is alarge fanout of arcs between a single information space and multiple states Byanalyzing the multiple summarization functions we may be able to avoid theneed to make multiple copies of the same state update and to exploit the factthat if one state doesnt change as a result of a message a set of related stateswill also not change Distributing broker networksIn a distributed implementation the above solutions for matching have to bemodied to reect the fact that the message ow graph will typically be implemented over a geographically distributed network of server processes whichwe call message brokers Message brokers must combine the functions of routingand multicasting with the functions of implementing selections transformationsand summarizations Thus it becomes necessary to develop distributed solutionsto these problems  this is an active area of ongoing research BCMConsider two naive solutions to this problem Perform message matching at the publisher and use the result of the matching to route to the destinations With this solution straightforward routingtechniques will not work when there are a large number of clients since apointtopoint routing will not take advantage of common paths b routingbased on destination lists could result in large message headers and c routing based on multicast groups could require a very large number of groupsif there are N subscribers the system may need as many as N multicastgroups Broadcast the message to all message brokers and let each message brokermatch the message against its locally connected subscribers This solutionis likely to waste communication bandwidth in very large networks since ifsubscriptions are suciently selective messages will often be sent to a brokernone of whose attached clients requires the messageApproaches to the problem being studied include  performing partialmatching at each broker forwarding messages either by conventional pointtopoint or by multicast to the subset of neighboring brokers requiring themessage  matching messages to a combination of preallocated multicastgroups  exploiting the relationships between the subscriptions to reduce thecombinatorial possibilities of multicast groupsThe existence of message transformations complicates the situation even further  some transformations can be moved andor replicated on multiple brokers others cannot either because they involve data that cannot be moved ega large database mapping names to social security numbers or because theyinvolve opaque algorithms not visible to the middleware Message ReliabilityThe fault model that is typically implemented in traditional group communication systems  that a failed or slow process is automatically removed from thegroup BT  is inappropriate for MOM applications In MOM the messageow graph is viewed as an abstract reliable entity Subscriptions are persistent and messages may not be lost permuted or duplicated nor must spuriousmessages be generated unless such distortions can be masked as a result of ltering or state equivalence The implementation must preserve the appearancesof persistence even though in the message distribution scenarios shown abovethe distributed system may contain intermittently connected and intermittentlyfaulty hardware components This means that when a faulty subscriber reconnects it must be possible to either deliver all the messages that it has missedor else to compute via analysis of the eects on the state of interest a shorterset of messages which will recreate this state Unlike with group communicationsystems it is not sucient to report to a faulty or disconnected subscriber thatits subscription has been dropped For example the Replenishment Analysisteams must continue to receive inventory updates after a dropped connection isreestablished We need algorithms to provide this appearance of persistence in adistributed network of message brokers We also need algorithms to exploit thecases where state equivalence permits dropping of messages and to exploit theproperties of state equivalence to deliver compressed message sequences after areconnection Message OrderingInformation spaces support the abstraction of a total order on messages Sincesubscribers specify their interest in states derived from message histories themiddleware has the opportunity of relaxing total order deliveries for specicclients while preserving the meaning of the overall message history This is incontrast with the approach taken by group communication systems in whichordering guarantees are driven by low level protocol options eg publisherordering causal ordering etc BCJFor instance if a subscriber is subscribing to the current price of a set ofadvertised items the subscriber may be sensitive to the order of the last twoupdates to the same item since the current price depends upon which updateis rst The subscriber may not be sensitive to the order of earlier updates tothat item or to the order of updates to dierent items This gives the systemthe exibility to weaken the ordering requirement where it is legitimate to do sowhile preserving it in the cases where it matters However it gives rise to openissues of how these situations are detected It also creates the opportunity foroptimistic delivery of outoforder messages as discussed below Optimistic DeliveryEcient message delivery implementations that address faulttolerance and ordering make a distinction between the receipt of a message and its actual deliveryto a client  it is often necessary for the system to delay the delivery of a received message until certain control messages have arrived such as for examplenotications that the data is stable and that no earlier messages are still enroute It is desirable wherever possible to deliver messages optimistically without waiting for this control information In the simplest cases the subscribersstate of interest doesnt depend upon order or isnt aected by extraneous unlogged messages However in more interesting cases the state of interest doesdepend upon order but the state interpretation makes it possible for recoverymessages to retrieve the correct state after an outoforder or unlogged messagehas arrived For example in the home shopping example it may be that an oerto sell for  is followed by an oer to sell for  If the oer for arrives rst it can still be immediately delivered when the oer for  arrives later the recovery action is to deliver it if it is for a dierent item than the oer and to discard it as obsolete if it is for the same itemIt is an open problem to analyze a set of subscriptions to state derived frommessage histories and determine a under which conditions messages can beoptimistically delivered without waiting for control messages and b what recovery messages must be inserted if it is later determined that the state needsto be corrected Topology ChangesEndusers dont care about the topology of the underlying network Ideally ait should be possible to recongure the topology of the underlying network nondisruptively and b it should not require complex planning on the part of anetwork administrator to congure Any approach to the topology reconguration problem must address scenarios in which multiple organizations may ownparts of the communications links and logging disks and these organizationsmust be able to recongure andor control use of their facilities SecurityMOM needs at least three varieties of security  control of who may publishto or subscribe from the information spaces of the virtual message ow graph control of the physical resources  privacy protection of the data that owsbetween publishers and subscribers Any security solution must accept the factthat there is no single application and no single owner of the whole networkThere are open issues about  preventing a user from overloading systemresources by either generating messages too quickly or by requesting states thatmake it impossible to discard any old messages  how to deal with clients tothe same information space from dierent organizations having dierent accessrights and  the tension between the requirement for brokers to do contentbased matching and the requirement for some brokers not to be able to interpretthe content Alternative ApproachesOther technologies including object request brokers ORBs and database management systems DBMSs are being used to glue applications together in thekinds of scenarios presented in this paper GroHsiWfMBN Howevereach of these approaches has its limitations for the purpose of MOM applicationsas described below Remote Method Invocation RMI SystemsORBs eg Gro can be used to glue applications by having one applicationcall methods of objects in another remote application BN The interfacessupported by an application are specied in an interface denition languageIDL which are compiled into stubs for the caller and into language templatesfor the callee RMI systems have several shortcomings that make them unsuitablefor MOM applications Application evolution With this approach applications tend to get tightlyintegrated right from the design stage Changes are dicult if not impossible to make after an application has been deployed Also since remotemethod invocation is a pointtopoint concept it is not possible to interposenew applications between existing information ows without disrupting theexisting applications Disconnected operation RMI systems support a synchronous style of interaction  this makes them unsuitable in environments where clients maydisconnect Database SystemsIn general database systems are optimized for a dierent set of applications thanthe ones that are presented in this paper For example databases are optimizedfor queries over a large amount of saved data as opposed to matching a messageagainst a large number of standing queries or computing a summary state from asequence of messages Also database systems usually support a small number ofviews whereas MOM systems must support a large number of views and must beoptimized for frequent view updates Furthermore the overhead of distributedtransactions in databases is prohibitively large for MOM applicationsThe database community has developed a variety of techniques to use shareddatabases to glue together applications in a distributed environment With thisapproach one application adds data to a shared database and another application retrieves the data from it Shared databases can be used in several congurations for this purpose but all of them have their limitations Pullbased The receiving application may poll the shared database for newincoming data this unnecessarily introduces extra network trac Active Databases The receiving application may be alerted about new datain the database using a trigger mechanism However the trigger mechanismmay not scale over a large number of receivers interested in dierent kindsof updates to the shared database Clientserver architecture In this architecture distributed clients access acentralized database This approach oers limited scalability and does nothave the ability to cross organizational boundaries Changes must rst propagate to the centralized database before being sent to interested viewers Distributed database architecture In this architecture the database is replicated at multiple sites In many scenarios for gluing applications togetherthe replication guarantees provided by distributed databases may be toostrong Federated databases In this architecture KKHsiGL a collection ofindependently designed databases is made to function as a single databaseThis involves name conict resolution schema conversion and the executionof transactions on multiple databases as a single global transaction Althoughthis approach may be appropriate for organizing multiple databases withina single company or for merging two companies together it is unlikely to befeasible to run global serial transactions across multiple organizations andthousands of anonymous subscribers worldwideIn general a database used as a communication channel is too heavyweightas glue between applications This approach has a signicant administrativeoverhead and may not provide the same kind of communication throughputthat a more specialized communication channel could provide Thus althoughdatabases cannot be a total solution especially given heavyweight commit protocols that we often dont need in the message ow graph solutions databasesare still potential clients of MOM systems Group Communication SystemsGroup communication systems eg Edi can be used to glue applicationsby having applications join process groups meant for exchanging particulartypes of messages This technique is commonly used to implement subjectbasedpubsub where a subject or a channel is implemented as a process groupIn fact we view MOM as a natural evolution of the group communication approach However this approach has several shortcomings if used to support thefull spectrum of MOM applications Flexibility The group communication based approach imposes a xed subject structure on all applications  this reduces the exibility of the overallsystem In large systems it may be necessary for dierent applications toselect messages based on dierent elds in a message  a subject structurecannot capture this requirement ScalabilityGroup communication system implementations tend to be tightlycoupled thus it is natural to deploy group communication systems oversmall numbers of computers s on a tightly coupled network eg aLAN Scaling group communication to larger numbers of computers andonto WAN environments is an open area of active research BFH Fault model The fault model that is typically implemented in group communication systems  that a failed process is automatically removed fromthe group  is inappropriate for MOM applications In MOM subscriptionsare persistent when a failed process recovers it needs to be updated with allthe messages that it did not receive Opaque messages In general group communication systems do not interpretthe content of messages This forces them to support qualities of service basedon low level properties of the protocol not on the semantics of messagesMOM systems can get more information from applications and use it toprovide various qualities of service more eectively Workow SystemsWorkow systems eg WfMLut are used for coordinating potentially distributed tasks via a specication of the sequence and control of tasks Whilethese systems are typically used to solve problems at a higherlevel they mayalso be used to glue applications by treating each application as an activitythat communicates with other activities via a workow manager which is thesoftware component that controls the ow of work between activities Howeverthe major shortcomings of this approach when used for integrating applicationsare Workow specications are relatively static in nature  activities and theirinteractions do not change once the ow has been dened Applications requiring integration on the other hand may need to support changes tosubscriptions at a frequent rate Workow managers are centralized in practice This may limit the scalabilityand the throughput of the system Building a distributed Workow systemis an active area of ongoing research PPHC Related Work in Contentbased PublishSubscribeSystemsSeveral projects WIS such as SIENA Car READY GKP Elvin SAand Gryphon httpwwwresearchibmcomgryphon are exploring the use ofcontentbased publishsubscribe systems as the basis for various MOM applications While the motivations for the work in these projects are similar theapproaches they are pursuing are dierent in important respectsFrom a model point of view all of the above systems support rich subscription languages which approach the expressiveness of SQL Some of the systems eg READY also support the use of temporal relationships between messages for expressing compound events As described earlier the contentbasedpublishsubscribe model can be generalized to include transformations mergesand stateful operations in the single framework of message ow graphs  thisapproach is being explored by the Gryphon project None of the above projectshas explored the notion of crossdomain message ows in any detailFrom an implementation point of view none of the above projects has addressed all the research issues mentioned earlier in this paper The rst scalablesolutions for matching and multicasting have appeared recently ASSBCMThe SIENA project has explored issues relating to ecient propagation of subscriptions Questions of ecient matching and multicast message reliabilitymessage ordering and optimistic delivery are currently being explored in theGryphon projectReferencesASS Marcos Aguilera Rob Strom Daniel Sturman Mark Astley and TusharChandra Matching events in a contentbased subscription system InProceedings of the th ACM Symposium on the Principles of DistributedComputing Atlanta GA May BCJ K P Birman Robert Cooper Thomas A Joseph Kenneth P Kane andFrank Bernhard Schmuck ISIS  A Distributed Programming EnvironmentJune BCM Guruduth Banavar Tushar Chandra Bodhi Mukherjee Jay NagarajaraoRob Strom and Daniel Sturman An ecient multicast protocol forcontentbased publishsubscribe systems In Proceedings of the International Conference on Distributed Computing Systems  Austin TXJune BFH Ken Birman Roy Friedman and Mark Hayden The maestro group manager A structuring tool for applications with multiple quality of servicerequirements Technical Report TR Cornell University ComputerScience feb Bir K P Birman The process group approach to reliable distributed computing Communications of the ACM  Dec BKS Guruduth Banavar Marc Kaplan Kelly Shaw Rob Strom Daniel Sturmanand Wei Tao Information ow based event distribution middleware InProceedings of the Middleware Workshop at the International Conferenceon Distributed Computing Systems  Austin TX June BN A D Birrell and B J Nelson Implementing remote procedure callsIn Proceedings of the ACM Symposium on Operating System Principlespage  Bretton Woods NH October  Association for ComputingMachinery Association for Computing MachineryBT K P Birman and Joseph A Thomas Exploiting virtual synchrony indistributed systems In Proceedings of the Eleventh ACM Symposium onOperating Systems Principles pages  November Car Antonio Carzaniga Architectures for an Event Notication Service Scalableto Widearea Networks PhD thesis Politecnico di Milano December Available from httpwwwcscoloradoedu carzanigpapersEdi David Powell Guest Editor Group communication Communications ofthe ACM  April  This is a collection of several papers in theareaGKP R Gruber B Krishnamurthy and E Panagos An architecture of theready event notication system In Proceedings of the Middleware Workshop at the International Conference on Distributed Computing Systems Austin TX June GL P Gupta and E Lin Datajoiner A practical approach to multidatabaseaccess In Parallel and Distributed Information Systems PDIS  pages Los Alamitos Ca USA September  IEEE Computer Society PressGro Object Management Group Corba services Common object service specication Technical report Object Management Group July HCKW Eric N Hanson Moez Chaabouni ChangHo Kim and YuWang WangA predicate matching algorithm for database rule systems In SIGMOD Atlantic City N J pages  May Hsi D Hsiao Federated databases and systems Part I  A tutorial on theirdata sharing VLDB Journal  July KK Magdi N Kamel and Nabil N Kamel The federated database managementsystem an architecture of distributed systems for the s In ProceedingsSecond IEEE Workshop on Future Trends of Distributed Computing Systems pages  Lut R Lutz IBM owmark workow manager  concept and overview InG Chroust and A Benczur editors Connectivity   Workow Management  Challenges Paradigms and Products pages  Linz AustriaOctober  R Oldenbourg Vienna MunichOPSS Brian Oki Manfred Puegl Alex Siegel and Dale Skeen The informationbus  an architecture for extensible distributed systems Operating SystemsReview  Dec PPHC S Paul E Park D Hutches and J Chaar RainMaker Workow executionusing distributed interoperable components Lecture Notes in ComputerScience  SA Bill Segall and David Arnold Elvin has left the building A publishsubscribe notication service with quenching In ProceedingsAAUG September SV D C Schmidt and S Vinoski The OMG Events Service C Report February TGGL I L Traiger J N Gray C A Galtieri and B G Lindsay Transactions and consistency in distributed database management systems ACMTransactions on Database Systems pages  Sept WfM Workow management coalition httpwwwaiaiedacukWfMCWIS Workshop on internet scale event notication SeehttpwwwicsucieduIRUSwisenwisen for details
