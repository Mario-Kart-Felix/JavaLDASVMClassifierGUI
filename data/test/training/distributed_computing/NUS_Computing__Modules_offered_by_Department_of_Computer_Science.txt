NUS Computing - Modules offered by Department of Computer Science NUS Computing Current UG MySoC Email Student Staff Alumni Sidebar × Main Menu About Programmes Student Life Research Entrepreneurship Industry SoC Course Catalogue Inter-Department Modules Freshman Seminar Modules Modules for Cross-Faculty Students Modules offered by Department of Computer Science Modules offered by Department of Information Systems Quicklinks Current UG MySoC Email Student Staff Alumni About Departments Industry Advisory Committee Faculty & Staff Directory Expert Directory News Corporate Relations Giving Careers Contact Us Programmes Undergraduate Computer Science Information Systems Computer Engineering Business Analytics Information Security Special Programmes Resources for Current Students Graduate PhD in Computer Science PhD in Information Systems Master's in Computer Science Master's in Information Systems Master's in Infocomm Security Master's in Business Analytics Master's in IT Leadership Student Life Internships Student Leadership Programme Financial Support/Assistance Student Wellness and Wellbeing Professional Workshop Student Clubs/Interest Groups Contact Us Research Research Centres Research Areas Entrepreneurship Leadership The Furnace Alumni Companies Funding Opportunities Awards Innovation Research Centres News & Events Contact Us Industry Corporate Relations Contact Us Search ... Home Current Cohorts SoC Course Catalogue Modules offered by Department of Computer Science Modules offered by Department of Computer Science [ Click here to go : CS FOCUS AREA ]   Level 1 Modules CS1010 Programming Methodology CS1010E Programming Methodology CS1010FC/X Programming Methodology   CS1010J Programming Methodology CS1010S Programming Methodology CS1101S Programming Methodology CS1020 Data Structures and Algorithms I CS1020E Data Structures and Algorithms I CS1231 Discrete Structures CS1280 Java to C++ CS1281 C++ to Java   Level 2 Modules CS2010 Data Structures and Algorithms II CS2020 Data Structures and Algorithms Accelerated CS2100 Computer Organisation CS2101 Effective Communication for Computing Professionals (hosted by CELC) CS2102 Database Systems CS2103 Software Engineering CS2103T Software Engineering CS2104 Programming Language Concepts CS2105 Introduction to Computer Networks CS2106 Introduction to Operating Systems CS2107 Introduction to Information Security CS2108 Introduction to Media Computing CS2220 Introduction to Computational Biology CS2309 CS Research Methodology   Level 3 Modules CS3103 Computer Networks Practice CS3103L Computer Networks Laboratory CS3201 Software Engineering Project I CS3202 Software Engineering Project II CS3205 Information Security Capstone Project   CS3210 Parallel Computing CS3211 Parallel and Concurrent Programming CS3212 Programming Languages CS3213 Software Systems Design CS3216 Software Product Engineering for Digital Markets CS3217 Software Engineering on Modern Application Platforms CS3218 Multimodal Processing in Mobile Platforms CS3219 Software Engineering Principles and Patterns CS3220 Computer Architecture CS3221 Operating Systems Design and Pragmatics CS3223 Database Systems Implementation CS3225 Combinatorial Methods in Bioinformatics CS3226 Web Programming and Applications   CS3230 Design and Analysis of Algorithms CS3231 Theory of Computation (upgrade to CS4232) CS3233 Competitive Programming CS3234 Logic and Formal Systems CS3235 Computer Security CS3236 Introduction to Information Theory CS3240 Interaction Design CS3241 Computer Graphics CS3242 3D Modeling and Animation CS3243 Introduction to Artificial Intelligence CS3244 Machine Learning CS3245 Information Retrieval CS3246 Multimedia Content Analysis and Search CS3247 Game Development   CS3249 User Interface Development   CS3271 Software Engineering for Reactive Systems CS3281 Thematic Systems Project I CS3282 Thematic Systems Project II CS3283 Media Technology Project I CS3284 Media Technology Project II CS3343 Digital Media Production CS3882 Breakthrough Ideas for Digital Markets  (no longer offered)     Level 4 Modules CS4211 Formal Methods for Software Engineering CS4212 Compiler Design CS4214 Formal Semantics CS4215 Programming Language Implementation CS4216 Constraint Logic Programming CS4217 Software Development Technologies CS4218 Software Testing   CS4220 Knowledge Discovery Methods in Bioinformatics CS4221 Database Applications Design and Tuning CS4222 Wireless Networking CS4223 Multi-core Architecture CS4224 Distributed Databases CS4225 Massive Data Processing Techniques in Data Science CS4226 Internet Architecture   CS4231 Parallel and Distributed Algorithms CS4232 Theory of Computation   CS4234 Optimisation Algorithms CS4235 Computational Geometry CS4236 Cryptography Theory and Practice CS4237 Systems Modelling and Simulation CS4238 Computer Security Practice CS4239 Software Security   CS4240 Virtual Reality and 3-D Interaction CS4241 Multimedia Information Retrieval CS4242 Social Media Computing   CS4243 Computer Vision and Pattern Recognition CS4244 Knowledge-Based Systems CS4245 Multimedia E-Learning Environments (no longer offered) CS4246 AI Planning and Decision Making CS4247 Graphics Rendering Techniques CS4248 Natural Language Processing CS4249 Phenomena and Theories of Human-Computer Interaction CS4271 Critical Systems and Their Verification   CS4273 Embedded Software Design Project (no longer offered) CS4274 Mobile and Multimedia Networking (no longer offered) CS4275 Programming Real-time Systems CS4340 Digital Special Effects CS4344 Networked and Mobile Gaming CS4345 General-Purpose Computation on GPU CS4346 Game Console Programming (no longer offered) CS4347 Sound and Music Computing CS4350 Game Development Project CS4880 Digital Entrepreneurship  (no longer offered) Wild-Card Undergraduate Modules CSxxxxR  (e.g. CS3230R)            Level 5 Modules BT5110 Data Management and Warehousing   CS5214 Design of Optimising Compilers CS5215 Constraint Processing CS5218 Principles of Programme Analysis CS5219 Automated Software Validation CS5220 Databases and the Web (no longer offered) CS5222 Advanced Computer Architecture CS5223 Distributed Systems CS5224 Cloud Computing CS5225 Parallel & Distributed Database Systems (no longer offered)   CS5226 Database Tuning CS5228 Knowledge Discovery and Data Mining CS5229 Advanced Computer Networks CS5230 Computational Complexity CS5231 Systems Security CS5232 Formal Specification & Design Techniques CS5233 Simulation and Modelling Techniques CS5234 Combinatorial and Graph Algorithms CS5235 Approximation Algorithms (no longer offered) CS5236 Advanced Automata Theory CS5237 Computational Geometry and Applications   CS5239 Computer System Performance Analysis CS5240 Theoretical Foundation of Multimedia CS5241 Speech Processing CS5242 Advanced Neural Networks CS5243 3D Game Programming Technology (no longer offered) CS5244 Digital Libraries (no longer offered, see CS6242) CS5246 Text Processing on the Web CS5247 Motion Planning and Applications (no longer offered, see CS6244) CS5248 Systems Support for Continuous Media CS5249 Audio in Multimedia Systems CS5250 Advanced Operating Systems   CS5270 Verification of Real-Time Systems (no longer offered) CS5271 Performance Analysis of Embedded Systems CS5272 Embedded Software Design CS5321 Network Security CS5322 Database Security CS5330 Randomized Algorithms CS5331 Web Security CS5339 Theory and Algorithms for Machine Learning CS5340 Uncertainty Modelling in AI   CS5341 Computational Photography (no longer offered, see CS6243) CS5342 Multimedia Computing and Applications CS5343 Advanced Computer Animation CS5344 Big-Data Analytics Technology CS5345 Social and Digital Media Analytics     Level 6 Modules CS6101 Exploration of Computer Science Research   CS6201 Software Reuse (no longer offered) CS6202 Advanced Topics in Programming Languages CS6203 Advanced Topics in Database Systems CS6204 Advanced Topics in Networking CS6205 Advanced Modelling & Simulation CS6206 Advanced Topics in HCI CS6207 Advanced Natural Language Processing CS6208 Advanced Topics in AI CS6209 Topics in Cryptography (no longer offered) CS6210 The Art of Computer Science Research CS6211 Analytical Performance Modelling for Computer Systems CS6212 Topics in Media CS6213 Topics in Distributed Computing CS6220 Advanced Topics in Data Mining CS6221 Modeling and Analysis Techniques in Systems Biology (no longer offered) CS6222 Special Topics in Computational Biology CS6230 Topics in Information Security CS6231 Topics in System Security CS6234 Advanced Algorithms   CS6240 Multimedia Analysis CS6241 Advanced Topics in Computer Graphics CS6242 Digital Libraries CS6243 Computational Photography CS6244 Robot Motion Planning & Control   CS6270 Virtual Machines CS6280 Topics in Computer Science I CS6281 Topics in Computer Science II CS6282 Topics in Computer Science III CS6283 Topics in Computer Science IV CS6284 Topics in Computer Science IV   CS6285 Topics in Computer Science VI   CS6880 Advanced Topics in Software Engineering   Modules Descriptions   BT5110 Data Management and Warehousing Modular Credits: 4 Workload: 2-1-1-3-3 Prerequisite(s): Students must be in Master of Science in Business Analytics programme. Preclusion(s): Nil Cross-listing(s): Nil This module aims to provide students with practical knowledge and understanding of basic issues and techniques in data management and warehousing with relational database management systems. The module covers data management concepts, conceptual (entity relationship model) and logical design (relational model) and database management (data definition, data manipulation, SQL) with relational database management systems. The module covers data warehousing concepts, data warehousing design and data warehousing with relational database management systems and tools. CS1010 Programming Methodology Modular Credits: 4 Workload: 2-1-1-3-3 Prerequisite(s): Nil Preclusion(s): CG1101, CS1010E, CS1010FC, CS1010J, CS1010S, CS1101, CS1101C, CS1101S, . Engineering and Science students who require this module for their majors/minors are not allowed to read it as ULR-Breadth. Cross-listing(s): Nil This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing. It is also the first part of a three-part series on introductory programming and problem solving by computing, which also includes CS1020 and CS2010. Topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion. This module is appropriate for SoC students. CS1010FC/X Programming Methodology Modular Credits: 4 Workload: 2-1-1-3-3 Prerequisite(s): Nil Preclusion(s): CS1010 and its equivalents Cross-listing(s): Nil This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing and is equivalent to CS1010, CS1010S and CS1010E Programming Methodology. The module will be taught using the Python programming language and topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion. CS1010E Programming Methodology Modular Credits: 4 Workload: 2-1-1-3-3 Prerequisite(s): Nil Preclusion(s): CS1010 and its equivalents Cross-listing(s): Nil This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing. It is also the first part of a three-part series on introductory programming and problem solving by computing, which also includes CS1020E and CS2010. Topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion.This module is appropriate for FoE students. CS1010J Programming Methodology Modular Credits: 4 Workload: 2-1-1-3-3 Prerequisite(s): Nil Preclusion(s): CS1010 and its equivalents Cross-listing(s): Nil This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing. It is also the first part of a three-part series on introductory programming and problem solving by computing, which also includes CS1020E and CS2010. Topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion. This module is appropriate for B.Comp.(IS) and B.Comp.(EC) students. CS1010S Programming Methodology Modular Credits: 4 Workload: 2-1-1-3-3 Prerequisite(s): Nil Preclusion(s): CS1010 or its equivalent Cross-listing(s): Nil This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing and is equivalent to CS1010 and CS1010E Programming Methodology. Topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion. This module is appropriate for FoS students. CS1101S Programming Methodology Modular Credits: 5 Workload: 3-2-1-3-3 Prerequisite(s): No programming or computer science experience is required. GCE ‘A’ Level Mathematics or H2 Mathematics or MA1301/FC/X Preclusion(s): CS1010, CS1010E, CS1010FC/X, CS1101, CS1101C, Engineering students Cross-listing(s): Nil This module introduces the concepts of programming from a functional perspective, and is perceived as the first and foremost introductory course to computing. It is the first of a two-part series on introductory programming, which also includes CS1102S. This series is characterised by the use of a minimalist syntax of functional languages that enables an emphasis on fundamental programming issues. Topics covered include: overview of programming languages and compilation process, procedural abstraction, recursion, data abstraction, algorithmic strategies, higher-order functions, state mutation, evaluation strategies, debugging and testing. Module activities include lectures, recitation, tutorial and laboratory exercises. CS1020 Data Structures and Algorithms I Modular Credits 4 Workload: 2-1-1-3-3 Prerequisite(s): CS1010 or its equivalents Preclusion(s): CG1102, CG1103, CS1020E, CS1102, CS1102C, CS1102S, CS2020 Cross-listing(s): Nil This module is the second part of a three-part series on introductory programming and problem solving by computing. It continues the introduction that begins in CS1010, and emphasises object-oriented programming with application to simple data structures. Topics covered include object-oriented problem modeling with concepts of objects, classes and methods, object-oriented problem formulation and problem solving, data structure implementation strageties, abstraction and encapsulation of data structures, object-oriented programming constructs, use of APIs and class libraries, exception handling, lists, linked lists, stacks, queues, hash tables and their algorithmic design, various forms of sorting and searching methods, recursive algorithms, and Big-O notation.This module is appropriate for SoC and FoS students. CS1020E Data Structures and Algorithms I Modular Credits: 4 Workload: 2-1-1-3-3 Prerequisite(s): CS1010 or its equivalents Preclusion(s): CG1102, CG1103, CS1020, CS1102, CS1102C, CS1102S, CS2020 Cross-listing(s): Nil This module is the second part of a three-part series on introductory programming and problem solving by computing. It continues the introduction that begins in CS1010E, and emphasises object-oriented programming with application to simple data structures. Topics covered include object-oriented problem modeling with concepts of objects, classes and methods, object-oriented problem formulation and problem solving, data structure implementation strategies, abstraction and encapsulation of data structures, object-oriented programming constructs, use of APIs and class libraries, exception handling, lists, linked lists, stacks, queues, hash tables and their algorithmic design, various forms of sorting and searching methods, recursive algorithms, and Big-O notation.This module is appropriate for FoE students. CS1102 Data Structures and Algorithms ( defunct ) Modular Credits: 5 Workload: 3-1-1-3-4 Prerequisite(s): CS1101 Preclusion(s): CS1102C, CS1102S. EEE & CPE students are not allowed to take this module. Cross-listing(s): Nil This module is the second part of a two-part series on introductory programming from an object-oriented perspective. It continues the introduction to object-oriented programming begun in CS1101, with an emphasis on data structures and algorithms. Topics covered include: abstraction and encapsulation for data structures, basic data structures such as lists, stacks, queues, and their algorithmic designs, various forms of sorting methods, trees, binary search tree, hash tables, order property, heap and priority queues, graphs representation and basic graph search algorithms (breadth-first search, depth-first search), and basic algorithmic analysis. CS1102C Data Structures and Algorithms ( defunct ) Modular Credits: 5 Workload: 3-1-1-3-4 Prerequisite(s): CS1101C Preclusion(s): CS1102, CS1102S Cross-listing(s): Nil This module is the second part of a two-part series on introductory programming from an imperative paradigm perspective. It continues the introduction to programming begun in CS1101C, with an emphasis on data structures and algorithms. Topics covered include: abstraction and encapsulation for data structures, basic data structures such as lists, stacks, queues, and their algorithmic designs, various forms of sorting methods, trees, binary search tree, hash tables, order property, heap and priority queues, graphs representation and basic graph search algorithms (breadth-first search, depth-first search), and basic algorithmic analysis. CS1231 Discrete Structures Modular Credits: 4 Workload: 3-1-0-3-3 Prerequisite(s): GCE ‘A’ Level Mathematics or H2 Mathematics or MA1301 or MA1301FC Preclusion(s): MA1100 Cross-listing(s): Nil This module introduces mathematical tools required in the study of computer science. Topics include: (i) Logic and proof techniques: propositions, conditionals, quantifications. (ii) Relations and Functions: Equivalence relations and partitions. Partially ordered sets. Well-Ordering Principle. Function equality. Boolean/identity/inverse functions. Bijection. (iii) Mathematical formulation of data models (linear model, trees and graphs). (iv) Counting and Combinatoric: Pigeonhole Principle. Inclusion-Exclusion Principle. Number of relations on a set, number of injections from one finite set to another, Diagonalisation proof: An infinite countable set has an uncountable power set; Algorithmic proof: An infinite set has a countably infinite subset. Subsets of countable sets are countable. CS1280 Java to C++ Modular Credits: 2 Workload: 2-0-1-0-3 Prerequisite(s): CS1020 or CS2020 Preclusion(s): Nil Cross-listing(s): Nil This module aims to train students who have learned data structures and algorithms in Java to programme in C++. Basic constructs common in the two languages will not be covered (e.g. if-else, loops etc). Topics covered include: Objects and classes in C++, fundamental data structures: arrays, strings, vectors, I/O, exception handling, sub-classing, inheritance, template function, template class, use of STL, and defining operator. Assessment of students in this module will be on either Satisfactory/Unsatisfactory (S/U) or Com-pleted Satisfactory/Completed Unsatisfactory (CS/CU) basis depending on students’ matriculation year. Students matriculated in AY2007/08 and after will be assessed on CS/CU basis. The duration of the course is six weeks, opening at beginning of semesters. CS1281 C++ to Java Modular Credits: 2 Workload: 2-0-1-0-3 Prerequisite(s): CS1020E Preclusion(s): Nil Cross-listing(s): Nil The module aims to train students who have learned data structures and algorithms in C++ to programme in Java. Basic constructs common in the two languages will not be covered (e.g. if-else, loops etc). Topics covered include: Objects and classes in Java, fundamental data structures: arrays, strings, I/O, exception handling, use of APIs and class libraries, sub-classing, inheritance, abstract and interface class, new design concept using generic Java approach. Assessment of students in this module will be on either Satisfactory/Unsatisfactory (S/U) or Com-pleted Satisfactory/Completed Unsatisfactory (CS/CU) basis depending on students’ matriculation year. Students matriculated in AY2007/08 and after will be assessed on CS/CU basis. The duration of the course is six weeks, opening at beginning of semesters. CS2010 Data Structures and Algorithms II Modular Credits: 4 Workload: 2-1-1-3-3 Prerequisite(s): CS1020 or CS1020E or CG1103 Preclusion(s): CG1102, CS1102, CS1102C, CS1102S, CS2020 Cross-listing(s): Nil This module is the third part of a three-part series on introductory programming and problem solving by computing. It continues the introduction in CS1010 and CS1020, and emphasises object-oriented programming with application to complex data structures. Topics covered include trees, binary search trees, order property, prefix/infix/postfix expressions, heaps, priority queues, graphs and their algorithmic design, recursive algorithms, problem formulation and problem solving with applications of complex data structures, data structure design principles and implementation strategies, and algorithm analysis. Advanced data structures such as B-trees and AVL trees are also covered. CS2020 Data Structures and Algorithms Accelerated Modular Credits: 6 Workload: 4-2-2-4-3 Prerequisite(s): Obtain a grade of at least A− in either CS1010 or its equivalent Preclusion(s): CG1102, CG1103, CS1020, CS1020E, CS2010, CS1102, CS1102C, CS1102S Cross-listing(s): Nil This module is an accelerated version that combines CS1020 and CS2010. It continues the introduction in CS1010, and emphasises object-oriented programming with application to data structures. Topics covered include object-oriented problem modeling with concepts of objects, classes and methods, object-oriented problem formulation and problem solving, data structure design principles and implementation strageties, abstraction and encapsulation of data structures, object-oriented programming constructs, use of APIs and class libraries, exception handling, lists, linked lists, stacks, queues, hash tables, trees, graphs, and their algorithmic design, various forms of sorting and searching methods, recursive algorithms, and algorithm analysis. CS2100 Computer Organisation Modular Credits: 4 Workload: 3-1-1-3-2 Prerequisite(s): CS1010 or its equivalent Preclusion(s): CS1104 and students from the Department of ECE. Cross-listing(s): Nil The objective of this module is to familiarise students with the fundamentals of computing devices. Through this module students will understand the basics of data representation, and how the various parts of a computer work, separately and with each other. This allows students to understand the issues in computing devices, and how these issues affect the implementation of solutions. Topics covered inc
