1Software Agents An OverviewHyacinth S. NwanaIntelligent Systems ResearchAdvanced Applications  Technology DepartmentBT Laboratories, Martlesham HeathIpswich, Suffolk, IP5 7RE, U.K.email hyacinthinfo.bt.co.ukTel 44 1 473 605457fax 44 1 473 642459Knowledge Engineering Review, Vol. 11, No 3, pp. 205244, OctoberNovember 1996. Cambridge University Press, 1996AbstractAgent software is a rapidly developing area of research. However, the overuse of the wordagent has tended to mask the fact that, in reality, there is a truly heterogeneous body ofresearch being carried out under this banner. This overview paper presents a typology ofagents. Next, it places agents in context, defines them and then goes on, inter alia, tooverview critically the rationales, hypotheses, goals, challenges and stateoftheartdemonstrators of the various agent types in our typology. Hence, it attempts to make explicitmuch of what is usually implicit  in the agents literature. It also proceeds to overview someother general issues which pertain to all the types of agents in the typology. This paperlargely reviews software agents, and it also contains some strong opinions that are notnecessarily widely accepted by the agent community.21 IntroductionThe main goal of this paper is to overview the rapidly evolving area of software agents. Theoveruse of the word agent has tended to mask the fact that, in reality, there is a trulyheterogeneous body of research being carried out under this banner. This paper places agentsin context, defines them and then goes on, inter alia, to overview critically the rationales,hypotheses, goals, challenges and stateoftheart demonstratorsprototypes of the variousagent types currently under investigation. It also proceeds to overview some other generalissues which pertain to all the classes of agents identified. Finally, it speculates as to thefuture of the agents research in the short, medium and long terms. This paper largely reviewssoftware agents. Since we are overviewing a broad range of agent types in this paper, we donot provide a definition of agenthood at this juncture. We defer such issues until Section 4where we present our typology of agents.The breakdown of the paper is as follows. Section 2 notes the situation of smart agentsresearch in the broad field of Distributed Artificial Intelligence DAI and provides a briefhistory. Section 3 identifies the scope of applicability of agents research and notes that thereis a diverse range of interested parties. Before the core critical overview of the agent typologyof Section 5, Section 4 provides our view of what smart agents are it also identifies thedifferent types of agents which fall under the agents banner and warns that truly smart orintelligent agents do not yet exist They are still very much the aspiration of agentresearchers. Section 6 overviews some more general issues on agents and and speculatesbriefly towards the future of agents in the short, medium and long terms. Section 7 concludesthe paper.2 Software Agents History and the Context of this PaperSoftware agents have evolved from multiagent systems MAS, which in turn form one ofthree broad areas which fall under DAI, the other two being Distributed Problem SolvingDPS and Parallel AI PAI. Hence, as with multiagent systems, they inherit many of DAIsmotivations, goals and potential benefits. For example, thanks to distributed computing,software agents inherit DAIs potential benefits including modularity, speed due toparallelism and reliability due to redundancy. It also inherits those due to AI such asoperation at the knowledge level, easier maintenance, reusability and platform independenceHuhns  Singh, 1994.The concept of an agent, in the context of this paper, can be traced back to the early days ofresearch into DAI in the 1970s  indeed, to Carl Hewitts concurrent Actor model Hewitt,1977. In this model, Hewitt proposed the concept of a selfcontained, interactive andconcurrentlyexecuting object which he termed actor. This object had some encapsulatedinternal state and could respond to messages from other similar objects an actoris a computational agent which has a mail address and a behaviour. Actors communicate bymessagepassing and carry out their actions concurrently Hewitt, 1977, p. 131.Broadly, for the purposes of this paper, we split the research on agents into two main strandsthe first spanning the period 1977 to the current day, and the second from 1990 to the currentday too. Strand 1 work on smart agents, which begun in the late 1970s and all through the1980s to the current day, concentrated mainly on deliberativetype agents with symbolicinternal models later in this paper, we type these as collaborative agents. A deliberative agentis3one that possesses an explicitly represented, symbolic model of the world, and in whichdecisions for example about what actions to perform are made via symbolic reasoningWooldridge, 1995, p. 42.Initially, strand 1 work concentrated on macro issues such as the interaction andcommunication between agents, the decomposition and distribution of tasks, coordination andcooperation, conflict resolution via negotiation, etc. Their goal was to specify, analyse, designand integrate systems comprising of multiple collaborative agents. These resulted in classicsystems and work such as the actor model Hewitt, 1977, MACE Gasser et al., 1987,DVMT Lesser  Corkill, 1981, MICE Durfee  Montgomery, 1989, MCS Doran et al.,1990, the contract network coordination approach Smith, 1980 Davis  Smith, 1983,MASDAI planning and game theories Rosenschein, 1985 Zlotkin  Rosenschein, 1989Rosenschein  Zlotkin, 1994. These macro aspects of agents as Gasser 1991 terms them,emphasises the society of agents over individual agents, while micro issues relate specificallyto the latter. In any case, such issues are well summarised in Chaibdraa et al. 1992, Bond Gasser 1988 and Gasser  Huhns 1989. More recent work under this strand includeTMS Decker  Lesser, 1993 Decker, 1995 DRESUN Carver et al., 1991 Carver Lesser, 1995, VDT Levitt et al., 1994, ARCHON Wittig, 1992 Jennings et al., 1995Note that game theoretic work should arguably not be classed as a macro approach it may,indeed, lie more towards the micro end of the spectrum.In addition to the macro issues, strand 1 work has also been characterised by research anddevelopment into theoretical, architectural and language issues. In fact, such works evolvenaturally, though not exclusively, from the investigation of the macro issues. This is wellsummarised in Wooldridge  Jennings 1995a, and in the edited collections of papersWooldridge  Jennings 1995b and Wooldridge et al. 1996.However, since 1990 or thereabouts, there has evidently been another distinct strand to theresearch and development work on software agents  the range of agent types beinginvestigated is now much broader.  Thus, this paper is complementary to Wooldridge Jennings 1995a by placing emphasis on this strand although, naturally, there is someoverlap, i.e. it overviews the broadening typology of agents being investigated by agentresearchers. Some cynics may argue that this strand arises because everybody is now callingeverything an agent, thereby resulting, inevitably, in such broadness. We sympathise with thisviewpoint indeed, it is a key motivation for this paper  to overview the extensive work thatgoes under the agent banner. Essentially, our point is that in addition to investigating macroissues and others such as theories, architectures, languages, there has also been anunmistakable trend towards the investigation of a broader range of agent types or classes. Thecontext of this paper is summarised in Table 1 below.Strand Emphasis Some Major referencesStrand 1 Macro issues Bond  Gasser 1988Gasser  Huhns 1989Chaibdraa et al. 1992Gasser et al. 19954Theories, architectures languagesWooldridge  Jennings1995a, 1995bWooldridge et al. 1996Strand 2 Diversification in the types ofagents being investigatedThis paper covers thisTable 1  Brief History of Software Agents and the Context of this Paper3 Who are Investigating Software Agents for What and WhyWe eschew answering this question in a futuristic sense in favour of providing a flavour ofthe scope of the research and development underway in universities and industrialorganisations. The range of firms and universities actively pursuing agent technology is quitebroad and the list is ever growing. It includes small nonhousehold names e.g. Icon, Edifyand Verity, mediumsize organisations e.g. Carnegie Mellon University CMU, GeneralMagic, Massachusetts Institute of Technology MIT, the University of London and the realbig multinationals e.g. Alcatel, Apple, ATT, BT, DaimlerBenz, DEC, HP, IBM, Lotus,Microsoft, Oracle, Sharp. Clearly, these companies are by no means completelyhomogeneous, particularly if others such as Reuters and Dow Jones are appended to this list.The scope of the applications being investigated andor developed is arguably moreimpressive it really does range from the mundane strictly speaking, not agent applicationsto the moderately smart. Lotus, for example, will be providing a scripting language in theirforthcoming version of Notes which would allow users to write their own individual scripts inorder to manage their emails, calendars, and set up meetings, etc. This is based on the viewthat most people do not really need smart agents. Towards the smart end of the spectrum arethe likes of Sycaras 1995 visitor hosting system at CMU. In this system, taskspecificand informationspecific agents cooperate in order to create and manage a visitorsschedule to CMU. To achieve this, first, the agents access other online information resourcesin order to determine the visitors areas of interest, name and organisation and resolve theinevitable inconsistencies and ambiguities. More information is later garnered including thevisitors status in her organisation and projects she is working on. Second, using theinformation gathered on the visitor, they retrieve information e.g. rank, telephone numberand email address from personnel databases in order to determine appropriate attendees i.e.faculty. Third, the visitor hosting agent selects an initial list of faculty to be contacted,composes messages which it dispatches to the calendar agents of these faculties, askingwhether they are willing to meet this visitor and at what time. If the faculty does not have acalendar agent, an email is composed and despatched. Fourth, the responses are collated.Fifth, the visitor hosting agent creates the schedule for the visitor which involves bookingrooms for the various appointments with faculty members. Naturally, the system interactswith the human organiser and seeks her confirmation, refutations, suggestions and advice.Most would agree that this demonstrator is pretty smart, but its smartness derives from thefact that the value gained from individual standalone agents coordinating their actions byworking in cooperation, is greater than that gained from any individual agent. This is whereagents really come into their element.More examples of applications are described later but application domains in which agentsolutions are being applied to or investigated include workflow management, networkmanagement, airtraffic control, business process reengineering, data mining, information5retrievalmanagement, electronic commerce, education, personal digital assistants PDAs, email, digital libraries, command and control, smart databases, schedulingdiary management,etc. Indeed, as Guilfoyle 1995 notesin 10 years time most new IT development will be affected, and many consumer productswill contain embedded agentbased systems.The potential of agent technology has been much hailed, e.g. a 1994 report of Ovums, a UKbased market research company, is titled Intelligent agents the new revolution in softwareOvum, 1994. The same firm has apparently predicted that the market sector totals for agentsoftware and products for USA and Europe will be worth at least 3.9 billion by the year2000 in contrast to an estimated 1995 figure of 476 million computed from figures quotedin Guilfoyle, 1995. Such predictions are perhaps overly optimistic.Moreover, as King 1995 notes telecommunications companies like BT and ATT areworking towards incorporating smart agents into their vast networks entertainment, e.g.television, and retail firms would like to exploit agents to capture our program viewing andbuying patterns respectively computer firms are building the software and hardware toolsand interfaces which would harbour numerous agents Reinhardt 1994 reports that IBMplans or may have already done to launch a system, the IBM Communications SystemsICS, which would use agents to deliver messages to mobile users in the form they want it,be it fax, speech or text, depending on the equipment the user is carrying at the time, e.g. aPDA, a portable PC or a mobile phone. At BT Laboratories, we have also carried out someagentrelated research on a similar idea where the message could be routed to the nearestlocal device, which may or may not belong to the intended recipient of the message. In thiscase, the recipients agent negotiates with other agents for permission to use their facilities,and takes into consideration issues such as costs and bandwidth in such negotiations Titmusset al., 1996. At MIT, Pattie Maes group is investigating agents that can match buyers tosellers or which can build coalitions of people with similar interests. They are also drawingfrom biological evolution theory to implement demonstrators in which some user onlypossesses the fittest agents agents would reproduce and only the fittest of them willsurvive to serve their masters the weaker ones would be purged.It is important to note that most of these are still demonstrators only converting them intoreal usable applications would provide even greater challenges, some of which have beenanticipated but, currently, many are unforeseen. The essential message of this section is thatagents are here to stay, not least because of their diversity, their wide range of applicabilityand the broad spectrum of companies investing in them. As we move further and further intothe information age, any informationbased organisation which does not invest in agenttechnology may be committing commercial harakiri.4 What is an agentWe have as much chance of agreeing on a consensus definition for the word agent as AIresearchers have of arriving at one for artificial intelligence itself  nil Recent postings tothe software agents mailing list agentssunlabs.eng.Sun.COM prove this. Indeed, in acouple of these postings, some propounded the introduction of a financial andor legal aspectto the definition of agents, much to the derision of others. There are at least two reasons whyit is so difficult to define precisely what agents are. Firstly, agent researchers do not ownthis term in the same way as fuzzy logiciansAI researchers, for example, own the term fuzzylogic  it is one that is used widely in everyday parlance as in travel agents, estate agents, etc.6Secondly, even within the software fraternity, the word agent is really an umbrella term fora heterogeneous body of research and development. The response of some agent researchersto this lack of definition has been to invent yet some more synonyms, and it is arguable ifthese solve anything or just further add to the confusion. So we now have synonymsincluding knowbots i.e. knowledgebased robots, softbots software robot, taskbots taskbased robots, userbots, robots, personal agents, autonomous agents and personal assistants.To be fair, there are some good reasons for having such synonyms. Firstly, agents come inmany physical guises for example, those that inhabit the physical world, some factory say,are called robots those that inhabit vast computer networks are sometimes referred to assoftbots those that perform specific tasks are sometimes called taskbots and autonomousagents refer typically to mobile agents or robots which operate in dynamic and uncertainenvironments. Secondly, agents can play many roles, hence personal assistants or knowbots,which have expert knowledge in some specific domain. Furthermore, due to the multiplicityof roles that agents can play, there is now a plethora of adjectives which precede the wordagent, as in the following drawn only from Kings 1995 paper search agents, reportagents, presentation agents, navigation agents, roleplaying agents, management agents,search and retrieval agents, domainspecific agents, development agents, analysis and designagents, testing agents, packaging agents and help agents. Kings paper is futuristic andprovides a rolespecific classification of agents, and so such rampant metaphorical use of theword is fine. But there is also another view that it gives currency to others to refer to justabout anything as an agent. For example, he considers print monitors for open printing, faxredial, and others p. 18 as agents, albeit simple ones. As Wayner  Joch 1995 write,somewhat facetiously,the metaphor has become so pervasive that were waiting for some enterprising company toadvertise its computer switches as empowerment agents p. 95.We tend to use the word slightly more carefully and selectively as we explain later.When we really have to, we define an agent as referring to a component of software andorhardware which is capable of acting exactingly in order to accomplish tasks on behalf of itsuser. Given a choice, we would rather say it is an umbrella term, metaterm or class, whichcovers a range of other more specific agent types, and then go on to list and define what theseother agent types are. This way, we reduce the chances of getting into the usual prolongedphilosophical and sterile arguments which usually proceed the former definition, when anyold software is conceivably recastable as agentbased software.4.1 A Typology of AgentsThis section attempts to place existing agents into different agent classes, i.e. its goal is toinvestigate a typology of agents. A typology refers to the study of types of entities. There areseveral dimensions to classify existing software agents.Firstly, agents may be classified by their mobility, i.e. by their ability to move around somenetwork. This yields the classes of static or mobile agents.Secondly, they may be classed as either deliberative or reactive. Deliberative agents derivefrom the deliberative thinking paradigm the agents possess an internal symbolic, reasoningmodel and they engage in planning and negotiation in order to achieve coordination withother agents. Work on reactive agents originate from research carried out by Brooks 1986and Agre  Chapman 1987. These agents on the contrary do not have any internal,symbolic models of their environment, and they act using a stimulusresponse type of7behaviour by responding to the present state of the environment in which they are embeddedFerber, 1994. Indeed, Brooks has argued that intelligent behaviour can be realised withoutthe sort of explicit, symbolic representations of traditional AI Brooks, 1991b.Thirdly, agents may be classified along several ideal and primary attributes which agentsshould exhibit. At BT Labs, we have identified a minimal list of three autonomy, learningand cooperation. We appreciate that any such list is contentious, but it is no more or no lessso than any other proposal. Hence, we are not claiming that this is a necessary or sufficientset. Autonomy refers to the principle that agents can operate on their own without the need forhuman guidance, even though this would sometimes be invaluable. Hence agents haveindividual internal states and goals, and they act in such a manner as to meet its goals onbehalf of its user. A key element of their autonomy is their proactiveness, i.e. their ability totake the initiative rather than acting simply in response to their environment Wooldridge Jennings, 1995a. Cooperation with other agents is paramount it is the raison dtre forhaving multiple agents in the first place in contrast to having just one. In order to cooperate,agents need to possess a social ability, i.e. the ability to interact with other agents andpossibly humans via some communication language Wooldridge  Jennings, 1995a.Having said this, it is possible for agents to coordinate their actions without cooperationNwana et al., 1996. Lastly, for agent systems to be truly smart, they would have to learnas they react andor interact with their external environment. In our view, agents are orshould be disembodied bits of intelligence. Though, we will not attempt to define whatintelligence is, we maintain that a key attribute of any intelligent being is its ability to learn.The learning may also take the form of increased performance over time. We use these threeminimal characteristics in Figure 1 to derive four types of agents to include in our typologycollaborative agents, collaborative learning agents, interface agents and truly smart agents.CooperateAutonomousLearnCollaborative AgentsCollaborative Learning AgentsInterface  AgentsSmart AgentsFigure 1  A Part View of an Agent TypologyWe emphasise that these distinctions are not definitive. For example, with collaborativeagents, there is more emphasis on cooperation and autonomy than on learning hence, we donot imply that collaborative agents never learn. Likewise, for interface agents, there is moreemphasis on autonomy and learning than on cooperation. We do not consider anything elsewhich lie outside the intersecting areas to be agents. For example, most expert systems arelargely autonomous but, typically, they do not cooperate or learn. Ideally, in our view,agents should do all three equally well, but this is the aspiration rather than the reality. Trulysmart agents do not yet exist indeed, as Maes 1995a notes current commercially availableagents barely justify the name, yet alone the adjective intelligent. Foner 1993 is evenmore incandescent though he wrote this in 1993, it still applies today8... I find little justification for most of the commercial offerings that call themselves agents.Most of them tend to excessively anthromomorphize the software, and then conclude that itmust be an agent because of that very anthropomorphization, while simultaneously failing toprovide any sort of discourse or social contract between the user and the agent. Most arebarely autonomous, unless a regularlyscheduled batch job counts. Many do not degradegracefully, and therefore do not inspire enough trust to justify more than trivial delegationand its concomitant risks Foner, 1993, 3940.In effect, like Foner, we assert that the arguments for most commercial offerings being agentssuffer from the logical fallacy of petitio principii  they assume what they are trying to prove or they are circular arguments. Indeed, this applies to other agents in the literature.In principle, by combining the two constructs so far i.e. staticmobile andreactivedeliberative in conjunction with the agent types identified i.e. collaborative agents,interface agents, etc., we could have static deliberative collaborative agents, mobile reactivecollaborative agents, static deliberative interface agents, mobile reactive interface agents,etc. But these categories, though quite a mouthful, may also be necessary to further classifyexisting agents. For example, Lashkari et al. 1994 presented a paper at AAAI onCollaborative interface agents which, in our classification, translates to static collaborativeinterface agents.Fourthly, agents may sometimes be classified by their roles preferably, if the roles are majorones, e.g. world wide web WWW information agents. This category of agents usuallyexploits internet search engines such as WebCrawlers, Lycos and Spiders. Essentially, theyhelp manage the vast amount of information in wide area networks like the internet. We referto these class of agents in this paper as information or internet agents. Again, informationagents may be static, mobile or deliberative. Clearly, it is also pointless making classes ofother minor roles as in report agents, presentation agents, analysis and design agents, testingagents, packaging agents and help agents  or else, the list of classes will be large.Fifthly, we have also included the category of hybrid agents which combine of two or moreagent philosophies in a single agent.There are other attributes of agents which we consider secondary to those already mentioned.For example, is an agent versatile i.e. does it have many goals or does it engage in a varietyof tasks Is an agent benevolent or nonhelpful, antagonistic or altruistic Does an agent lieknowingly or is it always truthful this attribute is termed veracity Can you trust the agentenough to risk delegate tasks to it Is it temporally continuous Does it degrade gracefullyin contrast to failing drastically at the boundaries Perhaps unbelievably, some researchersare also attributing emotional attitudes to agents  do they get fed up being asked to do thesame thing time and time again What role does emotion have in constructing believableagents Bates, 1994 Some agents are also imbued with mentalistic attitudes or notions suchas beliefs, desires and intentions  referred to typically as BDI agents Rao  Georgeff,1995. Such attributes as these provide for a stronger definition of agenthood.In essence, agents exist in a truly multidimensional space, which is why we have not used atwo or threedimensional matrix to classify them  this would be incomplete and inaccurate.However, for the sake of clarity of understanding, we have collapsed this multidimensionalspace into a single list. In order to carry out such an audacious move, we have made use ofour knowledge of the agents we know are currently out there and what we wish to aspire to.Therefore, the ensuing list is to some degree arbitrary, but we believe these types cover mostof the agent types being investigated currently. We have left out collaborative learningagents, see Figure 1, on the grounds that we do not know of the existence out there of any9such agents which collaborate and learn, but are not autonomous. Hence, we identify seventypes of agents Collaborative agents Interface agents Mobile agents InformationInternet agents Reactive agents Hybrid agents Smart AgentsThere are some applications which combine agents from two or more of these categories, andwe refer to these as heterogeneous agent systems. Such applications already exist eventhough they are relatively few. However, we also overview briefly such systems in the nextsection.Another issue of note for completeness sake is that agents need not be benevolent to oneanother. It is quite possible that agents may be in competition with one another, or perhapsquite antagonistic towards each other. However, we view competitive agents as potentialsubclasses of all these types. That is, it is possible to have competitive collaborativetypeagents, competitive interface agents, competitive information agents, etc.4.2 A Critique of Our TypologyAs with our definition of agenthood, our typology of agents is bound to be contentious. Twoofficial reviewers of this paper all took issue with it, but their suggestions are, in our opinion,either more debatable or unclear. One reviewer, reviewer 1, claimed that we have confusedagents that are defined by what they do information agents, interface agents andcollaborative agents, and other types for the sort of technology that underpins these agentsmobile agents, reactive agents, hybrid agents. Thus, heshe would have preferred a 2dimensional classification. The second reviewer mentioned a similar point but alluded to adifferent classification. To a large degree, we disagree with this criticism, though not fully.We believe we had already attempted, perhaps unsuccessfully, to preempt this criticism.Firstly, we would not group information agents, interface agents and collaborative agents inone large group in our view, as we explained earlier, collaborative agents and interfaceagents are defined by what they are, while information agents are defined by what they do.Secondly, we do not agree fully with the assertion that mobile agents, reactive agents andhybrid agents are all underlying technologies for implementing the former classes. To thisreviewer, interface agents are collaborative agents implemented using reactive technologyWe simply disagree with this viewpoint. As we explain later in the paper, reactive agents forexample, have a distinct philosophy, hypothesis, etc. which make it stand out from the rest.We have surveyed the area of technologies for building software agent systems in anotherpaper, Nwana  Wooldridge 1996. However, we agree with the general thrust of theargument to some degree for example, we fully accept the reviewers viewpoint that mobilityis not a necessary condition for agenthood  a point which is implicit in Section 4.1, andwhich we explain later. Thirdly, we address such issues when we discuss the individual typesmore fully in the rest of the paper. Fourthly, we point out, explicitly, in Section 4.1 thatagents exist in a truly multidimensional space, and that for the sake of clarity of10understanding, we have collapsed this multidimensional space into a single list. To producethis list, we used a set of criteria which included inate properties of agents which we wouldprefer to see autonomy, cooperation, learning, other constructs staticmobile,deliberativereactive, major roles as in information agents and whether they are hybrid orheterogeneous. In a previous version of this paper where we had a more hierarchicalbreakdown, it turned out to be less clear. Fifthly, other typologies in the literature are equallyas contentious. For example, Wooldridge  Jennings 1995a broadly classify agents into thefollowing gopher agents, service performing agents and proactive agents. We believe this istoo general and simplistic a classification. It is for these reasons that we opted for such a flatbreakdown. To be fair, apart from the typology, these two reviewers were verycomplementary about the paper.In conclusion, our typology is not without its critics but so are all others, but as reviewer 1pointed out while I agree that most agents in the literature can be categorised into thesetypes, I think the types are themselves faulty. In this paper, we have deliberately traded inaccuracy for clarity. Our typology highlights the key contexts in which the word agent isused in the software literature.4.3 What Agents are NotIn general, we have already noted that a software component which does not fall in one of theintersecting areas of Figure 1 does not count as an agent. In any case, before the word agentcame into vogue within the computingAI fraternity, Minsky, in his Society of Mind 1985,had already used it to formulate his theory of human intelligence. However, Minsky used it torefer to much more basic entities. .to explain the mind, we have to show how minds are built from mindless stuff, from partsthat are much smaller and simpler than anything wed consider smart... But what could thosesimpler particles be  the agents that compose our minds This is the subject of ourbook... Minsky, 1985, 18.Clearly, Minskys use of the word agent is quite distinct from its use in this paper.Furthermore, as noted earlier, expert systems do not meet the preconditions of agenthood, asdo most knowledgebased system applications. Modules in distributed computingapplications do not constitute agents either as Huhns  Singh 1994 explain. First, suchmodules are rarely smart, and hence much less robust than agents are or should be theyalso do not degrade gracefully. Second, in agentbased systems generally, the communicationinvolves involves highlevel messages in contrast to the lowlevel messaging in distributedcomputing. The use of highlevel messaging leads to lower communication costs, easy reimplementability and concurrency. Lastly, and perhaps most importantly, agentbasedapplications operate typically at the knowledge level Newell, 1982, not at the symbol levelas is the case in distributed computing applications. In any case, modules in distributedcomputing applications are not autonomous in the same sense as described earlier for agentapplications. The majority of software applications may be ruled out from the set of agentbased applications on the same grounds that expert systems or distributed computingapplications are.5 A Panoramic Overview of the Different Agent TypesIn this section we, in turn, overview all the types of agents identified in our typology of theprevious section bar smart agents. Figure 2 summarises these types and lists the order in11which they are surveyed. In particular, we would overview them in terms of some or all offollowing their essential metaphors, hypothesesgoals, motivations, roles, prototypicalexamples, potential benefits, key challenges, and some other general issues about theparticular agent type. We do not overview the shaded type, smart agents, on the grounds thatthis is the aspiration of agent researchers rather than the reality.Collaborative AgentsSmart AgentsInterface AgentsHeterogeneous Agent SystemsMobile AgentsReactive AgentsAn Agent TypologyHybrid AgentsInformation AgentsFigure 2  A Classification of Software Agents5.1 Collaborative Agents An OverviewAs shown in Figure 1, collaborative agents emphasise autonomy and cooperation with otheragents in order to perform tasks for their owners. They may learn, but this aspect is nottypically a major emphasis of their operation. In order to have a coordinated set up ofcollaborative agents, they may have to negotiate in order to reach mutually acceptableagreements on some matters. Most of the work classified in this paper as strand 1 see Section2 investigated this class of agents. As noted earlier, some AI researchers are providingstronger definitions to such agents, e.g. some attribute mentalistic notions such as beliefs,desires and intentions  yielding BDItype collaborative agents. Hence, the class ofcollaborative agents may itself be perceived as a broad church.In brief the key general characteristics of these agents include autonomy, social ability,responsiveness and proactiveness. Hence, they are or shouldwould be able to act rationallyand autonomously in open and timeconstrained multiagent environments. They tend to bestatic, large coarsegrained agents. They may be benevolent, rational, truthful, somecombination of these or neither. Typically, most currently implemented collaborative agentsdo not perform any complex learning, though they may or may not perform limitedparametric or rote learning.5.1.1 HypothesisGoalThe hypothesis, rationale or goal for having collaborative agent systems is a specification ofthe goal of DAI as noted in Huhns  Singh 1994. Paraphrasing these authors, it may bestated as creating a system that interconnects separately developed collaborative agents, thusenabling the ensemble to function beyond the capabilities of any of its members. Formally,Vagenti  maxVagentiwhere V represents value addedness. This could have an arbitrary definition involvingattributes such as speed, worstcase performance, reliability, adaptability, accuracy or somecombination of these.125.1.2 MotivationThe motivation for having collaborative agent systems may include one or several of thefollowing they are a specialisation of the motivations for DAI To solve problems that are too large for a centralised single agent to do due to resourcelimitations or the sheer risk of having one centralised system To allow for the interconnecting and interoperation of multiple existing legacy systems,e.g. expert systems, decision support systems, etc. To provide solutions to inherently distributed problems, e.g. distributed sensornetworks cf. DVMT, Durfee et al., 1987 or airtraffic control To provide solutions which draw from distributed information sources, e.g. fordistributed online information sources, it is natural to adopt a distributed andcollaborative agent approach To provide solutions where the expertise is distributed, e.g. in health care provisioning To enhance modularity which reduces complexity, speed due to parallelism,reliability due to redundancy, flexibility i.e. new tasks are composed more easilyfrom the more modular organisation and reusability at the knowledge level henceshareability of resources To research into other issues, e.g. understanding interactions among human societies.5.1.3 A Prototypical Example CMUs Pleiades SystemThe Pleiades project at CMU directed by Tom Mitchell and Katia Sycara has, as one of itsobjectives, to investigate methods for automated negotiation among collaborative 1 agents, inorder to improve their robustness, effectiveness, scalability and maintainability see httpURL1. The project applies collaborative agents in the domain of Organisational DecisionMaking over the InfoSphere which refers essentially to a collection of internetbasedheterogeneous resources. This infosphere is ripe for the application of these class of agentsnot least because it is inherently a distributed set of online information sources.TA1 TA2 TAnIA1 IA2 IAnUser 1 User nUser 2TaskProposed solutionINFOSPHEREDB1 DB2 DBnqueryreplyLAYER 1LAYER 2Figure 3  The Pleiades Distributed System Architecture Adapted from Sycara, 1995                                                1 My interpretation and emphasis.13Pleiades is a distributed collaborative agentbased architecture which has two layers ofabstraction the first layer which contains taskspecific collaborative agents and second layerwhich contains informationspecific collaborative agents see Figure 3. This architecture wasused to develop the visitor hosting system which was described briefly earlier. Taskspecificagents, depicted as taskassistants TA in the figure, perform a particular task for its user,e.g. arranging appointments and meetings with other taskspecific agents. These agentscoordinate and schedule plans based on the context. They collaborate with one another atlevel 1 in order to resolve conflicts or integrate information. In order to garner theinformation required at this level, they request information from informationspecific agents,depicted as information assistants IA in Figure 3. Informationspecific agents, in turn, maycollaborate with one another i.e. within layer 2 in order to provide the information requestedback to the layer 1 requesting agent. The source of the information are the many databasesDB in the infosphere. Ultimately, the task agent proposes a solution sometimes anintermediate one to its user.Taskspecific agents have the following knowledge Sycara, 1995 a model of the taskdomain, knowledge of how to perform the task, knowledge of how to gather the informationfor the task, knowledge of other taskspecific or informationspecific agents it mustcoordinate with in order to meet the task, protocols that enable coordination with other agentsand, lastly, strategies for conflict resolution and information fusion. They also possess somelearning mechanisms, e.g. when an agent needs to learn the preferences of its user. On thecontrary, informationspecific agents know of the following knowledge of the databases thatit is associated with in addition to details such as their size, average time it takes to answer aquery and monetary costs for query processing, knowledge of how to access the databases,knowledge of how to resolve conflicts and information fusion strategies, and protocols forcoordination with other relevant software agents. These agents are also smart enough tocache answers to frequently asked queries, and can also induce database regularities whichthey use during interagent interactions.The main rationale of the architecture is to provide software agents for retrieving, filteringand fusing information from distributed, multimodal sources and that the agents shouldassist in decision making. Sycara and her colleagues hypothesised that in order to meet theirgoals, they would need a distributed collection of collaborative agents which can gather, filterand fuse information in addition to being able to learn from their interactions. Agentscommunicate using KQML Finin  Wiederhold, 1991 and email, and they negotiate inorder to reach agreements in cases of conflicts. The layered architecture is clearly verymodular, indeed modular enough for Sycara and her colleagues to have introducedconnectionist modules in the design of other systems.Clearly, there is much sophistication to this architecture even though we have left out muchmore interesting details e.g. how and what the agents learn. Individually, an agent consistsof a planning module linked to its local beliefs and facts database. It also has a localscheduler, a coordination module and an execution monitor. Thus, agents can instanstiate taskplans, coordinate these plans with other agents and schedulemonitor the execution of its localactions. Interestingly, the architecture has no central planner and hence agents must allengage in coordination by communicating to others their constraints, expectations and otherrelevant information.14The Pleiades architecture shows clearly how collaborative agents can operate in concert suchthat their ensemble functions beyond the capabilities of any individual agent in the setup.Apart from the visitor hosting system, other systems have also been developed using thisarchitecturemethodology in the domains of financial portfolio management, emergencymedical care and electronic commerce Sycara, 1995. In addition to these domains, there areothers ripe for exploiting collaborative agents including workflow management, networkmanagement and control, telecommunication networks and business process engineering. Inall these domains, collaborative agents may provide much added value to current singleagentbased applications.5.1.4 A Brief Critical Review of Collaborative Agent Systems WorkThere are many other useful pieces of work on collaborative agents. The first important pointto reemphasise is the fact that much work classified in this paper as strand 1 work seeSection 2 exploited collaborative, deliberative agents they may not have been fullycollaborative as defined in this paper, but they were in spirit. For example, each agent inDurfee et al.s 1987 distributed vehicle monitoring system DVMT is a blackboardknowledge source whose task is to identify the vehicles track from acoustic data. Each ofthese agents shared a global knowledge of the problem solving hence, they are, strictlyspeaking, not that autonomous and cooperation is quite basic as it all proceeds via thecommon blackboard. Certainly, other strand 1 testbeds such as MACE Gasser et al., 1987,MCS Doran et al., 1990 and IPEM AmbrosIngerson  Steel, 1988 have deliberativeagents with  planning modules that underpin the coordination and cooperation in the setupsthey are operating within. In the case of IPEM and MCS, nonlinear planners are used. Otherplanningbased prototypes include HayesRoths 1991 GUARDIAN architecture andCohens et al.s PHOENIX system. At BT Labs, two prototype collaborative agentbasedsystems have been developed recently the ADEPT and MII prototypes. ADEPT OBrien Wiegand, 1996 employs collaborative agents in the application area of business process reengineering while MII Titmuss et al., 1996 demonstrates that collaborative agents can beused to perform decentralised management and control of consumer electronics, typicallyPDAs or PCs integrated with services provided by the network operator.As regards collaborative agents with much stronger definitions, mention has earlier beenmade of Rao  Georgeffs characterisation of rational agents in terms of the mental attitudesof beliefs, desires and intentions Rao  Georgeff, 1992. These are the attitudes typical ofepistemic logics. Such work on stronger definitions of collaborative agents is much inprogress. Another useful piece of research which attributes mentalistic notions tocollaborative agentbased system design is Shohams 1993 work on agentorientedprogramming. In this work, an agents mental state is described by its beliefs, decisions,capabilities and obligations, and Shohams language introduces epistemic and deontic modaloperators for such notions. This is because in order for agents to reason about thesementalistic attitudes, logics and operators for describing them must be developed. Other agentframeworks based on such mentalistic attitudes include Bratman et al.s 1988 IRMA andJennings 1993 GRATEGRATE environments. Much of the latter work exploits Cohen Levesques 1990 classic work.The key criticism of collaborative agents levelled by some researchers stems from theirgrounding in the deliberative thinking paradigm which has dominated AI research over thelast thirty years. Some researchers, particularly those in the reactive agents camp, believe thatintelligent behaviour can be generated without the sort of explicit symboliclevel15representations and hence, reasoning prevalent in AI e.g. Brooks, 1991b. That is, theyobject to agents having an internal representation of actions, goals and events required by theplanning module to determine the sequence of actions that will achieve the goals. Researcherslike Agre  Chapman 1987 have challenged the usefulness of having elaborate plans theyargue that a rational, goaldirected activity need not be organised as a plan. They concede thatpeople use plans, but they argue that in real life there is much momenttomomentimprovisation with any plan, which is dependent on the situation of the relevant agent in itsphysical and social world. Clearly, though this criticism is targeted at the entire deliberativeschool of AI, it also impacts on deliberative, collaborative agents of whatever complexion.Hence, they contend that such deliberative agents would result in brittle and inflexibledemonstrators with slow response times. This viewpoint led to birth of the reactive agentsparadigm based on situatedaction theory discussed later.As regards stronger collaborative agent definitions e.g. BDI agents, Rao  Georgeff 1995acknowledge the two main criticisms levelled at such work as theirs and Bratman et al.s1988. First, while traditional planning researchers and classical decision theorists questionthe necessity for having all of these epistemic attitudes i.e. beliefs, desires, intentions, DAIresearchers with a sociological bias question why they only have three Secondly, the logicsunderpinning these agents, mostly secondorder modal logics, have not been investigatedfully and their relevance in practice is questionable. Rao  Georgeff 1995 tackle both theseissues in their paper. Indeed, they proceed to describe how BDI agents, with somesimplifying assumptions to their theoretical framework, are being applied to largescaleapplications  in this case, OASIS, an airtraffic management application prototype which hasbeen successfully tested at Sydney airport in 1995. This prototype has been tested with 100aircraft agents and 10 global agents which handle other issues including windfields,trajectories and coordination Georgeff, 1996. Full implementation is already in progress.However, it must be emphasised that research into such stronger definition of agents,relatively, is still very much in its infancy.Some more criticisms of collaborative agents are presented next as challenges still to beaddressed by collaborative agent researchers.5.1.5 Collaborative Agents Some Key ChallengesDespite successful demonstrators like the Pleiades system and MII Titmuss et al., 1996,these agents have been deployed in none but a few real industrial settings though thissituation is changing, e.g. those built under the auspices of the ARCHON project Wittig,1992 Jennings et. al., 1993 or a couple of others built with the involvement of MikeGeorgeff, e.g. the Space Shuttle Malfunction Handling system and the agentbased RoyalAustralian Airforce Simulator Georgeff, 1996. There are still many teething problems wemention several here. Note that these are not necessarily specific to collaborative agents only Engineering the construction of collaborative agent systems the Pleiades system is agood step in this direction but there is much more research to do. To paraphrase BTsProf. Robin Smith, we must move away from point solutions to point problems, anddesign methodologiesmetatools which allow for quicker implementation ofcollaborative agentbased systems Smith, 1996b Interagent coordination this is a major issue in the design of these systems.Coordination is essential to enabling groups of agents to solve problems effectively.Without a clear theory of coordination, anarchy or deadlock can set in easily incollaborative agent systems Furthermore, should agents be totally truthful when16negotiating with others or should they be allowed to lie when it suits themCoordination is also required due to the constraints of resource boundedness and time.Much experimental andor formal work is still required to address these issues ofcoordination and negotiation. Stability, Scalability and Performance Issues these issues have yet to be acknowledged,yet alone tackled in collaborative agent systems research. Empirical investigations needto be carried out to establish suitable minimum levels of performance and, clearly, thesesystems have to be stable. Alternatively, their stabilities would need to be provenformally. Though, these issues are nonfunctional, they are crucial nonetheless Legacy systems the thorny issue of what to do with legacy systems is still with us andwill always be a problem. Established techniques and methodologies for integratingagents and legacy systems are still required How do these systems learn Would learning not lead to instability What are theappropriate architectures for different types of problems How do you ensure an agentdoes not spend much of its time learning, instead of participating in its setup Evaluation of collaborative agent systems this problem is still outstanding. How arethey verified and validated to ensure they meet their functional specifications Areunanticipated events handled properly How else would you trust such systems to runpower stations, nuclear installations and chemical plantsIn conclusion, despite the criticisms of collaborative agents by those within and without otheragent camps, there are many industrial applications which would benefit significantly fromthem, in just the same way as there are applications which would benefit from reactiveagents. For example, at BT, we see a potential major role for them in managingtelecommunications networks and in business process management Nwana, 1996.5.2 Interface Agents An OverviewInterface agents c.f. Figure 1 emphasise autonomy and learning in order to perform tasks fortheir owners. Pattie Maes, a key proponent of this class of agents, points out that the keymetaphor underlying interface agents is that of a personal assistant who is collaborating withthe user in the same work environment. Note the subtle emphasis and distinction betweencollaborating with the user and collaborating with other agents as is the case withcollaborative agents. Collaborating with a user may not require an explicit agentcommunication language as one required when collaborating with other agents.17Figure 4  How Interface Agents Work adapted from Maes, 1994Figure 4 depicts the functioning of interface agents. Essentially, interface agents support andprovide assistance, typically to a user learning to use a particular application such as aspreadsheet or an operating system. The users agent observes and monitors the actions takenby the user in the interface i.e. watches over the shoulder of its user, learns new shortcuts, and suggests better ways of doing the task. Thus, the users agent acts as anautonomous personal assistant which cooperates with the user in accomplishing some task inthe application. As for learning, interface agents learn typically to better assist its user in fourways Maes, 1994 all shown in Figure 4 By observing and imitating the user i.e. learning from the user Through receiving positive and negative feedback from the user learning from theuser By receiving explicit instructions from the user learning from the user By asking other agents for advice i.e. learning from peers.Their cooperation with other agents, if any, is limited typically to asking for advice, and notin getting into protracted negotiation deals with them as is the case with collaborative agents.The learning modes are typically by rote memorybased learning or parametric, thoughother techniques such as evolutionary learning are also being introduced. In summary alearning interface agent,as opposed to any kind of agent, is one that uses machinelearning techniques to present apseudo intelligent user interface for its actions Foner, 1993, p. 1.5.2.1 HypothesisGoalThe objective of interface agents research as Maes sees it is to work towards Alan Kaysdream of having indirectly managed humancomputer interfaces Kay, 1990. The argumentgoes as follows. Current computer user interfaces only respond to direct manipulation, i.e. thecomputer is passive and always waits to execute highly specified instructions from the user. Itprovides little or no proactive help for complex tasks or for carrying out actions such assearches for information that may take an indefinite time Maes, 1995. In the future, therewill be millions of untrained users attempting to make use of computers and networks oftomorrow. Therefore, instead of a user issuing direct commands to some interface, he couldbe engaged in cooperative process in which human and software agents can both initiatecommunication, perform tasks and monitor events. This cooperation between human andagent would benefit the human in using this application.Hence, the goal is to migrate from the direct manipulation metaphor to one that delegatessome of the tasks to proactive and helpful software interface agents in order toaccommodate novice users. The hypothesis is that these agents can be trusted to performcompetently some tasks delegated to them by their users. More specifically, thatunder certain conditions, an interface agent can program itself i.e., it can acquire theknowledge it needs to assist its user. The agent is given a minimum of backgroundknowledge, and it learns appropriate behavior from the user and from other agents Maes,1994, p. 89.She goes on to explain that two preconditions need to be fulfilled by suitable applicationdomains firstly, that there is substantial repetitive behaviour in using the application18otherwise, the learning agent will not be able to learn anything and, secondly, that thisrepetitive behaviour is potentially different for different users otherwise, use a knowledgebased approach.5.2.2 MotivationTo recap, an interface agent is a quasismart piece of software which assists a user wheninteracting with one or more computer applications. Therefore, the motivating, underlyingprinciple of interface agents seems to be that there is no inherent merit in drudgery. Whereboring and laborious tasks particularly, but not exclusively at the user interface could bedelegated to interface agents, they should be  in order to eliminate the tedium of humansperforming several manual suboperations say. A motivating reason for the choice of domainsthat Maes group has tackled has been their dissatisfaction with the ways that tasks in thesedomains are handled currently. For example, she explains that valuable hours are wastedmanaging junk mail, scheduling and rescheduling meetings, searching for information amongheaps of it, etc.  indeed, the title of her 1994 paper captures succinctly her motivationAgents that Reduce Work and Information Overload Maes, 1994.5.2.3 BenefitsRolesThe general benefits of interface agents are threefold. First, they make less work for the enduser and application developer. Secondly, the agent can adapt, over time, to its userspreferences and habits. Finally, knowhow among the different users in the community maybe shared e.g. when agents learn from their peers. Perhaps these will be understood betterby discussing some of the roles for which Maes and her team at MIT are building interfaceagents. Thus far, her team has constructed demonstrator agents for the following roles Eager assistants e.g. Kozierok  Maes, 1993 Guides e.g. Liebermann, 1995 Memory aids e.g. Rhodes  Starner, 1996 Filtercritics e.g. Sheth  Maes, 1993 Matchmakingreferrals e.g. Foner, 1996 Buyingselling on your behalf e.g. Chavez  Maes, 1996 Entertainment e.g. Maes, 1995b.We overview them briefly.Kozierok  Maes 1993 describe an interface agent, Calendar Agent, for schedulingmeetings which is attachable to any application provided it is scriptable and recordable, e.g.scheduling software package. Calendar Agent assists i.e. its role is in assisting its user inscheduling meetings which involves accepting, rejecting, scheduling, negotiating andrescheduling meeting times. It really comes into its element because it can learn, over time,the preferences and commitments of its user, e.g. she does not like to attend meetings onFriday afternoons, he prefers meetings in the morning, etc. The learning techniques employedare memorybased learning and reinforcement learning.Liebermann 1995 describes an agent called Letizia a keyword and heuristicbased searchagent which assists in web browsing. Letizias role is that of a guide. When users operatetheir favourite browser, e.g. Netscape, they must state their interests explicitly when using19traditional search engines such as Webcrawler or Lycos. The user remains idle while thesearch is in progress, and likewise, the search engine is idle whilst the user is browsing theinterface. Essentially, Letizia provides a cooperative search between itself and the user. Sincemost browsers encourage depthfirst browsing, Letizia conducts a breadthfirst searchconcurrently for other useful locations that the user may be interested in. It does this byguessing the users intention and proceeding to search using the search engine. It guessesthe users intentions via inferring from hisher browsing behaviour, e.g. she keeps returningto some particular page, you enter a page into your hotlist or you download some article. Theusers actions immediately refocus the search. By doing this, it is able to recommend someother useful serendipitous locations.The Remembrance Agent Rhodes  Starner, 1996 is attached currently to an Emacs editor.As the user composes some email message, say, the agent is able to carry out a keywordsearch and retrieve the five most relevant emails in her directory relating to this email beingcomposed. It is really successful when it recommends continuously and unobstrusivelyinvaluable documents, emails or files which you would otherwise have forgotten when, forexample, you are composing some new document. It can also be used, conceivably whenbrowsing the web or writing a paper in the latter case, the remembrance agent mayrecommend other researchers papers which should be consulted. Hence, its role is clearlythat of a memory aid.Sheth  Maes 1993 and Maes 1994 describe a news filtering agent, called NewT, whoserole is that of helping the user filter and select articles from a continuous stream of UsenetNetnews. The idea is to have the user create one or many news agents e.g. one agent forsports news, one for financial news, etc. and train them by example i.e. by presenting tothem positive and negative examples of what shouldor should not be retrieved. It ismessagecontent, keywordbased but it also exploits other information such as the author andsource. NewT is even more complicated because a users population of information filteringagents evolve with time using genetic computing techniques. Indeed, some similar new workat MIT is investigating agents that breed in their environment, i.e. information agents, givenfeedback on the information returned, breeds progressively more of those which return goodquality information, and purges the rest that do not see Moukas, 1996.Foner 1996 reports on his YentaYentalite matchmaking agent prototype whose goalsscenarios include being able to match buyers and sellers of some item and introducing themto one another, finding and grouping people with compatible professional or personalinterests, or building coalitions of people interested in the same topics. Each user in thecommunity has a Yenta agent. Yenta agents are able to carry out referrals which work in thesame fashion as wordofmouth recommendations used by people daily. Yenta deals currentlywith text such as electronic mail messages, the contents of a users files in a directory, etc.For example, two users, A and B, are deemed to share the same interest if A has at least onegranule of interest as B. A granule may represent the fact that a user reads regularlynewsgroups on politics say. Matchmaking presents some challenging problems which arecovered in Foners paper.Chavez  Maes 1996 describe some preliminary ideas on Kasbah, a classified ads serviceon the WWW that incorporates interface agents. Kasbah is meant to represent a marketplace a web site where Kasbah agents, acting on behalf of their owners, can filter throughthe ads and find those that their users may be interested in, and then proceed to negotiate, buyand sell items. Kasbahlike agents may, in the future, render middlemen or brokers redundant.20Last, but by no means least, is the entertainment selection agent which Maes believes has thebest potential of all her application domains to be the next killer application. For example,the RingoHOMR system Shardanand  Maes, 1995 Maes, 1995a is a personalisedrecommendation system for music albums and artists, which exploits interface agents. Theseagents work by social filtering, i.e. a users agent finds other agents which are correlated, andrecommends whatever films their users like to its own user. Hence, like Yenta agents,Ringos working is similar to a wordofmouth approach. Maes 1995b also describes theALIVE system which isa virtual environment which allows wireless fullbody interaction between a humanparticipant and a virtual world which is inhabited by autonomous agents, p. 112.However, it presents a much more challenging illustration of how autonomous interfaceagents may be used in entertainment. Essentially, ALIVE demonstrates how agents can forma link between animated characters, based of Artificial Life models, and the entertainmentindustry.We hope it is clear that the potential for these interface agents are large. All thesedemonstrators have been or are being evaluated with users and the results so far are, in themain, quite promising. For example, Ringo has been used by more than 2000 peopleShardanand  Maes, 1995.In order to emphasise that the distinction between some of these agent types is quite fuzzy,Lashkari et al.s 1994 paper on collaborative interface agents presents a framework formultiagent collaboration, and discuss results of a demonstrator based on interface agents forelectronic mail. This paper emphasises cooperation between agents more than typicalinterface agents do.5.2.4 A Brief Critical Review of Interface Agent Systems WorkLess, the reader gets the impression that interface agents research only proceeds in Maesgroup at MIT, we must state that this is certainly not  the case. We have been biased towardsthem because we i.e. BT have ready access to and close links with Pattie Maes and her workandor demonstrators. Other work on interface agents include Dent et al. 1992 and Hermens Schlimmer 1993. Dent et al. 1992, for example, describe a personal learning apprenticeagent research done at CMU. This Calendar APprentice agent CAP, like Kozierok  Maes1993 Calendar Agent, assists the user in managing and scheduling its meetings. Theirphilosophies are essentially the same and the key difference is in their use of learningtechniques Dent et al.s apprentice uses backpropagation neural network and decision treelearning techniques while Calendar Agent Kozierok  Maes, 1993 uses memorybased andreinforcement learning. Mitchell et al. 1994 summarise results from five useryears ofexperience over which CAP has learned and evolved a set of several thousand rules thatmodel the scheduling preferences of each of its users. These rules could be augmented oredited by users. Hermens  Schlimmer 1993 and Lang 1995 also describe other learningapprentice interface agents. What may differentiate these agents are their performances.The key criticism of interface agents is that, so far, they tend to function in standalonefashions or, at the most, only engage in restricted and taskspecific communication withidentical peers Lashkari et al., 1994, which is why the latter authors have begun addressingthis issue. This is not necessarily bad but it would be useful to have interface agents beingable to negotiate with their peers as do collaborative agents. Furthermore, as Mitchell et al.1994 note21...it remains to be demonstrated that knowledge learned by systems like CAP can be used tosignificantly reduce their users workload p. 90.But this is the key motivation for having interface agents in the first place Maes, 1994.Moreover, Wayner  Joch 1995, p. 95 cite Bob Balaban, a systems architect at LotusNotes, who argues apparently that most people do not need a smart agent which can look overtheir shoulders, guess their desires and, proactively, take action. He is quoted as saying Iknow exactly what I want, arguing he does not need an agent to try to learn from hisbehaviour. This viewpoint may be dismissed outright by interface agent researchers, butBalabans point remains  do people wantneed interface agents It appears it is not a forgoneconclusion that they do. It may just be another working hypothesis5.2.5 Interface Agents Some ChallengesFollowing on from the last section, some challenges for interface agents include Demonstrating that the knowledge learned with interface agents can truly be used toreduce users workload, and that users, indeed, want them Carrying out hundreds of experiments using various machine learning techniquesincluding soft and evolutionary learning techniques over several domains to determinewhich learning techniques are preferable for what domains and why Analysing the effect of the various learning mechanisms on the responsiveness ofagents Extending interface agents to be able to negotiate with other peer agents Enhance continually the competence of interface agents so that their users trust in thembuild up over time Maes, 1994. Other issues which Maes notes include guaranteeingthe users privacy and the legal quagmire which may ensue following the fielding ofsuch agents. Extending the range of applications of interface agents into other innovative areas suchas entertainment, as ALIVE and HOMR are doing.However, having stated these, there is no denying the fact that interface agents canwill bedeployed in real applications in the short term because they are simple, operate in limiteddomains and do not, in general, require cooperation with other agents.5.3 Mobile Agents An OverviewMobile agents are computational software processes capable of roaming wide area networksWANs such as the WWW, interacting with foreign hosts, gathering information on behalfof its owner and coming back home having performed the duties set by its user. Theseduties may range from a flight reservation to managing a telecommunications network.However, mobility is neither a necessary nor sufficient condition for agenthood. Mobileagents are agents because they are autonomous and they cooperate, albeit differently tocollaborative agents. For example, they may cooperate or communicate by one agent makingthe location of some of its internal objects and methods known to other agents. By doing this,an agent exchanges data or information with other agents without necessarily giving all itsinformation away. This is an important point, not least because the public perception ofagents thanks to the popular computing press is almost synonymous with mobile agents.For example, Peter Wayners 1995b agent text and there are almost no other agent texts22about currently is titled Agents Unleashed A Public Domain Look at Agent Technology,but it is all about mobile agents. Whilst the unleashed in the title gives it away, it is rathersubtle  so, Wayner could be accused of reinforcing this rather jaundiced view, that agentsequals mobile pieces of software.Another myth to slay is that mobile agents equals Telescript, the current leading mobile agentoperating environment invented at General Magic Mountain View, CA. Through some veryclever marketing, General Magic has managed to put mobile agents on the map and linktheir name simultaneously and inextricably to it. But other mobile agent demonstrators orapplications not based on Telescript do exist.5.3.1 Hypothesis, Motivation and BenefitsThe key hypothesis underlying mobile agents is that agents need not be stationary indeed, theidea is that there are significant benefits to be accrued, in certain applications, by eschewingstatic agents in favour of their mobile counterparts. These benefits are largely nonfunctional,i.e. we could do without mobile agents, and only have static ones but the costs of such amove are high. For example, consider the scenario borrowed from Wayner 1995b where theuser is required to write a program that would allow her home computer make a flightreservation for her by accessing several airline reservation databases. She lists all herpreferences nonsmoking, departure between 7 and 9.30 am from Baltimore, arrival at Austinbefore noon, no more than one connection, and no changes at Chicago OHare. A staticsingleagent program would need to request for all flights leaving between these times fromall the databases, which may total more than 200 and take up many kilobytes. It would alsorequire a list of all the connections and proceed to narrow down the search. Each of theseactions involves sifting through plenty of extraneous information which couldwould clog upthe network. Besides, she is probably paying for this network time.Consider the alternative. She encapsulates, objectoriented style, her entire program within anagent which consumes probably less than 2K which roams the network of airline reservationsystems, arrive safely and queries these databases locally, and returns ultimately to her homecomputer, with a schedule which she may confirm or refute. This alternative obviates thehigh communications costs of shifting, possibly, kilobytes of information to her localcomputer  which presumably she cannot cope with. Hence, mobile agents provide a numberof practical, though nonfunctional, advantages which escape their static counterparts. Sotheir motivation include the following anticipated benefits. Reduced communication costs there may be a lot of raw information that need to beexamined to determine their relevance. Transferring this raw information can be verytimeconsuming and clog of the networks. Imagine having to transfer many images justto pick out one. It is much more natural to get your agents to go to that location, do alocal searchpruning and only transfer the chosen compressed image back across thenetwork2 . It obviates the need for costly network connections between remotecomputers as required in remote procedure calls RPC. It provides a much cheaperalternative as we pay increasingly for network bandwidth and time as CompuServeusers already do. In the future we would almost certainly be charged by the byte forbandwidth, though others maintain that bandwidth would be free.                                                2 This example is due to my colleague, Barry Crabtree.23 Limited local resources the processing power and storage on the local machine may bevery limited only perhaps for processing and storing the results of a search, therebynecessitating the use of mobile agents. Easier coordination it may be simpler to coordinate a number of remote andindependent requests and only collate all the results locally. Asynchronous computing you can set off your mobile agents and do something elseand the results will be back in your mailbox, say, at some later time. They may operatewhen you are not even connected. It provides a natural development environment for implementing free market tradingservices. New services can come and go dynamically and much more flexible servicesmay coexist with inferior ones, providing more choices for consumers. A flexible distributed computing architecture mobile agents provide a uniquedistributed computing architecture which functions differently from the static setups. Itprovides for an innovative way of doing distributed computation. Lastly, mobile agents represent an opportunity for a radical and attractive rethinking ofthe design process in general. Following on from the latter, it turns the conventionaldesign process on its head, and some truly innovative products shouldwould emergeout of mobile agent technology.5.3.2 How Mobile Agents Work A Brief Telescript ViewTelescript is an interpreted objectoriented and remote programming language which allowsfor the development of distributed applications see http URL2. The interpreter and runtimedevelopment environment for the Telescript language is called the Telescript engine and agiven host can support simultaneously multiple Telescript engines. Figure 5 summarises apart view of the Telescript architecture. It shows just one of these Telescript enginesintegrated onto an operating system via a programming interface called the Telescriptapplication programmer interface API. The Telescript Development Environment TDEcan now be downloaded freely from URL2 and it comprises the engine, browser, cloudmanager, debugger and associated libraries.ServerOperating SystemTelescript APIPROCESSTelescript Engine190.0.1.26190.0.1.25Mobile AgentPlacesGoing to 190.0.1.25WANLocal AgentFigure 5  A Part View of Telescript Architecture Adapted from Wayner, 1995b24Telescript applications consist of Telescript agents operating within a world or cyberspaceof places, engines, clouds and regions. All of these are objects. For example, a place is aninstance of some class within the engine whose definition inherits operations which can becalled on that place. The top class in Telescripts object hierarchy is the process. A Telescriptengine is itself a multitasking interpreter which can run multiple processes and switchespreemptively between them. Hence, the engine can host multiple agents that sharedatainformation between themselves. Furthermore, a place is itself a process which cancontain an arbitrary number and depth of other places. Figure 5 also shows a local agentprocess. Agent processes, unlike place processes, are objects which cannot contain otherprocesses, but they can go from place to place note that places have unique networkaddresses as shown in Figure 5. An agent requiring a service defined at some given placemust go to that place and call the operations there cf. Figure 5.So to effect remote programming, Telescript makes use of these three language conceptsplaces, agents and go. Go is the primitive which allows for interprocesscommunication. Two or more agent processes can meet in one place using the meetcommand and make use of each others services. They do this by setting up acommunication channel  this is the basis for cooperation. Indeed, by agents moving places,they can exploit the services implemented at these places.A go requires a destination space and the host engine packages up the agent along with allits data, stack and instruction pointer and ships it off to its destination place which may beacross a vast WAN. At its destination, the other Telescriptenabled engine unpacks it, checksits authentication, and it is then free to execute at its new place. When it finishes, it returns toits original host having performed the task required by its owner. Noncooperation occurswhen a place refuses to accept an incoming agent process. In the free market model, serviceswould be located at places, and it is up to the agent processes to go there, negotiate for theservices, use them, pay and return to their owners.5.3.3 Mobile Agent ApplicationsMobile agent applications do not currently abound but are likely to increase to be in the shortto medium term, especially after General Magics release of their Telescript DevelopmentEnvironment into the public domain with their Open Telescript Initiative. However, the firstcommercial application was Sonys Magic Link PDA or personal intelligent communicatorPIC see http URL3. Essentially, it assists in managing a users email, fax, phone andpager as well as linking the user to Telescriptenabled messaging and communicationservices such as America Online and ATT PersonaLink Services. The latter, for example,can carry text, graphics and sound. Magic Link operates through the Magic Cap softwareplatform, and a Magic Cap user can send executable agents Telescript processes via emailthrough the network. Hence, if two or more users connect their Sonys Magik Link PDAs toATTs PersonaLink services which supports Magic Caps email messaging, it provides aplatform for an application which could exploit emailbased Telescript mobile agents.Plu 1995 mentions that France Telecom, who are a member of the General Magic Allianceand therefore had access to Telescript technology, has prototyped some services based onTelescript. In one of their demonstrators, they have used mobile Telescript agents to integraterailway ticketing and car renting services, and the prototype is able to propose an optimalsolution depending on price and time. As noted in Section 3, IBM plans to launch their ICSsystem which uses mobile agents for providing a communications superservice capable of25routeing and translating communications from one service and medium to another, e.g.mobile to desktop, PDA to fax, speech to text, etc.As we write, many others applications are in the pipeline. Telescript technology is now alsoevolving into active web tool technology see http URL3.5.3.4 A Brief Critical Review of Mobile Agent Systems WorkTelescript is not the only system that permits agents to roam from place to place. In the late1980s, Siemens developed an application which they called Intelligent Moving ProcessesWolfson et al., 1989. In this work, computer programs are interpreted on one machine untila move statement is encountered. A move statement causes the packaging of the program,data and instruction pointer just like with Telescript and the despatching of this package to atarget machine. At the target, a process unpackages the process and the program resumesexecution at the new location.There are other languages which support mobile agent system development notably Javafrom Sun Microsystems. Java is a programming language similar in syntax to C, but alsosimilar in other ways to Smalltalk.It is also important to point out that mobile agent systems need not only be constructed usingan agentoriented system like Telescript. Indeed, Wayner 1995b shows examples of howmobile agents can be scripted in Xlisp. Other languages to consider include AgentTcl, SafeTcl and CC. Indeed, a couple of years ago at BT Labs, Appleby  Steward 1994prototyped a mobile agentbased system for controlling telecommunication networks. Thissystem was written completely in CC. In this system, there are two types of mobile agentswhich provide different layers of control in the system. Each node in the network isrepresented by a routeing table storing the neighbouring node to which traffic should berouted in order for that traffic to reach its particular destination node. The agents controlcongestion by making alterations to these routeing tables in order to route traffic away fromcongested nodes. This prototype demonstrated that an ensemble of mobile agents couldcontrol congestion in a circuitswitched communications network. In fact, this novelapplication won the authors a prestigious British Computer Society BCS award.The key criticism of mobile agents is undoubtedly their security. Already, for example, BTLabs operate a firewall which prevents our internal networks being reached from outside.The thought of allowing mobile agents roam into and out of our networks, however benignthey are, send shivers up many spines. Telescript agents cannot write to system memory or todisk and so it is safer than viruses which do. However, you can never be too careful as towhat roaming agents may leave behind. Furthermore, the range of applications based onmobile agents are rather few, even though this situation will almost certainly have changed bythe time this paper is published.5.3.5 Mobile Agents Some ChallengesWayner 1995a lists the major challenges. They include the following. As usual, they are notexhaustive. Transportation how does an agent move from place to place How does it pack up andmove26 Authentication how do you ensure the agent is who it says it is, and that it isrepresenting who it claims to be representing How do you know it has navigatedvarious networks without being infected by a virus Secrecy how do you ensure that your agents maintain your privacy How do ensuresomeone else does not read your personal agent and execute it for his own gains Howdo ensure your agent is not killed and its contents coredumped Security how do you protect against viruses How do you prevent an incoming agentfrom entering an endless loop and consuming all the CPU cycles Cash how will the agent pay for services How do you ensure that it does not run amokand run up an outrageous bill on your behalfIn addition to these are the following Performance issues what would be the effect of having hundreds, thousands or millionsof such agents on a WAN Interoperabilitycommunicationbrokering services how do you providebrokeringdirectory type services for locating engines andor specific services How doyou execute an agent written in one agent language on an agent engine written inanother language How do you publish or subscribe to services, or support broadcastingnecessary for some other coordination approachesHaving listed these, it must be noted that some of them are already being addressedsuccessfully in development environments like TDE using various techniques including thefollowing using ASCIIencoded, SafeTcl scripts or MIMEcompatible email messages fortransportation using publickey and privatekey digital signature technology forauthentication, cash and secrecy and providing limited andor interpreted languages that willprevent illegal instructions from being executed, for security for example, environmentswould typically not allow an agent to write to memory as viruses do. As a result, muchsoftware and hardware e.g. new consumer electronics products which exploit mobile agentbased services are currently in the pipeline.5.4 InformationInternet Agents An OverviewInformation agents have come about because of the sheer demand for tools to help us managethe explosive growth of information we are experiencing currently, and which we willcontinue to experience henceforth. Information agents perform the role of managing,manipulating or collating information from many distributed sources.However, before we proceed, perhaps we should clarify that there is, yet again, a rather finedistinction, if any, between information agents and some of those which we have earlierclassed as interface or collaborative agents. For example, in Section 5.1.3, we saw thepresence of informationspecific collaborative agents in the Pleiades distributed architecturesee Figure 3. In Section 5.2.3, we described briefly Sheth  Maes news filtering agent,NewT, which helps filter and select articles from a continuous stream of Usenet Netnews. Wealso discussed briefly the Letizia search agent and the remembrance agent. We would notattempt to argue with any researcher who would rather class all these agents as informationagents. Interface or collaborative agents started out quite distinct, but with the explosion ofthe WWW and because of their applicability to this vast WAN, there is now a significantdegree of overlap. This is inevitable especially since information or internet agents are27defined using different criteria. They are defined by what they do, in contrast to collaborativeor interface agents which we defined by what they are i.e. via their attributes, see Figure 1.Many of the interface agents built at the MIT Media Labs, for example, are autonomous andlearn, but they have been employed in WWWbased roles hence, they are, in a sense,information agents. This is a rather subtle distinction, but it must be clarified.5.4.1 Hypothesis, Motivation and BenefitsWe are drowning in information but starved of knowledge John Naisbitt, Megatrends.Similarly, visvis the WWW, it is also the case that we are drowning in data but starved ofinformation. The underlying hypothesis of information agents is that, somehow, they canameliorate, but certainly not eliminate, this specific problem of information overload and thegeneral issue of information management in this information era. We agree with Tom Henry,vice president of SandPoint, who is quoted in Indermaur 1995 as saying that the biggestchallenge is to create a simple user interface so that information search and retrieval usinginformation agents will become as natural for people as picking up a phone or reading anewspaper. Though Henry is quoted in Indermaurs article in the context of assistant agents,we believe this is the ultimate goal for information agents. Your information agents would,perhaps, put together your own personal newspaper, just as you want it. The informationagents would have to be endowed with the capabilities of knowing where to look, how to findthe information and how to collate it.The case for having information agents should be clearer from the following. Davies Weeks 1995 report that in 1982, the volume of scientific, corporate and technicalinformation was doubling every 5 years. Three years later, i.e. 1988, it was doubling every2.2 years, and by 1992 every 1.6 years. This trend suggests that it should now be doublingevery year. What is more, much of this information is now accessible electronically on theWWW, whose phenomenal growth over the last 5 years has astonished most. NicholasNegroponte, head of MITs Media Labs, claimed in a recent talk at BT Labs that the web wasdoubling every fifty days. This latter figure is arguable we believe it is overly optimistic butthe explosive growth of information and the WWW is unquestionable.The motivation for developing informationinternet agents is at least twofold. Firstly, there issimply a yearning needdemand for tools to manage such information explosion. Everyone onthe WWW would benefit from them in just the same way as they are benefiting from searchfacilitators such as Spiders, Lycos or Webcrawlers. As Bob Johnson, an analyst at DataquestInc., notesin the future, it agents is going to be the only way to search the Internet, because no matterhow much better the Internet may be organised, it cant keep pace with the growth ininformation ....Secondly, there are vast financial benefits to be gained. Recall that Netscape Corporationgrew from relative obscurity to a billion dollar company almost overnight  and a Netscape orMosaic client offers generally browsing capabilities, albeit with a few addons. Whoeverbuilds the next killer application  the first usable Netscape equivalent of a proactive,dynamic, adaptive and cooperative agentbased WWW information manager  is certain toreap enormous financial rewards. Furthermore, 21 billion was spent by Internet users onpurchasing air tickets including hotel bookings, car rentals, etc. in 1995 alone. This comparessignificantly with the USEuropean market totals of 170 billion see http URL5285.4.2 How Information Agents WorkAs noted earlier, information agents have varying characteristics they may be static ormobile they be noncooperative or social and they may or may not learn. Hence, there is nostandard mode to their operation.Internet agents could be mobile, i.e. they may be able to traverse the WWW, gatherinformation and report what they retrieve to a home location. However, this is not the normas yet. Figure 6 depicts how the typical static ones work. It shows how an information agent,typically within some browser like Netscape, uses a host of internet management tools suchas Spiders and search engines in order to gather the information. The information agent maybe associated with some particular indexers, e.g. a Spider. A Spider is an indexer able tosearch the WWW, depthfirst, and store the topology of the WWW in a database managementsystem DBMS and the full index of URLs in the WAIS. Other searchindexing engines orspiders such as Lycos or Webcrawler can be used similarly to build up the index. Indeed,there are currently more than twenty spiders on the WWW.User Infomation Agent ProgramNorthStar RobotLycos WebCrawlerSpiderLocal cacheDBMSWAISURL SearchWorld Wide Web WWWMiteFigure 6  A view of how Information Agents Work Adapted from Indermaur, 1995The user information agent, which has been requested to collate information on some subject,issues various search requests to one or several URL search engines to meet the request.Some of this search may even be done locally if it has a local cache. The information iscollated and sent back to the user.5.4.3 A Prototypical Example the Internet SoftbotEtzioni  Weld 1994 describes a stateoftheart agent called the internet softbot softwarerobot. It is a fully implemented agent which allows a user to make a highlevel request, andthe softbot is able to use search and inference knowledge to determine how to satisfy therequest in the internet. In doing so, it is able to tolerate ambiguity, omissions and theinevitable errors in the users request. In their paper, Etzioni  Weld use a strong analogy toa real robot in order to describe their softbotbased interface to the internet.. For example,they describe the softbots effectors to include ftp, telnet, mail and numerous file manipulationcommands including mv or compress. The sensors provide the softbot with information aboutthe external world and they include internet facilities such as archie, gopher and netfind and otherUnix commands such as mv or compress netfind, for example, is used to determine some usersemail address.29The contribution of softbot, in its designers view, is threefold. Firstly, it provides anintegrated and expressive interface to the internet. Secondly, it chooses dynamically whichfacilities to invoke when and in what sequence. Thirdly, if a UUCP gateway goes downduring a search, it is able to backtrack from one facility to another, at runtime in order to tryan alternative to meet its goal. This is quite important, not least because the softbot is verygoal driven. Prima facie, the softbot presents a menubased interface through which users cancompose queries users are also allowed to use the firstorder logic based notation whichsupports negation, conjunction, quantification and disjunction, but studies have shown thatthey are uncomfortable with it. However, at its core, the softbot is a goaldriven planner. Ittranslates the filledin menu form into a softbot goal which it tries to satisfy. It is thereforeable to handle tasks such as send the budget memos to Mitchell at CMU and Get all ofGinsbergs technical reports that arent stored locally. Clearly, there is much disambiguationfor the softbot to do, e.g. in the former, who is exactly the intended recipient of the memosTo do this the softbot has to execute a finger mitchellcmu.edu, inter alia, to resolve this. In thelatter example, the softbot would need to use the ftp utility, but it would also have to find outwhere to retrieve Ginsbergs papers, which of his papers are not stored locally using acombination of universal quantification and negation, and, finally, issue ftp commands toretrieve them. In brief, the planner is the core module which is able to decompose a complexgoal expression into simpler ones and go on to solve them. It resolves issues such asinteractions between subgoals which it also detects automatically.Softbots may be implemented for a host of other problems including filtering emails,scheduling meetings and performing system maintenance tasks. We classed the softbot as aninformation agent rather than as an interface agent because learning is not the crucial featureof it, though it does some limited memorybased learning. For example, returning to anexample given earlier, the softbot is able to record for future reference that it is now familiarwith all the Mitchells at CMU  hence, obviating the need to carry out a disambiguationprocess next time a similar query is received.5.4.4 A Brief Critical Review of Information Agents WorkWe expect information agents to be a major growth area in the next couple of years. At BTLabs, Davies  Weeks 1995 have designed and implemented the Jasper agent  Jasper is anacronym for Joint Access to Stored Pages with Easy Retrieval. Jasper agents work on behalfof a user or a community of users, and is able to store, retrieve, summarise and inform otheragents of information useful to them found on the WWW. As a user works with his Jasperagent, a profile of his interests is built dynamically based on keywords. In effect, a Jasperagent is able to sit at the side of a user and suggest interesting WWW pages. Its suggestionsare based on a set of keywords given by the user and other interesting WWW pagessuggested by other users in the community. These pages are then summarised and keywordsare extracted from them which are used to index the pages. If another users keywords matchclosely some page, the summary of the page and its URL is emailed to the particular user.There are other information agents built in particular for information filtering. For example,Webwatcher Amstrong et al., 1995, the RBSE Spider Eichmann, 1994a and Metacrawlerhttp URL4. The last two are strictly speaking not agents, e.g. Metacrawler is certainly ametasearch engine which provides an interface to other search engines on the WWW. Aquery submitted to it is translated and forwarded to other search engines it collates the resultsand returns them to the user. Spiders are not agents because, even though they explore,autonomously, the topology of the web generally, they neither learn nor collaborate withother spiders, yet.30The key problem with static information agents is in keeping their indexes uptodate in anenvironment which is prone to complete chaos. Some researcher such as Etzioni  Weld1994 and Eichmann 1994a have also voiced concerns about the ethics of informationagents. We return briefly to such ethical issues towards the end of this paper.It is probable that the majority of future information agents will be of the mobile variety forsimilar reasons mentioned in Section 5.3. They would be able to navigate the WWW andstore its topology, in a database say, at their home site. The local database may then bequeried using SQL.5.4.5 Information Agents Some ChallengesThis section is much briefer. As regards the challenges of information agents, we believe thatthey are essentially either similar to those of interface or mobile agents. If the informationagents are static, then most of the challenges of interface agents apply see Section 5.2.5.However, if they are mobile, then most of the challenges for mobile agents are applicable seesection 5.3.4. Likewise, the criticisms of information agents are similar to those of interfaceand mobile agents depending on whether they are static or mobile respectively.5.5 Reactive Software Agents An OverviewReactive agents represent a special category of agents which do not possess internal,symbolic models of their environments instead they actrespond in a stimulusresponsemanner to the present state of the environment in which they are embedded. Reactive agentswork dates back to research such as Brooks 1986 and Agre  Chapman 1987, but manytheories, architectures and languages for these sorts of agents have been developed since.However, a most important point of note with reactive agents are not these i.e. languages,theories or architectures, but the fact that the agents are relatively simple and they interactwith other agents in basic ways. Nevertheless, complex patterns of behaviour emerge fromthese interactions when the ensemble of agents is viewed globally.Maes 1991a, p. 1 highlights the three key ideas which underpin reactive agents. Firstly,emergent functionality which we have already mentioned, i.e. the dynamics of theinteraction leads to the emergent complexity. Hence, there is no a priori specification orplan of the behaviour of the setup of reactive agents. Secondly, is that of taskdecomposition a reactive agent is viewed as a collection of modules which operateautonomously and are responsible for specific tasks e.g. sensing, motor control,computations, etc.. Communication between the modules is minimised and of quite a lowlevel nature. No global model exists within any of the agents and, hence, the global behaviourhas to emerge. Thirdly, reactive agents tend to operate on representations which are close toraw sensor data, in contrast to the highlevel symbolic representations that abound in theother types of agents discussed so far.5.5.1 Hypothesis, Motivation and BenefitsThe essential hypothesis of reactive agentbased systems is a specification of the physicalgrounding hypothesis, not to be confused with the physical symbol system hypothesis.Traditional AI has staked most of its bets on the latter which holds that the necessary andsufficient condition for a physical system to demonstrate intelligent action is that it be aphysical symbol system. On the contrary, the physical grounding hypothesis challenges thislongheld view arguing it is flawed fundamentally, and that it imposes severe limitations onsymbolic AIbased systems. This new hypothesis states that in order to build a system that is31intelligent, it is necessary to have representations grounded in the physical world Brooks,1991a. This hypothesis is quite radical and it turns, literally, the physical symbol systemhypothesis on its head. Brooks argues that this hypothesis obviates the need for symbolicrepresentations or models because the world becomes its own best model. Furthermore, thismodel is always kept uptodate since the system is connected to the world via sensors andoractuators. Hence, the reactive agents hypothesis may be stated as follows smart agentsystems can be developed from simple agents which do not have internal symbolic models,and whose smartness derives from the emergent behaviour of the interactions of the variousmodules.It is important to note that all current reactive software agents do not necessarily possessactuators and sensors which connect them to the physical world, though Brooks would insiston them. Indeed, in a paper titled Intelligence without Robots, Etzioni 1993 has arguedthat software environmentscircumvent many thorny but peripheral research issues that are inescapable in physicalenvironments, p. 7.However, the essence of the physical grounding hypothesis still holds with such reactiveagents no explicit symbolic representations, no explicit abstract symbolic reasoning and anemergent functionality. Reactive agents are simple and easy to understand, and theircognitive economy Ferber, 1994 is very low this is because they have to rememberlittle. They are situated, i.e. they do not plan ahead or revise any world models, and theiractions depend on what happens at the present moment.The key benefits which motivates reactive agents work, in addition to the hypothesismentioned earlier, is the hope that they would be more robust and fault tolerant than otheragentbased systems, e.g. an agent may be lost but without any catastrophic effects. Otherbenefits include flexibility and adaptability in contrast to the inflexibility, slow responsetimes and brittleness of classical AI systems. Another benefit, it is hoped, is that this type ofwork would address the frame problem Pylyshyn, 1987 which has so far proved intractablewith traditional AI techniques such as nonmonotonic reasoning.5.5.2 Reactive Agent ApplicationsIt must be stated that there are a relatively few number of reactive software agentbasedapplications. Partly, due to this reason, there is no standard mode to their operation rather,they tend to depend on the reactive agent architecture chosen. We describe briefly two ofthese architectures below.ExploreWanderAvoid ObstaclesS E N S I N A C T I N G..Figure 7  Brooks Subsumption ArchitecturePerhaps the most celebrated of them all, is Brooks 1991 subsumption architecture. ThoughBrooks architecture has been used to implement physical robots hence tightly connecting32perception to action, it could also be exploited in purely reactive software agents. Thearchitecture consists of a set of modules, each of which is described in a subsumptionlanguage based on augmented finite state machines AFSM. An AFSM is triggered intoaction if its input signal exceeds some threshold, though this is also dependent on the valuesof suppression and inhibition signals into the AFSM. Note that AFSMs represent the onlyprocessing units in the architecture, i.e. there are no symbols as those in classical AI work.The modules are grouped and placed in layers which work asynchronously such thatmodules in a higher level can inhibit those in lower layers see Figure 7. Each layer has ahardwired purpose or behaviour, e.g. to avoid obstacles or to enablecontrol wandering. Thisarchitecture has been used to construct, at least, ten mobile robots at MIT. Steels 1990 usessimilar agents to Brooks in order to investigate cooperation between distributed simulatedrobots using selforganisation.Arguably, the most basic reactive architecture is that based on situatedaction rules which, inturn, derives from some work carried out in by Suchman 1987. Situated action agents actessentially in ways which is appropriate to its situation, where situation refers to apotentially complex combination of internal and external events and states Connah, 1994.Situatedaction agents have been used in PENGI, a video game designed as part of Agresdoctoral thesis Agre, 1988, and SONJA Chapman, 1992. Researchers at Philips researchlaboratories in Redhill, UK, have implemented a situationaction based language called theRTA programming language Graham  Wavish, 1991. Indeed, they have used thislanguage to implement characters in computer games which they have since integrated intoCDi titles Wavish  Graham, 1995. Kaebling  Rosenschein 1991 have proposedanother language based on a modal logical formalism, which in turn is based on a paradigmcalled situated automata. Agents written in this language are compiled into digital circuitswhich implement the reactive agent system.In summary, few applications based on reactive software agents exist currently but thissituation will change before the millenium. A favourite application area for them seems to bethe games or entertainment industry, which of course is a multibillion pound industry. Forexample, the Philips researchers are already working on digital video and 3D graphicsbased,reactive agent animations Wavish  Graham, 1995.5.5.3 A Brief Critical Review of Reactive Agents WorkReactive agent systems can be used to simulate many types of artificial worlds as well asnatural phenomena. For example, Ferber 1994 describes how he has used them to simulateant societies where each ant is modelled as an agent and, a limited ecosystem composed ofthree kinds of agents biotapes, shoals of fish and fishermen. As he further explains, reactiveagents could make the computer become a virtual laboratory where the researcher couldmodify any experimental parameters and validate his model using both qualitative andquantitative data. Nwana 1993 describes a simulation of children in a playground whichwas implemented using the Agent Behaviour LanguagE ABLE, a precursor to RTAWavish  Graham, 1994. The ALIVE interactive environment mentioned briefly earlier isis an autonomous system because it employs real sensors in the form of a camera.Many criticisms can be levelled against reactive software agents and their architectures.Firstly, as already noted, there are too few applications about based on them. Secondly, thescope of their applicability is currently limited, mainly to games and simulations. EvenBrooks robots are yet to deliver useful industrial applications even though we can envisagehow they can be exploited in certain applications, e.g. in the toys domain. To be fair, it is still33early days for such research arguably, symbolic AI did not start delivering any usefulindustrial applications until the late 1970s or early 1980s, i.e. more than two decades aftersymbolic AI was born. So, there is a clear need to expand the range of languages, theories,architectures and applications for reactive agentbased systems. Thirdly, it is not obvious howto design such systems so that your intended behaviour emerges from the setup of agents.How many of such agents are required for some application Currently, since it is notallowable to tell the agents how to achieve some goal, as with genetic algorithms,one has to find a dynamics, or interaction loop or servo loop, involving the system andthe environment which will converge towards the desired goal. The interaction process onlycomes to a rest or a fixed pattern when the goals are achieved Maes, 1991b, 50.This would not only be timeconsuming, but it also smacks of trial and error with all itsattendant problems. Fourthly, how are such systems extended, scaled up or debugged Whathappens if the environment is changed Even Brooks 1991a acknowledges that suchquestions are frequently asked of his work and so he attempts to tackle them in this paper.However, we do not find his responses very convincing, yet, and perhaps only moreapplications would improve the trust in the reactive agent hypothesis. Finally, there is theissue of the entire physical grounding hypothesis. Brooks and other nouvelle AI researchersargue that the physical symbol system hypothesisimplicitly includes a number of largely unfounded great leaps of faith Brooks, 1991a, p.3.We hope they did not speak too soon perhaps, the same applies to the physical groundinghypothesis. Etzioni 1993, amongst others, has already challenged Brooks assertion that theway to make progress in AI isto study intelligence from the bottom up, concentrating on physical systems e.g. mobilerobots, situated in the world, autonomously carrying out tasks of various sorts Brooks,1991c, p. 569.Furthermore, Maes 1991b has already pointed out that this situated agents work has someimportant limitations precisely becauseof their lack of explicit goals and goalhandling capabilities p. 50,requiring the designers of the systems to precompile or hardwire the action selections. Forexample, she notes correctly that much effort was expended by the Pengi researchers inanalysing the strategies for playing the Pengo game, which were later hardwired intoPengi. Hence, while a planning approach leaves much to the agent, the situated agentsapproach leaves much to the designers.Maes 1991b opted for a more hybrid approach in her agent network architecture. In it sheimplemented an agent as a set of competence modules, each with STRIPSlike Fikes Nilsson, 1971 pre and post conditions. Modules also get activated if their activation levela real value is exceeded, and this level represents the relevance of the module in somesituation. If a module has a higher activation level, it will influence the agents behaviourmore. Modules are linked to one another implicitly via various links, e.g. a successor linkoccurs if a module X has a postcondition , which happens to be the precondition of moduleY.345.5.4 Reactive Agents Some ChallengesThis list of criticisms above is not exhaustive but it provides some of the challenges forreactive agent researchers to address. In summary, we see the main challenges to include thefollowing Expanding the range and number of applications based on reactive agents Methodology there is a yearning need for a clearer methodology to facilitate thedevelopment of reactive software agent applications. This may or may not require thedevelopment of more associated theories, architectures and languages. Much of thecurrent approaches, sadly, smacks of trial and error Nonfunctional issues issues such as scalability and performance would need to beaddressed, though these are unlikely to be important until clearer methodologies havebeen developed and evaluated.Despite these challenges, we would expect more applications to be handcrafted in themedium term.5.6 Hybrid Agents An Overview5.6.1 Hypothesis, Motivation and BenefitsSo far, we have reviewed five types of agents collaborative, interface, mobile, internet andreactive agents. The debates as to which of them is better are rather academic, and frankly,sterile  and rather too early to get into. Since each type has or promises its own strengthsand deficiencies, the trick as always is to maximise the strengths and minimise thedeficiencies of the most relevant technique for your particular purpose. Frequently, one wayof doing this is to adopt a hybrid approach, like Maes 1991b, which brought together someof the strengths of both the deliberative and reactive paradigms. Hence, hybrid agents refer tothose whose constitution is a combination of two or more agent philosophies within asingular agent. These philosophies include a mobile philosophy, an interface agentphilosophy, collaborative agent philosophy, etc.The key hypothesis for having hybrid agents or architectures is the belief that, for someapplication, the benefits accrued from having the combination of philosophies within asingular agent is greater than the gains obtained from the same agent based entirely on asingular philosophy. Otherwise having a hybrid agent or architecture is meaningless. Clearly,the motivation is the expectation that this hypothesis would be proved right the ideal benefitswould be the set union of the benefits of the individual philosophies in the hybrid. Considerthe obvious case of constructing an agent based on both the collaborative i.e. deliberativeand reactive philosophies. In such a case the reactive component, which would takeprecedence over the deliberative one, brings about the following benefits robustness, fasterresponse times and adaptability. The frame problem is also better ameliorated by the reactivecomponent. The deliberative part of the agent would handle the longer term goalorientedissues. Typically, such hybrid architectures end up having a layered architecture as isevidenced by Muller et al.s 1995 InteRRaP, Fergusons 1992 Touring Machines, andHayesRoths 1991 architectures. We describe them briefly below.5.6.2 Hybrid Agent Architectures As is the case with reactive agents, there are just but a few hybrid agent architectures. Aprototypical example of a hybrid example is Muller et al.s layered InteRRaP architecture35shown in Figure 8 developed at the German Research Centre for AI. It is an architecture thatimplements a layered approach to agent design.SG PSSG PSPSSGWorldModelMentalModelSocialModelPerception Communication ActionAgent KB Agent Control UnitCooperativePlanning LayerLocalPlanning LayerBehaviourbasedLayerWorld InterfaceBodyFigure 8  The InteRRaP Hybrid Architecture from Fischer et al., 1995This architecture can be used to construct an agent such as an autonomous robot. As shown, itconsists of an agent knowledge base and its associated control unit sitting on top of theperceptionaction component which also handles the lowlevel communications. There arethree control layers in this architecture the behaviourbased layer BBL, the local planninglayer LPL and the cooperative planning layer CPL. Clearly, the architecture marries thedeliberative and the reactive philosophies. The reactive part of the framework which allowsfor efficiency, reactivity and robustness are implemented by the BBL which contains a set ofpatterns of behaviour PoBs, in effect, situationaction rules. These describe the agentsreactive skills which implements fast situation recognition in order to react to timecriticalsituations. The intermediate LPL implements local goaldirected behaviour while the topmostCPL enables the agent to plancooperate with other agents in order to achieve multiagentplans, as well as resolve conflicts. LPL and CPL allow for more deliberation. These layers allwork with different models in the agents knowledge base BBL, LPL and CPL operate withthe world, mental and social models respectively. Each InteRRaP layer also consists of twoprocesses, SG and PS, which interact with each other as well as with neighbouring layers.These layers work asynchronously. The InteRRaP architecture has been evaluated byconstructing a FORKS application which simulates forklift robots working in an automatedloading dock environment. For more details on the InteRRaP architecture whose redesignhas been completed recently and the results of the evaluation, consult Muller et al. 1995,Muller 1994 and Fischer et al. 1996.Fergusons 1992a TouringMachines architecture is another good example of a hybridarchitecture for dynamic, rational and mobile agents Ferguson, 1992b, though the wordmobile does not refer to mobile agents as in Telescript agents, but to mobile agents as inautonomous robots. This architecture, which is similar to Brooks subsumption architecturesee Figure 7, consists of three control layers the reactive layer, the planning layer and themodelling layer which all work concurrently. A key distinction between TouringMachinesand Brooks subsumption architecture on the one hand, and InteRRaP on the other is that theformer are horizontal architectures while the latter is a vertical architecture. This means thatall the layers in TouringMachines and the subsumption architecture have access to theperceptionsensing data and all the layers can contribute to the actions as shown in Figure 7,while only the bottom layer in InteRRaP receives and acts on the perceptual data see Figure8. Therefore to achieve coordination in TouringMachines, Ferguson has control rules36capable of suppressing the input to a certain layer, much similar to the suppressioninhibitionmechanisms in the subsumption architecture.HayesRoths 1995 integrated architecture for intelligent agents consists of two layers thephysical layer which performs perceptionaction coordination, i.e. it senses, interprets, filtersand reacts to the dynamic environment in which the agent is embedded the cognitive layerreceives perceptual input from the physical controller to construct an evolving model, and toperform interpretation, reasoning and planning. Her goal is to provide an architecture forconstructing adaptive intelligent agents which can operate in specialised, but challenging,niches indeed, she argues cogently that AI agents must, of necessity, be nicheboundbecause they are knowledgebound. The fundamental theoretical concept which underlies herarchitecture captures succinctly the hybridism that belies it to construct an agent whichdynamically constructs explicit control plans to guide its choices among situatedtriggeredbehaviors, p. 334. Hence, the physical layer implements reactive situated behaviour whilethe cognitive layer performs some longer term, deliberative planning and scheduling, drawingfrom the evolving model. Though the HayesRoth 1991 paper was largely a design proposalaiming to provide sophisticated adaptive, intelligent, versatile and coherent agents, HayesRoth 1995 reports that the architecture has not only been implemented, but has also beenused to implement several experimental agents. For example, she reports on an agent,Guardian, which has been constructed for one niche  Intensive Care Unit ICU monitoring.Guardian is currently able to monitor on the order of twenty continuously sensed patient datavariables amongst several other occasionally sensed ones. A new demonstrator, Guardian 5,under development will monitor on the order of a hundred variables. She also reports that shehas begun applying the architecture to other niches including Aibots  adaptive intelligentrobots. HayesRoth et al. 1995 report on an evolving testbed application  an animatedimprovisational theatre company for children. The idea is to have animated characters hybridagents which can display spontaneous, situated, opportunistic and goaldirected behaviour.The agents collaborate via directed improvisation and the goal is to have the animatedcharacters produce a joint performance that follows the script and directions in an engagingmanner, p. 153.There are a few other hybrid architectures which we do not review here, an obvious one beingthe procedural reasoning system PRS in which the OASIS prototype Rao  Georgeff,1995 mentioned in Section 5.1.4 was implemented. The main reference for PRS is Georgeff Ingrand 1989. Another hybrid system is CIRCA Musliner et al., 1993.5.6.3 A Brief Critical Review of Hybrid Architectures and ChallengesHybrid agent architectures are still relatively few in numbers but the case for having them isoverwhelming. There are usually three typical criticisms of hybrid architectures in general,not necessarily the ones reviewed above. Firstly, hybridism usually translates to ad hoc  orunprincipled designs with all its attendant problems. Secondly, many hybrid architecturestend to be very applicationspecific, and for good reasons too. Thirdly, the theory whichunderpin hybrid systems is not usually specified. Therefore, we see the challenges for hybridagents research as quite similar to those identified for reactive agents see Section 5.5.4. Inaddition to these, we would also expect to see hybrids of other philosophies thanreactivedeliberative ones. For example, there is scope for more hybrids within a singularagent combining the interface agent and mobile agent philosophies which would enablemobile agents to be able to harness features of typical interface agents or some othercombination.375.7 Heterogeneous Agent Systems An OverviewHeterogeneous agent systems, unlike hybrid systems described in the preceding section,refers to an integrated setup of at least two or more agents which belong to  two or moredifferent agent classes. A heterogeneous agent system may also contain one or more hybridagents. As for the other classes, we next discuss their motivation, benefit, how they work, anexample and some challenges.5.7.1 Hypothesis, Motivation and BenefitsGenesereth  Ketchpel 1994 articulate clearly the motivation for heterogeneous agentsystems. The essential argument is that the world abounds with a rich diversity of softwareproducts providing a wide range of services for a similarly wide range of domains. Thoughthese programs work in isolation, there is an increasing demand to have them interoperate hopefully, in such a manner such that they provide addedvalue as an ensemble than they doindividually. The hypothesis is that this is plausible. Indeed, a new domain called agentbasedsoftware engineering has been invented in order to facilitate the interoperation ofmiscellaneous software agents. A key requirement for interoperation amongst heterogeneousagents is having an agent communication language ACL via which the different softwareagents can communicate with each other. The potential benefits for having heterogeneousagent technology are several Standalone applications can be made to provide valueadded services by enhancingthem in order to participate and interoperate in cooperative heterogeneous setups The legacy software problem may be ameliorated because it could obviate the need forcostly software rewrites as they be given new leases of life by getting them tointeroperate with other systems. At the very least, heterogeneous agent technology maycushion or lessen the blow or effect of routine software maintenance, upgrade orrewrites Agentbased software engineering provides a radical new approach to software design,implementation and maintenance in general, and software interoperability in particular.Its ramifications e.g. moving from passive modules in traditional software engineeringto proactive agentcontrolled ones would only be clear as this methodology and itstools become clearer.Genesereth  Ketchpel 1994 note that agentbased software engineering is often comparedto objectoriented programming in that an agent, like an object, provides a messagebasedinterface to its internal data structures and algorithms. However, they note that there is a keydistinction in objectoriented programming, the meaning of a message may differ fromobject to object this is the principle of polymorphism in agentbased software engineering,agents use a common language with an agentindependent semantics. They highlight threeimportant questions raised by the new agentoriented software engineering paradigm. Theyinclude p. 48 What is an appropriate agent communication language How are agents capable of communicating in this language constructed What communication architectures are conducive to cooperationIn their paper, they begin addressing such issues via ACL  an agent communication languagethey have been developing as part of a DARPA initiative. ACL, inter alia, consists of the38Knowledge Interchange Format KIF, the Knowledge Query and Manipulation LanguageKQML Finin  Wiederhold, 1991 and Ontolingua Gruber, 1991.5.7.2 How Heterogeneous Agent Systems WorkTo commence, we provide the rather specific definition of the word agent proffered inagentbased software engineering. It defines a software agent as suchif an only if it communicates correctly in an agent communication language Genesereth Ketchpel, 1994, p. 50.If new agents are constructed such that they abide by this dictum, then putting them togetherin a heterogeneous setup is possible, though not trivial. However, with legacy software, theyneed to be converted into software agents first. The latter authors note that there are threeways of doing this conversion. Firstly, the legacy software may totally be rewritten to meetthe criteria for agenthood  a most costly approach. Secondly, a transducer approach may beused. The transducer is a separate  piece of software which receives messages from otheragents and translates them into the legacy softwares native communication protocol, andpasses the messages into the program. Likewise, it also translates the programs responsesinto ACL which is sent on to other agents. This is the favoured approach in many situationswhere the code may be too delicate to tamper with or is unavailable. Lastly, another approachis the wrapper technique. In this approach, some code is injected into the program in orderto allow it communicate in ACL. The wrapper can access directly and modify the programsdata structures. This is clearly a more interventionist approach which requires the code to beavailable, but offers greater efficiency than the transduction approach.Once the agents are available, there are two possible architectures to choose from one inwhich all the agents handle their own coordination or another in which groups of agents canrely on special system programs to achieve coordination. The disadvantage of the former isthat the communication overhead does not ensure scalability which is a necessaryrequirement for the future of agents. As a consequence, the latter federated approach seeFigure 9 is preferred typically.AgentFacilitatorAgent AgentFacilitatorAgent AgentFigure 9  A Federated System Adapted from Genesereth  Ketchpel, 1994In the above federated setup, there are five agents distributed in two machines, one with twoagents and the other with three. The agents do not communicate directly with one another butdo so through intermediaries called facilitators which are similar to Wiederholds 1992mediators. Essentially, the agents surrender some of their autonomy to the facilitators whoare able to locate other agents on the network capable of providing various services. Theyalso establish the connection across the environments and ensure correct conversationamongst agents. ARCHON Wittig, 1992 used such an architecture.395.7.3 A Brief Critical Review of Heterogeneous Agent Systems WorkPACT is an acronym for Palo Alto Collaborative Testbed which exemplifies theheterogeneous agents approach. It is an interesting experiment which begins to examinethe technological and sociological issues of building largescale, distributed concurrentengineering systems. The approach has been to integrate existing multitool systems that arethemselves frameworks, each developed with no anticipation that they would subsequentlybe integrated Cutkosky et al., 1993.The prototype they built integrated four legacy concurrent engineering systems into acommon framework. More specifically, it involved thirty one agentbased programsexecuting on fifteen workstations and microcomputers. The agents were organised into ahierarchy based around facilitators see Figure 9. Agents communicate with other agents viatheir facilitators. This PACT experiment was also part of the DARPA knowledge sharingeffort.A related area to heterogeneous agent systems is the new discipline of Intelligent andCooperative Information Systems ICIS, born in 1992, which seeks to integrate informationsystems, software engineering, databases and AI by using information agents. Papazoglou etal. 1992 describe such a framework which integrates geographicallydispersed database andknowledge base systems KBSs. In ICIS, an agent is attached to each database orinformation system, and thus they behave like their frontends, i.e. a transduction approach isused. This framework allows for requests for some global piece of information that cutsacross these databases and KBSs. The requests need to be decomposed by information agentsinto subrequests and disseminated to the appropriate systems and the responses are latercollated. Another similar architecture is the Carnot architecture Huhns et al., 1993 at MCCwhich is also addressing the problem of logically unifying physically distributed, enterprisewide, heterogeneous information. The essential component of Carnot agents are theExtensible Service Switches ESSs which are the communication aides to the legacysystems. Essentially, ESSs  are facilitators which enable both syntactic and semanticcommunication between the heterogeneous information systems. Unlike in the agentbasedsoftware engineering paradigm, there is a global schema to describe the information in thedatabases. All communication between two information systems, A and B say, is as followsthe query in As local context is translated to the global schema which in turn gets translatedto Bs local context and vice versa.The work on heterogeneous agent systems is ongoing and there is a need for methodologies,tools, techniques and standards for achieving such interoperability amongst heterogeneousinformation sources. The challenges, yet to be met, are captured succinctly in the threequestions posed by Genesereth  Ketchpel noted in Section 5.7.1. Such work, as is evidencedin their paper, is already underway.This concludes our panoramic overview of the different classes of agents identified in Section4.6 Some General Issues and the Future of AgentsSmart agents are here to stay. Once unleashed, technologies do not disappear Norman,1994, p. 71.We agree fully with these sentiments which is why we believe agent technology is not apassing fad. We have now overviewed a broad range of work which goes under the banner ofagents. We have outlined their various promises as well as their challenges. However, apart40from such technical issues, there is also a range of societal i.e. social and ethical problemswhich are looming. Donald Norman writesProbably all the major software manufacturers are exploring the use of intelligent agents.Myths, promises, and reality are all colliding. But the main difficulties I foresee are social,not technical. How will intelligent agents interact with people and perhaps more importantly,how might people think about agents Norman, 1994, p. 68.We disagree with Norman as regards the major technical hurdles ahead as shown in theprevious section, there are some extremely demanding technical issues to be resolved in mostof the agent classes reviewed. However, we agree that he poses an extremely pertinentquestion. There are issues which society would have to grapple with through variouslegislations and they would be very thorny. They include the following Privacy how do you ensure your agents maintain your much needed privacy whenacting on your behalf Responsibility which goes with relinquished authority when you relinquish some ofyour responsibility to software agents as you would do implicitly, be aware of theauthority that is being transferred to itthem. How would you like to come back homeafter a long hard day at work being the proud owner of a used car negotiated and boughtfor, courtesy of one of your Kasbah software agents How do you ensure the agentdoes not run amok and run up a huge credit card bill on your behalf Legal issues following on from the latter, imagine your agent which you probablybought offtheshelf and customised offers some bad advice to other peer agentsresulting in liabilities to other people, who is responsible The company who wrote theagent You who customised it Both We envisage a new raft of legislation would needto be developed in the future to cover software agents. Ethical issues these would also need to be considered. Already, David Eichmann1994b is already concerned enough about the ethics of software agents that he hasproposed an agent etiquette for information service and user agents as they gatherinformation on the WWW. They include the following Agents must identify themselves They must moderate the pace and frequency of their requests to some server They must limit their searches to appropriate servers They must share information with others They must respect the authority placed on them by server operators An agents services much be accurate and uptodate.Etzioni  Weld 1994 have proposed others including Safety  the agent should not destructively alter the world Tidiness  the agent should leave the world as it found it Thrift  the agent should limit its consumption of scarce resources Vigilance  the agent should not allow client actions with unanticipated results.41However, such issues are not that critical immediately, but would be in the medium to longterms. In the short term, we expect some basic agentbased software to be rolled out e.g.some basic interface agents such as mail filtering or calendar scheduling agents. More basicmobile agent services would also be provided in the short term. We can also predictcomfortably that many vendors would claim that their products are agentbased even thoughthey most certainly are not. For example, we are already hearing of compression agents andsystem agents when disk compressers and operating systems would do respectively, andhave done in the past. As Guilfoyle 1995 warnsthere is a danger, however, that customers may be disappointed by the gap betweencolourful press reports about smart agents handling half the work, and the reality of ifthenrules for message routing, p. 139.In the medium term 3 to 5 years, some more decent agent applications would be rolled outfor most of the classes of agents overviewed in this paper. Perhaps, there would becollaborative agents andor integrated heterogeneous agent applications doing limited, butreal workflow or air traffic management or controlling real telecommunication networks say,etc., rather than just simulations. Useful, but limited, interface agents should be availablewhich perform roles including the following eager assistants, WWW guides, memory aids,entertainment and WWW filterscritics. Indeed, the HOMRRingo system is already beingmarketed as Firefly by Agents Inc.  a Bostonbased agents company. Open SesameCaglayan et al., 1996  another interface agent which employs a neural network learningtechnique, is already on the market from Charles River Analytics Cambridge, MA. Moremobile and information agent applications and languages would soon be rolled out byvendors. We expect reactive andor hybrid agent technology to start delivering some realeveryday industrial applications during this period. Furthermore, during this medium term,we expect the WWW to be commercialised, to some degree, enabling agents of differentclasses to play a role in paying for services and performing some restricted buying and sellingon our behalf, as Kasbah agents propose to do. We would also start seeing a proliferation ofspecialist agents conferences agents in the aviation industry, agents in law, etc. We alsoenvisage that the new domain of agentbased software engineering will grow from strength tostrength. In the long term  7 years, we would expect to see agents which approximate truesmartness in that they can collaborate and learn, in addition to being autonomous in theirsettings. They would possess rich negotiation skills and some may demonstrate what may bereferred to, arguably, as emotions. We caution against the usage of such words as the latter,not least because the agent literature abounds with such vocabulary which have subtle andcomplex meanings in the human context Smith, 1996a. However, it is also at this stagesociety would need to begin to confront some of the legal and ethical issues which are boundto follow the large scale fielding of agent technology. In the long term too, agents would alsoprovide another design approach to constructing complex pieces of software.Indermaur 1994 writesthey cant fly yet, but intelligent agents and smart software are beginning to walk p. 97.Our view is different using Indermaurs metaphor, we argue that limited software agents arejust to about to crawl out of research laboratories apart from a few interface andinformation agents, there is still a very long way, yet, to them walking, yet alone to theiradolescence.In summary, we believe, like Greif 1994, that agents can have an enormous effect, but thatthis will appear in everyday products as an evolutionary process, rather than a revolutionary42one predicted by much press coverage. For example, the Ovum figures quoted in Guilfoyles1995 paper suggest a seven to eight fold increase in the agents market, in Europe and USAalone by the year 2000 i.e. in four years time  this suggests a revolution  Greif notescorrectly that agents would initially leverage simpler technologies available in mostapplications e.g. word processors, spreadsheets or knowledgebased systems. Then agentswould gradually be evolved into more complicated applications. We hope the over optimisticclaims about agent technology are moderated. It is a sad fact that the only jarring voices inthis hymn of confident approbation about agent technology come from those doing the realresearch, and who know what some of the real technical, social and ethical challenges are.7 Conclusion and a PostscriptThis paper has pilfered from a diverse literature in order to overview, in a single paper, therapidly evolving area of software agents. Only one other paper Wooldridge  Jennings,1995a has attempted a similar extensive review of this area, which they do from a theories,architecture and languages angle. In this paper, we have overviewed the same area from theviewpoint of the clear diversity of agents being investigated in universities and researchlaboratories worldwide. We hope it provides a useful contribution to understanding thisexciting field of software agents. However, we conclude this paper with the following,arguably controversial andor casual, postscript.The word agent is currently in vogue in the popular computing press as it is within theartificial intelligence AI and computer science communities. It has become a buzzwordbecause it is both a technical concept and a metaphor. However, its rampant use shouldconjure up the problems faced with other flamboyant titles including artificial intelligenceitself far too ambitious claims precede the real technical work that follows the subject tendsto attract dilettantes who just jump on the bandwagon in order to make a quick buck orfor some other ulterior motives and coupled with another contentious word such asintelligent as in intelligent agent, prima facie at least, it generates unrealistic expectationsof the stateoftheart. These exaggerated claims, overexpectations and the overselleventually drown out the real and sometimes excellent achievements, which never matchthe hype. In short, much is promised but little is delivered The aftermath of all this is usuallyquite predictable interest in the area soon wanes and the research funding, gradually orrapidly, disappears. Eventually, the dilettantes leave in search for greener pastures and leavethe real researchers to pick up the pieces. Is this the fate for agents research  a passing fadHopefully notThere are several things which the serious agent researchers can do. Firstly, they can drop theintelligent in intelligent agents as we have done in the title of this paper its connotation,and hence expectations, are much less. Secondly, they could attempt to ensure, wherepossible, that dilettantes do not publish articles on agents in the popular press, at least notuntil it has been reviewed by someone whose interest in the area is more than superficial.This is sometimes possible because some experts usually get asked to review such articlesbefore they go to press. Thirdly, they i.e. experts should not themselves engage inoverselling the domain and, lastly, they must always be critical of the progress in the area inorder to provide a more realistic appraisal of the stateoftheart. In this overview paper, wehave attempted to abide by the principles of this doctrine. It is up to the reader to judge howsuccessful we have been in meeting these principles in this paper.438 AcknowledgementsWe acknowledge Nader Azarmi for encouraging us to write this paper, particularly throughhis provision of a fraction of the literature referenced in it. David Griffiths also encouragedthe writing of this article. Several informal discussions with Barry Crabtree, Mark Wiegand,Paul OBrien, Robin Smith and Nader Azarmi have also shaped some of the viewspropounded in it. Barry, Robin, Nader, Divine Ndumu and Brian Odgers have also providedfeedback which has improved the quality of this paper. Lastly, we acknowledge thecomments of the three anonymous reviewers, though two of them were not so anonymousafterall. The author bears all the responsibility for any misunderstandings andor errorstherein. The views expressed are also those of the author, and not necessarily those of BT plc.This work was funded by BT Laboratories.9 ReferencesAgre, P. E. 1988, The Dynamic Structure of Everyday Life, Ph.D Thesis, Department ofElectrical Engineering and Computer Science, MIT.Agre, P. E.  Chapman, D. 1987, Pengi An Implementation of a Theory of Activity,Proceedings of the 6th National Conference on Artificial Intelligence, San Mateo, CAMorgan Kaufmann, 268272.AmbrosIngerson, J.  Steel, S. 1988, Integrating Planning, Execution and Monitoring,In Proceedings of the 7th National Conference on Artificial Intelligence AAAI88, StPaul, MN, 8388.Amstrong, R., Freitag, D., Jopachims, T.  Mitchell, T. 1995, Webwatcher A LearningApprentice for the World Wide Web, In Proceedings of the Symposium on InformationGathering from Heterogeneous, Distributed Environments, AAAI Press.Appleby, S.  Steward, S. 1994, Mobile Software Agents for Control inTelecommunications Networks, BT Technological Journal 12 2, 104113, April.Bates, J. 1994, The Role of Emotion in Believable Characters, Communications of theACM 37 7, 122125.Bond, A. H.  Gasser, L. 1988, Readings in Distributed Artificial Intelligence, San Mateo,CA Morgan Kaufmann.Bratman, M. E., Israel, D, J.  Pollack, M. E. 1988, Plans and ResourceBoundedPractical Reasoning, Computational Intelligence 4, 349355.Brooks, R. A. 1986, A Robust Layered Control System for a Mobile Robot, IEEEJournal of Robotics and Automation 2 1, 1423.Brooks, R. A. 1991a, Elephants Dont Play Chess, In Maes, P. ed 1991, DesigningAutonomous Agents Theory and Practice from Biology to Engineering and Back, LondonThe MIT press, 315.Brooks, R. A. 1991b, Intelligence without Representation, Artificial Intelligence 47, 139159.Brooks, R. A. 1991c, Intelligence without Reason, In Proceedings of the 12thInternational Joint Conference on Artificial Intelligence, Menlo Park, CA MorganKaufmann, 569595.Caglayan, A., Snorrason, M., Jacoby, J., Mazzu, J.  Jones, R. 1996, Lessons from OpenSesame a User Interface Learning Agent,  In Proceedings the First InternationalConference on the Practical Application of Intelligent Agents and MultiAgent TechnologyPAAM 96, London, 2224 April, 6174.44Carver, N.  Lesser, V. 1995, The DRESUN Testbed for Researcg in FAC DistributionSituation Assessment Extensions to the Model of External Evidence, In Proceedings ofthe 1st International Conference on MultiAgent Systems ICMAS95, San Francisco,USA, June, 3340.Carver, N., Cvetanovic, Z.  Lesser, V. 1991, Sophisticated Cooperation in DistributedProblem Solving, in Proceedings of the 9th National Conference on ArtificialIntelligence 1, Anaheim, 191198.Chaibdraa, B., Moulin, B., Mandiau, R.  Millot, P. 1992, Trends in DistributedArtificial Intelligence, Artificial Intelligence Review 6, 3566.Chapman, D. 1992, Vision, Instruction and Action, London MIT Press.Chavez, A.  Maes, P. 1996, Kasbah An Agent Marketplace for Buying and SellingGoods, In Proceedings the First International Conference on the Practical Application ofIntelligent Agents and MultiAgent Technology PAAM 96, London, 2224 April, 7590.Cohen, P. R.  Levesque, H. J. 1990, Intention is Choice with Commitment, ArtificialIntelligence 42, 213261.Connah, D. 1994, The Design of Interacting Agents for Use in Interfaces, in BrouwerJanse, D.  Harringdon, T. L. eds., HumanMachine Communication for EducationalSystems Design, NATO ASI Series, Series F, Computer and Systems Sciences 129,Heidelberg Springer Verlag.Cutkosky, M. R., Engelmore, R. S., Fikes, R. E., Genesereth, M. R., Gruber, T. R.,Tenenbaum, J. M.  Weber, J. C. 1993, PACT An Experiment in IntegratingConcurrent Engineering Systems, IEEE Computer 1, January, 2837.Davies, N. J.  Weeks, R. 1995, Jasper Communicating Information Agents, inProceedings of the 4th International Conference on the World Wide Web, Boston, USA,December.Davis, R.  Smith, R. G. 1983, Negotiation as a Metaphor for Distributed ProblemSolving, Artificial Intelligence 20, 63109.Decker, K. S. 1995, Distributed Artificial Intelligence Testbeds, In OHare, G. Jennings, N. eds., Foundations of Distributed Artificial Intelligence, Chapter 3, LondonWiley, forthcoming.Decker, K. S.  Lesser, V. R. 1993, Designing a Family of Coordination Algorithms, inProceedings of the 11th National Conference on Artificial Intelligence, Washington, 217224.Dent, L., Boticario, J., McDermott, J., Mitchell, T.  Zabowski, D. A. 1992, A PersonallLearning Apprentice, In Proceedings of the 10th National Conference on ArtificialIntelligence, San Jose, California, AAAI Press, 96103.Doran, J., Carvajal, H., Choo, Y.  Li, Y. 1991, The MCS Multiagent TestbedDevelopments and Experiments, in Deen, S. ed., Cooperating Knowledge basedSystems, Heidelberg SpringerVerlag, 240251.Durfee, E. H.  Montogomery, T. A. 1989, MICE A Flexible Testbed for IntelligentCoordination Experiments, In Proceedings of the 1989 Distributed Artificial IntelligenceWorkshop, 2540.Durfee, E. H., Lesser, V. R.  Corkill, D. 1987, Coherent Cooperation amongCommunicating Problem Solvers, IEEE Transactions on Computers C3611, 12751291.Eichmann, D. T. 1994a, The RBSE Spider  Balancing Effective Search Against WebLoad, In Proceedings of the First International Conference on the World Wide Web,Geneva, Switzerland, May 2527, 369378.45Eichmann, D. T. 1994b, Ethical Web Agents, Proceedings of the 2nd WWW Conference,httpwww.ncsa.uiuc.eduSDGIT94Etzioni, O. 1993, Intelligence without Robots A Reply to Brooks, AI Magazine 14 4, 713.Etzioni, O.  Weld, D. 1994, A SoftbotBased Interface to the Internet, Communicationsof the ACM 37 7, 7276.Ferber, J. 1994, Simulating with Reactive Agents, In Hillebrand, E.  Stender, J. Eds.,Many Agent Simulation and Artificial Life, Amsterdam IOS Press, 828.Ferguson, I. A. 1992a, Towards an Architecture for Adaptive, Rational, Mobile Agents,In Werner, E.  Demazeau, Y. eds., Decentralized AI 3 Proceedings of the 3rdEuropean Workshop on Modelling Autonomous Agents and MultiAgent WorldsMAAMAW91, Amsterdam Elsevier, 249262.Ferguson, I. A. 1992b, TouringMachines An Architecture for Dynamic, Rational, MobileAgents, PhD Thesis, Computer Laboratory, University of Cambridge, UK.Fikes, R. E.  Nilsson, N. J. 1971, STRIPS A New Approach to the Application ofTheorem Proving to Problem Solving, Artificial Intelligence 2, 189208.Finin, T.  Wiederhold, G. 1991, An Overview of KQML A Knowledge Query andManipulation Language, Department of Computer Science, Stanford University.Fisher, K., Muller, J. P.  Pischel, M. 1996, Unifying Control in a Layered AgentArchitecture, Technical Report TM9405, German Research Center for AI  DFKIGmbH.Foner, L. 1993, Whats an Agent, Anyway A Sociological Case Study, Agents Memo9301, MIT Media Lab, Cambridge, MA.Foner, L. 1996, A MultiAgent Referral System for MatchMaking, In Proceedings theFirst International Conference on the Practical Application of Intelligent Agents andMultiAgent Technology PAAM 96, London, 2224 April, 245262.Gasser, L. 1991, Social Conceptions of Knowledge and Action DAI Foundations andOpen Systems, Artificial Intelligence 47, 107138.Gasser, L.  Huhns, M. 1989, Distributed Artificial Intelligence 2, San Mateo, CA MorganKaufmann.Gasser, L., Braganza, C.  Herman, N. 1987, MACE A Flexible Testbed fo DistributedAI Research, In Huhns, M. ed., Distributed Artificial Intelligence, Research Notes inArtificial Intelligence, London Pitman, Chapter 5, 119152.Gasser, L. , Rosenschein, J. S.  Ephrati, E. 1995, Introduction to MultiAgent Systems,Tutorial A Presented at the 1st International Conference on MultiAgent Systems, SanFrancisco, CA, June.Georgeff, M. 1996, Agents with Motivation Essential Technology for Real WorldApplications, The First International Conference on the Practical Applications ofIntelligent Agents and MultiAgent Technology, London, UK, 24th April 1996.Georgeff, M. P.  Ingrand, F. F. 1989, DecisionMaking in an Embedded ReasoningSystem, In Proceedings of the 11th International Joint Conference on ArtificialIntelligence, Detroit, MI, Menlo Park, CA Morgan Kaufmann, 972978.Genesereth, M. R.  Ketchpel, S. P. 1994, Software Agents, Communications of theACM 37 7, 4853.Graham, M.  Wavish, P. R. 1991, Simulating and Implementing Agents and MultipleAgent Systems, In Proceedings of the European Simulation MultiConferencce,Copenhagen, June.46Greif, I. 1994, Desktop Agents in GroupEnabled Products, Communications of the ACM37 7, 100105.Gruber, T. Ontolingua A Mechanism to Support Portable Ontologies, KSL9166, StanfordUniversity Knowledge Systems Laboratory.Guilfoyle, C. 1995, Vendors of Agent Technology, UNICOM Seminar on IntelligentAgents and their Business Applications, 89 November, London, 135142.HayesRoth, B. 1991, An Integrated Architecture for Intelligent Agents, SIGART Bulletin2, 4, 7981.HayesRoth, B. 1995, An Architecture for Adpative Intelligent Systems, ArtificialIntelligence 72 12, 329365.HayesRoth, B. Brownston, L.  van Gent, R. 1995, Multiagent Collaboration in DirectedImprovisation, In Proceedings of the 1st International Conference on MultiAgentSystems ICMAS95, San Francisco, USA, June, 148153.Hermens, L.  Schlimmer, J. 1993, A Machine Learning Apprentice for the Completion ofRepetitive Forms, In Proceedings of the 9th IEEE Conference on Artificial IntelligenceApplications, Orlando, Florida IEEE Press, 164170.Hewitt, C. 1977, Viewing Control Structures as Patterns of Passing Messages, ArtificialIntelligence 83, 323364.Huhns, M. N.  Singh, M. P. 1994, Distributed Artificial Intelligence for InformationSystems, CKBS94 Tutorial, June 15, University of Keele, UK.Indermaur, K. 1995, Baby Steps, Byte, March, 97104.Huhns, M. N. , Jacobs, N., Ksieyk, T., Shen, WM, Singh, M. P.  Cannata, P. E. 1993,Integrating Enterprise Information Models in Carnot, Proceedings of the InternationalConference on Intelligent abd Cooperative Information Systems ICICIS, 3242.Jennings, N. R. 1993, Specification and Implementation of a Belief Desire JointIntentionArchitecture for Collaborative Problem Solving, Journal of Intelligent and CooperativeInformation Systems 23, 289318.Jennings, N. R., Varga, L. Z., Aarnts, R. P., Fuchs, J.  Skarek, P. 1993, TransformingStandAlone Expert Systems into a Community of Cooperating Agents, InternationalJournal of Engineering Applications of Artificial Intelligence 64, 317331.Jennings, N., Corera, J. M., Laresgoiti, L., Mamdani, E., Perriollat, F., Skarek, P.  Varga, L.1995, Using ARCHON to Develop RealWorld DAI Applications for ElectricityTransportation and Particle Accelerator Control, IEEE Expert, Special Issue on RealWorld Applications of DAI systems.Kaebling, L. P.  Rosenschein, S. J. 1990, Action and Planning in Embedded Agents, InMaes, P. ed 1991, Designing Autonomous Agents Theory and Practice from Biology toEngineering and Back, London The MIT press, 3548.Kay, A. User Interface A Personal View, In Laurel, B. ed., The Art of HimanComputerInterface Design, Reading, Mass AddisonWesley.King, J. A. 1995, Intelligent Agents Bringing Good Things to Life, AI Expert, February,1719.Kozierok, R.  Maes, P. 1993, A Learning Interface Agent for Scheduling Meetings,Proceedings of the ACMSIGCHI International Workshop on Intelligent User Interfaces,Florida, 8193.Lang, K. 1995, Newsweeder Learning to Filter Netnews, In Proceedings of the MachineLearning Conference.47Lashkari, Y., Metral, M.  Maes, P. 1994, Collaborative Interface Agents, InProceedings of the 12th National Conference on Artificial Intelligence 1, Seattle, WA,AAAI Press, 444449.Lesser, V.  Corkill, D. 1981, Functionally Accurate, Cooperative Distributed Systems,IEEE Transactions on Systems, Man, and Cybernetics C111, 8196.Levitt, R., Cohen, P., Kunz, J., Nass, C., Christiansen, T.  Jin, Y. 1994, The VirtualDesign Team Simulating how Organisational Structure and Communication Tools affectTeam Performance, In Carley, K.  Prietula, M. eds. Computational OrganisationTheory, San Francisco Lawrence Erlbaum.Lieberman, H. 1995, Letizia An Agent that Assists Web Browsing, In Proceedings ofIJCAI 95, AAAI Press.Maes, P. ed 1991a, Designing Autonomous Agents Theory and Practice from Biology toEngineering and Back, London The MIT press.Maes, P. 1991b, Situated Agents Can Have Goals, In Maes, P. ed 1991a, DesigningAutonomous Agents Theory and Practice from Biology to Engineering and Back, LondonThe MIT press, 4970.Maes, P. 1994, Agents that Reduce Work and Information Overload, Communications ofthe ACM 37 7, 3140.Maes, P. 1995a, Intelligent Software, Scientific American 273 3, September.Maes, P. 1995b, Artificial Intelligence meets Entertainment Lifelike AutonomousAgents, Communications of the ACM 38 11, November, 108114.Minsky, M. 1985, The Society of Mind, New York Simon  Schuster.Mitchell, T., Caruana, R., Freitag, D., McDermott, J.  Zabowski, D. 1994, Experiencewith a Learning Personal Assistant, Communications of the ACM 37 7, 8191.Moukas, A. 1996, Amalthaea Information Discovery and Filtering using a MultiagentEvolving Ecosystem, Proceedings the First International Conference on the PracticalApplication of Intelligent Agents and MultiAgent Technology PAAM 96, London, 2224April, 421436.Muller, J. P. 1994, A Conceptual Model for Agent Interaction, In Deen, S. M. ed.,Proceedings of the 2nd International Working Conference on Cooperative KnowledgeBased Systems CKBS94, Keele University Dake Centre, 213234.Muller, J. P., Pishel, M.  Thiel, M. 1995, Modelling Reactive Behaviour in VerticallyLayered Agent Architectures, In Wooldridge, M.  Jennings, N. eds. 1995b,Intelligent Agents, Lecture Notes in Artificial Intelligence 890, Heidelberg SpringerVerlag, 261276.Musliner, D. H., Durfee, E. H.  Shin, K. G. 1993, CIRCA A Cooperative IntelligentRealTime Control Architecture, IEEE Transactions on Systems, Man Cybernetics 23.Newell, A. 1982, The Knowledge Level, Artificial Intelligence 18, 87127.Norman, D. 1994, How might people interact with agents, Communications of the ACM37 7, 6876.Nwana, H. S. 1993, Simulating a Childrens Playground in ABLE, Working Report,Department of Computer Science, Keele University, UK.Nwana, H. S. 1996, The Potential Benefits of Software Agent Technology to BT, InternalTechnical Report, Project NOMADS, Intelligent Systems Research, AAT, BT Labs,UK.Nwana, H. S., Lee, L.  Jennings, N. R. 1996, Coordination in Software Agent Systems,British Telecommunications Technology Journal 14 4, October.48Nwana, H. S.  Wooldridge, M. 1996, Software Agent Technologies, BritishTelecommunications Technology Journal 14 4 , October.OBrien, P.  Wiegand, M. 1996, Agents of Change in Business Process Management,British Telecommunications Technology Journal 14 4, October.Ovum 1994, Ovum Report on Intelligent Agents The New Revolution in Software.Papazoglou, M. P., Laufman, S. C.  Sellis, T. K. 1992, An Organisational Framework forCooperating Intelligent Information Systems, Intelligent and Cooperative InformationSystems 11, 169202.Plu, M. 1995, Software Agents in Telecommunications Network Environments,UNICOM Seminar on Intelligent Agents and their Business Applications, 89 November,London, 225243.Pylyshyn, Z. W. 1987, ed., The Robots Dilemma The Frame Problem Problem inArtificial Intelligence, Norwood, NJ Ablex.Rao, A. S.  Georgeff, M. P. 1995, BDI Agents From Theory to Practice, InProceedings of the 1st International Conference on MultiAgent Systems ICMAS95, SanFrancisco, USA, June, 312319.Reinhardt, A. 1994, The Network with Smarts, Byte, October, 5164.Rosenschein, J. S. 1985, Rational Interaction Cooperation Among Intelligent Agents, PhDThesis, Stanford University.Rosenschein, J. S.  Zlotkin, G. 1994, Rules of Encounter Designing Conventions forAutomated Negotiation among Computers, Cambridge MIT Press.Rhodes, B. J.  Starner, T. 1996, Remembrance Agent A Continuously AutomatedInformation Retrieval System, In Proceedings the First International Conference on thePractical Application of Intelligent Agents and MulltiAgent Technology PAAM 96,London, 2224 April, 487496.Shardanand, U.  Maes, P. 1995, Social Information Filtering for Automating Word ofMouth, In Proceedings of CHI95, Denver, CO., May.Sheth, B.  Maes, P. 1993, Evolving Agents for Personalised Information Filtering, InProceedings of the 9th IEEE Conference on Artificial Intelligence for Applications.Shoham, Y. 1993, AgentOriented Programming, Artificial Intelligence 601, 5192.Smith, R. G. 1980, The Contract Net Protocol HighLevel Communication and Control ina Distributed Problem Solver, IEEE Transactions on Computers C29 12.Smith, R. 1996a, Software Agent Technology, Proceedings ofThe First InternationalConference on the Practical Applications of Intelligent Agents and MultiAgentTechnology, London, UK, 557571.Smith, R. 1996b, Personal Communication.Steels, L. 1990, Cooperation between Distributed Agents Through SelfOrganisation, InDemazeau, Y.  Muller, J. P. eds., Decentralized AI  Proceedings of the 1st MAAMAW,Amsterdam Elsevier, 175196.Suchman, L. A. 1987, Plans and Situated Actions The Problem of HumanMachineCommunication, Cambridge Cambridge University Press.Sycara, K. 1995, Intelligent Agents and the Information Revolution, UNICOM Seminaron Intelligent Agents and their Business Applications, 89 November, London, 143159.Titmuss, R., Winter, C. S.  Crabtree, B. 1996, Agents, Mobility  MultimediaInformation, Proceedings the First International Conference on the Practical Applicationof Intelligent Agents and MulltiAgent Technology PAAM 96, London, 2224 April,693708.URL1 httpwww.cs.cmu.eduafscs.cmu.eduprojecttheo5wwwpleiades.html.49URL2 httpwww.genmagic.com.URL3 httpwww.sel.sony.com.URL4 httpwww.metacrawler.com.URL5 httphaas.berkeley.eduheilmanagentsWavish, P.  Graham, M. 1994, Roles, Skills and Behaviour, In Wooldridge, M. Jennings, N. eds. 1995b, Intelligent Agents, Lecture Notes in Artificial Intelligence890, Heidelberg Springer Verlag, 371386.Wavish, P.  Graham, M. 1995, A Situated Action Approach to Implementing Charactersin Computer Games, Applied AI Journal, to appear.Wayner, P. 1995a, Free Agents, Byte, March, 105114.Wayner, P. 1995b, Agents Unleashed A Public Domain Look at Agent Technology, Boston,MA AP Professional.Wayner, P.  Joch, A. 1995, Agents of Change, Byte, March 9495.Wiederhold, G. 1992, Mediators in the Architecture of Future Information Systems, IEEEComputer 25 3, 3849.Wittig, T. 1992 ed. ARCHON An Architecture for MultiAgent Systems, London EllisHorwood.Wolfson, D., Voorhees,, E.  Flatley, M. 1989, Intelligent Routers In Proceedings of the9th International Conference on Distributed Computing Systems DCS9, Newport Beach,CA, June 59, IEEE Computer Society Press, 371376.Wooldridge, M. 1995, Conceptualising and Developing Agents, In Proceedings of theUNICOM Seminar on Agent Software,  2526 April, London, 4054.Wooldridge, M.  Jennings, N. 1995a, Intelligent Agents Theory and Practice, TheKnowledge Engineering Review 10 2, 115152.Wooldridge, M.  Jennings, N. eds. 1995b, Intelligent Agents, Lecture Notes in ArtificialIntelligence 890, Heidelberg Springer Verlag.Wooldridge, M., Mueller, J. P.  Tambe, M. 1996, Intelligent Agents II, Lecture Notes inArtificial Intelligence 1037, Heidelberg Springer Verlag.Zlotkin, G.  Rosenschein, J. S. 1989, Negotiation and Task Sharing among AutonomousAgents in Cooperative Domains, Proceedings of the 11th IJCAI, Detroit, Michigan, 912917.
