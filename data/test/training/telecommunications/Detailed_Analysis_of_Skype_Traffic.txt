IEEE TRANSACTIONS ON MULTIMEDIA, VOL. 11, NO. 1, JANUARY 2009 117Detailed Analysis of Skype TrafficDario Bonfiglio, Marco Mellia, Michela Meo, and Dario RossiAbstractSkype is beyond any doubt the VoIP application inthe current Internet application spectrum. Its amazing success hasdrawn the attention of telecom operators and the research community, both interested in knowing its internal mechanisms, characterizing its traffic, understanding its users behavior.In this paper, we investigate the characteristics of traffic streamsgenerated by voice and video communications, and the signalingtraffic generated by Skype. Our approach is twofold, as we makeuse of both active and passive measurement techniques to gather adeep understanding on the traffic Skype generates. From extensivetestbed experiments, we devise a source model which takes into account i the service type, i.e., SkypeOut calls or calls between twoSkype clients, ii the selected source Codec, iii the adopted transport layer protocol, and iv network conditions. Leveraging on theuse of an accurate Skype classification engine that we recently proposed, we study and characterize Skype traffic based on extensivepassive measurements collected from our campus LAN.I. INTRODUCTIONT HE last few years witnessed VoIP telephony gaininga tremendous popularity, as testified by the increasingnumber of operators that are offering VoIPbased phone services. Skype 1 is beyond doubt the most amazing exampleof this new phenomenon developed in 2002 by the creatorsof KaZaa, it recently reached over 170 millions of users, andaccounts for more than 4.4 of total VoIP traffic 2.Being the most popular and successful VoIP application,Skype is attracting the attention of the research community310, and of the telecom operator as well. Many interestingquestions related to its internal mechanisms, the traffic it generates and the users behavior remain, to date, unanswered.The complexity stems from the fact that Skype protocols areproprietary, and that an extensive use of cryptography, obfuscation and anti reverseengineering techniques 4 are adoptedby Skype creators. Finally, Skype implements a number oftechniques to circumvent NAT and firewall limitations 5,which add further complexity to an already blurred picture.In previous work, we devised a methodology that successfully tackles the problem of Skype voice traffic identification3. We extend here the methodology to identify also videocallsand voice calls generated by the newly deployed SVOPC Codec.Moreover, via a wider set of active and passive measurementsManuscript received May 20, 2008 revised September 26, 2008. First published December 16, 2009 current version published January 09, 2009. Thiswork was supported by the Italian Ministry of University, Education and Research MIUR under the PRIN RECIPE, and partly by a research contract withVodafone Italia. The associate editor coordinating the reviwew of this manuscipt and approving it for publication was Prof. Jiangchun Liu.D. Bonfiglio, M. Mellia, and M. Meo are with the Dipartimento di Elettronica,Politecnico di Torino, Torino, Italy email dario.bonfigliogmail.com dario.bonfigliopolito.it marco.melliapolito.it michela.meopolito.it.D. Rossi is with the TELECOM ParisTechINFRES, Paris, France emaildario.rossienst.fr.Digital Object Identifier 10.1109TMM.2008.2008927we investigate Skype users behavior and some internal mechanisms. A preliminary version of this paper appeared in 6. Inthis version we complete the characterization of Skype voiceCodecs, and add several details to both the signalling trafficstudy, and users behavior measurement.The main contributions of this paper are the following. First,we characterize the traffic generated by voice and video calls,by observing the time evolution in terms of bit rate, interpacketgap, packet size. Besides distinguishing among various voiceCodecs that Skype uses, we also unveil the different behavior ofthe traffic source based on the adopted transport layer protocol.Second, we observe how Skype reacts to different and changingnetwork conditions. Third, we focus on the users behavior byanalyzing the number of flows generated in the time unit, thecall durationwhich unsurprisingly is very much related to thetariff policiesand the churning process. Fourth, we analyzethe signaling traffic generated by a Skype client, considering thenumber of different clients that are contacted by a peer, whichgives a feeling about the cost of maintaining the P2P architecture.While many details about the Skype protocols and internalscan be found in 4, 5, few papers deal with the issues of Skypeidentification 3, 7, and traffic and users characterization810. In 7, authors focus on the identification of relayed1traffic only, using Skype as an example of application littleresults are therefore presented about Skype source characterization. Authors of 8 present an experimental study of Skype,based on a five month long measurement campaign. Lacking areliable Skype classification engine, authors are forced to limitthe scope to relayed sessions, and they restrict furthermore theirattention to the case of UDP transport layer only. Works closestto ours are 9, 10. In 9, authors focus on the evaluation ofthe QoS level provided by Skype calls. As the adopted VoIPtraffic classification criterion is fairly simple, authors cannotdistinguish between video and voice, endtoend and SkypeOutcalls, and cannot account for the impact of transport protocols.Authors in 10 instead investigate the Skype congestion controlalgorithm considering videocalls, exploring Skype reaction tovariation of the available bandwidth and its TCP friendliness.Finally, all previous papers completely ignore Skype signalingtraffic except 5, although the focus is differenti.e., authorsanalyze the login phase, and how Skype traverses NAT andfirewalls rather than providing quantitative insights into Skypesignaling traffic.II. SKYPE PREMIERThe main difference between Skype and other VoIP clients isthat Skype is based on a P2P architecture, rather than a more traditional clientserver model. Only users authentication is per1A session is relayed if packets from a source to a destination are routedthrough an intermediate node which acts as an application layer relay.1520921025.00  2008 IEEEAuthorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.118 IEEE TRANSACTIONS ON MULTIMEDIA, VOL. 11, NO. 1, JANUARY 2009formed under the classical clientserver model, using public keymechanisms. After the user and the client has been authenticated, all further signaling is performed on the P2P network, sothat Skype users informations e.g., contact list, status, preferences, etc., are entirely decentralized and distributed amongP2P nodes. This way the service scales very easily to large sizes,and the costs of a centralized infrastructure are avoided. Peersin the P2P architecture can be normal nodes or supernodes. Thelatter ones are selected among peers with large computationalpower and good connectivity considering bandwidth, uptimeand absence of firewalls and they take part to the decentralizedinformation distribution system which is based on a DHT.Skype offers end users several services i voice communication, ii video communication, iii file transfer, and iv chat services. The communication between users is established usinga traditional endtoend IP paradigm, but Skype can also routecalls through a supernode to ease the traversal of symmetricNATs and firewalls. Voice calls can also be directed toward thePSTN using SkypeinSkypeout service, in which case a fee isapplied. In the following, we denote by EndtoEnd E2E anyvoicevideo call between two Skype clients, and by EndtoOutE2O any call involving a Skype peer and a PSTN terminal.From a protocol perspective, Skype uses a proprietary solution which is difficult to reverse engineer due to extensive useof cryptography and obfuscation techniques 35. ThoughSkype may rely on either TCP or UDP at the transport layer,both signaling and communication data are preferentially carried over UDP.Considering voice services, Skype chooses a Codec from alist according to an unknown algorithm. It is however possibleto force Codec selection and we exploit this feature to observethe different behavior of the Skype source when using differentCodecs. The supported Codec name, nominal frame size and bitrate are reported in Table I, where Wideband Codec offering8 kHz bandwidth are labeled by a   symbol. All Codecs arestandard except the ISAC one, which is a proprietary solution ofGlobalIPSound 11. Some are Constant Bitrate CBR, whileothers are Variable Bitrate VBR Codecs. G.729 Codec is preferred Codec for E2O SkypeOut calls, while ISAC has beenthe preferred one for E2E Endtoend calls until version 3.2,starting from which Skype prefers the SVOPC 12 Codec. Considering video services, Skype adopts TrueMotion VP7 Codec,a proprietary solution of On2 13, which provides a variablebitrate stream with minimum bandwidth of 20 kbps. No otherdetail is available.III. VOICE AND VIDEO STREAMS CHARACTERIZATIONIn order to derive a source model, we performed several experiments in a controlled environment the testbed involved several PCs connected by a Linux NATFirewallRouterTrafficAnalyzer box. The typical experiment involves two PCs at atime a sender and a receiver different PCs with specific hardware and software characteristics were used to test various versions of Skype and different operating systems such as Windows, Linux and PocketPC. Several network scenarios wereemulated by the Linux router using NIST Net 14 to enforcevarious combinations of delay, packet loss and bottleneck bandwidth, and to observe how Skype reacts to different networkTABLE INOMINAL CHARACTERISTICS OF SKYPE CODECSconditions. Different types of access technology i.e., WiFi, Ethernet, UMTS were also investigated, as well as their combination. Overall, our active experimental campaign comprisesabout 100 experiments corresponding to more than 17 h worthof Skype traffic, in which we generated and captured a trafficvolume of 776 Mbytes, exchanged in nearly 5 million packets.A subset of the above testbed traffic is made available to the research community 15.A monodirectional flow is identified by using the traditionaltuple IP source and destination addresses, UDPTCP sourceand destination ports, IP protocol type2. A flow starts when apacket with the flow tuple is first observed, and ends when aninactivity timeout expires the timeout is conservatively set to200 s or, in case of TCP, by observing the connection teardownsequence. Flow characterization is provided by the followingmeasurement indexes, which are typical of streaming servicesover packet networks. Bitrate  amount of bits generated at application layerin a time interval of 1 s. InterPacketGap IPG time between two consecutivepackets belonging to the same flow. Payload length  number of bytes transported in theTCP or UDP payload the corresponding IP packet size canbe determined by adding the transport and network layeroverheads.We use the Skype source model proposed in our previouswork 3. According to this model, three parameters determinethe characteristics of the generated traffic i Rate is the bitrateused by the source, e.g., the Codec bitrate ii , that represents the Skype message framing time, is the time elapsedbetween two subsequent Skype messages belonging to thesame flow iii RF is the Redundancy Factor, i.e., the numberof previous blocks that Skype retransmits, independently fromthe adopted Codec, along with the current encoded block. Theabove parameters may change during an ongoing phone call aswe show in the following, Codec Rate and RF are the preferredknobs used by Skype to react to changing network conditionshowever, changes of are also possible.A. Voice Flows CharacterizationIn this section we analyze the traffic generated by voice flows.We perform a first set of experiments by generating voice callsbetween two PCs directly connected by a LAN with no interfering traffic, and no imposed artificial delay or packet loss oneexperiment for each available Codec was performedwe focus2We separately analyze and track monodirectional flows, so that each call isbuilt by two flows.Authorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.BONFIGLIO et al. DETAILED ANALYSIS OF SKYPE TRAFFIC 119Fig. 1. Bitrate traces versus time for different voice CodecsUDP at the transport layer, no artificial delay and loss.on the case of flows transported by UDP, the preferred transportprotocol.Figs. 1, 2, and 3 report, respectively, the bitrate, , the interpacketgap, IPG, and the payload length, , versus time for different voice Codecs. Due to the different characteristics of eachCodec, a Skype voice call can consume up to 230 kbps and asfew as 11 kbps. Neglecting SVOPC for the moment, we noticethat independently from the adopted Codec, three phases can beeasily distinguished in the traces during the first 20 s, the bitrateis high then, a transient period between 20 and 40 s follows,during which the bitrate smoothly decreases finally, during thethird portion of the trace, s, the bitrate is roughly halfthe one at the trace beginning. This is likely due to an aggressive initial setting of the redundancy factor . This setting is typical of bad network conditions, when packet losses arepresent, and it aims at reducing the impact of possible losses itis apparently used during the flow initial phase, when networkconditions are unknown, in order to aggressively enforce highquality after a short time, when Skype realizes that networkconditions are good, RF is set to 1. Conversely, in the case ofSVOPC, the service bitrate shows a different behavior, slowlyincreasing from 25 Kbps to about 50 Kbps on the one hand,the adoption of SVOPC makes Skype more network friendlyduring the initial probing phase on the other hand, it makes italso more bandwidth eager over time, since SVOPC generatesa bitrate that is about twice the one of the ISAC Codec after thetransient.Considering the IPG measurements reported in Fig. 2, we observe that, for all Codecs but SVOPC, IPG is almost constantduring the three phases, meaning that the bitrate variability isnot obtained modifying the IPG. During the very beginning ofthe traces roughly 1 s, Skype performs a frame size tuning, reflected in the IPG taking values in 30, 40, 60 ms before assumingthe regime value which is equal to 30 ms for ISAC and 20 ms forall the other Codecs. SVOPC, on the contrary, exhibits a muchmore variable IPG, since it tunes it to achieve the desired bitrate.Skype varies the bitrate by modifying the message size ,as Fig. 3 shows. Indeed, messages double their size duringthe initial trace portion with respect to the last portion. In thecase of SVOPC, which is tailored for frameerasure channels,messages unlikely carry old replicas of previous blocks i.e.,Fig. 2. IPG traces versus time for different voice CodecsUDP at the transportlayer, no artificial delay and loss.Fig. 3.  traces versus time for different voice CodecsUDP at the transportlayer, no artificial delay loss.. Instead, given that SVOPC IPG is higher in theinitial phase with respect to the other Codecs, Skype conservatively tries to reduce the packetization overhead by bundlingtogether several voice blocks and delaying their transmission.This is coherent with the increased networkfriendliness earlynoticed concerning the SVOPC offered bitrate during theinitial probing phase. During the central transient phase Skypeapplies reframing to include more than one block in the samemessage but not to all the blocks, so that a mix ofdouble and singlesized messages is present. Notice that VBRCodecs, such as ISAC and iPCMwb, exhibit larger messagesize variance, while CBR Codecs e.g., G.729, iLBC and PCMgenerate almost constant size messages in this case, the smallbut noticeable variability is due to report blocks piggybackedinto the same message. Notice also that during the transientperiod, the bitrate exhibits a smooth decrease, whereas only twomessage sizes are possible. This means that Skype controls RF,so as to shape the resulting bitrate. Finally, note that at the verybeginning is larger, being the initial framing larger too.We now consider the case of a voice flow transported by TCP.We use the same testbed scenario previously described and reAuthorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.120 IEEE TRANSACTIONS ON MULTIMEDIA, VOL. 11, NO. 1, JANUARY 2009Fig. 4.   and  traces versus time for a voicecallUDP or TCP at thetransport layer, no artificial loss, ISAC Codec.peat all experiments presented above, after having imposed TCPas the transport protocol by means of a firewall rule. The resultsare presented in Fig. 4 for the ISAC Codec only. When usingTCP, Skype sets from the beginning of the flow indeed, since TCP recovers packet losses, there is no need for setting RF to 2. A couple of additional observations are also worthfirst, the SoM header is not present, reducing the message sizeof 4 bytes, as reflected by the smaller value of  second,is still variable, as shown at the initial portion of the trace.Interestingly, TCP congestion control and segmentation algorithms do not alter and IPG. This is due to the fact theduring the test, no loss was present, so that the TCP congestionwindow was unbounded. We also suspect that Skype uses theTCP NODELAY socket option to disable Nagless algorithm, sothat the time delay between messages is maintained.B. Video Flows CharacterizationIn order to analyze the traffic generated by video flows, werepeated the experiments of the previous section, enabling thevideo source after about 5 s. Voice Codec is left to the defaultISAC choice and UDP is used as transport protocol neither artificial delay nor loss are imposed.Results are presented in Fig. 5. The variability of the bitratetop plot significantly increases with respect to the case of voiceflows, ranging from a few kbps up to 800 kbps. The IPG middleplot is less regular than in the voiceonly case. Indeed, a largenumber of IPG samples is about 30 ms the preferred ISAC, while many other IPG samples are very small. This is dueto the fact that Skype is multiplexing voice and video blocksthe first ones are produced by the corresponding voice Codecat a very regular rate the latter ones are instead bigger, have alarger frame size and are chopped and transmitted using multiple backtoback messages. This is reflected by plot at thebottom of Fig. 5. Let us first focus on the period s, when. It is possible to identify three typical message sizesi Bytes, for messages containing a voice blockonly, ii Bytes, for messages containing a videoblock only, and iii Bytes when a voice and avideo blocks are multiplexed in a single message. The messageFig. 5.   and traces versus time for a videocallUDP at the transportlayer, no artificial loss, ISAC Codec.Fig. 6.  and IPG PDFs for voice only or video and voice streamsUDP atthe transport layer, no artificial loss, ISAC Codec.size doubles if , e.g., when s, as also shownby the probability density functions PDFs of and IPG of avoice only and video plus voice flows reported in Fig. 6.C. Impact of Different Network ConditionsLet us now investigate the impact on the traffic generatedby Skype of different network conditions, namely i availableendtoend bandwidth, ii loss probability, and iii sourcedestination path delay.Figs. 7 and 8 report measurements obtained during a voicecall during which we artificially limited the available bandwidthbetween the two clients, for the ISAC and SVOPC Codecs, respectively. Top plot reports and the imposed bandwidth limitmiddle and bottom plots report IPG and , respectively. Let usconsider the ISAC case first. The usual 20 s long initial periodis present with . When the available bandwidth is largerthan the actual bitrate, no changes are observed with respectto the typical source behavior shown in Fig. 1. As soon as theavailable bandwidth limit kicks in after about 150 s, the sourceadapts to the new constraints takes smaller values, whichsuggests that the Codec selects a lowbitrate state recall that theISAC Codec is a VBR Codec, and IPG changes to 20, 30, or 60Authorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.BONFIGLIO et al. DETAILED ANALYSIS OF SKYPE TRAFFIC 121Fig. 7.   and  during a voice call under decreasing available bandwidthUDP at the transport layer, ISAC Codec.Fig. 8.   and  during a voice call under decreasing available bandwidthUDP at the transport layer, SVOPC Codec.ms, hinting that the Skype framer modifies the framing time toreduce the protocol overhead. We can then state that Skype implements a congestion control protocol that acts on theand Codec bitrate. When using the SVOPC Codec, whose results are depicted in Fig. 8, Skype seems to implement morecomplex mechanisms to adapt to network conditions differentvalues of IPG are used, under both good and bad network conditions can grow to significantly larger values than the withthe other Codecs, especially under tight bandwidth limits.We perform a second set of experiments to assess the impactof network packet losses. Fig. 9 plots the message size observed during a voice call when artificial packet losses are introduced. In particular, periods with no losses alternate to periods during which 5 or 10 loss probability is enforced. Results considering a UDPE2E and TCPE2E flow VBR ISACCodec, UDPE2O flow CBR G.729 Codec are reported. In theUDP case, when some losses are detected, Skype greedily compensates them by retransmitting past voice blocks into the samemessage, i.e., setting  on the contrary, when no lossis detected, Skype sets . This holds for both E2E andE2O, and for both voice and video calls the latter E2E videoFig. 9.  during voice calls under onoff artificial lossesUDP and TCP E2Ecalls ISAC Codec and UDP E2O call G729 Codec.case is not reported for the sake of brevity. Conversely, if TCPis adopted, no loss concealment mechanism is implemented bySkype, which completely relies on TCP loss recovery mechanism. This results in a much more complex pattern, since TCPcongestion control and segmentation algorithms impose a different framing pattern to the application stream. For example, ifa loss is recovered after that the retransmission timeout expiration, data buffered at the socket are immediately sent by TCP inone or more larger segments.We now consider a UDP voice call facing increasing averageloss probability from 0 to 10 with 1 step increments every45 s. Measurements for ISAC and SVOPC Codecs are reportedin Figs. 10 and 11, respectively. In the ISAC case, Skype usesas soon as loss probability exceeds 1 and the relativeoccurrence of RF values changes as a function of the loss ratethe vast majority of messages use until losses exceed4, in which case is used with few exceptions. If noloss is detected e.g., at the end of the trace, RF is set to 1 again.For the SVOPC Codec, packet size exhibits a higher variability,especially when loss probability is large in these cases Skypeseems to try different combinations of packet size and RF valueto deal with the occurrence of a large number of losses.Some tests were also performed to assess the impact of network delay no change was observed and, thus, no results arereported. This is quite intuitive, since there is no major countermeasure that a realtime application can implement if theendtoend delay is large due to physical constraints such as distance.Comparing the previous discussed Skype reactions to network conditions, we can conclude that, when using UDP atthe transport layer, Skype measures loss probability and implements techniques to measure the available bandwidth, so asto effectively react to changing network conditions by eithertuning the bitrate or introducing higher redundancy. In the scenario of Fig. 7, through the probing phase after , Skypedetermines that the low call quality is due to network congestion rather than to path losses, and thus sets to avoidoverloading the network. Conversely, Fig. 9 shows that someprobing phases occur during the time intervals where lossesAuthorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.122 IEEE TRANSACTIONS ON MULTIMEDIA, VOL. 11, NO. 1, JANUARY 2009Fig. 10.  during a voice call under increasing artificial lossesUDP at thetransport layer, ISAC Codec.Fig. 11.  during a voice call under increasing artificial lossesUDP at thetransport layer, SVOPC Codec.are present and Skype can effectively distinguish that low callquality is due to path losses rather than to network congestion,and therefore sets in the attempt to ameliorate callquality.IV. USER CHARACTERIZATIONIn this section we analyze some characteristics of Skypeusers behavior, such as the typical service usage workload andthe users churning rate. We report results that were collected bypassive monitoring Politecnico di Torino campus access linkthrough our classification framework 3. The classification toolis based on a combination of two different and complementarytechniques, namely Naive Bayes classification and ChiSquarestatistical test the first classifier aims at detecting VoIP trafficcharacteristics, the second one reveals Skype fingerprint fromthe packet framing structure.We monitored the campus access link for more than a monthstarting from April the 22nd 2007. More than 7000 differenthosts are present in the campus LAN, which is used by both students and staff members. The total number of flows that wereidentified are 17595, 9136, 1393, and 1145 considering UDPFig. 12. Number of UDP E2E, TCP E2E, and UDP E2O voice calls every 1hour. Incoming flows on positive values, outgoing flows on negative values.E2E, TCP E2E, UDP E2O voice and UDP video calls, respectively. Notice that most of the calls are free E2E voice calls,with video enabled in only 6 of cases.A. Service Usage WorkloadFig. 12 reports the number of calls per hour in a typical week,showing outgoing flows source IP address belonging to thecampus LAN, destination IP address not belonging to it withpositive values, and incoming flows with negative values. UDP,that is adopted in 68 of cases, is the preferred transport protocol. Notice that this can dramatically change in a different network setup, e.g., when NAT or firewall are extensively used. Asexpected, the number of calls is larger during working hours,with a negative bump during lunch time, while during nightsand weekends fewer calls are present. The total peak numberof calls accounts about 75 Skype calls per hour. Asymmetry isdue to the fact that the two directions of the same call can usedifferent transport layer protocols this happens in about 15 ofthe cases. Specifically, our campus is more likely to accept UDPconnections, whereas for other users in more restrictive networksettings Skype is forced to rely on TCP, as can be gathered bythe smaller number of UDP E2E incoming flows with respect tothe outgoing ones.B. Call Destination and DurationFig. 13 reports the call endpoint geolocation, i.e., the locationof external IP addresses considering voice flows. We queried thegeographical location of the IP addresses using HostIP 16, apublic, open and free IP address location database. More than54 of the E2E voice call endpoints are in Italy, 27 are located in Europe, being UK, France, Spain and Germany the topfour destinations. In Italy, destinations are distributed similar tothe population, mainly in the largest cities about 18 of callsfor the rest of the world are terminated outside the EU, and onlyless than 4 are terminated within the US. This picture changesdramatically considering E2O calls. Recalls that E2O calls aresubject to a low connection fee. The right pie shows that theE2O service is competitive with traditional phone services onlywhen international calls are considered. In this case, about 32Authorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.BONFIGLIO et al. DETAILED ANALYSIS OF SKYPE TRAFFIC 123Fig. 13. Geolocalization of peers making E2E and E2O voice calls.Fig. 14. Call holding time CDF and 1CDF in the inset.of E2O calls are directed to the U.S., while the Netherlands accounts for more than 26, being Denmark the third preferredendpoint. We suspect that connections directed to Countries inwhich no local Skype gateway is present are terminated either inthe Netherlands or in Denmark, where the Skype headquartersare located.Fig. 14 reports the Cumulative Distribution Function CDFof call holding time i.e., the call duration, defined as the timeelapsed from the first to the last packet of the flow. It can benoted that E2E calls last much more than E2O calls, probablybecause they are free. Interestingly, the measured holding timeis slightly larger when the video is enabled.The larger TCP E2E holding time is at first surprising, sincethere is no reason for the user to talk more when TCP is adopted.Investigating further, we noticed that Skype delays the TCP teardown sequence, keeping the connection alive even if the call hasbeen hung up. This affects resource usage on both end hosts andthe possible fullstate NAT, since the TCP connection must bemanaged until the teardown sequence is completed.C. Peer LifeTime and DeathTimeOne of the parameters that affect P2P systems in general isthe churning rate, i.e., the peer arrival and departure process thatforces the P2P overlay to be updated. In order to understand thechurning process in the Skype network, we focus on the peeractivity cycle, measuring peers lifetime the duration of peersFig. 15. Peer lifetime and deathtime PDF.activity period and deathtime the duration of peers idle periods. A peer is considered to be idle or dead if no packet issent for a period of time longer that an idle time , otherwisethe peer is considered to be alive. Thus, a lifetime sample ismeasured from the instant in which an idle peer generates thefirst packet until an idle time is detected. A deathtime, onthe contrary, is the time interval between the instant in which apeer becomes inactive until the instant in which it generates anew packet again. We experimentally verified that any value oflarger that 200 s have minimal impact on the lifetime measurements, thus, we conservatively selected s.Fig. 15 reports the PDF of peers lifetime and deathtime measured during a week long observation period. Peers lifetime iseither short 1 or 2 h or very long from 7 to 10 h overall,about 95 of peers disappear after 10 h of activity, more than1 of the peer were always alive during the whole week. Considering peers deathtime, we observe, on the contrary, that thedeath period is either shorter than 2 h, or larger than 11 h, withabout 2 of peers idle for more than 72 h.The above results allow us to refine the picture of the Skypeusage pattern in our scenario, that is the typical campus with activity during working hours and users with a high degree of familiarity to communication technologies. We isolate and quantify two welldefined user behaviors in the Politecnico di TorinoLAN namely, Skype occasional and regular users. Occasionalusers run Skype only when they actually need to make a call, andquit the application shortly after call completion. Their lifetimeis proportional to the call holding time, whereas the deathtimedepends on the frequency of their callsbeing Skype possiblydead for several days. On the contrary, regular users typicallyrun Skype by default, so that the peer lifetime follows their PCAuthorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.124 IEEE TRANSACTIONS ON MULTIMEDIA, VOL. 11, NO. 1, JANUARY 2009Fig. 16. Distribution of the number of different peers that are contacted by apeer during 5 minute long intervals.lifetime Skype software is on during the daytime and off outside office hours and during nights. Some PCs are left runningduring the night as well, so that the Skype lifetime is extremelylong. For regular users accessing Skype application through laptops, the activity cycle is much faster as such users can possiblyturn off their laptops to save battery energy these users are partially responsible for short deathtimes.We stress that the above user behaviors have been observed ina single network setup and may not be valid at a more general extent e.g., other behaviors could emerge when considering residential or business Skype usage. At the same time, the usage pattern described above suggests that Skype churning rate is verylow we can therefore expect the P2P overlay maintenance andupdate rate to be limited.V. SIGNALING CHARACTERIZATIONIn this section, we focus on signaling traffic generated bySkype, dissecting several interesting aspects, such as signaling overhead, peer geolocalization, Skype overlay selectionprocess.A. On the Signaling OverheadWe first consider the overhead that Skype signaling introduces in the network. The average signaling bitrate, evaluated asthe total signaling bits transmitted by a client during its wholelifetime, is very low it is less than 100 bps in 95 of cases andless than 10 bps in 50 of cases, while only very few nodes,that are possibly supernodes, use more than 1 kbps for signaling.Since the signaling bitrate is exiguous, its relative importancevanishes if weighted on the ground of VoIP call traffic for about5 of the Skype clients, signaling accounts only for 5 of thetotal including voice and video calls Skype traffic. At the sametime, since clients may be left running for long periods withoutVoIP services being actively accessed, the signaling traffic portion is dominating in 80 of the cases.Let be the number of different peers contacted by a givenpeer in a 5 minutes long interval. The CDF of , reported in Fig.16, shows that a peer contacts about 16 other peers on average,and no more than 30 in 90 of cases. Still, can grow largerthan 75 in 1 of the cases, which may constitute a burden forsome layer4 devices that keep per flow state e.g., a entry in aNATACL tables. Moreover, many signaling flows are singlepacket flows that create new temporary softstate entries, rarelyused later on.Fig. 17. Distribution of the signaling outset flow size and inset duration.B. Signaling Flow ClassificationWe are now interested in observing the signaling traffic aSkype client exchanges. The semantic of the signaling activitycannot be inferred from purely passive measurement, but theform of signaling activity can be further differentiated. Let usobserve the amount of data sent by the source in packets and itscorresponding duration in seconds. The complementary distribution functions 1CDF are reported in Fig. 17 using a loglogscale. About 80 of the signaling flows consists of single packetprobes, and 99 of the flows is shorter than six packets. At thesame time, some persistent signaling activity is present transferring a few MBytes of information over several thousand packetsand lasting for hours, as the tails of the curves in Fig. 17 showindeed, the singlepacket probes account for less than 5 of thetotal bytes.Consider now the schematic representation of the typicalSkype signaling activity depicted in Fig. 18. We select twopeers, namely the most active peer that does not perform anyvoice call left plot and a randomly picked peer , having bothsignaling and voice flows right plot. Each dot in the picturecorresponds to a packet in the trace the xaxis represents thepacket arrival time since the first packet observed for thatclient the yaxis reports an ID that uniquely identifies a peerthat exchanged a packet with peer . Positive IDs are used forpeers that received a packet from , negative IDs for peers thatsent a packet to . The range of the yvalues corresponds tothe number of different peers with whom the selected peer isexchanging packets. The figure shows that contacted wascontacted by about 1100 other peers within its whole lifetimeabout 27 h, whereas by about 450 in 6 h.From the figure we can make three observations. First, thenumber of contacted peers exhibits an almost linear growth overtime, hinting to P2P network discovery being performed duringmost of the peer lifetime. This part of the signaling activity ismainly carried out by the transmission of a single packet, towhich most of the times some kind of acknowledgment follows. The fact that knows the address and port of valid butpreviously uncontacted Skype peers means that the above information is exchanged through some signaling messages. SinceAuthorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.BONFIGLIO et al. DETAILED ANALYSIS OF SKYPE TRAFFIC 125Fig. 18. Pictorial representation of Skype signaling activity for a given clienteach dot represents a packet exchanged in a given time by a client with someother peer whose ID is reported on the yaxis positive negative IDs representpeers that has sent received a packet to from the client.some of the unknown contacted peers may have gone offline before actually probes them, the positive and negative ID rangesare not exactly symmetric. Second, some of the peers are contacted on a regular basis in the activity plot, horizontal patternsstate that the same peer is periodically contacted during lifetime. Finally, a periodic information refreshment can be distinguished in the form of vertical patterns clearly visible at aboutevery hour.These observations suggest the existence of two types of signaling flows, which we classify as follows. Probe any packet sent toward an unknown peer, to which asingle reply packet possibly follows, but no further packetis exchanged between the peer pair NonProbe any flow constituted by more than one packet,including periodically exchanged probes.In Fig. 18, nonprobe traffic is represented by dots inside thetriangular shape the periodic information refreshment, responsible for the vertical patterns, involves both nonprobe and probetraffic toward new peers.Considering the type of flows two peers exchange, in 50 ofcases, a probe flow is exchanged in 15 of cases, two peersexchange only periodical packets, in the remaining cases a variable packet exchange activity is observed. These results confirmthat probe and nonprobe traffic correspond to different kindsof signaling activity possibly network discovery and networkmaintenance.C. On the Geolocation of PeersWe now consider the geographical location of contactedpeers. In the dataset we consider, we observed 304 690 external peers, corresponding to 263 886 different IP addresses.HostIP was used again to perform the geolocation of IPaddresses. Fig. 19 reports results for the subset of about 10 kpeers out of the about 264 k queries for which longitude andlatitude information were available. From the picture, it is easyto recognize the shape of continents, especially Europe andNorth America. A white landmark helps in locating Torino, thatis our vantage point.Fig. 19. Geolocation or peers contacted by internal peers.Fig. 20. Geographical breakdown of probe and nonprobe signaling traffic,considering all continents top and the ten most active European countries.Further details on the geolocation of the whole Skype peerdataset is given in Fig. 20, which reports a breakdown, considering probe and nonprobe flows per continent bottom and perEuropean Country top. The breakdown is limited to top tengroups, ranking them by decreasing level of preference.Two considerations that can be drawn. First, probing mechanism tends to privilege nearby hosts indeed, 60 of theprobed IPs are located in Europe, four times as much as inNorth America 15. This suggests that the probing mechanism tends to discover network hosts that are geographicallyclose. Second, the opposite occurs for nonprobe traffic whilethe percentage of peers that are located in Europe actuallydecreases 48 with respect to probe traffic, the percentageof North American peers nearly doubles 29. Consideringthat users resort to Skype to decrease communication fees andto keep contacts with faraway users, we are not surprised thatnonprobe traffic is more spread out. Indeed, the relationshipamong users forces Skype peer selection when consideringnonprobe traffic. On the contrary, the peer discovery mechanisms implemented by the probes is driven by the physicalproperties of the underlying network.D. On the Peer Selection CriterionFig. 21 shows the distribution of the Round Trip Time RTTbetween two peers, measured as the time between the packetAuthorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.126 IEEE TRANSACTIONS ON MULTIMEDIA, VOL. 11, NO. 1, JANUARY 2009Fig. 21. Probe and nonprobe traffic round trip time distribution.probe going out of the campus LAN and the probe responsepacket if any. For nonprobe traffic, the first sentreceivedpacket pair is used to estimate the RTT. This measurementtakes into account both the network and application latency.Results confirm our previous intuition the latency of probingtraffic is lower than that of other traffic. From Torino, RTTsmaller than 100 ms are typical of nodes within the Europe,while RTT larger than 100 ms are typical of nodes outside it.Measurement results allow us to conjecture that the probingmechanism is latency driven Skype client probes peers basedon the information received by other peers so that low latencypeers are more likely selected than high latency ones. Conversely, the peer selection mechanism is preference driven,where the preference criterion is dependent on the user relationships with other users.VI. CONCLUSIONThis paper focused on the characterization of Skype traffic,the most popular VoIP application nowadays. Our contributionis twofold. First, from extensive testbed experiments we investigated several aspects of the Skype source, considering different service types i.e., SkypeOut, End2End voice and videocalls, transport protocols i.e., TCP, UDP, and network conditions i.e., loss rate and available bandwidth. Testbed measurements refined the picture on the Skype source model, enlightening the mechanisms and triggering conditions that Skype usesto adapt to network conditions specifically, when UDP is usedat the transport layer, Skype distinguishes and differently reactsto path losses and network congestion. Second, by leveragingon a consolidated methodology for finegrained Skype trafficclassification, we investigated both i Skype users behavior andthe traffic generated during voice and video communicationsand ii the signaling traffic generated by Skype. Concerning signaling, we have shown that Skype floods the network with shortsingleprobe messages toward many hostswhich may be as effective for the purpose of the overlay maintenance as costly fromthe viewpoint of statefull layer4 network devices.ACKNOWLEDGMENTThe authors would like to thank our Campus LAN NetworkAdministrators for allowing us to monitor traffic.REFERENCES1 Skype Web Site, Online. Available httpwww.skype.com2 International Carriers Traffic Grows Despite Skype Popularity, , Dec.2006 Online. Available httpwww.telegeography.com, TeleGeography Report and Database. available on line3 D. Bonfiglio, M. Mellia, M. Meo, D. Rossi, and P. Tofanelli, Revealing Skype traffic When randomness plays with you, in ACM Sigcomm07, Kyoto, Japan, Aug. 2006.4 P. Biondi and F. Desclaux, Silver needle in the Skype, in Black HatEurope06, Amsterdam, the Netherlands, Mar. 2006.5 S. A. Baset and H. Schulzrinne, An analysis of the Skype peertopeerinternet telephony protocol, in IEEE Infocom06, Barcelona, Spain,Apr. 2006.6 D. Bonfiglio, M. Mellia, M. Meo, and D. Rossi, Tracking down Skypetraffic, in IEEE Infocom08, Phoenix, AZ, Apr. 2008.7 K. Suh, D. R. Figuieredo, J. Kurose, and D. Towsley, Characterizingand detecting relayed traffic A case study using Skype, in IEEE Infocom06, Barcelona, Spain, Apr. 2006.8 S. Guha, N. Daswani, and R. Jain, An experimental study of the Skypepeertopeer VoIP system, in 5th Int. Workshop on PeertoPeer Systems, Santa Barbara, CA, Feb. 2006.9 K. Ta Chen, C. Y. Huang, P. Huang, and C. L. Lei, Quantifying Skypeuser satisfaction, in ACM Sigcomm06, Pisa, Italy, Sept. 2006.10 L. De Cicco, S. Mascolo, and V. Palmisano, Skype video responsiveness to bandwidth variations, in ACM NOSSDAV08, Braunschweig,Germany, May 2008.11 GlobalIPSound Web Site, Online. Available httpwww.globalipsound.com12 J. Lindblom, A sinusoidal voice over packet coder tailored for theframeerasure channel, IEEE Trans. Speech and Audio Processing,vol. 13, no. 5, pt. 2, pp. 787798, Sep. 2005.13 On2 Web Site, Online. Available httpwww.on2.com14 M. Carson and D. Santay, NIST Net A Linuxbased network emulation tool, in ACM SIGCOMM Comput. Commun. Rev., Jul. 2003, vol.33, no. 3, pp. 111126.15 Skype Testbed Traces, Online. Available httptstat.tlc.polito.ittracesskype.shtml, available at16 , Online. Available httpwww.hostip.infoDario Bonfiglio was born in Messina, Sicily, Italy,in 1983. He received his M.Sc. degree in telecommunication engineering in 2006 from Politecnico diTorino. Italy.Since January 2007, he is with Electronics Department of Politecnico di Torino as a Research Assistant.He has been involved in national and internationalprojects that led up to coauthor several papers presented in international conferences and journals. Hisresearch interests are in the fields of traffic measurements and characterization, peertopeer systems.Michela Meo received the Laurea degree in electronic engineering in 1993 and the Ph.D. degree inelectronic and telecommunication engineering in1997, both from Politecnico di Torino, Italy.Since November 1999, she is an Assistant Professor at Politecnico di Torino. She coauthoredmore than 100 papers, about 40 of which are ininternational journals. She edited six special issuesof international journals, including ACM Monet,Performance Evaluation Journal and ComputerNetworks. Her research interests are in the field ofperformance evaluation and modeling, traffic classification and characterization, peertopeer, green networking.Dr. Meo was program cochair of two editions of ACM MSWiM, generalchair of another edition of ACM MSWiM, program cochair of IEEE QoSIP,IEEE MoVeNet 2007, IEEE ISCC 2009 and she was in the program committeeof about 50 international conferences, including Sigmetrics, Infocom, ICC, andGlobecom.Authorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.BONFIGLIO et al. DETAILED ANALYSIS OF SKYPE TRAFFIC 127Marco Mellia was born in Torino, Italy, in 1971.He received the degree in electronic engineering in1997 and the Ph.D. degree in telecommunicationsengineering in 2001, both from Politecnico di Torino.From March to October 1999, he was with theComputer Science Department at Carnegie MellonUniversity, Pittsburgh, PA, as a Visiting Scholar.Since April 2001, he is with Electronics Departmentof Politecnico di Torino as Assistant Professor.He has coauthored over 100 papers published ininternational journals and presented in leading international conferences, all of them in the area of telecommunication networks.His research interests are in the fields of traffic measurement and modeling,P2P applications and energy aware network design.Dr. Mellia participated in the program committees of several conferences including IEEE Infocom, IEEE Globecom, and IEEE ICC.Dario Rossi was born in Torino, Italy, in March1977. He received the M.Sc. degree in electronic engineering in 2001 and the Ph.D. degree in electronicand telecommunication engineering in 2005, bothfrom Politecnico di Torino.Between September 2003 and August 2004, heheld a Visiting Researcher position in the ComputerScience Department, University of California,Berkeley. Since October 2006, he is an AssociateProfessor at the INFRES Department, Ecole Nationale Superieure de Telecommunications ENST,Paris, France. He has coauthored over 30 papers in leading conferences andjournals and currently holds three patents. His research interests are in the fieldsof peer2peer networks, Internet traffic measurement, sensor and vehicularnetworks.Dr. Rossi participated in the program committees of several conferences including IEEE ICC, IEEE IPCCC, and IEEE ISCC. He is responsible for several European research projects, such as FP7 NAPAWINE, Celtic TIGER, andCeltic TRANS.Authorized licensed use limited to Politecnico di Torino. Downloaded on February 2, 2009 at 1231 from IEEE Xplore.  Restrictions apply.
