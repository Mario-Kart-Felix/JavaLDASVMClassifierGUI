CiteSeerX — Search Results — programming language Documents Authors Tables Log in Sign up MetaCart Donate Documents: Advanced Search Include Citations Tools Sorted by: Relevance Citation Count Year (Descending) Year (Ascending) Recency Try your query at: Results 1 - 10 of 982,419 Next 10 → An Overview of the C++ Programming Language by Bjarne Stroustrup , 1999 "... This overview of C++ presents the key design, programming, and language-technical concepts using examples to give the reader a feel for the language. C++ is a general-purpose programming language with a bias towards systems programming that supports efficient low-level computation, data abstraction, ..." Abstract - Cited by 1767 (15 self) - Add to MetaCart This overview of C++ presents the key design, programming , and language -technical concepts using examples to give the reader a feel for the language . C++ is a general-purpose programming language with a bias towards systems programming that supports efficient low-level computation, data abstraction The C Programming Language by Dennis M. Ritchie , 1988 "... The C programming language was devised in the early 1970s as a system implementation language for the nascent Unix operating system. Derived from the typeless language BCPL, it evolved a type structure; created on a tiny machine as a tool to improve a meager programming environment, it has become on ..." Abstract - Cited by 1528 (16 self) - Add to MetaCart The C programming language was devised in the early 1970s as a system implementation language for the nascent Unix operating system. Derived from the typeless language BCPL, it evolved a type structure; created on a tiny machine as a tool to improve a meager programming environment, it has become The Semantics of Predicate Logic as a Programming Language by M. H. Van Emden, R. A. Kowalski - Journal of the ACM , 1976 "... ABSTRACT Sentences in first-order predicate logic can be usefully interpreted as programs In this paper the operational and fixpomt semantics of predicate logic programs are defined, and the connections with the proof theory and model theory of logic are investigated It is concluded that operational ..." Abstract - Cited by 813 (18 self) - Add to MetaCart that operational semantics is a part of proof theory and that fixpolnt semantics is a special case of model-theoret:c semantics KEY WORDS AND PHRASES predicate logic as a programming language , semantics of programming languages , resolution theorem proving, operaUonal versus denotatlonal semantics, SL The synchronous dataflow programming language LUSTRE by N. Halbwachs, P. Caspi, P. Raymond, D. Pilaud - Proceedings of the IEEE , 1991 "... This paper describes the language Lustre, which is a dataflow synchronous language, designed for programming reactive systems --- such as automatic control and monitoring systems --- as well as for describing hardware. The dataflow aspect of Lustre makes it very close to usual description tools in t ..." Abstract - Cited by 649 (53 self) - Add to MetaCart This paper describes the language Lustre, which is a dataflow synchronous language , designed for programming reactive systems --- such as automatic control and monitoring systems --- as well as for describing hardware. The dataflow aspect of Lustre makes it very close to usual description tools Program Analysis and Specialization for the C Programming Language by Lars Ole Andersen , 1994 "... Software engineers are faced with a dilemma. They want to write general and wellstructured programs that are flexible and easy to maintain. On the other hand, generality has a price: efficiency. A specialized program solving a particular problem is often significantly faster than a general program. ..." Abstract - Cited by 628 (0 self) - Add to MetaCart with efficiency. This thesis presents an automatic partial evaluator for the Ansi C programming language . The content of this thesis is analysis and transformation of C programs . We develop several analyses that support the transformation of a program into its generating extension. A generating extension is a GOLOG: A Logic Programming Language for Dynamic Domains by Hector J. Levesque, Raymond Reiter, Yves Lespérance, Fangzhen Lin, Richard B. Scherl , 1994 "... This paper proposes a new logic programming language called GOLOG whose interpreter automatically maintains an explicit representation of the dynamic world being modeled, on the basis of user supplied axioms about the preconditions and effects of actions and the initial state of the world. This allo ..." Abstract - Cited by 622 (72 self) - Add to MetaCart This paper proposes a new logic programming language called GOLOG whose interpreter automatically maintains an explicit representation of the dynamic world being modeled, on the basis of user supplied axioms about the preconditions and effects of actions and the initial state of the world The Esterel Synchronous Programming Language : Design, Semantics, Implementation by Gerard Berry, Georges Gonthier , 1992 "... ..." Abstract - Cited by 815 (10 self) - Add to MetaCart Abstract not found Direct manipulation: a step beyond programming languages by Ben Shneiderman - Computer , 1983 "... Direct manipulation systems offer the satisfying experience of operating on visible objects. The computer becomes transparent, and users can concentrate on their tasks. ..." Abstract - Cited by 643 (11 self) - Add to MetaCart Direct manipulation systems offer the satisfying experience of operating on visible objects. The computer becomes transparent, and users can concentrate on their tasks. Model Checking for Programming Languages using VeriSoft by Patrice Godefroid - IN PROCEEDINGS OF THE 24TH ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES , 1997 "... Verification by state-space exploration, also often referred to as "model checking", is an effective method for analyzing the correctness of concurrent reactive systems (e.g., communication protocols). Unfortunately, existing model-checking techniques are restricted to the verification of ..." Abstract - Cited by 442 (13 self) - Add to MetaCart of properties of models, i.e., abstractions, of concurrent systems. In this paper, we discuss how model checking can be extended to deal directly with "actual" descriptions of concurrent systems, e.g., implementations of communication protocols written in programming languages such as C or C++. We Definitional interpreters for higher-order programming languages by John C. Reynolds - Reprinted from the proceedings of the 25th ACM National Conference , 1972 "... Abstract. Higher-order programming languages (i.e., languages in which procedures or labels can occur as values) are usually defined by interpreters that are themselves written in a programming language based on the lambda calculus (i.e., an applicative language such as pure LISP). Examples include ..." Abstract - Cited by 345 (2 self) - Add to MetaCart Abstract. Higher-order programming languages (i.e., languages in which procedures or labels can occur as values) are usually defined by interpreters that are themselves written in a programming language based on the lambda calculus (i.e., an applicative language such as pure LISP). Examples include Next 10 → Results 1 - 10 of 982,419 Powered by: About CiteSeerX Submit and Index Documents Privacy Policy Help Data Source Contact Us Developed at and hosted by The College of Information Sciences and Technology © 2007-2016 The Pennsylvania State University
