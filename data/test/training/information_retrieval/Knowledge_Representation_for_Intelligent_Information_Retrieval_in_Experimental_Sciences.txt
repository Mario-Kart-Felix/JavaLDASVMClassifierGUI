Knowledge Representation forIntelligent Information Retrieval inExperimental SciencesbyNatalya Fridman NoyDecember, 1997Ph.D. ThesisSubmitted in partial fulfillment of the requirements for the Degreeof Doctor of Philosophy in Computer Sciencein the College of Computer Scienceat Northeastern University, Boston, MA Natalya Fridman Noy, 1997All rights reservedTo my parentsAbstractMore and more information is available online every day. The greater the amount of onlineinformation, the greater the demand for tools that process and disseminate this information.  Processingelectronic information in the form of text and answering users queries about that informationintelligently is one of the great challenges in natural language processing and information retrieval.The research presented in this talk is centered on the latter of these two tasks intelligent informationretrieval. In order for information to be retrieved, it first needs to be formalized in a database orknowledge base. The ontology for this formalization and assumptions it is based on are crucial tosuccessful intelligent information retrieval.  We have concentrated our effort on developing an ontologyfor representing knowledge in the domains of experimental sciences, molecular biology in particular.We show that existing ontological models cannot be readily applied to represent this domain adequately.For example, the fundamental notion of ontology design that every real object is defined as an instanceof a category seems incompatible with the universe where objects can change their category as a result ofexperimental procedures. Another important problem is representing complex structures such as DNA,mixtures, populations of molecules, etc., that are very common in molecular biology.We present extensions that need to be made to an ontology to cover these issues the representation oftransformations that change the structure andor category of their participants, and the componentrelations and spatial structures of complex objects.  We demonstrate examples of how the proposedrepresentations can be used to improve the quality and completeness of answers to user queries discusstechniques for evaluating ontologies and show a prototype of an Information Retrieval System that wedeveloped.iiAcknowledgmentsI would like to thank my advisor, Professor Carole D. Hafner this work would not have beenpossible without her. Caroles direction and support have been invaluable. Hours and hours ofdiscussions, suggestions and disagreements allowed me to understand the field and the nature ofresearch itself. Caroles encouragement throughout the years has helped me tremendously.I would like to thank Professor Robert P. Futrelle for being involved in this work as much as hewas, being a very active participant in this research all the time. His suggestions and discussionshave had a lot of influence on this work.Many of the initial ideas in this research have grown out of the time that I worked with ProfessorKenneth Baclawski on the Scientific Database Project. It was a great point to get started and a lotof discussions on what an ontology is and why it is useful have started with Ken.I would like to express my gratitude to Dr. Adam Farquhar for taking the time to be on theThesis Committee and bringing his knowledge and expertise to allow this project to improvegreatly and become more formal and complete.I am very grateful to Professor Charles Ellis for undertaking a difficult for a biologist task ofreading an Artificial Intelligence Thesis and giving very useful feedback.Many thanks to Dr. Arthur Miller for helping me to struggle with molecular biology issues andfor his patience in answering my often dumb biology question.I would like to thank the National Science Foundation for providing the funding for this research.iiiMany friends have helped me through the time in graduate school and made these years asenjoyable as they were. My sincere gratitude to them.This Thesis is dedicated to my parents, Galina and Boris Fridman for their love and support, foralways being there for me, for always believing in me.Most importantly, my gratitude and love goes to my husband, Alex Noy, whose support, loveand care have made me so happy and carried me through these years.ivTable of ContentsPART I. INTRODUCTION AND MOTIVATION.................................................................................... 11. INTRODUCTION............................................................................................................................... 21.1 WHAT IS AN ONTOLOGY .................................................................................................................. 31.2 DOMAIN OF MOLECULAR BIOLOGY EXPERIMENTS AND CHALLENGES IT PRESENTS ........................... 71.3 SUMMARY OF THE ONTOLOGICAL MODEL. ...................................................................................... 121.4 EVALUATING AN ONTOLOGY ........................................................................................................... 141.5 THESIS OUTLINE ............................................................................................................................. 152. RELATED WORK............................................................................................................................ 162.1 ONTOLOGY RESEARCH .................................................................................................................... 162.1.1 General studies .......................................................................................................................... 182.1.2 Projects in Ontology Design ...................................................................................................... 212.1.3 Comparative Review of the Projects in Ontology Design .......................................................... 352.1.4 Qualitative Process Theory........................................................................................................ 582.2 INFORMATION RETRIEVAL RESEARCH ............................................................................................ 642.3 KNOWLEDGE REPRESENTATION IN BIOLOGY. .................................................................................. 683. REPRESENTATION CHALLENGES IN BIOLOGY DOMAIN ................................................ 713.1 GENERAL REPRESENTATION ISSUES ................................................................................................ 733.2 EXAMPLES FROM THE CASEBOOK OF BIOLOGY TEXTS ..................................................................... 803.3 SUMMARY OF REPRESENTATION ISSUES .......................................................................................... 91PART II. METHODOLOGY..................................................................................................................... 884. ONTOLOGY DESIGN AND EVALUATION PROCESS............................................................. 934.1 ONTOLOGY DESIGN PROCESS........................................................................................................... 934.2 EVALUATING THE ONTOLOGY ......................................................................................................... 95PART III. RESULTS .................................................................................................................................. 945. REPRESENTATION FORMALISM AND AXIOMS ................................................................... 995.1 CLASS DEFINITIONS. EXTENSIONS TO STANDARD FRAME FORMALISM............................................ 995.2 INSTANCE DEFINITION ....................................................................................................................1065.3 AXIOMS..........................................................................................................................................1076. ONTOLOGY FOR MOLECULAR BIOLOGY............................................................................1136.1 MODEL INNOVATIONS AND ASSUMPTIONS......................................................................................1146.1.1 Category Species.......................................................................................................................1156.1.2 Category conversions................................................................................................................1196.1.3 Object histories .........................................................................................................................1216.1.4 Slot groups in the EMB ontology ..............................................................................................1236.1.5 Populations ...............................................................................................................................1256.1.6 Temporal relations between processes......................................................................................1276.2 SUBONTOLOGY OF THINGS ...........................................................................................................1296.2.1 Tangible Things ........................................................................................................................1296.2.2 Abstractions ..............................................................................................................................137v6.3 SUBONTOLOGY OF PROCESSES......................................................................................................1406.3.1 Separate ....................................................................................................................................1436.3.2 Combine....................................................................................................................................1466.3.3 Transform .................................................................................................................................1506.3.4 Assess........................................................................................................................................1526.3.5 Process Complex.......................................................................................................................1546.4 SUBONTOLOGY OF RELATIONS .....................................................................................................1586.4.1 Properties unary relations......................................................................................................1626.4.2 Binary relations ........................................................................................................................1646.5 STRENGTHS AND CONTRIBUTIONS OF OUR APPROACH....................................................................1697. INTELLIGENT INFORMATION RETRIEVAL SYSTEM PROTOTYPE MM QUERY SYSTEM1727.1 USER INTERFACE ...........................................................................................................................1747.2 THE KNOWLEDGE BASE .................................................................................................................1787.3 THE SEARCH AND INFERENCE ENGINE ...........................................................................................1797.3.1 Inference component .................................................................................................................1797.3.2 Query processing search componentndirect match of transformants................................................................................................1998.2.2 Using object histories to answer queries...................................................................................2018.2.3 Using mixture components for indirect match of inputs and outputs ........................................2038.2.4 Technique abstraction...............................................................................................................2048.2.5 Using partwhole relations to answer queries...........................................................................2058.2.6 Generalization of queries based on a concept hierarchy ..........................................................2078.2.7 Specialization of queries based on a concept hierarchy............................................................2088.2.8 Summary of query examples......................................................................................................2088.3 EVALUATION OF FORMALITY AND PORTABILITY TRANSLATION TO ONTOLINGUA ........................2099. CONCLUSIONS...............................................................................................................................2169.1 APPLYING THE FRAMEWORK FOR COMPARING ONTOLOGIES TO THE MOLECULAR BIOLOGY ONTOLOGY.2169.2 MAJOR CONTRIBUTIONS AND FUTURE WORK..................................................................................218 BIBLIOGRAPHY.....................................................................................................................................214APPENDIX A. THE EMB ONTOLOGY ................................................................................................227APPENDIX B. THE TRAINING SET .....................................................................................................243APPENDIX C. THE TEST SET...............................................................................................................281Part I. Introduction and Motivation21. INTRODUCTIONMore and more information is available online every day. The greater the amount of onlineinformation, the greater the demand for tools that process and disseminate this information. It isno longer possible just to navigate through gigabytes of text on CDROMs and the World WideWeb. In order to make all this data really useful, one needs tools that will get exactly theinformation one needs. Processing electronic information in the form of text and answering usersqueries about that information intelligently is one of the great challenges in natural languageprocessing and information retrieval Schatz 1997.The research presented in this Thesis is centered on the latter of these two tasks intelligentinformation retrieval. In order for information to be retrieved, it first needs to be formalized in adatabase or knowledge base. The ontology for this formalization and assumptions it is based onare crucial to successful intelligent information retrieval.We have concentrated our effort on developing an ontology for representing knowledge in thedomains of experimental sciences, such as biology, physics, and chemistry. Molecular biology isused as an example. We show that existing ontological models cannot be readily applied torepresent these domains adequately. So our research has consisted of the following three tasks1. Develop an ontological model to represent experimental sciences and apply this model tomolecular biology Experimental Molecular Biology EMB ontology .2. Extend the standard frame formalism to fully express the developed ontology.3. Create a prototype of an intelligent information system that uses the developed ontologyto answer user queries MM Query System.Introduction34. Consider techniques for evaluating ontologies and apply them to the knowledge modelwe developed.We begin this Introduction by defining an ontology Section 1.1. We then briefly discuss thedomain of molecular biology and the challenges it presents for knowledge representation andinformation retrieval Section 0. We give a summary of the ontological model that we havedeveloped in Section 1.3 and discuss techniques that we used for evaluating the ontology inSection 1.4. All of these topics are elaborated on in the corresponding chapters of the Thesis, asoutlined in Section 1.5.1.1 What is an ontologyFormalization of knowledge begins with a conceptualization Genesereth 1987, which consistsof a set of objects, concepts, and other entities about which knowledge is being expressed oftencalled the universe of discourse and of relationships that hold among them. Every knowledgebase is based on some conceptualization. An explicit specification of this conceptualization iscalled an ontology Gruber 1993a.For an illustration of what an ontology is, consider, for example, the task of formalizing theworld of cubical blocks on a table with the goal of being able to reason about relative positions ofthe blocks to each other and to the table Genesereth 1987, Hayes 1985. Note that having putthese constraints on our universe of discourse, we do not need to represent such concepts asmaterial the blocks are made from, their size, weight, etc. and we will not be able to reason aboutthese properties of the blocks either. The choice of ontology determines what a system can knowand reason about.First, we need the predicate Blockb. We can define a partial function Hatb that mapsblock b into the block on top of it, if any such block exists. We can represent a number ofIntroduction4spatial relations between the blocks Ona,b, which holds if block a is directly on top ofblock b Abovea,b, which holds if block a is anywhere above block b. From thesedefinitions, the relation Above is more general than the relation On, as is stated in thefollowing axiomsab Ona,b  Abovea,babc Ona,b  Aboveb,c  Abovea,c.The relation On and the partial function Hat are also related to each otherab Hata,b  b  Onb,aSome unary relations that can be defined in this world are Clearb, which holds when thereis nothing above block b Bottomb holds if and only if block b is resting on the table.We can now use this ontology to describe a particular instance of the blocks world depicted inFigure 11. The list of all relations that hold for this model and values for nonnil functions arealso shown in the figure.abcdefObjects a, b, c, d, e, f.Relations Blocka, Blockb, Blockc, Blockd, Blocke, Blockf Cleara, Clearc, Clearf Bottomb, Bottome, Bottomf Ona,b, Ond,e, Onc,d Abovea,b, Above d,e, Abovec,d, Abovec,e.Functions Hatba, Hated, Hatdc.Figure 11. An example of a blocks world model, with the list of relations that hold for thismodel and function values.Introduction5Formally, an ontology consists of terms, their definitions and axioms relating them Gruber1993a. Each specific ontology greatly depends on the intended universe of discourse and desiredinferences. For instance, if we are creating an ontology for reasoning about numbers, weprobably do not need to include any information about substances. Alternatively, an ontology forexperimental sciences would center around substances and processes.Note that the blocks world ontology we presented above is not the only possible ontology thatdescribes this world. We could have chosen, for example, to have a relation Belowa,bwhich would be the inverse to the Above relation we may want to define a function Topbthat maps block b into a block that is on top of the pile where b is etc. Depending on aparticular application, we could add relations such as Cleara, Nexttoa,b, orfunctions Weighta, Colora, etc. One can think of other variations to this ontology.However, if several agents want to be able to communicate with each other about this world, theyneed to agree on and commit to some basic vocabulary and what it means. Then each of theagents can extend, prune or instantiate it.The importance of ontology design for knowledge sharing was one of the major reasons why thefield of ontology design has become an active area of Artificial Intelligence in recent years. It isgenerally accepted that building an ontology for any domain is a difficult and onerous task andthis task could be greatly facilitated if it were possible to reuse and modify ontologies created byothers. For example, researchers in biology could take advantage of ontologies defined for otherareas of knowledge, such as time and space. This would be useful, for instance, for the followingreasoning when we say that one bacterial strain was grown for 3 hours and another one for 90minutes, it may also be relevant that the second strain was grown half as long as the first one.When we define an experiment as a set of actions or steps, it may be important to know what itmeans that step A happened during step B. Temporal knowledge, and conclusions that flow fromIntroduction6it, would be defined in a general ontology and would therefore be accessible to an integratedbiologyworld knowledge model.However, for this reuse to be possible, some common foundations need to be agreed upon so thatintelligent agents can communicate with each other about a domain of discourse withoutnecessarily operating on a globally shared theory. In other words, there needs to be an agreementbetween agents to use a common vocabulary in a way that is consistent but not complete withrespect to the theory specified by an ontology this agreement is called ontological commitmentand is discussed in more detail in Section 2.1.1. Ontological commitment among researchers iscrucial to enable different groups working on ontology design in various areas to communicatewith each other and share their results Gruber 1993a, Guarino 1994b, Lehman 1995.There is an important difference between the notion of ontology and the formalism forexpressing it. Many different formalisms can be used to express the same ontological structurese.g. frames Minsky 1981, predicate calculus, conceptual graphs Sowa 1991, semanticnetworks Shapiro 1979, etc.. Figure 12, for example, demonstrates how the blocks worldontology presented earlier in this section could be represented using a frame formalism.Sometimes, however, different formalisms cannot be fully translated into each other and onecould be more expressive than another.Concept Above Upper block Lower blockConcept On Upper block Lower blockConcept Block Hat block Clear True or Flase Bottom True or FalsePhysical Objects RelationsFigure 12. Using frame formalism to define the blocks world ontology.Introduction71.2 Domain of molecular biology experiments and challenges itpresentsOur own ontology design effort is in the domain of molecular biology experiments. We believe,however, that our results are applicable to other experimental science domains as well.The biomedical field produces a huge body of research literature  about 600,000 papers everyyear. More and more of these papers are becoming available in electronic form. In order for thisinformation to be intelligently queried, it must first be formalized an ontology for formalizingthis knowledge needs to be developed.Biology research papers usually contain descriptions of experiments, results, and discussions. Inthis project we limit ourselves to formally describing only experiments not results anddiscussion. Experiment descriptions are usually contained in the sections of papers titledMaterials and Methods. Furthermore, these sections are the ones most often queried bybiologists1. Also, by limiting our domain to experimental procedures, the task of formalizing itbecomes more realistic, as most experiments follow recognized experimental protocols and theinformation that needs to be represented is limited. However, as will be shown here and in moredetail in Chapter 3, there are still a lot of challenging issues in representing knowledge aboutbiological experiments and science experiments in general.Figure 13 shows an excerpt from a biology research paper Gegner 1991. In Chapter 7, we willdescribe in detail the experimental procedure presented in this excerpt. At this point this issimply an example of how the processes we are trying to represent are described in biologyresearch papers. The sequence of steps described in this figure starts out with a strain of E. colibacteria which is grown to get a necessary number of cells. The grown cells contain CheWprotein which now needs to be purified. The purification process consists of first breaking theIntroduction8cells and then gradually removing substances other than CheW from the mixture and achievinghigher and higher concentration of CheW in the mixture that remains. Along the way, varioussubstances buffers, chemicals are added to the mixture and then removed carrying some of theunwanted ingredients away with them. In the end, all that is left is a mixture 99 of which isCheW protein.Our earlier work aimed at developing techniques for intelligent retrieval of biology researchpapers is presented in Baclawski 1994, Baclawski 1993a, Baclawski 1993b. The firstdiscussions and preliminary versions of the ontology appear in Hafner 1994, Hafner 1996. Wewill now briefly outline some challenges in representing the molecular biology domain and otherexperimental sciences .Experiments described in Materials and Methods sections of molecular biology papers aresimilar to cooking recipes. First, ingredients chemicals, bacteria, plasmids, etc. are usuallylisted. Then there is a description of sequences of experimental steps and procedures that usethese substances. They are mixed together, spun, separated, analyzed, etc. So, the two central                                                                                                                                                            1 Informal survey reported in Baclawski 1993bGrowth of Cells and Protein Purification.  The cheW and cheA  plasmids wereexpressed in E. coli  mutant strain RP3098 a flhAflhD  mutant, which was provided byJ.S. Parkinson University of Utah. Cells were grown at 30oC in L broth. . .CheW purification is based on the procedure described by Stock et al. 14 with thefollowing modifications. Cells were harvested by centrifugation at 5000rpm Beckman JA10 rotor for 5 min, resuspended in a small volume of buffer containing 10 mM Mes pH6.0, 100 mM NaCl, 0.5 mM EDTA, and 50 M phenylmethylsulfonyl fluoride, and thenbroken by French press. The lysate was ultracentrifuged at 50,000 rpm Beckman Ti 60rotor for 1 hr to remove cellular debris. Protein was precipitated from the supernatant byadding NH42SO4 to 40 saturation and pelleted by centrifugation. The pellet wasresuspended, dialyzed against the Mes buffer and loaded onto a Whitman DE52 column.Protein was eluted from the column with a linear gradient of 100250 mM NaCl. Fractionscontaining CheW were concentrated by precipitation with 50 NH42SO4 and finallypurified by using a Sephadex G100 column 2.5 x 160 cm equilibrated in the Mes buffercontaining 0.02 NaN3. CheW was 99 pure as determined by Coomassie Bluestaining.Figure 13. An excerpt from Gegner 1991Introduction9parts of our ontology are things including substances and other tangible objects, as well asabstractions and processes.Substances in molecular biology are characterized by very complex internal structure anddiversity of relations between subparts. For example, a protein is a chain of amino acids thereare many different proteins, each characterized by a particular amino acid sequence. DNA is achain of nucleotides, with subchains forming genetically significant regions an operon is asequence of related genes a gene is a sequence of codons a codon is a sequence of threenucleotides. A bacterial cell is surrounded by a membrane that functions as a wall, whose insideand outside elements are significant in biochemical reactions. These relations change assubstances undergo experimental procedures. For instance, cell membranes can be broken as aresult of applying pressure and, thus, the structure changes there is no longer a separationbetween and inside and outside elements and everything is in one unstructured mixture called alysate see Figure 14. In fact, the major effect of many experimental procedures is a change inobjects internal structure. We found that common framebased representations of complexsubstances that simply list subparts or ingredients are insufficient in this case. So, we introducedthe third major part to the ontology in addition to processes and things relations, e.g., there isan isinside relation that links cell components to the membrane that surrounds the cell.BreakFigure 14. The process of breaking cells. First, cell components are surrounded by cellmembrane. After the cells are broken, everything, the cell components and pieces of membrane,is in one unstructured mixture called a lysate.Introduction10The information about relations between components and how processes affect these relationscould then be used in query answering. Consider, for instance, the following example Two ofthe relations that can hold between a whole and its parts are isinside and iscomponentof. In the instance of breaking of the cells above, at the beginning all cellcomponents are inside the cells. We know that process break changes this relation whateverwas in the cells before, now obeys the relation iscomponentsof the lysate. Thisinformation can be stored in the knowledge base and then applied automatically in eachparticular case. Then, if it is stated in the beginning that, say, some protein CheW was in the cellsand cells undergo the breaking process, the queryIs CheW in the lysatewould be answered positively, since this inference would be automatically made based on thedescription of how break affects the partwhole relations.One of the major challenges in representing processes in experimental sciences is representingthe effects of transformations, in particular transformations that result in what we call categoryconversions. When batter is baked, for instance, the batter object migrates to a differentcategory, cake. The stuff the object was made from is still the same, but its classification haschanged. From the standpoint of a knowledge model, we could represent this migration as theoriginal participant in this case, batter ceasing to exist, but this is not an accurate reflection ofthe way people think about the situation. The fundamental notion in knowledge representationthat every individual object is defined as an instance of a category seems incompatible with auniverse where objects can gradually change their category as a result of a transformation. Thus,a straightforward process model that represents inputs participants and outputs objects thatcome into existence is inadequate for modeling conversions, because a it does not represent theIntroduction11fact that the inputs no longer exist and b it does not represent the relationship between theoutputs and the original inputs, one of the most important relationships being the fact that thestuff the inputs were made from is now the stuff the outputs are made from.For an example of how this knowledge can be used in information retrieval, consider thefollowing excerpt from the paragraph in Figure 13Cells were ... broken by French press. The lysate was ultracentrifuged at 50,000rpm Beckman Ti 60 rotor for 1 hr to remove cellular debris.And the following query pertaining to this excerptWere the cells ever ultracentrifuged in the process of purifying CheW by theprocedure described in  GegnerThe straightforward answer is No since ultracentrifugation process was never applied to thecells directly. It was only applied to the lysate. However, we can give a more complete answer tothis query if we store the information that the lysate is a direct transformant of the cells sincebreak is a category conversion and the stuff the cells were made from is now the stuff of thelysate. Given this information, we can answer the query in a more complete fashionUltracentrifugation was not applied to the cells directly but to the lysate derivedfrom the cells.Molecular biology experiments also pose interesting challenges in categorization. One of them iscategorizing processes, such as wash, that are always described as one step but contain severalsteps. A wash process consists of a combination step and then a separation step.Another issue is representing groups of processes that can be viewed as a whole and haveproperties of their own process complexes.Introduction12These and other challenges are described in full detail in Chapter 3 and our way of solving themis presented in Chapter 6.1.3 Summary of the ontological model.The EMB ontology that we develop in this Thesis and describe in full detail in Chapter 6consists of three major subontologies an ontology of Things, an ontology of Processesand an ontology of Relations Figure 15. Things represent Tangible Things allsubstances and equipment used in experiments and Abstractions such as time and place.Processes include both experimental procedures and natural biological processes that occuras parts of experiments. Relations cover properties of Things, their internal structure andtheir relations to one another.In the ontology of Things, the major threads of discussion and contributions are representingmixtures, treatment of populations, and representing groups of objects that can be treated as awhole but are independent objects themselves Complexes in our ontology. Since essentially allprocesses in our domain are applied to populations of cells and molecules and not singleProcessesThings Tangible Things andAbstractionsOntologyRelation sFigure 15. Three parts of the EMB ontology.Introduction13instances, we make the general assumption in our model that for any substance participating in aprocess, it is actually a population of that substance that participates in the process and not asingle cell or molecule. The introduction of Complexes e.g. cell suspension mounted on amembrane allows us to reason about these temporary configurations and treat their participantsas independent entities at the same time.As processes are the central part of any experiment, we discuss classification of processes ingreat detail. We identify four classes of singlestep processes Combine, Separate,Transform and Assess. We separately consider Process Complexes groups ofprocesses that can be treated as a whole. For example, a process and its technique is a ProcessComplex when cells are harvested by centrifugation, harvest is the goal process andcentrifugation is a technique. A multistep process, such as column chromatography, and itssubsteps, add and elute, also constitute a Process Complex.To trace substances through the processes and, particularly, the category conversions theyparticipate in, we introduce object histories. An object history is a Process Complex thatrepresents how and when an object was created for example, by genetic engineering, whatcomplex objects it was part of, what processes it participated in through its lifetime, and howtransformations including category conversions have affected it. In many cases this informationcan be automatically inferred from a complex objects description and the process models of thetransformations it participates in. For example if there was a protein cheW present in the cellsbefore the cellbreaking process, the following can be automatically added to the particularCheW instances history it participated in an instance of a cellbreaking process it is now acomponentof a Lysate instance. Then if a query is made on whether CheW was present insome other process later applied to the lysate, we can give the correct positive answer.Introduction14One of the major contributions of this project is a detailed study at relations within and betweencomplex objects. We distinguish structural, functional and compositional relations. The last ismainly relations between a whole and its parts. We consider all the different types of theserelations that occur in our domain.1.4 Evaluating an ontologyEvaluating results is a very important part of any research project. Ontology design is noexception. However, since an ontology, and specifically, its adequacy for a domain, is not a veryprecise matter, its objective evaluation is difficult. We suggest and carry out the followingevaluation techniques the first two are ontology evaluation and the third is evaluation of theformalism1. To evaluate conceptual coverage of the ontology we employ the training and test setapproach used in other areas of AI. First, a randomly selected set of data is extracted froma corpus and used for developing a model or technique training set. Then the developedmodel or technique is tested on a new, previously unseen set of data from the samecorpus test set to get an objective evaluation of how adequate the model or technique is.In our case, we first randomly selected paragraphs from a corpus of molecular biologypapers to develop the ontology and then tested it by representing the knowledge in thenew previously unseen and randomly selected set of paragraphs. We used the proportionof successfully represented concepts as the measure of conceptual coverage.2. To evaluate practical usefulness of the model we implemented a proofofconceptprototype of an intelligent information retrieval system that shows how our ontologysupports several important classes of inferences.Introduction153. To validate the formality and portability of our model, we translate our formalism intoOntolingua Farquhar 1996 which has become a standard ontology authoringenvironment. Although there are some features of the formalism that cannot be directlyrepresented in Ontolingua, we show that the extra information could still be encodedusing facets and then extracted if necessary.We discuss the evaluation methodology in more detail in Chapter 4 and the results of evaluationin Chapter 8.1.5 Thesis OutlineThere are four major parts in this Thesis. Part I includes this Introduction, a discussion of relatedwork Chapter 2, and representation challenges in representing experimental sciences Chapter3. Part II addresses the methodology of ontology design by presenting steps in our ontologydesign and evaluation process Chapter 4. Part III presents the major results our representationformalism Chapter 5 that is an extension of standard frame formalism, the EMB ontology itselfChapter 6 and MM Query System Chapter 7 which is a prototype of an intelligentinformation retrieval system that uses the ontology . Part IV describes our evaluation resultsChapter 8 and conclusions Chapter 9.162. RELATED WORKIn this chapter we will review the related work in the two fields that our research is centered in Ontology design Section 2.1 and Information Retrieval Section 2.2. In the first part we willreview both, the theory Section 2.1.1 and practice Sections 2.1.2 and 2.1.3 of ontology design.We introduce a specific ontology, Qualitative Process Theory, in Section 2.1.4. This project hada significant influence on our own approach. We conclude this chapter with a brief discussion ofrelated work in representing medical and biological knowledge Section 2.3.2.1 Ontology researchWe gave a brief introduction to what an ontology is in Chapter 1. Now we will discuss itsdefinition in more detail and consider the issues that face the ontology design community at thispoint. We will then present the work in theory and practice of ontology design.There are various definitions of  ontology, and those in Philosophy and Computer Science vary.According to the Websters dictionary Woolf 1981 ontology is a particular theory about thenature of being or the kinds of existents. The task of intelligent systems in Computer Science isto represent formally the above Existents. A body of formally represented knowledge is based onconceptualization. Conceptualization consists of a set of objects, concepts and other entitiesabout which knowledge is being expressed and of relationships that hold among them. Everyknowledge model is committed to some conceptualization, implicitly or explicitly. An explicitspecification of this conceptualization is called ontology Gruber 1993a. We have introduced anexample of a simple ontology for the blocks world in Chapter 1.Related work17We have already quoted Gruber 1993a in stating that formally, an ontology consists of terms,their definitions and axioms relating them terms are normally organized in a taxonomy. This iswhere the disagreement among ontology researchers begins. Some say that axioms are central toontology design and a complete or highlevel taxonomy does not even have to exist maybe onlyfor visualization. Others say that, on the contrary, one should first concentrate on defining ataxonomy of fundamental concepts although they agree that there should be axioms orknowledge in some other form associated with the concepts in the taxonomy. Another point ofdisagreement is whether ontologies should be built bottomup, since it is impossible to agree onhighlevel concepts topdown, starting with partitioning categories according to somefundamental notions or if some middle layer of concepts should be defined first. There is anongoing discussion of these issues in Usenet mailing lists and Newsgroups2.However, most of the researchers agree that major challenges in ontology design right now areto1. make ontologies sharable by developing common formalisms and tools2. develop the content of ontologies ontology design3. compare, gather, translate and compose different ontologies.Our contribution is be in parts 2 and 3 of this list we developed the content for an ontology formolecular biology Chapter 5 and created a unified review that will gather and compare variousexisting ontologies Section 2.1.3.                                                2 Mainly srkb shared reusable knowledge bases mailing list httpwwwksl.stanford.eduemailarchivessrkb.index.html.Related work182.1.1 General studiesOne of the major and more difficult things in ontology design is  categorization Lakoff 1987,Rosch 1978. This includes not only seemingly correct reflection about the real world but  at thesame time representation of how people see this world and how they categorize things in theirminds which may be different from the categorization one would first come up with. Accordingto Rosch the task of category systems is  to provide maximum information with the leastcognitive effort. Hence, the design of a proper ontology may include some psychological studiesof the experts working in the domain area.Brown Brown 1958 discovered that there is a certain basic level in the way humans categorizethings. We perceive basic categories before we perceive any other features of an objectBaclawski 1996. When we see a bird, we first realize that it is a bird before noticing that it is ananimal. The basic level categories are neither very high in our hierarchy of things nor are they ata very detailed level. What exactly these basic categories are depends on the purposes of thecategorization. For an ornithologist, for example, particular bird species may take the place ofbasic categories.Several other studies Whewell 1847, Wittgenstein 1953 demonstrated that categories are notusually specified by a fixed set of properties of its members, but by the members resemblance tosome prototypical member of a category. Members of the same category may not share all theproperties, and yet given any two items in the category one can easily see that they are related.Most of  the earlier studies on categorization were performed by philosophers or psychologists.Currently, however, there are more and more theoretical studies in  ontology design in theArtificial Intelligence research literature. Thomas Gruber in Gruber 1993a specifies fiveprinciples for designing usable shareable ontologies, such as clarity, coherence, extensibility,minimal encoding bias and minimal ontological commitments.  All of the above seem like veryRelated work19reasonable principles and we should try to  comply with those. Research has been done in manyof these areas.Ontologies are used to describe ontological commitments for a set of agents, so that the agentscan consistently communicate with each other about the domain of discourse without necessarilyhaving a globally shared ontology. An agent commits to an ontology, if its observable actions areconsistent with the definitions in the ontology Gruber 1993a. Practically, ontologicalcommitment is an agreement between agents to use a common vocabulary in a way that isconsistent but not complete with respect to the theory specified by an ontology.The following example illustrates what ontological commitment is Guarino 1994a. Suppose,we want to state that a red apple exists.  Depending on the structure of the domain, there are atleast two ways to interpret this there exists an apple, and it has a redness property or red is acolor and there exists an apple such that its color is red. Formally,  and  , respectively. Both arelegitimate formalizations. To specify ontological commitment for a domain is to specify whichstructure of the domain we are going to use. Then, after agents commit to one of the above twoformalizations, one of them can, for example, add the fact that crimson is a hue of red. This newfact should be consistent with the structure of the domain the agent committed to. So, in the firstcase, crimson will be defined in the following way  and in the second case it will be . Atheory for formally representing ontological commitment was developed in Guarino 1994b. T.Gruber in Gruber 1993a suggested that one of the principles for  ontology design should beminimal ontological commitment. An ontology should make as few claims as possible about theworld being modeled to allow the agents committed to the ontology  freedom to specialize andinstantiate the ontology as needed. This is particularly important in designing ontologies forknowledge sharing and reuse.Related work20Ontological commitment is the central theme in the knowledge sharing and reuse community.There is a lot of research dedicated to enabling various intelligent agents to work together byunderstanding each other, having common ontology, reusing each others ontology. ARPA hassponsored a knowledgesharing effort to develop methodology and software for the sharing andreuse of knowledge. The two main products of this effort are the Knowledge Interchange FormatKIF developed at Stanford University Genesereth 1992 and the Knowledge Query Manipulation Language KQML developed at University of Maryland Finin 1994.The Knowledge Interchange Format KIF is a language for defining ontologies. It provides forthe definition of objects, functions and relations. KIF has declarative semantics and it is based onthe firstorder predicate calculus. It provides for the representation of metaknowledge andallows for the representation of nonmonotonic reasoning rules. Being an interchange format, itis very hard and tedious to use for  specifications of  ontologies per se, but there are systems builton top of it which allow an ontology to be specified in the familiar terms of classes, relations, etc.An example of such a system is Ontolingua Gruber 1992 which is a set of tools for  analyzingand translating ontologies. The WWW site for the Knowledge Systems Laboratory at StanfordUniversity3, where this system was developed, contains a number of ontologies designed withOntolingua and a userfriendly Ontology Editor for creating your own ontologies, which alsoallows you to incorporate the ontologies already in the database into your own ontology.The Knowledge Query  Manipulation Language KQML Finin 1994 is a message format anda messagehandling protocol to support runtime knowledge sharing among agents. Each of theagents may have its own knowledge base or even no explicit knowledge base at all. KQML isthe language and the protocol that these agents can use to communicate with each other. KQMLcan be used, for example, as a language for an application program to interact with an intelligentRelated work21system or for two or more intelligent systems to share knowledge in support of cooperativeproblem solving.2.1.2 Projects in Ontology Design4In this section, we present a brief overview of ten prominent projects in ontology design. Wedescribe the general information about each project, such as its goal and scope, and some of themore important aspects of its ontology. We start with more general ontologies, such as Cyc andWORDNET, and then go on to domainspecific ones such as UMLS and TOVE and to theknowledge representation system such as KIF. To avoid excessive repetition, we discuss someof the details of the projects later on during the comparison.Cyc projectTwelve years ago a comprehensive effort was commenced to  create a general ontology forcommon sense knowledge the Cyc project Guha 1994, httpwww.cyc.comcyc21cover.html,Lenat 1990a, Lenat 1995, Lenat 1990b.  Cyc contains more than 10,000 concept types used inthe rules and  facts encoded in the knowledge base. The upper level of the Cyc hierarchy ispresented in Figure 21. At the top of the hierarchy is the THING concept which does not haveany properties of its own. The hierarchy under Thing is quite tangled. Not all the subcategoriesare exclusive. In general, Thing is partitioned in three ways RepresentedThing versus InternalMachineThing. Every Cyc category must be an instanceof one and only one of these sets. InternalMachineThing is anything that is local to theplatform Cyc is running on strings, numbers and so on. RepresentedThing  is everythingelse. Sowa in Sowa 1995b criticizes this proposition saying that Cyc should not beexcluded from representing things in its own machine.                                                                                                                                                            3 httpwwwkslsvc.stanford.edu5915Related work22 IndividualObject versus Collection. This is another total partition of Things. Collectionsinclude all the categories mentioned in Cyc. Hence, Collection doesnt have mass and isimperceptible. Sowa argues that it is unclear where something like a flock of birds wouldbe which is a collection that is clearly perceptible Intangible versus TangibleObject versus CompositeTangibleIntangibleObject. Everyunit in Cyc is an instance of exactly one of these three categories. Intangible is anythingthat has no mass set of all people, number42, etc., whereas TangibleObject is anythingthat does have massenergy a rock, a persons body.CompositeTangibleIntangibleObject is something that has both a physical extent andintangible extent. For example, a particular person has a body physical extent and mindintangible extent                                                                                                                                                            4 The material in this and the next sections is published in Fridman Noy 1997 CompositeTangibleIntangibleObject TangibleStuffTangibleObjectIntelligenceSomethingExistingInternalMachineThingProcessIntangibleStuffIntangibleObjectStuffAttributeValueSlotAttributeRelationshipCollectionEventIntangible RepresentedThingIndividualObject Thing Figure 21. Cyc Toplevel categories adapted from Lenat 1990bRelated work23 It is interesting to note that Event and its subclass, Process, are subclasses of IndividualObject. WORDNET One of the most welldeveloped lexical ontologies is WORDNETftpclarity.princeton.edupubwordnet, Miller 1990. WORDNET is a manuallyconstructed online lexical reference system. Lexical objects in WORDNET are organized semantically with thebasic distinction between nouns, verbs, adjectives and adverbs. The central object in WORDNETis a synset, a set of synonyms. If a word has more than one sense, it will appear in more than onesynset. There are 70,000 synsets. Synsets are organized in a hierarchy via superclasssubclassrelationship referred to as hypernymyhyponymy. Part of WORDNET hierarchy of tangiblethings is presented in Figure 22. For each concept synset, there is a pointer to nounsrepresenting its parts. For example, parts for the bird concept are beak and wings. There areallowances in WORDNET implementation for other types of pointers for instance, from noun toverb to represent functions or to adjective to represent properties, but this has not beenimplemented yet. WORDNET is a taxonomy it does not have structured concepts or axioms. Although WORDNET uses a simple hierarchy for noun synsets, it employs different organizationof synsets for verbs and adjectives. Descriptive adjectives, are organized in bipolar clusters basedon antonymy. For example, there is a bipolar cluster generated by dry and wet with synonyms ofeach of the adjectives at the corresponding side of the cluster. Relational adjectives, such asfraternal in fraternal twins are organized only in synsets with pointers to the correspondingnouns. Verbs in WORDNET are divided into 15 clusters according to their meaning, with entailmentbeing the primary relationship between the verbs in a cluster. Most of these clusters correspondto semantic domains verbs of bodily care and functions, change, cognition, communication,Related work24competition, etc. The verbs, such as suffice, belong, and resemble that do not belong to any of thesemantic domains and refer to states, form a separate file. Generalized Upper Model The Generalized Upper Model Bateman 1994,httpwww.darmstadt.gmd.depublishkometgenumnewUM.html is a general task and domainindependent linguistically motivated ontology that supports sophisticated natural languageprocessing in English, German and Italian. Its level of abstraction is in between lexicalknowledge and conceptual knowledge. It claims to simplify the interface between domainspecific knowledge and general linguistic resources. The model proposes a domain organizationand consists only of a taxonomy with the assumption that naturallanguage processing tools thatwill use it, will encode the axiomatic information in the NLP code itself. There is an extensivehierarchy of concepts about 250 of them as well as a separate hierarchy for relationships umrelation. thing, entitynonliving thing, objectliving thing, organismperson, human beingnatural object substancefoodartifactanimal, faunaplant, flora Figure 22. WORDNET Representation of subclass relation among synsets denoting differentkinds of tangible things Miller 1990. Braces enclose concepts in the same synset.Related work25 At the top of the concept hierarchy partially represented in Figure 23 is the concept umthingthat represents the most general phenomena or situation. It is the subdivided into three majorsubtypes Configuration a configuration of elements all participating in some activity or state ofaffairs. Element a single conceptual term Sequence a complex situation where various activities or configurations are connectedby some relation to form a sequence Relations are then used to link elements into configurations and sequences. Most of the relationsare between a process and its participants, manner, etc. The category umrelation is thussubdivided into process in configuration, circumstance in configuration and participant in ProjectingSequenceExpandingSequenceSequenceElementProcessCircumstanceParticipantSimpleThingSimpleQualitySayingSensingBeingHavingDoingHappeningConfigurationUmthing Figure 23. Generalized Upper Model  Toplevel hierarchy  fromhttpwww.darmstadt.gmd.depublishkometgenumnewUM.htmlRelated work26configuration. Causal relation, for instance, would then be one of circumstances inconfiguration and attribute would be one of participants in configuration relations. Sowas Ontology John Sowa in Sowa 1995a, Sowa 1997 states his fundamental principles for ontology design asdistinctions, combinations and constraints. He uses philosophical motivation as the basis forhis categorization. There are three toplevel distinctions Physical vs Information, or, Concrete vs Abstract. This is a disjoint partition of all thecategories in the ontology. Firstness vs Secondness vs Thirdness, or, in other words, Form vs Role vs Mediation.These categories are not mutually exclusive. For example, WOMAN is considered to be aForm Firstness as it can be defined without considering anything outside of a person.As a MOTHER, a TEACHER, or an EMPLOYEE, the same individual would  be an exampleof a Role Secondness. These roles represent an Individual in relation to another type aCHILD, a STUDENT, an EMPLOYER. MARRIAGE is a  Mediation Thirdness category, as itrelates several in this case two types together. Continuant vs Occurrent, or, Object vs Process. Continuants are objects that retain theiridentity over some period of time Occurrents are processes whose form is in the state offlux. For example, an AVALANCHE is a Process and a GLACIER is an Object. Note thatthis distinction depends on the time scale. On a grand time scale of centuries a glacier isalso a ProcessThese distinctions are then combined to generate new categories see Figure 24. At a lowerlevel, for instance, Script e.g., a computer program, a baking recipe, etc. is a form thatrepresents sequences and is thus defined as Abstract, Form, Process. Similarly, History e.g., anRelated work27execution of a computer program is a proposition that describes a sequence of processes and is,therefore, defined as Abstract, Form, Object .At the top level there is a category for every possible combination of distinctions. To avoid toomany combinations, however, constraints are used at the lower levels to rule out categories thatcannot exist. Logical constraints, for example, would rule out triangles with four sides, andempirical constraints would rule out talking birds. Constraints are represented as axioms and areinherited through the hierarchy to lower levels.Dahlgrens OntologyKathleen Dahlgren in Dahlgren 1988 presents a linguistically motivated ontology. One of themain points made by Dahlgren is that ontology should be closely linked to language and herontology is based on extensive linguistic and psycholinguistic research. The primary constructionprinciple in the ontology is crossclassification hierarchy. This means that at each node of thetaxonomy, there may be several dimensions in which branching occurs. For example, at the toplevel Entity crossclassifies as either Abstract or Real and as either Individual or Collective.These are assumed to be essentially parallel divisions. Then something is Individual and RealAbstractProcessObjectConcreteInformationObjectInformationProcessPhysicalProcessPhysicalObjectFigure 24. Sowas ontology Part of the ontology based on the twodistinctions Physical vs Information and Continuant vs OccurrentRelated work28COW and something is Collective and Real HERD. Figure 25 shows parallel portions of theontology from Dahlgren 1988. Note that not all the links in the ontology are the of the sametype which makes it somewhat confusing although most of the links are ISA ones, some ofthe links used in the Collective part of the hierarchy are not. For example, HERD is placed underAnimal in the hierarchy clearly, a CONSISTSOF relation, while ANIMAL is under Concrete anISA relation.At the bottom of the hierarchy are socalled terminal nodes that do not have theoreticalimportance and that are not crossclassified. For instance, Animal, Role, Person are all terminalnodes. Then specific nouns are attached to terminal nodes. Maybe because all the nouns arespecified based on their use in sentences, the classification of terminal nodes sometimescontradicts the semantics of a word. For example, a terminal node Culture with E.COLI beingone of the nouns attached to it is classified as Individual and Nonselfmoving along with Socialand Living. E.coli bacteria can move by themselves if treated as individual bacteria. On the otherhand, culture is more than a single bacteria and hence is not an Individual.Related work29Unified Medical Language System UMLSThe Unified Medical Language System UMLS of the National Library of Medicinehttpwwwkss.nlm.nih.govDocsumls.fact.html, Humphreys 1993 is an example of a domainspecific system. This system was designed to facilitate the retrieval and integration from multiplemachinereadable biomedical information resources. The projects goal was to facilitate the linkbetween different sources and users that use different terminology.UMLS has a concept hierarchy of 135 medical concepts and a semantic network that representsadditional nontaxonomic relationships between categories. Its concept hierarchy includes bothEntities Physical and Conceptual and Events, such as Activity, Process and Injury orPoisoning. Figure 26 shows the toplevel hierarchy of Entities.The relations represented in the system include such semantic relations as physicallyrelatedto,spatiallyrelatedto, functionallyrelatedto, temporallyrelatedto, conceptuallyrelatedtoand various more specific forms of these relations. There are 51 different relations in all and theSemantic Network of concepts and all the possible relations that hold between them is extremelyCOWAnimalConcreteRealAbstractIndividual EntityHERDAnimalConcreteRealAbstractCollective EntityFigure 25. Dahlgrens ontology Parallel portions of the ontologyfrom Dahlgren 1988Related work30large. One of the major gaps in this ontology, however, is that it does not consider the dynamicsof  processes and the dynamic versus static relations between them.Idea or ConceptFindingOrganism AttributeIntellectual ProductOrganizationLanguageAnatomical StructureManufactured ObjectSubstanceOrganismConceptual EntityPhysical ObjectEntityGroupGroup AttributeOccupation or DisciplineFigure 26. UMLS Top level hierarchy of Entities.TOronto Virtual Enterprise TOVEThe TOronto Virtual Enterprise TOVE project Gruninger 1995,httpwww.ie.utoronto.caEILtoveontoTOC.html is an example of a domainspecific ontologytailored for a very specific task enterprise modeling. The goal of the project is to createenterprise models that can answer questions pertaining to the information explicitly in the modeland can also deduce answers to queries. TOVE uses a very formal approach to the ontologyengineering process itself and the ontology evaluation. First, through interaction with theirindustrial partners, the ontology engineers determine the problems that arise in the actualenterprises. This way the questions that the ontology should be able to answer are formed theyare called competency questions. These questions justify the choice of concepts and relations inthe ontology. Then the competency questions and all concepts and axioms  are formalized in firstRelated work31order logic and the completeness theorems for the competency questions are proved based on thisterminology.As for the ontology itself, there is no single ontology per se, but a set of several ontologies forvarious logical parts in enterprise modeling that are then interlinked via relations. Theseontologies are for activities and states including a representation of time, products,organization and an ontology for activitybased cost management. Within each of theseontologies, there are a number of small hierarchies two or three levels deep that represent smallclusters of knowledge. Figure 27 gives an example of such a cluster. Axioms and relations areused to link knowledge from various clusters.GENSIMGENSIM Karp 1993 is a genetic simulation system that represents and models enzymaticallycatalyzed biochemical reactions whose substrates include macromolecules with complex internalBoard of Directors DivisionDepartmentContractorEmployeeOrganizationGroupOrganizationIndividualOrganizationEntityFigure 27. TOVE An OrganizationEntity hierarchy in the Organization ontology fromhttpwww.ie.utoronto.caEILtoveontoTOC.html. Organization Entity can be anIndividual or a GroupGenesDNA segmentsRNA segmentsRNA GenesProteinNucleic AcidSegmentsE.coliBacteriaExperiments Active SitesMediaThingFigure 28. GENSIM Toplevel  o tology. In fact, the ut or does not use  ge eral t plevel conceptThing and the five n xtlevel concepts are unrelated. We introduced the toplevel o cept Thing forrepresentation uniformity with other projects.Related work32structures, such as DNA and RNA. There are two subontologies in GENSIM called KnowledgeBases class knowledge base and process knowledge base. The toplevel hierarchy of the classknowledge base is represented in Figure 28. It includes biochemical objects, such as genes,proteins, and biochemical binding sites. General classes of biochemical objects are representedwith frames. Frames are also used to represent instances of these objects in simulations. InGENSIM, each object, such as Protein, represents not a single molecule, but a homogeneouspopulation of such molecules.The process knowledge base describes the potential behavior of objects in the system. The authoruses a Qualitative Process Theory Forbus 1984 approach to represent processes, and eachprocess has a very detailed frame that includes not only such parameters as inputs and outputs ofreactions, but also preconditions for a reaction to occur and effects of a reaction. Thisinformation is then used to simulate reactions based on the specified starting conditions.PliniusPlinius project van der Vet 1994a, van der Vet 1993, van der Vet 1994b aims at semiautomaticknowledge extraction from text in the domain of material science, ceramic materials in particular.The conceptualization of the chemical composition of materials is at the center of the Pliniusontology. The ontology for processes and properties has not been published yet, so we onlydiscuss the ontology of materials. The authors of Plinius use an approach to ontologyorganization that is very different from traditional hierarchicalaxiomatic approach. They call itConceptual Construction Kit The ontology starts with sets of atomic concepts, such as chemicalelements, real numbers, aggregation states gaseous, liquid, etc. and others, serving asprimitives. Elements of these sets are then combined together to define all other concepts. Thiscombination is defined by construction rules that govern the ways in which the combinations canoccur. Construction rules define how complex substances and structures are constructed from theRelated work33atomic concepts. There are rules for groups, chemical substances, phases built up of chemicalsubstances in relative proportions, etc.A taxonomy is then defined implicitly by subsumption. The lattice in Figure 29 illustrates thisprinciple. Suppose, there are three primitive sets A, B and C. Capital letters represent anarbitrary element of the set. Small indexed letters represent specific elements of thecorresponding set we used only one element of each set to simplify the figure a1 is an elementof the set A, b1 is am element of B and c1 is an element of C. And suppose there is a constructionrule that combines elements of these three sets to form a complex object. Then an object whereall the components are specific elements of the sets is at the bottom of the hierarchy it is themost specific one. If we allow one of the three components to be substituted with an arbitraryelement of the corresponding set, we get a more general category of which our original categoryis a subclass. If we allow two of the three components to be arbitrary elements of thecorresponding sets, we get an even more general concept. The most general category is, ofcourse, the one where none of the components is fixed.It is unclear how this approach can be extended beyond chemistry, or how processes andproperties would be represented.Related work34Knowledge Interchange Format KIFThe Knowledge Interchange Format KIF is a language for defining ontologies Genesereth1992. It provides for the definition of objects, functions and relations. KIF has declarativesemantics and it is based on the firstorder predicate calculus. It provides for the representation ofmetaknowledge and allows for the representation of nonmonotonic reasoning rules. Weconsider KIF an ontology because a certain view of the world is incorporated in it. Although itsrepresentation is not by far at the level of detail of other ontologies described here, microtheories of numbers, sets and lists, for example, are axiomatized in KIF. Some axioms of themicrotheory of sets are presented in Figure 210.Being an interchange format, it is very tedious to use for  specifications of  ontologies per se, butthere are systems built on top of it which allow an ontology to be specified in the familiar termsof classes, relations, etc.  An example of such a system is Ontolingua Gruber 1992 which is aset of tools for  analyzing and translating ontologies. The WWW site for the Knowledge Systemsa1b1c1a1Bc1Ab1c1 a1b1CAb1CABc1 a1BCABCFigure 29. Plinius Illustration of taxonomy organization by subsumption. Capital letterscorrespond to arbitrary elements of the sets small indexed letters correspond to specificelements of the corresponding sets thus, a1 is an element of the set A, etc.Related work35Laboratory at Stanford University5, where this system was developed, contains a number ofontologies designed with Ontolingua and a userfriendly Ontology Editor for creating your ownontologies, which also allows you to incorporate existing ontologies from the database into yourown ontology.1. All entities in KIF are either individuals or sets. This distinction isexhaustive and mutually disjointor set x individual xor not set x  not individual x2. An object can be a member of another object if the latter is a set member x s      set x3. Extensionality property two sets are identical if and only if theyhave the same members and set s1 set s2       forall x      member x s1 member x s2     s1 s2Figure 210. KIF partial axiomatization of microtheory of sets from Genesereth 19922.1.3 Comparative Review of the Projects in Ontology DesignThe major goal of this section is to develop a framework for comparing various projects inontology design and put a number of prominent ontologies in this framework.Recent work in ontology design has produced a range of different projects from ontologies thatrepresent general world knowledge, to domainspecific ones, to knowledge representationsystems which embody ontological frameworks. There is an agreement in the ontologyengineering community that it would be very beneficial to be able to integrate ontologies so thatthey can share and reuse each others knowledge. If one ontology, for example, has a very welldeveloped theory of time, another ontology say, the one representing biology experimentscould then use that without having to reinvent the time microtheory. There is also anunderstanding that achieving interoperability of ontologies is a very challenging task. For smoothintegration to be at least partially possible, the first thing to do is to look at the ontology                                                5 httpwwwkslsvc.stanford.edu5915Related work36projects that already exist and are fairly well developed and consider the differences andsimilarities in the way they treat some basic knowledge representation aspects. Havingunderstood that, we can see where there is some common base and what are the obstacles to theintegration of different ontologies.Identifying a framework for comparing ontologies and placing a number of the more prominentexisting projects in this framework is the objective of the study presented here. After giving abrief introduction to a number of ontology projects, we compare them with respect to purposesthey were created for, what the design process was, how they treat certain fundamental issues inrepresenting knowledge, such as taxonomies, properties, relations, etc. We identify commonthemes and consider different approaches to these issues. We try to single out some majorapproaches in each dimension, group the projects according to this categorization and point outthe ones that do not fit in this categorization anyway.Another motivation for creating a framework for comparing ontologies is the growing work inproducing libraries of ontologies that can be reused. In order for a researcher to orienthimselfherself in an ontology library and determine which ontologies are good candidates for reuse, it would be extremely useful to get  a description of ontologies in a library in a more or lessstandard form. A framework for comparing ontologies, such as the one represented below, is afirst step in defining a set of questions and possible answers that would allow an ontology tointroduce itself to a potential user.One of the few prior studies that compares ontologies is in Uschold 1996b, Uschold 1996c. Theontology comparison dimensions identified in it are formality from highly informal to rigorouslyformal, purpose what the ontology is used for and subject matter the nature of the domain thatthe ontology is characterizing. We add a significant number of other dimensions that considerRelated work37content of ontologies in more detail and assess ten specific projects based on these dimensions. Abrief description of each project with references is presented in section 2.We have compared these projects according to a number of dimensions. These dimensions aresummarized in Table 21. We begin by comparing general attributes of the projects in Section2.1.3.1 what an ontology was created for, whether it is a general or domainspecific one, howcan it be integrated in a more general ontology or how a more specific ontology can be linked toit. We also include in the comparison such technical data as ontology size, formalism that wasused, whether an ontology was implemented and whether it is publicly accessible in its entirety.In Section 2.1.3.2 we consider the process of designing and evaluating ontologies. There is activediscussion in the ontology community about different approaches to these processes.In comparing the content of ontologies we discuss three different levels first, an ISA taxonomyof concepts, second, the internal concept structure and relations between concepts, and, third,presence or absence of explicit axioms. Taxonomy Section 2.1.3.3 is the center part of mostontologies. Taxonomy organization can vary greatly all concepts can be in one large taxonomy,or there can be a number of smaller hierarchies, or there can be no explicit taxonomy at all.Although all generalpurpose ontologies try to categorize the same world, they are very differentat their top level. They also differ in their treatment of basic parts of an ontology Things,Processes, Relations. We compare top level categoriesRelated work38of the ontologies. The next level of comparison is internal concept structure Section 2.1.3.4.Internal structure can be realized by properties and roles. Concepts in some ontologies are atomicand may not have any properties or roles, or any other internal structure associated with them.We look at how the studied projects treat all these issues. We specifically study the treatment ofGeneral The purpose the ontology was created forGeneral or domainspecificDomain if domainspecificCan it be easily integrated in a more general ontologySize number of concepts, rules, links, etc.Formalism usedImplemented or not implementation platform and languagePublished or notDesign process How was the ontology builtWas there a formal evaluationTaxonomy General taxonomy organizationAre there several taxonomies or is everything in the sameoneWhat is in the ontology things, processes, relations,propertiesTreatment of timeToplevel divisionHow tangled or dense the taxonomy isInternal conceptstructure and relationsbetween conceptsDo concepts have internal structureAre there properties and rolesAre there other kinds of relations between conceptsHow are Partwhole relations representedAxioms Are there explicit axiomsHow are the axioms expressedInference mechanism How is reasoning done if anyInstances of going beyond firstorder logicApplications Retrieval mechanismUser InterfaceApplication in which the ontology was usedContributions Major strengths and contributionsWeaknessesTable 21. Summary of ontology comparison characteristics used in this study.Related work39partwhole relation in these ontologies. The third level in the comparison is the presence orabsence of explicit axioms and the associated inference mechanisms if any. In Section 2.1.3.5we consider the ontologies use of formal axioms, and whether they go beyond firstorderlogic.An important test for any ontology is the practical applications it was used for. These canbe applications in natural language processing, information retrieval, simulation and modeling,etc. that use knowledge represented in the ontology. Some applications of the projects arediscussed in Section 2.1.3.6.2.1.3.1 General characteristicsProjects goalsMany features of an ontology depend on the purpose it was created for. Hence, one of the firstcomparison criteria was the purpose of a particular project. The major goals of the projectsincluded natural language understanding information retrieval theoretical investigationknowledge sharing and reuse simulation and modeling. Many ontologies are built for variousnatural language applications ranging from knowledge acquisition from text to semanticinformation retrieval. Cyc, GeneralizedUM, WORDNET, Dahlgrens ontology, UMLS andPlinius fall into this category. Although Cyc does not have any particular NL application it isdesigned for, NLP was one of the major motivations in the project to represent commonsenseknowledge. WORDNET and UMLS are large reference systems that are built to be used in otherNLP systems, not in any particular application. TOVE has intelligent information retrieval as itsmain purpose. This retrieval however is not text retrieval. TOVE creates enterprise models andthen answers queries to thosemodels. Ideally it will not only answer queries with what is explicitly represented, but also beable to deduce answers.Related work40Another class of ontologies are theoretical investigations that do not directly pursue the goal ofbuilding a working system. Sowas ontology is an example of such a system. Sowa exploresphilosophical foundations for building knowledge models, history of ontologies starting fromAristotle and suggests his own model based on these earlier studies. We have also consideredKIF which is a knowledge representation system since it also embodies an ontologicalframework it provides ways and limitations for representing knowledge. A system calledOntolingua Gruber 1992 is built on top of KIF and provides a common ontologydefinitionlanguage. This of course is a first step in knowledge sharing and reuse if different ontologies areto be shared they should at least be translatable into the same formalism. Ontologies thatfacilitate knowledge sharing and reuse are at the center of research in the field right now. Amongthe projects in this study besides KIF GeneralizedUM also can claim knowledge sharing andreuse as one of its purposes as it attempts to share knowledge across different languages theontology is multilingual. GeneralizedUM is also the only one of the NLPsupportingontologies that spans several different languages, not just English.Simulation and modeling is another purpose for ontology development projects. GENSIM, forinstance, develops a model of qualitative scientific knowledge about objects and processes inmolecular biology and biochemistry, such that this knowledge can be used in a qualitativesimulation to predict experimental outcomes.General or domainspecificOne of the very basic characteristics of an ontology is whether it attempts to cover general worldor commonsense knowledge or if it is covering a specific domain. In both cases the questionshould be asked how it can be integrated with other ontologies. For a general one, the issue iswhether domainspecific ontologies can be easily attached to it. Conversely, it should beconsidered whether a domainspecific ontology can be easily integrated into a more general one,Related work41and if it can use knowledge that is defined elsewhere, say, in some parts of a more generalontology.Of the systems studied, Cyc, Dahlgrens ontology, Sowas ontology, GeneralizedUM, WORDNETand KIF are not domainspecific. They are targeted at creating a general world model. Theirview on what this model is, however, is very different from each other, as we will discuss in thelater sections. From the other systems, TOVE is in the domain of enterprise modeling, UMLS isan ontology for medical concepts, Plinius deals with material science specifically, ceramicmaterials and GENSIM deals with molecular biology and biochemistry.In terms of knowledge sharing and integration with other ontologies, some general ontologiese.g. Dahlgrens ontology claim to simplify inclusion of new domains as an integral part of theoriginal ontology or facilitate the interface between a domain ontology and the general ontologyGeneralizedUM. Most domain ontologies GENSIM, TOVE do not touch the subject ofintegration and it is unclear how this can be done. Plinius can be extended to an ontology ofchemical substances, but it is unclear how it can go beyond chemical substances and beintegrated with a more general ontology. UMLS is the only one of the domainspecificontologies that may deal with these issues of integration although not explicitly UMLS startsits categorization from general notions of Entity and Event, so one can envision a generalontology where this would fit.Implementation detailsFor the purpose of reference we have summarized some other characteristics6 in Table 22. Theseinclude such characteristics as projects size both in terms of concepts and axioms theformalism that was used frames, firstorder logic, conceptual graphs, semantic networks, etc.                                                6Not all the data on these characteristics is available.Related work42whether it was implemented or not projects started with the purpose of theoretical investigationmay not be implemented for others, some may be implemented completely, some may, forexample, just have a proofofconcept prototype. The last but not least of these general questionsis if ontology is published and freely available some are very easily accessible in their entiretywith appropriate licensing agreements and can be studied and reused. Some are proprietaryinformation and are not published and one can only study the papers that describe it. In summary,UMLS, Cyc and WORDNET are the largest systems in terms of the number of concepts on theorder of 105, Cyc also has the largest number of axioms 106.Size Formalism Implemented Published or notCyc 105 concept types106 axiomsCycL  CyccrepresentationlanguageYes Partially online 3,000concept types at the top levelhttpwww.cyc.comcyc21cover.htmlDahlgrensontology1500 nouns 600verbsPrologPredicatesYes Partially in print Dahlgren1988, Dahlgren 1995Sowasontology90 concepts andconcept types 40conceptual relationsConceptualgraphsNo Partially in print Sowa1997GeneralizedUM250 concepts LOOM Yes Published onlinehttpwww.darmstadt.gmd.depublishkometgenumnewUM.htmlWORDNET 95,600 word forms in70,100 synsetsSemanticnetworksYes Published onlineftpclarity.princeton.edupubwordnetTOVE Frameknowledge baseYesUMLS 135 semantic types51 semanticrelations 252,982conceptsSemanticnetworksYes Published onlinehttpwwwkss.nlm.nih.govDocsumls.fact.htmlGENSIM Frameknowledge baseYesPlinius about 150 atomicconcepts and 6construction rulesFrameknowledge baseYes A detailed report is published,but the ontology is notKIF NA is itself aformalismYes YesTable 22. Technical data on the ontologies in this study.Related work432.1.3.2 Ontology design and evaluation processThere is an ongoing discussion in the ontology community about the best process for building anontology. Should it be built bottomup, starting from the most specific concepts and thengrouping them in categories or should it be built topdown by identifying the most generalconcepts and creating categories at the most general level first Or should some middle layer ofconcepts serve as a starting point and then the development goes in both direction from there middleout approach see Uschold 1996c for the argument for the third alternativeMore ontologies in the study used a bottomup approach in constructing a hierarchy than topdown. Although almost no one states explicitly what approach they used, here is what wegathered from what was in the papers topdown Sowas ontology bottomup WORDNET,Plinius middleout TOVE.There is some research toward acquiring ontological knowledge from natural language textsautomatically, reducing manual effort. However, none of the ontologies we studied used any sortof automatic ontological knowledge acquisition. All were constructed manually with varyingamounts of human effort involved depending on the size of the project from the singleauthorontologies of Sowa and Karp GENSIM, to the multiperson 10 year long Cyc effort.For GeneralizedUM that was extending an already existing fairly large ontology Pangloss,Hovy 1993 to work for different languages, the design process was as follows First, there wasa Penman Upper Model for English then German was added and the Merged Upper ModelMergedUM was created. The Generalized Upper Model is the extension of the MergedUM tocover the three languages English, German, and Italian. For each subhierarchy of the MergedUM, the set of relevant Italian linguistic behavior was identified. The behavior was thencompared to English. If Italian and EnglishGerman behavior were compatible, no modificationRelated work44was needed otherwise the modification was proposed and the EnglishGerman model was reevaluated.WORDNET, Plinius and Dahlgrens ontology used a text corpus or dictionary as the basis for theirdevelopment process. The Pliniuss approach, for instance, was to use the corpus as anoperational specification of the domain. The ontology was required to cover every relevantconcept from the texts and to make every relevant distinction. Similarly, Dahlgrens schema wasoriginally developed to handle predicates, both nouns and verbs, found in 4100 words of textdrawn from geography textbooks. Dahlgren also based her schema on cognitive psychologyresearch. Psycholinguistic experiments with people were conducted in particular, to determineproperties and functions of categories. WORDNET based its creation on lexicographerscreatedfiles of word forms and word meanings which were then automatically parsed into a database.TOVE used the following approach to ontology design first, create Motivating Scenarios  storyproblems or examples which are not adequately expressed in existing ontologies. Any proposalfor a new ontology or extension to an ontology must describe a motivating scenario, and a set ofintended solutions to the problem presented in the scenario. Second, formulate InformalCompetency questions  a set of queries in an informal form. Ideally, for each new object,relation, etc. there should be a competency question requiring it. These competency questions areused to evaluate expressiveness of the ontology.One of the more interesting research issues in ontology design is formal evaluation of the createdontology or any evaluation, for that matter GmezPrez 1995. We considered whether therewas an evaluation of the conceptual coverage or practical usefulness of the ontology. A proof ofconcept prototype can serve as such an evaluation at least, for practical usefulness, or there canRelated work45be a predetermined corpus, and an assessment later if all the information in the corpus can becovered with the created ontology.TOVE was the only project that did a formal evaluation of its ontology. This process consisted ofrepresenting the competency questions formally and then proving completeness theorems withrespect to those queries based on the first and second order logic representation of concepts,attributes and relations. For GENSIM, which was designed for simulations, the evaluationconsisted of having the program predict outcomes of already known reactions. According to theauthor the predictions were flawless. Most projects, however, envision various applicationsthat would use the ontology and, thus, prove its conceptual coverage and practical usefulness seethe discussion on various applications ontologies were used for below.2.1.3.3 TaxonomyFormally, an ontology consists of terms, their definitions and axioms relating them Gruber1993a terms are normally organized in a taxonomy. This is where some disagreement amongontology researchers arises. Some say that axioms are central to ontology design and a completeor highlevel taxonomy does not even have to exist maybe only for visualization. Others saythat, on the contrary, one should first concentrate on defining a taxonomy of fundamentalconcepts although they agree that there should be axioms or knowledge in some other formassociated with the concepts in the taxonomy. However, most of the ontologies we studied dohave some sort of taxonomy or several taxonomies, and this is our first topic in comparingcontent of the ontologies.From the previous paragraph, the first question to be asked is if there is an explicit taxonomy ofconcepts and how are concepts organized is it just a simple concept hierarchy a more complextaxonomy with several dimensions at each level a number of small local taxonomies orsomething completely differentRelated work46We found three major approaches to concept organization all of them include having some sortof a taxonomy we discuss Pliniuss taxonomyless approach later. UMLS, GENSIM andWORDNET for noun synsets only adopt the approach of having everything in a single treelikeconcept hierarchy with multiple inheritance. The links in the hierarchy are ISA links and thedivision of a concept into subconcepts is disjoint.Cyc, GeneralizedUM, Dahlgren and Sowa use what Sowa calls distinctions approach. Thismeans that there are several parallel dimensions along which one or more toplevel categories aresubcategorized. For example, Real vs Abstract, Individual vs Collective, etc. In this casecategories are specified by various combinations of values along these dimensions. For instance,HERD can be categorized as being Real and Collective, whereas IDEA is Abstract and Individual.Sowa creates a subcategory for each possible combination of these values which may lead tocombinatorial explosion if more than one distinction is used at more than just a few top levels.This requirement also makes the toplevel of the hierarchy very tangled. Dahlgrens ontology andGeneralizedUM, however, have more than one distinction at some lower levels of the ontology,but they do not require a category to be created for every possible combination of distinctions.The third major approach to taxonomy organization is having a large number of small localtaxonomies that may be linked together via relations or axioms. TOVE and KIF represent thistype of approach. TOVE, for example, divides its domain enterprise modeling into a number ofdifferent subontologies e.g. ontologies for activity, product, time, organization and insidethose part, constraint, requirement, feature, etc. Even within these smaller ontologies in TOVEno overall taxonomies exist. Its taxonomies seem to be local, each going very few levels deep.Although WORDNET uses a simple hierarchy for noun synsets, it employs different organizationof synsets for verbs and adjectives. Descriptive adjectives, for instance, are organized in bipolarRelated work47clusters e.g., drywet. Verbs are divided into 15 clusters according to their meaning, withentailment being the primary relationship between the verbs in a clusters.A completely different way of defining and organizing categories is used in Plinius ontology.Technically, there is no taxonomy per se. The principle used to construct the ontology is calledConceptual Construction Kit. In short, an ontology consists of several sets of atomic concepts,such as chemical elements, real numbers, aggregation states gaseous, liquid, etc. and others,serving as primitives, and construction rules that define all other concepts. There are rules forgroups, chemical substances, phases built up of chemical substances in relative proportions, etc.Then a taxonomy is defined implicitly by subsumption. Each atomic concept set X has a pseudomember called arbitrary X that stands for any member of the set. Now, for a concept thatcontains this term, any concept where the term is replaced by a particular member of set X, is asubconcept.To summarize, Cyc, Dahlgrens ontology, Sowas ontology, GeneralizedUM, UMLS andGENSIM have all the concepts in one taxonomy a simple one or with several dimensions at somelevels. TOVE and KIF have a number of small local taxonomies. Plinius does not have anyexplicit taxonomy at all. And WORDNET has a single taxonomy for its nouns, but a very differentorganization for verbs and adjectives.Taxonomy. Treatment of specific categoriesAlthough the projects that we studied were created for different purposes, there are a number ofgeneral classes of concepts that are represented in almost all ontologies things, processes andevents, relations and properties. This section discusses which of these classes are represented orunderrepresented in each ontology.Related work48Things real or abstract are represented everywhere. Plinius, GENSIM, TOVE and UMLS do notattempt to represent all the Things in the universe, but those relevant to the domain are, ofcourse, present in the ontology.Processes and events are almost as ubiquitous as Things. Cyc, for example, defines Process as asubclass of Event and Stuff, which are both subclasses of IndividualObject. An IndividualObjectthat has a temporal extent starting time, duration, ending time is called a Process. Asmentioned above, WORDNET treats verbs which basically correspond to processes and eventsseparately from nouns and adjectives. GeneralizedUM has a separate taxonomy for what theycall Configurations, which is the ontology of processes. GENSIM has a limited number ofexperimental processes and reactions which are also processes defined.Sowa points out in Sowa 1997 that the distinction between something called an Object andsomething called a Process in fact depends on time scale. In his ontology, anything that does notchange over time on a particular time scale is called an Object Continuant and anything that isin the state of flux is called a Process Occurrent. To use Sowas example, consider a glacierand an avalanche. A glacier is a permanent object on a scale of minutes and avalanche is aprocess. On a scale of centuries, however, glacier is also a process.Much less universal than Things and Processes is the presence of some sort of taxonomy ofrelations andor properties the presence of which creates a need for higherorder logic wediscuss this issue in Section 6. GeneralizedUM has probably the most extensive taxonomy ofrelations. Many properties in GeneralizedUM e.g. ColorPropertyAscription are defined asconcepts in the taxonomy with two or more roles for the concepts that are related by it. UMLShas a twolevel deep taxonomy for relations and Dahlgren has a list not a taxonomy of allrelations as part of the ontology.Related work49Other general categories that are present in only one or very few of the studied projects and areworth mentioning are things internal to the machine Cyc, classification of spatiotemporalrelations in GeneralizedUM, axiomatization of sets and lists in KIF, locations in GENSIM activesites on DNA are a separate category in the taxonomy.We considered the presence and treatment of one specific microtheory, that is the ontology oftime. Although for almost any kind of reasoning one needs some representation of time, wenoticed that not all ontologies model temporal concepts and, hence do not support any temporalreasoning. GeneralizedUM and TOVE have very simple ones that axiomatize time points andtime periods. In Cyc Time is a physical quantity possessed by TemporalObjects such asEvents.TimeInterval, which is a firstclass object, is a TemporalObject that can be characterizedfully just by specifying its temporal attributes. TimeInterval has dates, years, etc. as its subcategories. Other ontologies do not touch this issue at all. GENSIM justifies this by making anassumption that every experiment happens in a very short period of time. There is a possibility,in case of a smaller ontology being integrated into a larger ontology, of reusing an ontology oftime present in a larger model. This, however, requires a smooth integration.Taxonomy. Toplevel divisionOne of the most interesting questions pertaining to ontology organization is what are the majortoplevel categories in the ontology How does the ontology divide the world at the top levelThe most ubiquitous toplevel division of concepts is Abstract versus Real division. It is presentin Dahlgrens and Sowas ontologies as the toplevel distinction termed Physical vsInformational in the latter. The Tangible vs Intangible division in Cyc also reflects thisdistinction Cyc, however, has a third category at the same levelCompositeTangibleIntangibleObject to denote something that has both a physical extent andRelated work50intangible extent. Person category may be such an example persons body constitutes thephysical extent and persons mind is the intangible extent. In UMLS Entities are divided intoPhysical Objects and Conceptual Entities that is, also along the Physical vs Abstract lines.Another frequentlyfound toplevel categorization is Individual versus Collection. Both of theseare toplevel distinctions in Dahlgrens and Sowas ontologies. This distinction is also verypronounced at all levels in Cyc and Lenat 1990b devotes a lot of discussion to this issue.Lack of correspondence between ontologies in their toplevel division poses an obstacle tointegration of different ontologies. A. Campbell and S. Shapiro in Campbell 1995 discuss anidea of a mediation interface that will translate statements made in one ontology to anotherontology. The authors compare top levels of a number of ontologies in order to determine howsimilar or different they are and, hence how feasible it would be to integrate them. Two of thecriteria they use is how tangled and how sparse or dense the toplevel hierarchy is. For example,a simple treelike structure with little or no multiple inheritance would not be considered tangled,whereas hierarchies that employ the distinction approach would have a highly tangled structure.Also, the more subcategories exist at the top level of categorization, the more dense this toplevel is. It is, of course, easier to integrate ontologies that are more similar in the way theyorganize their toplevel hierarchies then, there is of course the issue of the toplevel categoriesthemselves being alike. Figure 211 illustrates the tangledness and density scales of theprojects that we have studied. They vary from relatively sparse but very tangled hierarchies likeCyc to much more dense but less tangled ones, like WORDNET.Related work512.1.3.4 Internal concept structure and relations between concepts. Partwhole relations.Almost any ontology has something more than just a taxonomy of concepts. The least it can haveis a set of properties and components that are meaningful for each category. This is the level ofinternal concept structure. Other relations among concepts spatial, functional, etc. may also berepresented. Cyc, Dahlgrens ontology, Sowas ontology, GENSIM, GeneralizedUM, TOVE, andKIF have properties and roles associated with concepts often in the form of slots in a frame andrelations that link concepts to each other. Objects in Plinius are structured too, but differentlyfrom the framebased systems above. The structure of its objects is defined by a set ofconstruction rules that specify the internal composition of concepts.WORDNET and UMLS do not have any properties or roles associated with objects in theirtaxonomy all the concepts are atomic and do not have any internal structure. They can be relatedto other concepts though, and the predefined relations themselves do have a limited structureunlike concepts. The fact that they are all binary already provides some internal structure tothem. In UMLS, relations which are firstclass objects and have their own taxonomy also havetheir possible domain categories specified.Cyc, Plinius,Dahlgrens ontologySowas ontologyGeneralizedUMWordnet, TOVEUMLS, GENSIMless tangled fairly tangled very tangledWordNetPliniusGeneralizedUMUMLSsparse more dense very denseCyc, Dahlgrens ontologySowas ontology, TOVE,GENSIMFigure 211. Comparison of how tangled and dense the ontologies in the study are.Related work52Partwhole relationsWhen studying relations between categories in the ontologies, we found one relation representedvery differently in the ontologies and often not adequately dealt with. This is the issue of partwhole relations. There are several types of partwhole relation that may require differentreasoning. For example, Winston 1987 differentiates the following types of partwhole relationcomponentobject branchtree membercollection treeforest portionmass slicecake stuffobject aluminumairplane featureactivity payingshopping placearea PrincetonNJ phaseprocess adolescencegrowing up. We were looking for different categorizations of partwholerelations and treatment for them.Most of the ontologies do not directly address the issue of partwhole relation and the distinctionbetween subsetof, partof, memberof, etc. Partwhole relations are handled just like other rolesor relations. However, GeneralizedUM, Sowas ontology, and TOVE provide some analysis ofpartwhole relations. Here is how each of the systems does it.GeneralizedUM Partwholerelation is a concept in the taxonomy of relations. It is a relationwith two roles whole the domain and part the range. It is a specialization of a generalizedpossession relation. There are three possible subtypes that are described for partwhole, althoughthey are not currently distinguished within the grammarconsistsof  expressed as whole consist of parts or parts make up wholeThe filler of the part role of the consistsof relation must be all of the parts of the whole. Forexample, protein consists of amino acids. But not a car consists of an engineconstituency  a specialization of the partwhole relation in which the whole is valuerestricted to be a decomposableobject. For example, an engine is a constituent of a car.Related work53ingrediency  this is the relation between a whole and its parts when the whole is a massobject. For example, Gravel is an ingredient of concrete.Sowas ontology There is a category in the taxonomy InternalRole for things that play a rolewith respect to something in which they are contained as opposed to External Role for thethings that play a role with respect to something outside themselves. InternalRole is subdividedinto several categories when a Continuant vs Occurrent distinction is applied to InternalRole itproduces ObjectPart and ProcessPart. Object parts that can exist independently of the object arecalled pieces e.g. engine of a car those that cannot are called attributes e.g. size, weight, colorof a car. For ProcessPart the same distinction leads to participant e.g. a book and a reader in areading process and manner e.g. speed of the wind, style of a dance, etc..TOVE A part is defined as a component of an artifact being designed or a software component.The artifact itself is also considered a part. Parts are classified into Primitive Part a part whichcannot be further subdivided into components, Composite Conjunct Part composed of two ormore primitive andor composite parts, Composite Disjunct Part represent alternatives of parts,i.e. at any point in time, the part has only one of its components as a valid component.From these three categorizations, Sowas is the most general one. All the types of partwholerelation in GeneralizedUM are what Sowa calls pieces which GeneralizedUM goes on toclassify. Attributes and process participants and manner are not considered parts in TOVE andGeneralizedUM Note that although a partof relation in GENSIM is generalized to includeprocesses, part in that case is a subprocess of a process. TOVEs approach to partof relation isdifferent as it reflects the way an artifact is composed from its parts.WORDNET and Plinius also single out the partof relation. In fact, this is the primary relationbetween concepts beyond taxonomy in the two systems this is the only relation currentlyRelated work54implemented between noun synsets in WORDNET and it is the only relation between classes inPlinius, along with its counterpart COMPOSES. In UMLS, the following relations are includedin the relation taxonomy within the category physicalrelation  partof, contains, consistsof.2.1.3.5 Axioms and firstorder logicBesides the taxonomy and structure of concepts, axioms are a way of representing moreinformation about categories and their relations to each other, as well as constraints on propertyand role values for each category. Sometimes, axioms are explicitly specified, and sometimesontology consists only of categories and corresponding frames and everything else is hidden inapplication code. It is important to note here, that there is a fine line between internal conceptstructure and axioms. One can represent a category using a frame formalism, having roles andproperties represented by slots of a frame. One may also express the same facts using axioms. Ataxonomy, too, can be represented using axiomatic notations. For example, the axioma a A aB  where a is an instance of a category and A and B are categories, states that A isa subcategory of B. Here we will only be looking at explicit axioms that go beyond the hierarchyrepresentation or internal concept structure. We consider how axioms are expressed and if theyare, for example, part of a concept definition or can exist by themselves.The following projects explicitly use axioms that go beyond taxonomic and propertyroleinformation Cyc, TOVE, Sowas ontology, GENSIM, KIF. GeneralizedUM has all the axiomaticinformation incorporated in the NLP code. Dahlgrens ontology and GENSIM incorporate axiomsin concept definitions. WORDNET and UMLS do not have any axioms.When discussing axioms and formalism, one of the questions that we pay particular attention tois what are the instances of going beyond firstorder logic. Some systems use defaults, or ways ofexpressing modals and uncertain facts. Some do not do this and stay within the boundaries offirstorder logic.Related work55One of the most common instances of going beyond firstorder logic is having some sort ofhierarchy of relations, that is treating relations as firstclass objects GeneralizedUM and TOVEare examples of this approach. UMLS also has hierarchy of relations but since it does not haveaxioms the firstorder logic issue is irrelevant for it. Another common example of going beyondfirstorder is use of defaults for example, Cyc and KIF. For KIF this is the only instance ofgoing above firstorder as it is based primarily on firstorder logic. GENSIM employs overrideinheritance in its process hierarchy property values in a subclass can override the correspondingvalues in a superclass, which leads to nonmonotonicity, too. Sowa uses conceptual graphswhich themselves use higherorder logic.Here are some cases when Cyc goes beyond firstorder logic Lenat 1995 Certainty each assertion is assumed true by default but one can make statements likeAssertion A is less likely than assertion B Reification turning a predicate or function into an object in the language. It allowsassertions about categories Property P is an opposite of property Q Modals John wants assertion A to be true Contexts an assertion may be true only in a particular context. Contexts are firstclassobjects in Cyc. Example You cannot see someones heart true only as a default, butnot true during heart surgery2.1.3.6 ApplicationsAn important way of evaluating capabilities and practical usefulness of an ontology isconsidering what practical problems it was applied to. In this section we summarize some of theapplications that the ontologies in this study were used for.Related work56The major classes of applications which ontologies are utilized for are naturallanguageprocessing, information retrieval and simulation and modeling. Cycs ontology, for example, isused in a Cyc Natural Language System CNL whose purpose is to translate naturallanguagetexts into CycL. GeneralizedUM is used in a multilingual text generation system that uses stockphrases for each concept to generate text. Dahlgrens ontology was a basis for a textunderstanding system that reads newspaper articles to produce a cognitive model of the textcontent Dahlgren 1990. Plinius application also falls into the class of naturallanguage systemsit is designed for extracting knowledge from titles and abstracts of articles in its domain andcreates an interim knowledge base where the knowledge is associated with a particular abstract.Cyc was used in information retrieval for a system called Cyccess, which is a semantic IR systemused for consistency checking and information retrieval from structured information such asdatabases and spreadsheets.Cyc, GENSIM and TOVE were used in simulation and modeling applications. There is a personmodeling prototype application that uses Cycs ontology to put together a model of a personbased on pieces of information it might have about persons interests, family, job, etc. Thisinformation is then used to sort, for example, advertisements that should or should not be sent toa person based on the model. GENSIM was primarily created and used for simulation of metabolicpathways, DNA transcription, etc. TOVE projects primary goal is to model a virtual companyand provide a testbed for research into enterprise integration.From other classes of applications, UMLS was used to implement Internet Grateful Medinterface to MEDLAB databases developed by the NLM itself. KIF served as the basis forOntolingua which translates definitions written in standard form into specialized representations,including framebased systems as well as relational languages.Related work572.1.3.7 Conclusion. Major strengths and contributions of the studied ontologies.To conclude, we consider major strengths and contributions of each project, such as contentcreation, welldefined formalism creation, some novel approach to ontology design, and others.We also outline weaknesses of particular projects. Major strengths and contributions of theprojects in the study are summarized in Table 23.Strengths and contributions OntologiesContent creation Cyc, UMLS, GeneralizedUM, WORDNETWelldefined formalism creation KIFApproach based on linguistic andpsycholinguistic dataDahlgrens ontologyThoroughlymotivated toplevel Sowas ontologyMultilingual GeneralizedUMExtended hierarchy of relations GeneralizedUMNovel approach to ontology design Plinius Conceptual Construction KitComparison of different KR formalisms PliniusMethodology for formal evaluation TOVEUse of ontology for simulation GENSIMTable 23. Summary of major strengths and contributions of the ontologies in the study. Many researchers in the area agree that one of the major challenges in the area of ontologydesign is creating content of ontologies, that is creating large, welldeveloped, usable ontologieseither general or domainspecific. Cyc, WORDNET and UMLS are major steps in this direction.There are very few projects that span more than one language and can be applied to naturallanguage texts in various languages. GeneralizedUM is one of the multilingual projects it isbased on English, German and Italian. One of the very interesting things that was done as part ofthe Plinius project, was implementing their ontology in several different knowledgerepresentation formalisms Speel 1995. This was a substantial step in showing experimentallythe independence of the ontology itself from the formalism that is used. The TOVE project madea significant step in an underdeveloped area of ontology research formal evaluation.As for integration of various ontologies, this study shows that at this point there is great diversityin the way ontologies are designed and in the way they represent the world. Before realRelated work58knowledge sharing and reuse will be practical, some standards should emerge in what anontology should consist of, what are the basic classes of objects that should be represented e.g.things, processes, relations, how they are represented not in terms of formalism but in terms ofknowledge that should accompany the concepts.We believe that a study like the one presented here is a useful step in the process of developingthese standards, because, before we try to standardize, we first need to understand thealternatives. The framework presented here examines the range of alternatives in ontology designby doing a comparative study of ten existing projects.2.1.4 Qualitative Process TheorySome of the issues that arise in knowledge representation and reasoning in molecular biology canbe solved using an ontology and techniques similar to those developed for modeling devices andprocesses in Qualitative Reasoning QR. Qualitative Physics also referred to as naive physicsexplains the behavior of mechanisms in qualitative terms. Suppose there is a glass full of water.We know that if the glass is tilted, the water will spill out. We may not know the physical lawsthat cause this to happen and we do not use any complex differential equations. It is just commonsense reasoning which allows us to model the situation in our mind. This is the kind of reasoningthat QR systems try to capture. It states the facts that we all consider to be commonsenseknowledge as formal axioms and then uses them to solve problems requiring reasoning about thephysical world.Problems and issues in formalizing commonsense reasoning were put forward in the SecondNaive Physics Manifesto by Patrick Hayes Hayes 1985. One of the major suggestions is todivide knowledge into more or less independent clusters. Even though our knowledge aboutvarious aspects of the world is so intertwined that it is impossible to identify completelyindependent clusters, Hayes argues that relatively independent subtheories can be located. TheRelated work59clusters suggested in the paper are places and positions spaces and objects qualities, quantitiesand measurements change, time and histories energy, effort and motion composites and piecesof stuff. Some ideas of how to solve issues in these clusters are suggested. However, the mainpoint of the Manifesto is to identify the problems and call for ideas and solutions.Different idea of theories or clusters is presented in Sowa 1990. Facts belong to one theory ifthey can be derived from each other by abduction e.g., reasoning from an observed effect backto its probable cause. Theories can be refined iteratively. So, it turns out that theories are morelike situational clusters facts which are related to each other and are used to describe aparticular situation are in one theory. Hayes clusters are, on the contrary, determined byreference of facts to each other not derivation or abduction.One of the most welldeveloped theories of Qualitative Reasoning is Qualitative Process TheoryForbus 1984. The two major ontological abstractions suggested by Forbus in Forbus 1988aare devices and processes. This is what makes qualitative reasoning  a promising approach torepresenting experimental sciences it is very processoriented. Most of the qualitative reasoningmodels treat processes as firstclass entities. This means that, in contrast to common physics,where constraint laws in terms of equations are the primary objects of consideration, qualitativemodels try to construct the simplest process models that uncover the ideas of physical reality thatpeople use in their everyday life Forbus 1984. We suggest that this type of reasoning is exactlywhat is needed to make query processing in a knowledge base of experiments more intelligent.Our earlier research that focused on the Materials and Methods sections of biology papers,showed that processes are the main entities that are described in these sections of the papers. Andprocesses are the main pieces of information that a user would be interested in when using anintelligent system that incorporates knowledge about experiments. The reasoning that needs to bedone to improve the quality of answers is mainly processoriented.Related work60The approach of making processes firstclass entities is taken in one of the key papers in the areaQualitative Process Theory by K. Forbus Forbus 1984. It discusses an ontology for modelingcommonsense physics concepts for example, heat flow and it is important to point out againthat processes are firstclass entities in this ontology. All changes in physical systems are causeddirectly or indirectly by processes. In case of molecular biology, these processes could be actionsof an experimenter or biological processes that go on in living systems.Each process is described by a Process Specification, which consists of Individuals, participating in the process Preconditions and Quantity conditions which determine when the process starts or can continue Relations imposed by the process on various variables Influences on the quantities by the process.The process specification for a Boiling process is shown in Figure 212. The process actsbetween Individuals, which can also be an instance of another process heat flow process hf inthis example with containedliquid w as its destination. tboil is the boiling point for the pieceofstuff involved. The Relations component describes indirect effects of the process viafunctional relationships, such as the generation rate of the gas being directly proportional to theflow rate in the heat flow process. The Relations also include descriptions of any new individualscreated by the process, as for example, the gas generated by boiling. The Influences componentspecifies how quantities change. Influence can be positive or negative. For example, the amountof containedliquid w decreases as a function of a generation rate.Related work61Process Specifications form a hierarchy. However, Forbus expands the notion of inheritance toallow all the elements in the Process Specification to be inherited not only individuals, but theconditions, results and influences as well. For example, a Quantity Condition for a Motionprocess is that velocity of the moving individual is greater than zero. This is also true for a Slideprocess which is a case of Motion and inherits all its properties, while adding new ones, such as aprecondition that there should be a sliding contact between the sliding moving individual and asurface.Another element of Qualitative Process Theory is the Individual View IV, which is used todescribe a temporary configuration of objects. It is different from a complex object, althoughProcess BoilingIndividualsw is a containedliquidhf is a heat flow process instancewhere destinationhf  wQuantityConditionsStatushf, ActiveAtemperaturew   AtboilwRelationsThere is g  pieceofstuffgasgsubstanceg  substancewtemperaturew  temperaturegLet generationrate be a quantityAgenerationrate  ZEROgenerationrate Q flowratehfInfluences  heatw, Aflowratehf  amountofw, Agenerationrate  amountofg, Agenerationrate  heatw, Agenerationrate  heatg, AgenerationrateFigure 212. Process Specification for Boiling process from Forbus 1984. Boiling happens to acontained liquid being heated, and creates a gas made of the same substance as the liquid.Related work62sometimes the line between the two can be vague. There is more discussion on this subject in thenext chapter. An example of such a temporary configuration could be liquid in a container. AnIndividual View for such a configuration is shown in Figure 213. The precondition for the IV toexist is that the container can in fact contain the substance. The amount of the substance in thecontainer should be greater then zero. The IV also contains the list of relations imposed on theindividuals. Individual Views are flexible enough to exploit them for describing the dynamicstructural relationships essential for modeling biology.P. Hayes in Hayes 1990 extends qualitative reasoning with the notion of histories. A history isa way to represent an event as a spatially bounded but temporally extended piece of spacetime.One can talk about a shape of history. That is, we add an extra dimension, time, to thecoordinate system and consider what happens to some bounded space over time. Then, historiesthat do not intersect do not interact. One history can also be an episode of another history, orcould be in two distinct histories. Hayes applies this theory to reasoning about liquids. The paperalso discusses the issue of individual identity which is one of the central issues in our research.Since identity can be changed only as a result of a process, one can specify this feature in theprocess description itself. It is proposed to distinguish between processes that change categoriesof their participants and those that do not, however, it is not carried out. So, histories are onlyused in the context of processes that do not change their participants identities. In our research,we explore the idea of using histories to follow the lifetime of an object, or the stuff it is madefrom in the model where processes can change categories and identities of objects.The idea of stuff is also discussed in Forbus 1984. Things are made of stuff, which can be indifferent states e.g. solid, liquid, gas, and, probably, in different places in the taxonomy ofsubstances at different points of time. And it is stuff that stays the same when the category of anobject that comprises it, changes. For instance, when we put batter in an oven, it becomes a cakeRelated work63after some time. Although batter and cake clearly belong to different categories, they consist ofthe same stuff.J. Collins in Collins 1987 addresses the issue of representing mixtures and their duality as, onone hand, being pieces of stuff, or molecular collections MC, and, on the other hand, beingindividual objects, such as containedliquid. This approach, in combination with histories, isused to model such physical systems as liquid being pumped from one container to another, arefrigerator, and others. However, here, as in the previous example, the fact that molecularcollections retain their identity is heavily employed.Another important issue in QR is causality. Causality, the dependency of variables on oneanother, is an issue widely discussed in the QR literature. However, there are conflicting viewson what causality is. de Kleer 1984 introduces the notion of mythical causality, which describesbehavior as a set of qualitative differential equations called confluences. Intuitively, theseequations express the causal dependency of variables on one another. For example, heatflowinfluences temperature. The method of causal ordering and comparative statistics proposed inIwasaki 1986 derives these relationships from qualitative equations which describe the systemIndividual View ContainedLiquid pIndividualscon a containersub a liquidPreconditionsCanContainSubstance con, subQuantity ConditionsAamountofin sub, con  ZERORelationsThere is p  pieceofstuffamountofp  amountofinsub, conmadeofp  subcontainerp  conFigure 213. Individual View describing ContainedLiquid from Forbus 1984Related work64and a necessary set of assumptions. It is suggested that when a variable can be solved by a directsubstitution, then the variable is causally dependent on the variables that were substituted. If thevariable cannot be obtained by a direct substitution i.e. there is a loop of dependencies, then itis assumed that no causal ordering is present. The first approach, however, is able to breakthese loops by defining what causes what and introducing the causal ordering.Forbus in Forbus 1988b discusses the effects of actions by agents people on processes. Headds the concept of Operators to that of Process Specifications. Operators are defined similarly toProcesses but are an agents actions. An Operator description has Individuals and Results in it.Results are in the form of lists of what is added to the state of the system and what is deletedfrom it. Once the new state of the system is computed, it is possible to determine which processor processes will take place next.The concept of an agent is, of course, a very important one in the domain of experiments.Experiments are done by an experimenter the agent with a particular goal in mind. We can addgoal to Operators which describe the agents actions, connecting it more explicitly with theProcesses and facilitating the computation of the new state of the system. This will also allow forbetter analysis not just simulation of the situation.2.2 Information Retrieval ResearchWe consider Information Retrieval IR, mainly Intelligent IR from texts in experimentalsciences, as the primary application of our ontology research. However, as can be seen from thediscussion below, most of the work being done in this field is still centered around traditional IRmethods and very little research is being done towards knowledgebased IR. This is mainly dueto the significant amount of manual effort needed to create knowledge bases and extract theRelated work65knowledge from the original documents so that it can then be automatically processed andqueried.An Information Retrieval system is a system that matches user queries  formal or informalstatements of information needs  to documents stored in a database Frakes 1992. Table 24 istaken from Frakes 1992 and it is a faceted classification of IR systems, which outlinesimportant IR concepts and methods that distinguish various IR systems.A conceptual model is a general characterization of an IR system. Most of the current IR systemsare Boolean systems. In a Boolean system documents are represented by sets of keywords andthese keywords or combinations of them are then matched with the keywords in a user query.String Search systems are based on pattern matching when strings or regular expressions from aquery are matched to those in the database texts. Probabilistic and vector space  models explorethe information about the statistical distribution of terms and weight terms or documentsaccording to their frequency in a particular text or collection of texts. The SMART system atCornell University Buckley 1995 is an example of a system that employs a vectorspace model.INQUERY Retrieval System at the University of Massachusetts in Amherst Broglio 1995,Callan 1992 is based on a probabilistic retrieval model called inference nets. Hidden MarkovModels Rabiner 1989 are another probabilistic model used in some systems e.g., Knaus1995. It is necessary to add another conceptual model to this classification knowledgebased IRConceptualModelFileStructureQueryOperationsTermOperationsDocumentOperationsHardwareBoolean Flat file Feedback Stem Parse vonNeumannExt. Boolean Inverted File Parse Weight Display ParallelProbabilistic Signature Boolean Thesaurus Cluster IR SpecificString Search Pat Trees Cluster Stoplist Rank Optical DiskVector Space Graphs Truncation Sort Mag. DiskHashing Field MaskAssign IDsTable 24. Faceted classification of IR Systems from Frakes 1992Related work66systems, which are the IR systems that use reasoning based on a knowledge model of the domain.A fundamental part of the design of an IR system is what type of file structure is used to storedata in a database. All the file structures mentioned in Table 2.1.1 are based either on the full textof the document or some set of keywords in that document and the search is done against one ofthose. In our system we propose storing both text of the documents and knowledge frames withthe knowledge extracted from the text. Frames are directly linked to the text of the documentsthey represent. An objectoriented database seems like a logical choice for storing these types ofstructures.Processing of user queries is one of the main functions of IR systems. There are different forms auser query can take they can be in Natural Language and then parsed by the system, can be aBoolean expression, a list of keywords, feedback on the relevance of already retrieveddocuments, etc. We have implemented another form of query which is knowledgebased, or, inother words, ontologyguided. Users can navigate through the underlying ontology, selectcategories and fill frames for these categories and then present these frames as a query.Term operations are the ways in which terms are treated and their meaning expanded to get morerelevant documents than a direct match search would have returned. Terms can be truncated orstemmed to have the terms with the same root to be equally relevant. Stoplist words normallyarticles and prepositions are eliminated as they do not effect relevance of a document to aparticular query. Terms are weighted according to their frequency in the collection or some otherproperties. The only term operation that involves knowledge is using a thesaurus which supportssearching not only for a particular term but also for its synonyms. Using synonyms, however,Related work67does not necessarily improve a search. It may improve recall at the expense of worsening theprecision7. We need to use semantic links to make use of synonyms more efficient.WORDNET Miller 1990, discussed in Section 2.1.2, is being used as a thesaurus in some IRsystems e.g., Voorhees 1993. This approach of looking up synonyms, can be expanded to usea taxonomy of terms and look up, for instance, more general or more specific terms than the onein the query. Ultimately, richer knowledge models such as ontologies are needed to improve theperformance of Information Retrieval systems.Documents added to a database need to be processed to be stored in the format required by thedatabase. This may involve selecting and weighting keywords, identifying certain fields in adocument such as title, author, abstract, etc., assigning relevance to a document or clustering itwith some other documents based on term distribution. In our case it would also involvecreating knowledge frames that represent the knowledge in the document automatically, ormanually using the knowledgeentering tool, or some combination of both.Most IR systems run on a oneprocessor vonNeumann machine although parallel computers arebeginning to play a significant role for large processing tasks. CDROM is becoming the mostpopular storage medium for large collections of text.Table 25 summarizes facet values or methods that need to be added to Table 2.1 from Frakes1992 to reflect the methods used in knowledgebased text retrieval.There has been a set of conferences to evaluate the current state of Information Retrieval and tocompare results achieved by a variety of IR systems on the same set of data. The three TextREtrieval Conferences TREC were sponsored by the National Institute of Standards and                                                7 Recall is the ratio of relevant documents retrieved for a given query over the number of relevantdocuments for that query in the database.Precision is the ratio of the number of relevant documents retrieved over the total number ofRelated work68Technology Harman 1993, Harman 1995. The participating systems used a combination ofthe approaches outlined above. Prior to the testing, participants were provided with a set oftraining topics and training documents about 3 gigabytes of data. Queries were constructedbased on the topics automatically, manually, or interactively the latter is a combination of thefirst two using relevance feedback.  Two types of retrieval modes were tested a routing taskand an adhoc task. In the first mode the same set of queries is presented against different sets ofdocuments. In the second task different sets of queries are being asked against the same set ofdocuments. All the results were run through the common evaluation package and then compared.Donna Harman in Harman 1995 compares the different systems and IR techniques used inTREC. Table 26 gives the average precision in the adhoc mode for some of the systemsmentioned above.Facets TermsConceptual model knowledgebased ontologybasedFile Structure OODB with knowledgeframes and textQuery Operations ontologyguided framefillingTerm Operations taxonomy of conceptsDocument Operations knowledgeacquisition knowledgeextractionHardware CDROMTable 25. Additional facet values in the classification of IR systems for Intelligent IRIR System Average PrecisionINQUERY Broglio 1995 38.1SMART Buckley 1995 34.2ETH Knaus 1995 29.1Table 26. Comparison of performance Average Precision in the adhoc task in TREC3 experimentsfrom Harman 1995. The systems in the table are the best performing ones.2.3 Knowledge representation in biology.Projects that involve representing knowledge in biology field can be classified into three kindssimple relational databases, large taxonomies with no or little axiomatic knowledge, and systemsthat attempt to simulate humanlike reasoning in very narrow domains.                                                                                                                                                            documents retrieved.Related work69Most of the larger computerized resources in molecular biology, such as GenBank of theNational Center for Biotechnology Informationhttpwww.ncbi.nlm.nih.govWebGenbankindex.html or Protein Data Bank Bernstein 1977belong to the first kind of systems. They use databases rather than knowledge bases, and do notdefine an ontological framework other than the database schema. Each object has dozens of slotsthat describe where it comes from, what it consists of, its properties, etc. However, there is noattempt to define general taxonomic, partonomic or role relationships among the concepts.FlyBase httpflybase.bio.indiana.edu is another prominent example of a system that has alarge taxonomy but essentially no axiomatic knowledge. It is an electronic database forinformation on the genetics and biology of Drosophila.Unified Medical Language System UMLS described above Section 2.1.2 is an example of thesecond class of systems the systems centered around large taxonomy of concepts. Anotherexample in this category is the Encyclopedia of E. coli Genes and Metabolism EcoCyc Karp1996. EcoCyc describes known genes of E.coli, enzymes encoded by these genes, reactionscatalyzed by each enzyme, and organization of these reactions into metabolic pathways. Itemploys a frame knowledge representation system. Frames are organized in a class hierarchy forvarious types of enzymatic reactions, metabolic pathways and chemicals used in these reactions.EcoCyc is used for retrieval and visualization.A third group of ontologies for biology knowledge are the AItype knowledge systems thatattempt to simulate humanlike reasoning e.g. PEPTIDE by D.Weld Weld 1986 or GENSIMby P.Karp Karp 1993. These systems use qualitative reasoning to predict what will happen in abiochemical system. Although they have the most intelligence in them, systems of this typeRelated work70take a focused approach to ontology design that includes only those concepts required todescribe a narrow class of problems.RiboWeb knowledge base Altman 1997 is a system with a task closest to our own to encodethe data reported in biology research literature. This project focuses on representing thestructure of the 30S ribosomal subunit in procaryotes, which initiates the translation of mRNAinto protein and is the site of action of numerous antibiotics httpsmiweb.stanford.eduprojectshelixriboweb.html. Authors of the project are encodingapproximately 200 articles on the subject and also linking them to the Medline references.As can be seen from this discussion, the field of representing biological knowledge is wide openfor research and very little work has been done thus far.713. REPRESENTATION CHALLENGES IN BIOLOGYDOMAINSubstances and processes are central to any ontology of experimental sciences. There areprocesses that occur naturally, such as, for example, bacteria growth, sedimentation in acentrifuge, chemical reactions, and protein synthesis. There are experimental procedures that areset up and controlled by an experimenter. Experimental procedures can be divided into twocategories the ones that  set up materials, instruments and parameters that allow the naturalprocesses to proceed and the observational procedures for monitoring and result reporting. Forinstance, incubation is an experimental procedure in which the natural process of cell growthoccurs.All the experimental processes take substances as their inputs and then change or observe someof their properties, destroy them, create new substances, etc. The substances we referred to abovecan be quite complex they can be single objects with elaborate internal structure, populations ofmolecules or cells, or mixtures of other substances. Sometimes this conglomerate will have aname of its own, and sometimes it will be just a temporary configuration of other substances. Inorder for the knowledge representation to be adequate, it needs to capture the different aspects ofthis complexity of substances, their internal structure and relations to each other. This isimportant because processes operate on structured objects or their constituents and the outcomeof a process depends on the structure of its inputs. Also, the effects of a process are oftendescribed in terms of how it changes these structures. The more precise and meaningful ourrepresentation of substances, their internal structure, and relations to each other is, the morecomplete the representation of processes and, hence, of the whole experiment will be.Representation challenges72Similar to substances, processes can be simple, atomic processes, or configurations ofprocesses dependent on each other. One process can be, for example, a technique for anotherprocess the rate at which one process occurs can be proportional to the rate of another one, etc.Besides inputs and outputs of a process, other substances can be present that do not directlyparticipate in it but affect its outcome for example, catalysts make a reaction run faster. Anotherissue is the effects that a process can have on participating substances.In Chapter 1 Section 0 we described the following challenges in representing experimentalsciences. The list below summarizes the issues discussed there Complex internal structure and relations between substances Category conversions  processes that change the category or identity of theirparticipants for an example of category conversion, recall the process of baking thattransfers a batter object into a cake object Categorization of processes recall, for instance, processes like wash that are alwaysreferred to as a single process but, in fact, consist of several different steps Integration of the domain ontology with other ontologiesIn this chapter we elaborate on some of these issues, present some new ones and, wheneverappropriate, discuss how others have approached these problems.Part of our ontology design process described in Chapter 4 was creating a casebook ofparagraphs from molecular biology research papers available online. This casebook was createdby randomly selecting paragraphs from issues of the Journal of Bacteriology. We used thismaterial as our guidance in the ontology design. We consider some of the most fruitfulparagraphs from these texts in terms of providing representation challenges in Section 3.2 below.Representation challenges73Our solutions to the issues outlined in this chapter are presented in Chapter 6 after we havediscussed the ontology design and evaluation process and the formalism we developed torepresent the ontology in Chapters 4 and 5 respectively.3.1 General representation issuesCategorizationOne of the first steps in our ontology design process was to create a usable categorization ofconcepts in the domain.In general, there are two ways of looking at a biological substance one is from the point of viewof its composition what it is made of what its topological structure is, and the other is from thepoint of view of its function. The two are related, of course, but hierarchies would look differentdepending on what principle was used to construct them.Consider the Protein substance as an example.  On the one hand, it is a chemical substancethat controls many functions of living organisms. On the other hand, protein is a collection ofamino acids, which are the primary building blocks of protein. Placing it in the hierarchy of otherbiological substances is not straightforward. Figure 31 shows two ontologies from Peter Karpthat demonstrate this issue in one ontology, protein is a subclass of Nucleic Acid segment8 andin the other ontology, it is a subclass of Macromolecule, which, in turn, is a subclass ofChemical.Decomposable objects versus StuffMost general ontological models divide the universe of all things into Tangible andAbstract objects. Substances that participate in biological processes and experiments are                                                8 Defining Protein to be a subclass of Nucleic Acid Segments may not be a very good choicesince, the relationship between the two categories is not an ISA relationship segments of NucleicAcids code for specific proteins, but proteins are not nucleic acid segments.Representation challenges74clearly Tangible objects. Then there is a second common division of Tangible objects intoDecomposable objects and Stuff. Decomposable objects, such as cars, have discreteparts, such as wheels and engines, organized into a parts hierarchy sometimes calledpartonomy.  Stuff such as water, sand, air, and so forth does not have parts every subchunkof stuff is still the same kind of stuff.The basic inference rules axioms that distinguish these categories are the formal version of thisaxiom is presented in Section 6.2Axiom 1. If X is a decomposable object and is aninstance of class C, then there exist parts of X thatare not themselves insistences of C9.For example, if X is a car then there exist wheels, an engine and so forth. The parts of a car arenot themselves cars.                                                9 As discussed in Section 5.3, when we say that X is an instance of class C, we mean that X C is the mostspecific category of X. We use typeof predicate to relate X to superclasses of C.ThingBacteriaExperimentsNucleic AcidsegmentsActive SitesMediaE.coliDNAsegmentsGenesRNAsegments ProteinRNA GenesThingGeneralizedReactionsEnzymaticReactions ChemicalsReactionsPathwaysMacromoleculesCompoundsElementsGenes ProteinsPolypeptides ProteinComplexesa Toplevel ontology for GENSIM b Toplevel ontology for EcoCycfrom Karp 1993 from Karp 1996Figure 31. Toplevel ontologies for GENSIM and EcoCyc by Peter Karp. Note the verydifferent categorization of Protein in the two hierarchies.Representation challenges75Axiom 2. If Y is  a piece of stuff, then every portionof Y is also a piece of the same stuff.For example, every portion of water is also water. Lenat and Guha in Lenat 1990a, Lenat1990b note that Axiom 2 only applies down to some substancedependent molecular level ofgranularity.The division of Tangible Objects into Stuff and Decomposable objects is most pronounced in theCyc Ontology Lenat 1990b. Other ontological models that we studied may handle thisdistinction differently but almost all of them do have it. Sometimes, there is no single categorythat contrasts with Stuff, but a number of smaller categories that in fact have decomposableobjects as their instances. For example, Bateman 1994 has a category Substance to representstufflike objects and then a number of other categories for Decomposable objects Consciousbeing, Namedobject, Decomposableobject, etc. Likewise, Miller 1990 has a synset forSubstance i.e. Stuff and a number of synsets for decomposable objects animal, artifact, body,etc.. In Mahesh 1995 there is a highlevel distinction between Material and SeparableEntity,but there is also a category Place at the same level as these two categories.In the experimental biology domain, however, there are substances that do not fit within thissimple taxonomy of decomposable objects versus stuff or its variations.Representing MixturesMixtures that are extremely common in biological experiments, exhibit properties of both Stuffand Decomposable Objects. On the one hand, mixtures have identifiable components satisfyAxiom 1 above and, hence, can be viewed as a subtype of Decomposable Objects. On the otherhand, every subpart of Mixture is the same mixture Axiom 2 above. J.Collins in Collins 1987also discusses this problem and develops a molecular collection MC ontology. MC ontology is,Representation challenges76on the one hand, a specialization of a pieceofstuff ontology Hayes 1985. On the other hand itis also claimed to be parasitic on Contained Liquid i.e. decomposable object ontology, in that adescription of a system in terms of decomposable objects specifically, contained liquids is aprerequisite to computing its description in MC terms.The following features of Mixtures used in experiments should also be taken into account whenrepresenting them Major components of mixtures, such as water and various chemicals, are meaningfulentities by themselves they exist not only in and for this mixture. This is different from,say, most parts of an engine that are normally found only within an engine. In biology experiments, mixtures are often created by an experimenter for a purpose toeffect a transformation of one or more components, or as an environment for a certaincellular or chemical component. Components of mixtures cannot be mixtures themselves as their components would inturn intermingle with other elements of the mixture.Another issue in representing mixtures is the representation of components within a mixture. Thestraightforward named componentrole approach traditionally used, will not suffice here, becausenow there are more facts that need to be represented about each component its role, itsconcentration, and the designation of or reference to the substance itself. We discuss ourrepresentation of the Mixture class in Section 6.2.1.1 of Chapter 6.Representing ProcessesWe now turn our attention to the issues in representing the second part of the model of biologyexperiments  processes.Representation challenges77Process is an ontological category that is defined at a very high level in most ontologies, butdifferent ontologies do it differently. For example, in the PENMAN ontology Hovy 1993, themost general category ObThing is divided into Object, Process, and Quality. InCYC Lenat 1990b, Process is a subclass of both Event and Stuff, which are in turn,subclasses of IndividualObject.A model of experimental biology must include a large number of different processes  naturalprocesses such as growth, DNA transcriptions, and chemical reactions and experimentalprocesses such as mixing, removing, and inserting. For guidance, we compiled a list of verbs inresearch articles, for exampleadd, assay, centrifuge, chromatograph, combine, dialyze, disrupt, elute, extract,harvest, incubate, inoculate, label, measure, precipitate, purify, rinse, suspend,tether, wash.As with substances, the first issue is categorization. Most of these processes fall into four basicclasses of atomic, singlestep processes separate, combine, transform, and assesssee Section 6.3. However, there are some processes that are not atomic and consist of morethan one step. Column chromatography described in 3.2 is an example of such a process itconsists of two simultaneous steps addition and elution. This is different from, say, a washprocess that consists of two consecutive steps first combination and then separation. It isimportant to treat chromatography as a twostep process, since rates and peaks of both processesare essential in the process description. As for the wash process, however, even though it is notan atomic process, it is commonly treated as such. Thus, we may not want to describe it as atwostep process, since biologists dont usually think of it this way. The goal of the wash processis to separate, and it can be categorized according to its goal.Representation challenges78Representing the effects of processesThe structure of a process description in most AI systems consists of a list of participant objects,preconditions for the process to occur, and effects or changes engendered. This approach torepresenting processes has been used for planning Barr 1981, natural language understandingCohen 1979, and simulation Forbus 1984 with good results.After examining the list of verbs above, it is clear that many experimental processes arecharacterized in terms of their end result, which is a transformation of the substances involved inan experiment. But most AI systems model the effects of a process on an object only as changesin objects property values or relations with other objects. For example, if a heating process isapplied to an object, its temperature rises. If a block in a blocksworld model or an object in amanufacturing plant is moved, a change occurs in its location property and its support relationswith other objects.As we have discussed before, processes in molecular biology, unlike the above, often involvefundamental changes in structure and sometimes identity and category of substances in themodel. To consider a blocks world analogy suppose enough heat is applied to melt the plasticblocks in a blocks world model into liquid. There are no longer any blocks in existenceHowever, it still may be important to represent that the goo which now exists used to be aparticular block or set of blocks.  In molecular biology one strain of bacteria is turned into adifferent strain by the introduction of a plasmid bacterial cells are turned into lysate by pressingor sonication a mixture is turned into a pellet and a supernatant by centrifugation, etc. All ofthese are examples of category conversions introduced earlier.For instance, Figure 32 which is the same as Figure 212 shows the definition of Boiling inqualitative process theory Forbus 1984, a transformation of some liquid to some gas. The inputto the process is containedliquid w an Individual View. The object that comes into existence isRepresentation challenges79g, a population which is a gas. The process description says that w and g are the same substancemeaning they are both made of the same kind of substance, since they cannot be coextensionaland the amount of g increases, while the amount of w decreases at the same rate. It does notexpress the fact that the stuff of g  is derived from the stuff of w.  Therefore, the history of aboiling process would not make this connection. It is also interesting to consider the situationwhere w is a mixture such as a salt solution. In that case, the assertion that substanceg substancew is incorrect, because only water evaporates into gas and salt stays in the container.It is not clear how the correct relationship for this case would be expressed in the aboveframework.Representation challenges803.2 Examples from the casebook of biology textsAs part of our ontology design process described in Chapter 4 we created a casebook ofparagraphs from published papers as our training set. We extracted the Materials and Methodssections from these articles. This section usually contains description of experiments and is theone that is most often queried by biologists.We created a randomly chosen set of 20 paragraphs from these sections and used it as ourtraining set. We tried to give a detailed formal representation of the information in theseparagraphs, and consider what challenges and problems we encountered in the process. AppendixB contains these 20 paragraphs and the frames representing them.Process BoilingIndividuals w is a containedliquid hf is a heat flow process instance where destination hf  wQuantity Conditions Status hf, Active A temperature w  A tboil wRelations There is g  pieceofstuff gas g substance g  substance w temperature g  temperature w Let generationrate be a quantity A generationrate  ZERO generationrate Q flowrate hfInfluences I  heat w, A flowrate hf I  amountof w, A generationrate   amountofg, Agenerationrate   heatw, Agenerationrate   heatg, AgenerationrateFigure 32. Process specification for Boiling process from Forbus 1984. Theprocess description says that w and g are the same substance. It does not express thefact that the stuff of g  is derived from the stuff of w.  Therefore, the history of aboiling process would not make this connection.Representation challenges81We observed that after studying the 20 paragraphs in the first set we reached a relativesaturation point  no new ontological issues were arising after about 15 paragraphs. Carefulstudy of these paragraphs added significantly to our understanding of representation problems inthe domain of molecular biology experimentsWe will now describe some of the most fruitful paragraphs from the set in terms of providingchallenging representation issues. For each of them, we will show the full paragraph and thensome excerpts that contain representation challenges. We will also use this section to describesome of common experimental procedures that are mentioned in the texts, such aselectrophoresis and chromatography. Note, that what we are trying to represent is the meaning ofthe information described in the texts and do not concern ourselves with the issue of representinglexical structures.Appendix B contains a full frame representation based on our ontology model for each of theparagraphs discussed below.WeygandDurasevic et.al. WeygandDurasevic 1994Separation of in vivoaminoacylated and uncharged tRNAs.S. pombe amber suppressor tRNA was isolated from E. coli JR104 transformed withpACYC vector carrying the tRNA gene and compatible plasmids with synthetase genes.Transformants were grown under selective conditions in M9 glucose mediumsupplemented with ampicillin, chloramphenicol, and, when necessary, arginine andtryptophan. tRNA isolation was performed at 4oC and pH 4.5 45. The charged tRNA waselectrophoresed on acidic 6.5 polyacrylamide8 M urea gels at 4oC for 24 h at 12 Vcm.The portion of the gel around the xylene cyanol dye, which contained the tRNA of interest,was electroblotted onto a Nytran membrane prior to hybridization with 532Plabeledoligodeoxyribonucleotide probes 1 x 106 to 2 x 106 cpmml. The hybridization andposthybridization washes were as described above.Figure 33. An excerpt from WeygandDurasevic 1994The paragraph in Figure 33 describes the process of separating tRNA transfer RNA from cells.First, a plasmid is inserted into cells of a particular E. coli strain. This plasmid called vectorRepresentation challenges82here carries tRNA genes. These cells transformants are then grown under certain conditions.tRNA is isolated from the cells. Electrophoresis is used to separate tRNA of interest.We will take a moment here to describe what an electrophoresis process in general is. Mostbiological macromolecules carry an electrical charge and thus will migrate in an electric field.Hence, if a tube containing, say, positively charged proteins in a gel for gel electrophoresis isconnected to a DC power supply, the protein molecules will move towards the negativelycharged end. The rate of movement depends on various properties of a molecule, such as themagnitude of its charge or its shape. Thus molecules with similar properties will form bands inthe tube see Figure 34. These bands can be identified and used for further experimentsFreifelder 1987. In the paragraph in Figure 33 the charged RNA was electrophoresed andcertain bands on the gel portion around the xylene cyanol dye were used for the next step of theexperiment. Table 37 describes the issues that arise in representing information from thisexcerpt.Representation challenges83Excerpt IssueThe charged tRNA waselectrophoresed on acidic 6.5polyacrylamide8 M urea gels...Representing the electrophoresis process whichis a separation process. However, no newobjects are created. Instead, portions of tRNAform bands in the gel i.e., there is a temporarybond between portions of tRNA and the gel.The portion of the gel around thexylene cyanol dye, which containedthe tRNA of interest, waselectroblottedIt should be possible to specify portions of thegel around xylene cyanol dyepACYC vector carrying the tRNAgene and compatible plasmidsRelations can be not only structural e.g. partwhole, but functional, too. Compatible is anexample of a functional relation.Table 37. Issues from WeygandDurasevic 1994. See Figure 33Figure 34. Gel electrophoresis Freifelder 1987. Sixdifferent bands are clearly visible.Representation challenges84He and Zalkin He 1994Plasmid constructionTo clone the purA control region, a segment of purA from nucleotides 478 to 103,numbered relative to the start of transcription Fig. 1, was amplified by PCR 20 fromchromosomal DNA of E. coli W3110. The amplified fragment, containing SmaI and BamHIadapters, was ligated into the SmaI and BamHI sites of pRS415 to yield a purAlacZtranscriptional fusion in plasmid pBH599. Plasmid pRS415 contains an intact lacZ codingsequence and ribosomebinding site but lacks a promoter. Plasmids pBH140 and pBH170were constructed as a source of the purA control region for the gel retardation assay.First, a 140bp fragment of purA from nucleotides 193 to 54 was amplified by PCR.Second, this fragment, containing EcoRI and BamHI adapters, was subcloned into theEcoRIBamHI site of pUC118, resulting in plasmid pBH140. In a similar way, a 178bpfragment from nucleotides 72 to 103 was constructed and was ligated into the EcoRIand BamHI sites of pUC118 to give plasmid pBH170.Figure 35. An excerpt from He 1994The first part of paragraph in Figure 35 describes a process of ligation joining. First, a specificsegment of chromosomal DNA is amplified i.e. many copies were made. This amplifiedfragment contains restriction sites, specific portions of the nucleotide sequence. This fragment isthen ligated into the corresponding sites of pRS415 plasmid. The presence of the same tworestriction sites SmaI and BamHI in both nucleotide sequences in this case, the amplifiedfragment and the plasmid, is a necessary condition for the ligation process only in this case canone fragment be ligated into another. In the process, the plasmid is normally split at these sitesRestriction site ARestriction site BCell membraneBacteria c llSpliced plasmidFragment toins rtFigure 36. Subcloning of a Nucleotide Sequence Fragment into a circular plasmid that has beensplit. In this case, the plasmid is inside a cell. The estrictio  sites at which the plasmidsplit have to match the re tr ct on s tes on the fragment to be ins rted. The dir ct part cip nts ofthe Subcl ne process are two populati s that of cells with pl mi s in them, and nucleotidsequence fragments. S e Figure 35Representation challenges85and the fragment is inserted see Figure 36. The same process is described at the end of theparagraph for different nucleotide sequence segments and restriction sites called adapters in thiscase.Besides representing necessary conditions for a process e.g. the presence of the restriction sites,this process brings up another representation issue describing a process from two differentperspectives. If we look at Ligate from the point of view of individual cells, there is a changein the structural composition of nucleotide sequences. If we consider the same process from thepoint of view of the population, the whole population acquires new functional properties as aresult These functional properties of the population, however, are usually determined by thePlasmidid P31name pBH599contains purAlacZ        transcriptional fusionPlasmidid P3name pRS415sitescontained SmaI, BamHIcontains intact lacZlacks promoterNucleotide sequenceid N5segmentof D45portionof G44position start 478 end 103 relativeto start of the transcriptionsitescontained SmaI, BamHIGeneid G44name purAsegmentof D45DNAid D45type chromosomalpartof P4Populationid P4elements bacteria E.coli strain W3110LigateAmplifyby PCRFigure 37. Schematic description of the first step in the experiment from Figure 35. Thick linesrepresent processes and thin lines represent partof relations. Ids are randomly generatedsymbols. There is a different partof relation between Nucleotide sequence and DNA andNucleotide Sequence and Gene.Representation challenges86changed structure of population elements. That is, process effects are different at the two levels.This paragraph also demonstrates some of the complexity of partwhole relations that we shoulddeal with. Figure 37 shows schematically substances and processes described in the first step ofthis experiment. The nucleotide fragment that is amplified comes from chromosomal DNA. Itscoordinates are given with respect to DNAs start of transcription. This fragment is at the sametime a portion of purA gene. However, the relation between the fragment and the DNA and thefragment and the gene are slightly different the fragment is derived from DNA and happens tobe a portion of the gene. DNA is also contained inside elements of population of E. coli bacterialstrain. That is, there is a level of indirection here DNA is not part of the population itself, but ispart of elements of the population. In fact, DNA itself is a population.Table 38 summarizes representation issues described above.Xing and Whitman Xing 1994This paragraph gives an example of a chromatography process, specifically, columnchromatography. Chromatography is a process of separating elements of a mixture based ondifferences some of their properties for example, in the paper chromatography components areseparated based on differences in rates at which the individual components vii Hydroxyapatite chromatographyA hydroxyapatite column 2.2 by 5 cm was equilibrated with basic buffer. After applicationof the diluted enzyme from the phenyl Sepharose chromatography step, the column waswashed with 20 ml of basic buffer and a linearly increasing gradient generated from 40 mlof basic buffer and 40 ml of 0.5 M KH2PO4 pH 7.5 in basic buffer at a flow rate at 4 mlh.Enzyme activity eluted as a single peak at about 0.2 M KH2PO4. Fractions containingactivity were pooled 17 ml and dialyzed overnight against 2 liters of 0.1 M TrisCl bufferpH 7.5 containing 20 volvol glycerol, 0.5 mM dithiotreitol, and 0.5 mM disodiumEDTA. Purified enzyme was stored at 200C.Figure 38. An excerpt from Xing 1994Representation challenges87of a mixture migrate through a stationary medium under the influence of mobile phase incolumn chromatography the differences between components affinity to the stationary phasethat fills the column and the mobile phase that moves through the column are exploited Skoog1992. Chromatography used in Figure 38 is column chromatography. In columnchromatography, a chromatography column is packed with a solvent stationary phase. A singleportion of a sample, usually dissolved in the mobile phase, is introduced at the head of thecolumn. Additional solvent mobile phase is then added to the column. When the concentrationof the active chemical in the mobile phase increases sufficiently, the affinity of the sought aftersubstance to this active chemical becomes stronger than its affinity to the stationary phase, andthe substance moves to the bottom of the column along with the mobile phase. It is then collectedat the bottom of the column Figure 39.Collectionmobile phaseconcentration ofKH2PO4 increaseswith a certain gradientthe mixtureincluding enzymestationary phaseCollectionthe enzymeFigure 39. Bands of separated enzyme in a chromatography column. The mobilephase is added from the top to force eventual elution of the enzyme at the bottomof the column.Representation challenges88In the excerpt in Figure 38 first the test sample diluted enzyme is added to thechromatographic column and then it is washed with the basic buffer with gradually increasingconcentration of KH2PO4 the mobile phase. At a certain concentration of KH2PO4 enzymeactivity was eluted.From the representation point of view, chromatography consists of two steps addition of thesolvent to the column and elution. These two steps are different but related to each other the rateof elution is proportional to the rate of addition. When peak of enzyme activity is eluted, theExcerpt IssueThe amplified fragment containing SmaIand BamHI adapters, was ligated intothe  SmaI and BamHI sites of pRS415The cloning process one vector can beinserted into another vector if and only if, thetwo vectors have two common restriction sitesin their nucleotide sequences in this caseSmaI and BamHI Two levels of process effects structuralchange at the individual molecule level andfunctional change at the population level.... a segment of purA from nucleotides 478 to 103, numbered relative to thestart of transcription...Representing nucleic acid fragments thebeginning and the end coordinates, thestarting point of the coordinate system in thiscase, the start of the transcription, etc.... a segment of purA from nucleotides 478 to 103, numbered relative to thestart of transcription Fig. 1, wasamplified by PCR 20 fromchromosomal DNA of E. coli W3110.Representing different kinds of partofrelation the nucleotide fragment is a segmentof the DNA and portionof the gene. DNA isinside each element of population of bacteriaTable 38. Issues from He 1994Representation challenges89concentration of the substance added to the column should be recorded. This process is anexample of two different simultaneous processes that should be treated as a whole.Kawasaki et.al. Kawasaki 1994Two similar process are described in the two paragraphs in Figure 310. In the first one, a cellsuspension is mounted on a grid and dried. The grid then undergoes a series of three incubationprocesses varying in buffer, duration and temperature. The result is examined under amicroscope.In the second experiment, cells are first fixed in a solution and then embedded in epoxy resins.The resins are then cut into ultrathin sections and after that deposited on grids. The grid thenundergoes the same series of incubations as in the first experiment with additional pretreatment.This sequence is schematically shown in Figure 311. It would be useful to treat this sequence ofsteps S1 as a temporary configuration of processes that act together. This sequence can then takedifferent inputs.Immunogoldlabeling electron microscopy. i Wholemount method The cellsuspension was mounted on the carbonFormvarcoated grid and dried. The grid wasincubated in PBS containing 5 BSA for 30 min and then in PBS containing the purifiedantiGSL4A IgG for 30 min at room temperature. Subsequently the grid was incubated inPBS containing 3 goat  antirabbit IgG conjugated to 10nm gold particles EnzymedLaboratories, Inc., San Francisco, Calif. for 30 min at room temperature. The preparationwas examined with electron microscopes, JEM1200EX JEOL, Tokyo, Japan and H500Hitachi, Tokyo, Japan.ii Thinsection postembedding methodCells were fixed first in 2.5 glutaraldehyde in PBS for 1 h and postfixed in 1 OsO4 for1 h, dehydrated in graded ethanols and propylene oxide, and embedded in epoxy resins.Ultrathin sections were preparated by an ultramicrotome LKB, Stockholm, Sweden anddeposited on nickel grids. The same procedure used for the wholemount method wasapplied, except for the additional pretreatment with 1 H2O2 for 3 min before goldlabeled antiIgG staining. After the immunogold staining, the sections were stained with4 uranyl acetate and 0.4 lead citrate in 0.1 M NaOHFigure 310. An excerpt from Kawasaki 1994Representation challenges90Complexcells embedded inresinscarbonFormvarcoated grid nickelgridMixturePBS buffer5 BSAMixturePBS buffer3 goat antirabbit IgGMixturePBS bufferpurified antiGSL4A IgGComplexComplexComplexComplexcells mountedon gridComplexcells mountedon griddrymount mountexamineS1incubateincubateincubateCellsuspensionFigure 311. Kawasaki 1994 The same sequence of steps applied to different inputs some substeps ofthe experiments are omitted for clarity. See Figure 310Excerpt IssueThe cell suspension was mounted on thecarbonFormvarcoated grid...Cells were fixed first ..., and embedded inepoxy resinsVarious types of physical attachmentmounting, fixing, embeddingThe same procedure used for the wholemount method was applied, except for theadditional pretreatment  ...Representing sequence of steps as a wholeand having different input to it.Table 39. Issues from Kawasaki 1994Representation challenges913.3 Summary of representation issuesTo summarize this chapter, we present a list of major challenges presented by the three subontologies things, relations, and processes described above.1. Substances categorizing complex substances representing mixtures representing temporary configurations of substances2. Relations between substances diversity of component relations categorizing relations3. Processes representing category conversions tracking lifetime of objects using Object histories representing configurations of processes92Part II. Methodology934. ONTOLOGY DESIGN AND EVALUATIONPROCESSThere are many ontology design projects described in the literature in recent years for anaccount on some of them see Chapter 2 of this thesis. Very few, however, discuss the designprocess itself. More recently though, attempts are being made to develop a methodology forbuilding ontologies. These attempts range from specifying the overall principles that ontologiesshould adhere to Gruber 1993a, to the methods for evaluating ontologies GmezPrez 1996,to some preliminary guidelines on unified methodology Uschold 1996a. The latter is based onfinding some common themes in the few design processes reported in the literature.To add to this so far rather small pool of reports on the design process itself, we present in thischapter the set of steps undertaken in this project. The main characteristics of this process are athorough study of the domain through use of a text corpora available online and severalevaluation steps that assess the adequacy of the developed ontology to the domain and to the taskof intelligent information retrieval.4.1 Ontology design processStep 1 Domain study and initial designThe first step in our ontology design process was to study published biology literature, referencebooks that contain descriptions of standard protocols for experimental procedures Ausubel1987 and textbooks. Using these resources, we identified issues in representing molecularbiology knowledge that could not be solved using standard ontological paradigms. Many of theseissues were discussed in Chapter 3.Design and evaluation process94The next step was to specify an initial ontology design that was done in a topdown fashion. Inthis design, we tried to address the issues identified in our initial study.Step 2 Casebook of biology textsTo verify, extend and improve the initial ontology design, a casebook of paragraphs frompublished papers was compiled. We created two random sets of these paragraphs a training setto be used for more accurate and detailed ontology design and a test set to be used later forevaluation Russell 1995.The casebook was created from texts of articles on a CDROM containing issues of the Journalof Bacteriology American Society for Microbiology 1994. Articles from the first half of 1994were processed in the following way Materials and Methods sections were extracted. This section usually containsexperiment descriptions. Individual paragraphs from these sections were stored in a database. 20 paragraphs were chosen randomly from the database to form the first set to be used inontology design, our training set. Another 20 paragraphs were chosen randomly and put aside for evaluation purposes as atest set.We observed that after studying the 20 paragraphs in the first set we reached a relativesaturation point no new ontological issues were arising after about 15 paragraphs. Wecertainly encountered new concepts that were unaccounted for at that point, but they were justleaf nodes that needed to be added to the hierarchy of substances or processes.Design and evaluation process95We described some of the most fruitful in terms of providing challenging representationissues paragraphs from the set in Section 3.2.Step 3 Redesigning ontologyAfter gaining insights from the casebook described in Step 2, we did a major redesign of ourinitial ontology to account for the new challenges we encountered. In fact, redesigning theontology has been and continues to be an ongoing process in this project.Step 4 Formalism developmentWe have developed a formalism to represent frames in our ontology, that is most reflective oftheir contents. This formalism is presented in full detail in Chapter 5. We used a standard framebased approach but augmented it with some extra features to better describe the domain. Toexpress axioms, we extended the KIF logical language Genesereth 1992 with, again, someadditions.4.2 Evaluating the ontologyThe problem of evaluating an ontology is one of the most underdeveloped areas in ontologydesign. Some work has been done in this direction. In Section 2.1.2 we described a formalapproach to evaluation used in TOVE project. In this project, formal competency questions wereformed in the initial steps of ontology development and in the later stages it was proved thatanswers to these questions can be formally derived from the ontology using strictly definedinference rules.In general, there are two aspects to ontology evaluation. One aspect is evaluating formal featuresof an ontology its consistency, wellformedness, completeness of definitions, etc. Some work inthis area has been done GmezPrez 1996, GmezPrez 1995. The second aspect is utilityand usability of ontology how adequate it is for the task it was created for, how well itDesign and evaluation process96represents the domain of interest. This distinction is similar to GmezPrez distinction betweenEvaluation and Assessment. Her research is mostly centered around the former. For instance,in GmezPrez 1996 an example framework for determining internal consistency of anontology is developed10.Of the two aspects in ontology evaluation mentioned above, we concentrated on the second oneevaluation of ontology utility and usability. The formality is checked to some extent when theontology is translated into Ontolingua see Step 3 below. In general, this process is inherentlyinformal, as the evaluation criteria have to be subjective for example, whether an ontologycovers every aspect of its intended domain can be judged differently by different experts. We tryto introduce some level of formality into this discussion by using techniques of experimentalComputer Science. To evaluate conceptual coverage, for instance, we use a test set to determinewhether the ontology is complete enough to represent the information in this test set. Below arethe three steps of this evaluation process. The first two steps deal with evaluating the adequacy ofthe ontology to the domain and the task at hand. The third step evaluates the formalismdeveloped.Step 1 Evaluation of conceptual coverageWe evaluated the conceptual coverage and practical usefulness of our ontology. For conceptualcoverage evaluation we used the test set created earlier. This test set consisted of 20 randomparagraphs from Materials and Methods section of published papers. We encoded knowledge inthese paragraphs using the ontology we developed and evaluated what percentage of sentencescould be represented fully.                                                10 Although the paper claims that these rules also formally check for consistency with the real world, theproof is centered around  a highly informal function Interpretation Fdef Idef that interprets the meaningof an informal definition Idef with respect to its formal definition FDefDesign and evaluation process97Step 2 Evaluation of practical usefulnessWe developed a proofofconcept prototype to evaluate the practical usefulness of our approach.The MM Query system Baclawski 1994, Baclawski 1993a is a prototype of an intelligentinformation retrieval system. It allows users to make simple keywordtype queries, as well asontologybased queries. The system gives the user access to an ontology and frames and allowshim or her to specify a query in the form of ontology categories or frames with some values filledin. Inferencing based on our ontology occurs both at the time of knowledgebase creation and atthe time of processing user query. An answer to a query is a list of relevant papers with access topaper text itself. We describe this prototype in more detail in Chapter 7.Step 3 Formalism validationTo validate formality and prove portability of our formalism, we show how frames in thisformalism can be translated in Ontolingua Gruber 1992, Gruber 1993b. Since the Stanford KSLWeb site httpwwwkslsvc.stanford.edu5915 has become the defacto ontology repositoryand all ontologies there are expressed in Ontolingua, translating our ontology in this formatwould demonstrate its portability and formality.Results of these evaluation steps are presented in detail in Chapter 8.98Part III. Results995. REPRESENTATION FORMALISM AND AXIOMSConcepts in the EMB ontology are defined by frames. In general, we follow a standard frameformalism Brachman 1991, Brachman 1985, that we extend to better reflect the nature of thedomain and to support our inference engine see Section 7.3.1. We use KIFbased formalism toexpress axioms associated with classes. Frames and axioms are declarative by themselves theyget operational semantics from the inference engine defined later Section 7.3.1.We start this Chapter by presenting a contextfree grammar for concept definitions Section 5.1defines the syntax for class definition and Section 5.2 defines the syntax for instance definition.Section 5.3 describes the axioms and additional functions and predicates that are defined at classand instance declaration time.5.1 Class Definitions. Extensions to standard frame formalismThere are three different kinds of frames, for the three subontologies in our model Thing,Process and Relation frame.Frame Thingframe Processframe Relationframe11Each frame definition contains the name of the subontology it belongs to, a class categoryname, a list of superclasses if any, and a frame body that describes slots and axioms.Thingframe Thing classname  superclassesthingframebody                                                11 Angle brackets   indicate the concepts that will be elaborated upon in further rules. Italics representliterals.Representation formalism100Processframe Process classname  superclassesprocessframebodyRelationframe Relation classname  superclassesrelationframebodysuperclasses  classname Each frame body consists of slots and axioms that define a class and internal concept structure.Slots in a frame can be simple slots the ones usually used in framebased formalisms, or slotgroups with special meaning for example, substance participants of a process, or substeps of aprocess sequence. Conditions on slot values that cannot be expressed via simple valuerestrictions, are expressed in the form of KIF axioms preceded by the keyword Conditions.These are axioms associated with a class. Processes also have a second set of axioms precededby keyword Effects. We will discuss this axiom group later.thingframebody  slot  slotgroup Conditions  KIFaxiom  processframebody  slot  slotgroup Conditions  KIFaxiom  Effects  KIFaxiom  relationframebody  slot Conditions  KIFaxiom  Figure 51 shows a sample definition of class DNAfragment.12 This is a class in the subontology of Things and a subclass of DNA. It has five slots Segmentof contains aninstance of chromosome or plasmid that the fragment comes from. Composition recordswhether the fragment is doublestranded or singlestranded. Start and end positions are                                                12 Concept definitions in this chapter are given as examples and are not necessarily exactly the same as inthe full EMB ontology described in the next Chapter.Representation formalism101coordinates on the source sequence that determine the fragment. For instance, there can be afragment of a plasmid from 155 to 98. Length is the length of the fragment in base pairs.Length is equal to the difference between the start and end coordinates. The latter fact isexpressed in the Condition in Figure 51.13Formally, a simple slot consists of the slot name possibly followed by a value restriction or a listof value restrictions. Slots can also have default values.slot slotname value restriction List valuerestriction default defaultvalue The value restriction on a slot is either a list of possible filler values or specification of a categorythat the slot value should belong to, or both. In the DNAfragment example in Figure 51 allvalue restrictions are in the form of category restrictions we specify which categories the slotvalues should belong to. Each slot can have only one value a list of values is considered to be asingle value of type listvalue restriction list of fillers  class restriction list of fillers or class restrictionclass restriction instanceof classname or classnameIf a list of fillers for a slot value is specified and it is not followed by ellipsis, the range of valuesfor the slot is limited to values from this list. If ellipsis follows the list of fillers, the slot can takeon other values as well in the latter case, the list of fillers usually represents the most likelyvalueslist of fillers  fillervalue  ...                                                13 Term this refers to the current instanceRepresentation formalism102Figure 52 shows a sample definition of the DNA class. It has almost all possible combinations ofvalue restrictions. DNA, for example, can be chromosomal, genomic, or some other, unspecifiedtype. So, the Type slot has a list of fillers with ellipsis for possible unspecified types. DNA canbe synthesized or come from bacteria. Thus, the Source slot can either contain the filler valuesynthesized or some other, unspecified filler, or an instance of a Bacteria class. List offillers for the Composition slot is limited to two DNA can be either singlestranded ordoublestranded. A DNA molecule or population might not be labeled radioactively inwhich case, the filler for the last slot is no, or it might be labeled by some radioactive labelwhich should then fill the value of the slot.Thing DNAFragment  DNASegmentofinstanceof chromosome or plasmidCompositiondoublestranded singlestrandedStartpositioninstanceof numberEndpositioninstanceof numberLengthinstanceof numberConditions Length this 1  Endposition this Startposition thisFigure 51 A sample class definition. Class DNAfragment inherits from DNA. It has five slotssegmentof, composition, startposition, endposition and length.Condition links length and start and end position.Representation formalism103We now introduce slot groups into our formalism to add an extra dimension to slot definitionswhen necessary. This allows slots that have similar ontological function in a category definitionto be grouped together. This semantic role can then be employed by an inference engine. The slotgroup of participants in a process is a good example of this phenomena. Each participant is a slotin itself, as it has its own name and can be referred to in axioms later and value restrictions. Atthe same time, we can refer to process participants as a whole. Similarly, some processes have aslot group for newly created objects. When an instance of such a process is created, an inferenceengine would create instances and corresponding object histories of the newly created objects.At the same time, axioms representing effects of a process can contain conditions on specificproperties of each of these newly created objects.Thing DNA  NucleicAcidTypechromosomalgenomic...Sourcesynthesized...orinstanceof bacteriaCompositionsinglestrandeddoublestrandedLabeledornotnoorinstanceof labelFigure 52. Sample definition of category DNA. It has four simple slots with various kinds of valuerestrictions.Representation formalism104A slot group consists of the slot group name followed by a list of slot group members, some ofwhich could be optional.slotgroup slotgroupname slotgroupmember  slotgroupmemberFigure 53 shows a sample definition of an Insert process with Participants slot group.There are two members of this slot group simple slots with type value restrictions, object andtarget of the insertion. The axiom in the Conditions part refers to the slot names directly.Slots in a slot group can either be simple slots as the ones described above, or Slotlistsslotgroupmember slot  slotlistTo explain what a Slotlist is and why we need it, consider the following example. Say, we havea category Complex for temporary configurations of objects that, taken as a whole, hasmeaningful properties. For example, there can be a containedliquid Complex, that is aComplex of Liquid and a Container. In general, there is a Participants slot group in aComplex definition see Figure 54. The only thing we know about these participants is thatthere can be any number of them, and all are instances of Tangible Things. Class AttachmentComplex in Figure 54 inherits from Complex and, in our domain, there are only twoProcess Insert  CombineParticipantsobject instanceof TangibleThingtarget instanceof TangibleThingConditionscanbeinserted object this target thisFigure 53. Sample definition of Insert process. It has Participants slot group that consists oftwo slots object  to be inserted and target it will be inserted into. The axiom in Conditions partcan refer  to the members of the slot group directly.Representation formalism105participants in an Attachment Complex objecttoattach and objecttoattachto. These two slots are inherited from the list of slots components in the Complexframe. So, components is not a list in a sense that was used in a simple slot definition insubclasses, its elements can become independent slots with their own role names and valuerestrictions. We call this type of slot Slotlistslotlist slotname Slotlist instanceof classnameWe have now described all the possible ways to define a concept in our formalism and all itsslots and combinations of slots. The last issue that we need to emphasize are the two groups ofaxioms in a Process definition. As we have stated above, a Process frame body looks as followsprocessframebody  slot  slotgroup Thing Attachment Complex  Complex N a m e   instanceof string P a r t i cip a n t s   objecttoattach    instanceof TangibleThing  objecttoattachto instanceof TangibleThingThing Complex  DecomposableObject N a m e   instanceof string P a r t i cip a n t s   components Slotlist instanceof TangibleThingFigure 54. Class Complex and its subclass Attachment Complex. Slots objecttoattach and objecttoattachto in the slot group Participants inherit from thecomponents, which should represent some list of Tangible things.Representation formalism106Conditions  KIFaxiom  Effects  KIFaxiom  Unlike Things and Relations frame, there is not one, but two groups of axioms in this definition.Axioms in the Conditions group express restrictions on the slot values and relations betweenthem. Axioms in the Effects group express conditions that are true after the process14. Theseaxioms are used by the inference engine.To summarize, below is a list of our extensions to standard framebased formalism Slot groups a number of slots that play similar semantic role grouped together in adefinition. Axiom groups two groups of axioms in a Process definition one group is a regular axiomrestricting slot values and their relations to each other. The second group representsconditions that are true after the process. These are also used in the inference engine. Slotlists a set of slots that can take their own, separate names and value restrictions insubclasses. Partial filler restrictions ellipsis in the list of fillers indicates that values not in the listare allowed as well. A minor addition to specification of slot value restriction that allows two types ofrestrictions in a definition of the same slot list of fillers and type restriction.5.2 Instance definitionThe following is the syntax for defining an instance of a class                                                14 Temporal relations between processes are discussed in Section 6.1.6Representation formalism107instancedefinition Makeinstance classname slotname slotvalueInstance definition includes a class name of the instances class and a list of slots that havevalues defined for them in the instance. This value can be a number, a string or a reference toanother object e.g. an instance of another class, or a list of any of theseslotvalue number  string  reference listofvalueslistofvalues slotvalueSection 7.3.1.1 describes what the inference engine does when a new instance is defined.5.3 AxiomsThere are some properties of Things and Processes that are described using axioms. For Things,these are mostly some conditions on the internal structure of instances, or relations betweenvalues of different slots. As mentioned above, for Processes, there are two sets of axioms thefirst set defines the preconditions for a Process to begin and is preceded by the keywordConditions the second set of axioms specifies process effects and is preceded by thekeyword Effects. We use a KIFbased formalism to express our axioms. It is very close tofirstorder predicate calculus. For example, the following is an axiom in the DNAfragmentclassforall x DNAfragment x lengthinbp x 1  endposition xstartposition xRepresentation formalism108This axiom says that for any instance of DNAfragment class, the value of the slot lengthinbp length of the fragment expressed in basepairs is equal to the difference between its startand end coordinates.Variables in KIF are preceded by . Prefix notation is used for predicates. Forall is theuniversal quantifier and exists is the existential quantifier.We use the following convention when the axiom is universally quantified over an instance of aclass that axiom is associated with which would be the case for most axioms. If an axiom for aclass C1 starts withforall x C1 x ...we omit this prefix and use this to refer to an instance of the class being defined. The axiomabove would then look like lengthinbp this endposition this startposition thisWe now define some of the predicates and functions that can be used in axioms.Predicates and functions used in the axiomsThe following relation is defined for any object xclassof c xThis relation is true if object x was created using the operationmakeinstance cThat is, if x is a direct instance of class c. The relation classof x c would be falseof c is a superclass of a class that x is an instance of. For example, if x is created using theoperationRepresentation formalism109makeinstance DNAthen classof x DNA is true and classof x DecomposableObject isfalse.The relation instanceof x c is an inverse of the classof relationdefrelation instanceof x c classof c xTo express the relation between x and superclasses of DNA in the above example, we introducethe relation typeof x cdefrelation typeof x c or classof x cexists cl and classof x clsuperclassof cl cThen typeof x DecomposableObject is true.There is also a relation hasproperty x prop that holds if x is an instance of aclass that has a slot named prop.Predicates and functions defined at class definition timeFor every class defined in the model, the following predicates and functions are automaticallydefined at the same time Predicates classname, hasproperty Functions slotname for every slot in a frame, slotgroupname for every slot group inthe frame Specifically, for each class C1 defined in the ontology, the corresponding predicate is alsodefinedRepresentation formalism110 defrelation C1 x instanceof x classname That is, C1 x is true if x is an instance of class C1. If the category being defined is in the Relations subontology, additional predicates aredefined. If a category R1 is a property i.e., a unary relation, a function with the same name isdefined. The value of the function is equal to the value of the corresponding property with x asits object. If this property is not defined for the object x i.e. there is no instance of R1 that hasx as its object, then the function R1 is undefined for x. deffunction R1 x if exists rand instanceof r R1 x object15 rvalue r If R1 is a binary relation, then a relation with the same name is defined. defrelation R1 x y exists rand instanceof r R1 x arg116 r y arg216 rvalue r For instance, when we define a binary relation category isinside in the Relations subontology, the isinside predicate is also automatically defined isinside a b This predicate is true for some a and b if there exists an instance of isinside class thathas a and b as its arguments. For each slot S1 defined in a class, the following function is defined, too deffunction S1 x                                                 15 Object is a slot in a Property frame 16 arg1 and arg2 are slots in Binary Relation frameRepresentation formalism111 The value of this function equals to the value of a slot S1 in the instance x. If a base class for xdoes not have a slot S1, S1 x is undefined. For example, when a category AttachmentComplex in Figure 54 is defined, the followingfunctions and predicates are defined as well AttachmentComplex x  a predicate that is true if x is an instance ofAttachment Complex class. name x, objecttoattach x and objecttoattachto x functions that return values of the corresponding slots for xNote that making slot a function, implies that each slot in the ontology can have only one value.If there is more than one value possible for the slot, a list of possible values is created. This list isthe single value of the slot.Other predicatesThere are a number of predicates that we use in axioms to express the effects of processes. Thesepredicates are used in the Effects axioms. They do not trigger any specific actions in terms ofinstance creation or update, but they can be used by an inference engine to answer queries and doother types of reasoning.Predicate Record is used in many processes in the Assess subhierarchy one of the fourmajor subhierarchies in the Process subontology it expresses the fact that a value of aparticular property of an object is recorded as a result of a process. For instance, a process thatmeasures protein concentration would record this measurement as its result.defrelation Record property object valueWe use the following notations to describe changes in quantitative properties of objectsRepresentation formalism112Increase quantity xDecrease quantity xIncrease and Decrease predicates express the fact that the value of a certain quantity e.g.amount of x was increased or decreased correspondingly. For instance one of the effects of abacterial Grow process can be increased amount of bacteriaIncrease amountof bacteriaThe list of these special predicates can be expanded if necessary.1136. ONTOLOGY FOR MOLECULAR BIOLOGYOur ontology consists of three interrelated parts Things both Tangible things and Abstractions Processes including events RelationsThings are Tangible Things and Abstractions. Tangible Things include allthe different substances used in experiments. There are categories for Mixtures,Populations of cells or molecules, cells and their components, etc. Equipment used inexperiments is also a subcategory of Tangible things. Abstractions include such generalnotions as time, location,  quantities.Processes is the most extensive and complex hierarchy in the ontology. This is of courseunderstandable as processes are at the center of all biological experiments. They also requiremuch more detail in their description than substances do. There are four categories of atomicprocesses namely, Separate, Combine, Transform, and Assess and a categoryProcess Complex for describing combinations of processes treated as a whole.Relations hierarchy is an extensive classification of various relations. We consider binaryrelations in more detail, but properties as unary relations are also part of our Relationshierarchy. Most of binary relations classified are component relations, although there are somerelations that are not between a whole and its parts.Ontology for molecular biology114We start this chapter by describing the assumptions and innovations of our model, such as objecthistories, category species and treatment of populations Section 6.1. We then describe each ofthe three subontologies separately Sections 6.2, 6.3 and 6.4. For each of them, we introduceparts of the ISA hierarchy , discuss the principles used in categorization, and present framedescriptions for some typical categories. To summarize, we list the strengths and contributions ofour model Section 6.4.6.1 Model innovations and assumptionsIn this section we introduce innovations and assumptions of our model. The first issue iscategories at the bottom of our ISA hierarchy there is a significant difference betweencategories such as Mixture, where instances are different from each other, and, say, a specificplasmid, like pUC18, where composition and structure of all the instances are the same. Asimilar issue is, to use Lenats example Lenat 1990b, whether a specific disease, such asmeningitis, is a category or an instance We introduce a middle layer between fullfledgedcategories and specific instances that we call category species Section 6.1.1.We have already discussed the issue of category conversions processes that change identity oftheir participants in Section 3.1. We now formally define this concept in Section 6.1.2 anddescribe Object Histories as the way of dealing with category conversions Section 6.1.3.We extended the frame formalism to include the notion of slot groups, attributes with a commonontological role grouped together Chapter 5. In Section 6.1.4 we list the slot groups that arespecific to our ontology. These mostly include slot groups that have direct implications on objecthistories of process participants as well as slot groups in Complexes.Ontology for molecular biology115As has been mentioned before, almost all processes in molecular biology are not applied to singlemolecules or cells but to populations of them. We discuss our treatment of populations in Section6.1.5.Our treatment of temporal relations between processes are described in Section 6.1.6.6.1.1 Category SpeciesMost of the category hierarchy in our model as well as in many other models is an ISAhierarchy. That is, the link between a category and its subcategory is an ISA link.Definition 61. Category A ISA category B if everyinstance of A is also an instance of B. By default, allthe properties of a category are inherited in its subcategory, unless overridden by a subcategorydefinition.In our ontology, for example, Bacteria ISA Organism, that is, every instance ofBacteria is also an instance of an Organism.However, not all ISA relations in our ontology are the same. When we get to the bottom of oursubstance hierarchy, that is, to specific amino acids, nucleotides, etc., we encounter categoriesthat differ from the categories at the higher levels of the hierarchyConsider, for instance, amino acids. There are 20 different common amino acids that aredistinguished by their chemical structure. However, every instance of a specific amino acid say,lysine is exactly the same as any other instance of the same amino acid. Their chemical structureand, therefore, their function are exactly the same. We can say that all instances of a specificamino acid are clones of each other. The only difference could be in some extrinsic properties,such as temperature or location of a specific instance. By saying that something is an instance ofOntology for molecular biology116a lysine, we technically say everything that there is to be said about this object. In this sense, thecategory lysine is different from, say, a category protein different proteins differ structurally andfunctionally from each other. However, lysine is still a category and not an instance of a categorybecause it can have its own instances that differ in their extrinsic properties.Specific amino acids are not the only categories that have the feature outlined above namely,that every instance of it is a clone of another instance. The same can be said about chemicalelements, specific nucleotides, specific plasmids, etc. We call these types of categories species oftheir supercategories. That is,  lysine is a species of amino acids, pUC18 is a species ofplasmids, etc.Definition 62. A category A is a species of a categoryB if and only if1. Every instance of A has the same intrinsicproperties as any other instance. In our ontology,intrinsic properties are the structural andfunctional properties2. Category A cannot have any subcategories of itsown.For example, lysine is a species of aminoacid because1. every instance of lysine has the exact same internal structure and functional properties asany other instance2. there are no subcategories of lysineNote that different instances of lysine can have different extrinsic properties, such astemperature, location, etc.Ontology for molecular biology117To demonstrate the significance of both conditions in the species definition, consider thefollowing two examples.First example is Lysate a subcategory of Mixture. Condition 2 of the Definition 62 above istrue there are no subcategories of lysate in our ontology and probably in any other hierarchythat has lysate in it. However, condition 1 is false the internal structure, mainly the compositionof different instances of lysate can be different depending on which cells where broken to createa specific lysate instance, the list of components of lysate is going to be different.For the second example, consider an ontology that has a category for Tea, and then, say, Ceylontea as a subcategory of tea. In most cases, Ceylon Tea is a species of tea. Since the compositionand intrinsic properties of any instance of Ceylon tea are the same. However, if the hierarchygoes on to subclassify Ceylon tea into Hot Ceylon Tea and Cold Ceylon Tea by the extrinsicproperty, temperature, then Ceylon Tea is no longer a species of a Tea.The last example demonstrates the effect that a specific domain of an ontology or its purpose hason whether a category is a species or not. For example, in a chemistry domain, silicon Si wouldbe a species all silicons are the same for a chemist. However, in physics, there are different typesof Si e.g. Si 111, Si 100, etc. depending on how a silicon crystal was cut. So, in the lattercase, silicon is not a species.It can be inferred from the discussion above, that a species link between a category and itsubcategory can only exist at the lowest level of the category hierarchy it can only go to theleaves of the hierarchy. Note, that we do not consider specific instances to be a part of a categoryhierarchy since they are not categories themselves. All the links at the levels other than thelowest ones, are ISA links. The contrary is not true, however links at the bottom level i.e. linksgoing to the leaves in the category hierarchy do not have to be species links they can be eitherOntology for molecular biology118ISA links or SPECIES links consider again the category Lysate that is a leaf in the categoryhierarchy. Figure 61 illustrates the species link on a simple ontology of chemical substances.As far as instances go, almost any category in a hierarchy can have instances, not only thespecies and not only the leaf categories. For example, we can talk about an instance of a Mixture,or an instance of an RNA, none of which is at the bottom of the hierarchy.In our implementation we do not create a separate class for each category species to avoidproliferation of classes. However, when we define a class that can have category species as itssubclasses, we designate a specific slot as the one defining a species. For instance, when wedefine the Aminoacid class, the name slot has an additional property that it defines acategory species. This feature is then used by the inference engine to match the value of the slotto a query.SubstancesOrganicsubstancesNonorganicsubstancesOrganiccompound ProteinSugarAmino acidALANINEARGININEASPARAGINEASPARTIC ACIDCYSTEINEGLUTAMINEFigure 61. This is a small subhierarchy of substances that illustrates ISA and species links in acategory hierarchy. Solid lines represent ISA links and dashed lines represent species links.Ontology for molecular biology1196.1.2 Category conversionsThe notion of category conversion is introduced into our ontology to represent the fact that inmany processes when substances are destroyed, their components continue to exist as parts ofnewly created substances. Consider, for example, Figure 62 which illustrates the melting of ablock. When describing the melt process, we want to be able to capture the followinginformation A does not exist any more. B came into existence. Stuff that A was made from is now stuff that B is made from.This is an example of a category conversion, since an object of a new category say, a pool ofwax was created. Category conversion is not an element in the process hierarchy, but, rather, aproperty of certain processes in the hierarchy.A BFigure 62. Melting of a block in the blocks world. The block becomes a pool of wax after the meltingprocess. However, we want to preserve the information that both A and B are made of the same stuff.More formally, the following rules define a category conversion.Definition 63. Process P is a category conversion ifand only ifOntology for molecular biology1201. A new object different from any of the inputs iscreated. This new object can be an instance of anycategory other than Complex or its subclasses17exists xand member x Objectscreated Pnot Complex x2. All components of input objects combined are nowin the outputforall x y and member y Participants Pispartof x yexists zand member z Objectscreated P  ispartof x zRule 1 precludes processes such as Electrophoresis from being category conversions. Inelectrophoresis nothing new is created except from the binding of parts of the original mixture toparts of the gel Complex. Hence, this is not a category conversion.Rule 2 restricts the property to those processes where it can be easily determined what happenedto components of the original substance all of the components of original substance becomecomponents of the newly created substance.Rule 2 does not mean, however, that components of input objects are direct components of theoutput. Consider the batter and cake example eggs are not cake components per se, they arepresent in the cake in their transformed form.                                                17 Participants and Objectscreated are slot groups in a process definition. We will definethem in Section 6.1.4.Ontology for molecular biology121Note, the term category conversion becomes a little bit of a misnomer in the case of a Mixprocess. When two mixtures are combined together, a new mixture is created. That is, the createdobject is of the same category as the originals no category change, just the identity change. Wewould still call it category conversion, since for all practical purposes, they can be treated in thesame way.However, extracting identifiable components from a mixture or adding components to a mixturedoes not constitute a category conversion. The only thing happening here is a change in one ofthe slots of the original mixture, namely, its list of components and maybe character.From the categories of elementary processes outlined above, processes that are subcategories ofCombine and Transform  can be category conversions.18There are important practical implications of introducing the notion of category conversions intoour ontology. It allows us to track substances through a chain of processes that they participatein. Knowing that a process A is a conversion, we can update Object Histories for all componentsof all participants of process A to reflect the fact that they are now components of newly createdobject. This information can later be used for information retrieval.6.1.3 Object historiesAs we have mentioned before, we introduce object histories to track substances through theprocesses they participate in. As we discussed in Chapter 2, the idea of histories has beenintroduced before and was used, for instance, in Qualitative Process Theory. However, it isusually assumed that objects do not change their category or identity. This, of course, is not the                                                18 The reason that a Separation process cannot be a category conversion is that the only new object thatcan be created as a result of Separation is Complex. We cannot change categories of inputs to aseparation process or create new objects that have not already existed in the inputs at least, not inmolecular biology. These inputs would be part of some whole or Complex that is being separated.Ontology for molecular biology122case in our domain. We extend the notion of object histories to account for the fact that objectsdo change their categories as they go through processes.In our ontology an Object History for a substance object A consists of Information about the objects or Complexes that were input to the process that gaverise to the object A if available A list of objects or Complexes in temporal order that object A participates in A list of processes that object A participated in. The new objects or Complexes that were created from A as the result of the last processA participated in if availableFigure 63 shows an example of an object history for some object A. Object A participates inseveral Complexes or complex objects for simplicity we will assume that all of them areindeed complexes during its lifetime and a number of processes some of which are categoryconversions are applied to it. V1 is the first Complex A participates in. Thus, V1 starts the objecthistory for A. Then process P1 is applied to this Complex and as a result some of the propertiesof V1 change note that P1 is not a category conversion, but P2 and P3 are . Process P2transforms V1 into an instance of a different Complex, V2 thus, object A is now a part of V2 andthis fact is reflected in As history. Process P3 is destroys A by breaking it into two newsubstances, B and C. Substance B is now a part of Complex V3 and C is a part of V4. Thissequence is captured in the object history for object A.A complete object history does not have to be created for each object by the inference engine.Even partial object history can improve the adequacy of representation and both recall andprecision of query answering this is discussed in Section 7.3. Partial object history can beOntology for molecular biology123inferred from the processes description. For example, process P1 in Figure 63 has V1 as both itsinput and its output. Then P1 can be appended to the history of any object that is part of V1. Thesame is true for a process like process P2 in our example if the process has one complex objector Complex as its input and another one as its output, this fact can also be automatically recordedin the histories of all V1s constituents.6.1.4 Slot groups in the EMB ontologyIn this section, we describe what specific slot groups are used the EMB ontology and what theirmeanings are.In the Things subontology, there is currently only one slot group the Participants slotgroup in the Complex subhierarchyB  in V3  a nd C  in V4 V 1 ,  pr o c  P 1 ,  pr o c  P 2 ,  V 2 ,  pr o c  P 3unknownpr oc ess  P1pr oc ess  P2pr oc ess  P3Asou rc ehistory tr an sf or med in toObj ect hist or y fo r ob ject  A V1V1V2V3 V4Figure 63. An object history for an object A. Blocks in the diagram on the left representComplexes or complex objects and solid lines represent processes. Dotted lines link object Awith Complex or complex objects it participates in. The object history for A contains objectsV1 and V2 and processes P1, P2 and P3, as well as the information that A was destroyed afterP3 or transformed into something elseOntology for molecular biology124Thing Complex  DecomposableObjectName  instanceof stringParticipants components SlotList instanceof TangibleThingSlots in the Participants group correspond to various components of the Complex androles they play. Consider, for example, objecttoattach and objecttoattachtoin the AttachmentComplex see Section 6.2.1.1 or container and contained in aContainmentComplex.We use slot groups much more extensively in the Process subontology. Each Process has aParticipant group that lists objects and their roles participating in the process. They aredifferentiated inside by various roles reflected in the corresponding slot names e.g., solution,catalyst, etc..One of the subclasses of Process is Process Complex, a combination of processes treatedas a whole. Substeps in a Process Complex is also a slot group. For example, in aTechnique Complex used to describe a goal process and a technique that was used toachieve the goal as in harvested by centrifugation, the two substeps with their correspondingroles are goalprocess and techniqueprocess.The rest of the slot groups are used to trigger corresponding updates in object histories by theinference engine Objectscreated list of new objects and their categories that are created as a resultof a process. Instances of each of these objects are created. This, in turn, triggers creationof corresponding object histories.Ontology for molecular biology125 Objectsdestroyed list of objects that are destroyed after the process in the formof slot names. Objectsconverted list of conversion slots. The value of each slot is a pairoriginal object or list of objects, and the object it was converted into.Consider, for example, a simple transformation process that transforms some original substanceinto some new substance a chemical reaction, for instanceProcess Transform  ProcessParticipants original instanceof TangibleThingObjectscreatednew instanceof TangibleThingObjectsdestroyedoriginalObjectsconvertedconversion original, newHere an instance of Tangible Thing is created new an instance of its object history iscreated at the same time. An instance of this Transform process will be put as the final processin the originals object history and as the first process in the news object history. In theobject history of new it would also be noted that it was derived from original.6.1.5 PopulationsEssentially all processes in our domain are applied not to single objects but to populations ofmolecules or cells. When this happens, there are two ways to look at the process and,  in fact,most of biologists alternate between the two when thinking about a process. One view is macroview what happens to a population as a whole. This view would include, for example, anincreased concentration of a population constituent. The second view is the microview whathappens to each or some of the population constituents. For example, cells are divided in halfOntology for molecular biology126during bacterial growth, an instance of a plasmid is inserted in instances of cells in the case ofplasmid insertion process although, of course the process is applied to population of plasmidsand population of cells.The universal assumption of our model is, therefore, that all processes are applied to populationsof Tangible Things. This implies, that every participant in a process is, in fact, an instance of apopulation The only exception are instances of Equipment category. Thus a line in theprocess descriptionParticipantsobjecttoseparate  instanceof TangibleThingin fact meansParticipantsobjecttoseparate  instanceof PopulationConditionsforall x  x populationelement objecttoseparate thisinstanceof x TangibleThingFor simplicity, we will use the first notation to mean the second except when participant is aninstance of Equipment class.However, in all the frames, every time a form relation x y is encountered, therelation is applied to elements of population x and y. For instance in the following exampleParticipantsobject  instanceof NucleicAcidcells  instanceof Organismtarget  instanceof NucleicAcidPreconditionsisinside target this cells thisThe last axioms means, in fact, the followingOntology for molecular biology127forall x y  x populationelement target this exists y and  y populationelement cells this  isinside y xThat is, for any instance x of the target population, there is an instance y of the cellspopulation, such that y is inside x.The only predicates in the Effects part of Process descriptions that are applied to populationsas a whole, are those of the form Increase quantity x and Decreasequantity x see Section 5.3. These quantities concentration, amountof, etc.characterize a population as a whole.6.1.6 Temporal relations between processes.We use the following assumptions for temporal relations between processes Every experiment is by default represented is an instance of a Sequence Complex,which means that the following condition is true this refers to the SequenceComplex itselfforall x y  processes this  listof items x items y items   before timeinterval x timeinterval y This default relation can be changed, however, by stating that the processes constitute aTechnique Complex or a Combination Complex see Section 6.3.5 thatdescribes various Process ComplexesFor example, consider the excerpt in Figure 64 describing part of an experiment on purifyingCheW protein and represented schematically in Figure 65. Processes in the figure constitute aSequence Complex consisting of the following five substeps Technique Complex 1,Ontology for molecular biology128Resuspend, Ultracentrifuge, Technique Complex 2, TechniqueComplex 3. Therefore, the axiom above applies to these processes. Processes that constitutethe Technique Complexes themselves and this fact is specified explicitly, happen at thesame time.Going back to the representation formalism described in Chapter 5, Condition axioms are truebefore the process happens and Effects axioms are true after the process.Cells were harvested bycentrifugation at 5000rpmBeckman JA 10 rotor for 5 min,resuspended in a small volume ofbuffer containing 10 mM Mes pH6.0, 100 mM NaCl, 0.5 mM EDTA,and 50 M phenylmethylsulfonylfluoride, and then broken by Frenchpress. The lysate wasultracentrifuged at 50,000 rpmBeckman Ti 60 rotor for 1 hr toremove cellular debris. Protein wasprecipitated from the supernatantby adding NH42SO4 to 40saturation and pelleted bycentrifugation.Figure 64. Excerpt from Gegner 1991.Processes are underlined.Technique Complex 3 Goal Pellet Methodused CentrifugeTechnique Complex 2 Goal Precipitate Methodused AddUltracentrifugeTechnique Complex 1 Goal Harvest Methodused CentrifugeResuspendTimeFigure 65. Processes in excerpt in Figure 64.Processes represented in boxes constitute aSequence Complex, and, hence, happen inorder. Processes within the TechniqueComplexes happen simultaneously.Ontology for molecular biology1296.2 Subontology of ThingsAs mentioned above, the primary division in the Things ISA hierarchy is Tangiblethings versus Abstractions see Figure 66. Tangible things include all substances andtheir parts that can be used in biological experiments, combinations of these substances e.g.Mixtures, Complexes, and experimental equipment. Abstractions include time, place,variables and quantities we use a very limited ontology for these categories. Figure 67 containsa partial hierarchy of Things.We start this section by describing the major categorization principles decomposable objectsversus stuff, then look at two categories, Mixtures and Complexes, in more detail. On theAbstractions side we discuss the ontology of time and the inclusion of a Simpletimeontology from the Ontolingua ontology library into our model.ThingsTangibleThingsAbstractionsDecomposableobjects StuffFigure 66. The toplevel hierarchy of Things.6.2.1 Tangible ThingsWe have already introduced Section 3.1 the primary division for Tangible thingsDecomposable Object versus Stuff see Figure 66. We will define this distinction moreformally here.Ontology for molecular biology130Definition 64. X is a decomposable object, if.ThingsTangible ThingsAbstractionsD e c o m p o s a b l e  O b j e c tStuffPlacenucleotidesequencesiteNucleic acidG e n ePlasmidCellCellcomponentComplexMixtureheterogeneous populationPopulationh o m o g e n e o u s  p o p u l a t i o nBufferGelL y s a t eProteinChemicalMembraneChromatographyColumnGrowthMediumEquipmentCentrifugeEnzymeVirusBacteriophageMicroscopeScannerSpectrometerOrganismBacteriaTimeQuantityC o n t a i n m e n tC o m p l e xC o m p a r t m e n tC o m p l e xA t t a c h m e n tC o m p l e xTimeintervalTimepointtRNADNAfragmentProbelabeledDNAmRNAOrganicchemicalNonorganicchemicalRNASugarOrganiccompundAminoacidNucleotideNucleusMeasuringEquipmentFigure 67. Partial hierarchy of Things.Ontology for molecular biology131exists xand ispartof x X classof x classof Xi.e. there are parts of X that do not belong to the same class asX.For example, if X is a car then there exist wheels, an engine and so forth. The parts of a car arenot themselves cars.Definition 65. X is  a piece of stuff, ifforall x ispartof x X classof x classof Xi.e. every subpart of X belongs to the same category as XFor example, every portion of water is also water. Lenat and Guha Lenat 1990a, Lenat 1990bnote that Definition 65 only applies down to some substancedependent molecular level ofgranularity.6.2.1.1 Decomposable ObjectsThe only common property of all Decomposable Objects is that they have identifiable subparts.However, the way these subparts are composed together in a whole can be different for differentobjects. Compare, for example, components of a cell on one hand, and parts of a car on the other.Car components are fixed in specific places within a car, whereas cell components are floating incytoplasm and do not have any fixed positions within a cell. There is a more detailed discussionon the various component relations in Section 6.4.2.1.Major subclasses of Decomposable Objects are Figure 68 Nucleic Acids DNA, RNAand their fragments and subtypes Organisms bacteria and viruses Chemicals CellsCell components Complexes Experimental equipment.Ontology for molecular biology132As we have discussed in Section 3.1 Mixture is both, Decomposable Object and Stuff.We discuss Mixtures and Complexes in more detail below.Decomposable ObjectsNucleic AcidOrganismCellcomponentCell ComplexMixtureChemicalEquipmentFigure 68. The subhierarchy of Decomposable Objects. The subclasses indicated in boldface will bediscussed in more detail.MixturesMixture is the only category in the Things hierarchy that has multiple inheritance see Figure69 Mixture has properties of both, Decomposable Objects and Stuff. It is a subclass of Decomposable Objects as it has identifiable components Axiom 1 on page 130.It is a subclass of Stuff in fact, it is a Heterogeneous Population since every subpart ofmixture is still the same mixture down to a certain level of granularity Axiom 2 on page 131.One of the defining parts of a Mixture description is a list of its components. Some of theseTangible ThingsDecomposable Object StuffMixtureheterogeneouspopulationPopulationhomogeneous populationFigure 69. Multiple inheritance for the Mixture categoryOntology for molecular biology133components can be mentioned in an experiment description, some of them are always present incertain types of mixtures.In a list of mixture components, each component is represented as a frame substanceinconcentration, i.e. a substance name and its concentration. Note, that these substances cannot bemixtures themselves hence, each component of a Mixture is represented directly in thesubstanceinconcentration frame in the list of Mixture components and no pointers from thesubstance part of this frame are necessary. The reason for this is the following axiomAxiom 61. If X and Y are mixtures combined into Z,then Z is also a mixture, and components of Z are theunion of components of X and Yforall x y z and Mixture zMixture x componentof x zMixture y componentof y zforall p  or ispartof p xispartof p yispartof p zThat is, mixture components cannot be heterogeneous populations themselves, since they wouldmingle with other elements of the mixture.Some of mixture components may not be identified at all, however. To account for this, there is aboolean slot in the Mixture frame to record whether there are any unidentified components in amixture. The default value for this slot is Yes.Ontology for molecular biology134Any mixture can have a character  for example, pellet, supernatant, etc. Character representsmixtures state e.g. pellet is heavier material at the bottom of a tube. It can also have a function,such as serve as medium or buffer for an experiment.Here is how a Mixture frame looks.Thing Mixture  DecomposableObject PopulationName instanceof stringIdentifiedComponentsList instanceof substanceinconcentration List of frames substanceinconcentrationUnidentifiedComponentsPresent  Yes Nodefault YesCharacter  supernatant pellet ...Function  medium buffer ...Description  instanceof string additional information in freeformCurrently there are four subclasses of Mixture  Buffer, Gel, Lysate and GrowthMedium see Figure 610. They differ mostly in their function Gels function, for example, isto be a medium for a process, and Buffers is to be exactly that, a buffer. Lysate is anunstructured mixture of cell components.MixtureBufferGel LysateGrowth MediumFigure 610. Subhierarchy of Mixtures.ComplexesComplex is a joining of several objects in a temporary configuration that, taken as a whole, hasmeaningful properties. The idea of a Complex was inspired by Individual Views in QualitativeOntology for molecular biology135Process Theory Forbus 1984. The example Forbus uses is the ContainedLiquid IndividualView see Figure 611. This Individual View describes liquid in a container and relationsimposed onboth objects liquid and container by this binding. For an example of a Complex from molecularbiology, consider a binding complex that arises in gene transcription and includes a site on DNApromoter binding site and an enzyme. The immediate significance of this binding complex isa precondition for the gene transcription process.Note that there is a subtle distinction between the relations of Participants in a Complex to eachother and relation between a whole and its parts the existence of a whole in the latter casegenerally is not contingent on the existence of its parts, i.e. a car without a wheel is still a car. Itis different for a Complex. For example, in the ContainedLiquid Complex, if there is no liquid,or no container, the instance of a ContainedLiquid  Complex does not exist.Individual View ContainedLiquid pIndividuals  con a container sub a liquidPreconditions CancontainSubstance con,  subQuantity Conditions  Aamountofin sub , con   ZERORelations  There is p  pieceofstuff amountof p   amountofin sub, con madeof p  sub container p  conFigure 611 same as Figure 213. ContainedLiquid Individual View from Forbus 1984. Itconsists of a container and liquid. Container should be able to contain the liquid. The amount ofthe liquid should be greater than 0. There is stuff that liquid is made of and a container is,indeed, a container.Ontology for molecular biology136Complexes are represented with a frame, consisting of Participants constituting the Complex andRelations between themThing Complex  DecomposableObjectName  instanceof stringParticipants components Slotlist instanceof TangibleThingUnlike Mixtures, components of a Complex, could also be complex objects themselves.Therefore, a list of Participants is a list of frames for these complex objects.There are two subcategories of Complexes see Figure 612 ContainmentComplexand AttachmentComplex. CompartmentComplex is, in turn, a subcategory ofContainmentComplex. In an AttachmentComplex participants are attached to eachother ContainmentComplex consists of several objects where one of them contains theothers and in CompartmentComplex one of the participants serves as a compartment forthe others i.e. they are inside it. For instance, a car and its parts is an instance of aContainmentComplex whereas a cell membrane and cell components that are surroundedby it is an example of a CompartmentComplex.ComplexContainmentComplexCompartmentComplexAttachmentComplexFigure 612. Complex subhierarchyOntology for molecular biology137Thing Attachment Complex  ComplexName  instanceof stringParticipants  objecttoattach instanceof TangibleThingobjecttoattachto instanceof TangibleThing There are only two participants in the Complex objecttoattach, objecttoattachtoConditions isattachedto objecttoattach thisobjecttoattachto thisThing Containment Complex  ComplexName  instanceof stringParticipants components Slotlist instanceof TangibleThingConditions forall y  member y rest comp thisispartof y first comp this All participants in the Complex except the first one are part of the first participantThing Compartment Complex  ContainmentComplexName  instanceof stringParticipants components Slotlist instanceof TangibleThingConditions forall y member y rest comp thisisinside y first comp this All participants in the Complex except the first one are inside the first participant6.2.2 AbstractionsAbstractions is another major subclass of Things. Abstractions include notions ofTime, Quantity and Place see Figure 613. We use very limited ontology for each ofOntology for molecular biology138these, but more sophisticated ontologies for any of the abstractions can possibly be linked to ourontology.AbstractionsQuantityTimePlaceTime interval Time pointFigure 613. Abstractions subhierarchy.6.2.2.1 TimeInstead of developing our own ontology of time, however, we decided to make use of the factthat our Molecular Biology ontology can be easily integrated into a more general framework. Wewill reuse a SimpleTime ontology from the Library of Ontologies at Stanford KSL OntologyEditor site httpwwwkslsvc.stanford.edu5915. This is a very basic ontology of time that hasall the concepts necessary for reasoning about experiments about our domain. Appendix Acontains a detailed description of this ontology. Here we will only discuss its most essentialelements.The two central concepts in this ontology are TimePoint and TimeRangeDefinition 66. A timepoint is a point in real,historical time on earth. It is independent ofobserver and context.A timepoint is not a measurement of time, nor is it a specification of time. It is a point in time.The timepoints at which events occur can be known with various degrees of precision andapproximation, but conceptually timepoints are pointlike and not intervallike. That is, itOntology for molecular biology139doesnt make sense to talk about what happens during a timepoint, or how long the timepointlasts.Definition 67. A timerange denotes a certain periodof time. It consists of a start time, an end time. Astart time must proceed an end time.Slots of Timerange are DurationOf, EndTimeOf and StartTimeOf. Theyare related by the following implication axiom TimeRange TimeRange  StartTimeOf TimeRange DurationOf TimeRangeEndTimeOf TimeRangeIn our ontology, each Process has a timerange associated with it a slot timeinterval with values from class timerange.Process ProcessTimeinterval  instanceof timerangethe rest of the process definitionTherefore, function timeinterval p yields the time range in which the process poccurred.Ontology for molecular biology1406.3 Subontology of ProcessesThere are four classes of elementary processes in experimental biology Separate, Combine,Transform, Assess see Figure 614. All these processes are atomic, i.e. consist of only onestep. Note that sometimes we classify seemingly multistep processes as single step ones.Consider, for example, a wash process. It includes adding a solution Combine and thenremoving it along with dirt Separate. It is, however, classified as a singlestep Separateprocess for two reasons biologists usually do not think of wash as being a multistep process andclassifying it as such would evoke confusion secondly, the ultimate purpose of wash isseparation of the original substance from dirt and so wash is considered to be a singlestepSeparation.As can be seen in Figure 614, Separate always has one input and more than one outputCombine has more than one input and only one output and Transform is applied to a singleinput to transform it into a single output. The Assess process does not incur any changes in thestate of substances in the system. We did not find any other variations with respect to number ofinput and outputs to atomic processes in our domain. For example, we did not find singlestepprocesses that had more than one input and more than one output. This would always require amultistep process.ASeparateBCACombineBC ATransformB AAs s es spropert yvalueAFigure 614. Atomic processes. Boxes on the left of the solid lines represent processs inputs, boxes onthe right represent processs outputs.Ontology for molecular biology141ProcessSeparate AssessCombine TransformProcess ComplexFigure 615. Toplevel hierarchy of Processes.Similarly to Complex in the Things hierarchy, there is a ProcessComplex class in theProcess hierarchy. Process Complex is used to represent a sequence of steps for aparticular experiment that is viewed as a whole for example, it has a name or goal of its own, isrepeated several times with different parameters or inputs, etc.. Process Complexes arealso used to represent an Object History a sequence of events that happens to an object during itslifetime as well as objects or Complexes that it is part of. There are four specific subcategoriesof Process Complex the first one represents simple sequence of steps, SequenceComplex. The second one is for representing complexes of simultaneous processes dependenton each other Combination Complex. The third subcategory are complexes of twoprocess a main process and its technique. The fourth one is Object History.For example, the purification of a particular protein described as a sequence of steps is aSequence Complex. Chromatography process in which addition to a column and elution aredone at the same time with proportional rates is an example of a Combination Complex.For an example of complex of a process and its technique, consider the process of harvestingcells by centrifugation harvest is the main process here, and centrifugation is the technique toachieve this process from another perspective, harvest is the goal of centrifugation.Ontology for molecular biology142ProcessesSeparateTransformA s s e s sCombineWashCentrifugeUltracentrifugeSpreadonplatesSelectElectrophoresisLigatesubcloneBreakIncubateGrowHybridizationDehydrateCutExciseCleaveStainAttachphysicallyDryObserveDetermineExamineE m b e dMountDepositonCombinationsimulteneous processesComplexMixA p p l yTransformationcategoryconversionChange ofpropertiesAmplifyDialyzeF i x P o s t f i x TreatFragmentby irradiationPrecipitateIsolateSynthesizeAliquotDenatureMeasureQuantifyAutoradiographyPurifyremovefrom mediumR e s u s p e n dRecordFragmentP r o c e s s  C o m p l e x S e q u e n c e  o f  s t e p s T e c h n i q u eC o m p l e xS e q u e n c eC o m p l e xChromatographyObjectHistoryBoilHeatEluteHarvestAddCreate bycombinationFigure 616. Partial hierarchy of ProcessesOntology for molecular biology143In the next five subsections 6.3.1 6.3.5 we discuss each of these five subhierarchiesseparately.Representation of ProcessesProcesses have both slots and slot groups in their frame representation Section 5.1. Wedescribed slot groups that processes may have in Section 6.1.4. These include Participantsfor all the objects including substances and equipment that participate in the processObjectscreated, Objectsdestroyed and Conversions for triggering updates inobject histories of the participants. Besides the slot groups, there are slots for describing suchgeneral parameters as the duration of the process, its temperature, etc. In our example frames inthis section we will skip such general parameters since they are usually trivial.6.3.1 SeparateSeparate is a process that has one input and more than one output into which the input isseparated see Figure 614. There are two major types of separation in experimental biologyphysically dividing a whole into fragments, and purifying something from a solution. In the lattercase, usually only one output is specified, the purified substance, since the solution it wasSeparateWashCentrifugeUltracentrifugeSpreadonplatesSelect ElectrophoresisDehydrateCutExciseCleaveFragmentby irradiationIsolatePurifyremovefrom mediumFragmentDryDialyzePrecipitateFigure 617. The subhierarchy of SeparateOntology for molecular biology144purified from is implicit.Below is the frame for the Separate class. Its Participants include objecttoseparate and the goal of the separation, separatefrom. The former should be part of thelatter for a separation to be possible.Process Separate ProcessParticipantsobjecttoseparate  instanceof Tangible Thingseparatefrom  instanceof Tangible ThingConditionsispartof objecttoseparate this separatefrom thisAs mentioned above, there are two subclasses of Separate Fragment and Purify removefrom medium. Frames for these processes are presented in Figure 618 and Figure 619respectively. Electrophoresis described in detail on page 82 is an example of aFragment process. In electrophoresis, molecules with similar properties form bands in the geltemporary configuration it exists in time and has distinguishable properties.Purify remove from medium process is used to describe such processes as wash, dialyze,dry, etc. The main result of such a process is an increased possibly, but very rarely to 100concentration of the soughtafter substance in a medium this is, in fact, achieved by reducing theamount of unwanted substances in the mixture. In this case, separatefrom is always aMixture.Consider precipitation  as an example of such a process. To be precipitated is to beseparated from a solution as a solid. The process consists of changing the solubility of thesoughtafter substance by  adding some chemical to a mixture, changing the temperature, etc.The substance goes out of the solution and forms solid clumps precipitate.Ontology for molecular biology145Process PurifyRemove from medium  SeparateProcess Fragment  SeparateParticipants objecttoseparate  instanceof TangibleThingseparatefrom  instanceof Mediummedium  instanceof Mixturecomponents  Slotlist instanceof TangibleThing The slotlist stands for components of the original that are explicit in the object descriptionConditionsforall x y and member x components this y or objecttoseparate this medium this iscomponent x y All members of components componentlist are components of the object to be separatedObjectscreatednewobjects  List instanceof Complex A number of new complexes is createdObjectsdestroyed  objecttoseparate Objecttoseparate does not exist any moreEffects forall x member x component thisor exists sand  s setof newobjectsforall m member m s newobjects s  iscomponent x s fatenotknown x Each element of the original component list i.e. each identified component of the original object is either in one or several of new complexes, or its fate is not known which means, its Objet history endsFigure 618. Representation of a Fragment process.Ontology for molecular biology146Participants objecttoseparate  instanceof Mixtureseparatefrom  instanceof MixtureEffectsI concentration objecttoseparate this separatefrom this Concentration of separation target in the medium is increased. It is very rare that purification is perfect, i.e. that the resulting substance is 100 pureFigure 619. Representation of Purify process.Sometimes, the process of removing the precipitate the solid phase is assumed, sometimes it isdescribed separately.6.3.2 CombineCombine is a process that has more than one input and one output. For example, mixing severalthings together to create a mixture is a combination process. Participants in the Combineprocess are listed in the slot objectstocombineProcess Combine  ProcessParticipants objecttocombine  Slotlist instanceof TangibleThing List of objets to be combinedObjectscreated newobjects  List instanceof TangibleThingCombineLigateStainApplyTreatSynthesizeMixAttachphysicallyAdd CreatebycombinationFigure 620. Subhierarchy of Combine.Ontology for molecular biology147Depending on whether a new object is created as a  result of the combination or whether onlysome properties such as list of components of one of the original object are changed, Combineis divided into two subclasses Add and Createbycombination see Figure 620. Addincludes such processes as Apply, Treat, Stain. New objects are created as a result of Mix,Ligate, Synthesize, and other processes. This distinction is reflected in the twocorresponding frames below. Add process usually has two inputs the object that the processesis applied to, and the reagent that is added to the object. As a result, the reagent is now a partof the original object.Process Add  CombineParticipants object instanceof TangibleThingreagent  instanceof TangibleThing List of objets to be combinedEffects ispartof reagent this object this Reagent becomes a part of the original objectIn a Createbycombination process, a new object possibly a Complex is alwayscreated. The class of this new object usually depends on a specific process in the subhierarchy.For instance, in a Mix process, the new object created is always a Mixture.Process Createbycombination  CombineParticipants objecttocombine  Slotlist instanceof TangibleThing List of objets to be combinedObjectscreated newobject  instanceof TangibleThingOne of the more interesting processes in the Combine hierarchy is the process of ligation seeAppendix A. We now discuss it in more detail.Ontology for molecular biology148Ligate processAs described on page 84, ligate is the process of inserting one  Nucleic Acid fragment intoanother Nucleic Acid fragment or Nucleic Acid molecule. Note that this fragment or molecule isin turn inside a bacteria cell. As a result, a new plasmid or other nucleic acid molecule is created.This is an example of a process when it is necessary to consider both, its micro and its microview. From the macro point of view, population of Nucleic Acid fragments is inserted into apopulation of cells. As a result, the cell population now has new functional properties e.g. beingable to synthesize new proteins. From the micro point of view, each cell has a new specificplasmid in it. The frame representatin of this process is in Figure 621.Usually, a new plasmid is created as a result of the ligation. The newly created plasmid is insidethe original cells. By using the notion of Populations, we were able to describe the effect thathappened inside the constituents of population that the process was applied to. Also, note thecondition that is necessary for the process to occur the restriction sites on the fragment that is tobe inserted, should match the restriction sites on the plasmid.Ontology for molecular biology149Process Ligate  CombineParticipants object  instanceof Nucleic Acidcells  instanceof Organismtarget  instanceof Nucleic Acid Object is a population NA fragments to be inserted cells is the target cell population target is NA population fragments inside the cells, usually spliced plasmids, that object  will be inserted intoConditions forall x y and  x populationelement target this y populationelement cells thisisinside x y The target nucleic acid fragments are inside the cellsforall x y  and  x sitescontained object this y sitescontained target thissubset x y Insertion occurs if target plasmid contains the same restriction sites as the fragment to be insertedObjectscreatednewobject  instanceof PopulationObjectsdestroyed insertiontargetObjectsconverted conversion  target, newobjectEffectsforall x  populationelement x new NucleicAcid x The new object created is also a population of Nucleic Acids of a different speciesforall x y  and  x populationelement object this y populationelement newobject thisissegmentof x y The NA fragment that was inserted is now a segment of a newly created plasmidforall x y  and  x populationelement new y populationelement cells thisisinside x y The newly created plasmid is in the cellsFigure 621. Ligate process frameOntology for molecular biology150TransformBreakIncubateGrowIncubatewithphageCategoryTransformationNoncategorytransformationchange ofpropertiesAmplifyDenatureFigure 622 Transform subhierarchy6.3.3 TransformTransformation is a process that has one major input and one major output. The word major isused to allow for various media, catalysts, etc. in the process they need to be present for theprocess to go on, but are not part of the input or output.Transformations are subdivided into those that involve category change of its inputs, i.e.category conversions, and those that dont. In the latter case, process result in the change of someproperties or parameters of the original substance but not its category e.g., concentration,temperature, composition see Figure 622.The main motivation for the subdivision above was not the different semantics of the twogroups of transformations, but very different representation as will be seen in the frameexamples below. Since frames are inherited in the subtrees, we felt it necessary to divide thetwo classes of processes with very different descriptions in different subtrees.6.3.3.1 Category TransformationA prototype example of a category transformation is breaking of cells into lysate. First there arecells surrounded by their membranes and in some medium. After, for example, press is applied toOntology for molecular biology151the mixture, the membranes break, and everything becomes one unstructured mixture cellcomponents are no longer inside their original membranes.Process Break Transform Category conversionParticipants original  instanceof Populationorigcomp  SlotList instanceof Population Participant in the process is a population of cells and their componentsConditionsforall x  populationelement x original this Cell x All members of original population are instances of Cell classforall x  populationelement x member origcomp thisCellcomponent x All members of origcomp populations are instances of Cellcomponent classforall x populationelement x member origcomp thisexists yand populationelement y original thisisinside x y All cell components are indeed inside the cellsObjectscreatednew  instanceof LysateObjectsdestroyedoriginalObjectsconvertedconversion original, newEffectsforall x populationelement x member origcomp this iscomponentof x new Components of the original cells are now components of the lysateFigure 623. Break process descriptionOntology for molecular biology152As an example of a specific category transformation, Figure 623 has a Break processdescription.6.3.3.2 Noncategory transformationsProcesses in this category only change some of the properties or parameters of its participants,but not their category. For example, the growth process Figure 624 changes concentration ofcells in the medium., however, the input and the output are the same substance in this case, themixture of cells and growth medium6.3.4 AssessAssess is the last of the four atomic processes in the molecular biology domain Figure 614.Processes in the Assess category describe experimenter actions that do not produce any newobjects as its main output. The basic output of an Assess process is information. Thisinformation could be quantitative e.g., a concentration value, descriptive e.g., visualizingbands after electrophoresis, or just yes or no result. This assessment can be made with a use ofProcess Grow  Change of propertiesParticipants original  instanceof Mixtureorganismtogrow  instanceof PopulationConditionsforall x  populationelement x organismtogrow thisorganism x All elements of organismtogrow population are instances of Organismiscomponentof organismtogrow this original this Participant of the process is a population of organisms in a MixtureEffectsI concentration organismtogrow this original this The Effect is the increased concentration of the organism in the MixtureFigure 624. Grow process descriptionOntology for molecular biology153special equipment e.g. autoradiography or with a bare eye e.g., observe an existenceof a property. Figure 625 shows the subcategories of Assess.AssessObserveDetermineExamineMeasureQuantifyAutoradiographyRecordFigure 625. Assess subhierarchyTo represent an informational output of a process, we introduce a new predicate, Record. Thispredicate has two arguments property that is assessed and its value in any form, numeric, string,boolean, etc.Process Assess  ProcessParticipants objecttoassess  instanceof TangibleThingpropertytoassess  instanceof Propertymethodused  instanceof Process There is an object to assess instance of Tangible Thing and a property of this object that is to be assessedConditionshasproperty objecttoassess this propertytoassess this The object should be able to posses this propertyEffectsexists x and value xRecord propertytoassess this x The value of the property is recordedThere are three subclasses of Assess process Measure Quantify RecordObserve Determine, Examine. Measure Quantify process always recordsquantity as its result, which is reflected in the process description below. In the case of Record,some sort of recording equipment is used, for example, Xray and film for autoradiography. TheOntology for molecular biology154Observe process does not require any equipment, and there may be no value for the propertythe sole result of the process is the observation that this property exists in this object as, forinstance, in the following excerptFor all the S. paratyphi B transductants tested here, the expected phenotype wasobserved Liu 19946.3.5 Process ComplexProcess Complex is a collection of steps treated as a whole. It is analogous to the idea ofComplex in the Things ontology used to represent temporary configuration of objects. Inbiological and other experiments, there is often a sequence of steps each of which is ameaningful process requiring its own description that serve one particular goal. Similarly, therecan be a large step with substeps each of which again are fullfledged processes. We useProcess Complex to represent this larger process that can have substeps. There is a specialcase of Process Complex Object History. Object History see Section 6.1.3 isused to represent a lifetime of an object. It includes all events that happen to the object and all theobjects in Complexes it participates in.CombinationsimultaneousprocessesComplexProccess ComplexTechniqueComplexSequenceComplexObjectHistoryFigure 626. Process Complex subhierarchyProcess Complexes are classified based on how subprocesses in it are related to each othersee Figure 626. Firstly, substeps in a Complex could be sequential or parallel. Parallel in thiscase means executed simultaneously. Subclass Sequence Complex represents a simpleOntology for molecular biology155sequence of Processes. Subclass Combination Complex is used to representComplexes with parallel, dependent substeps. Chromatography can be an example of such aComplex. In many instances of chromatography its substeps, add and elute, are dependent in asense that in order for something to be eluted from the bottom of the column, something needs tobe added at the top. And the rates of addition and elution are directly proportional the more youadd, the more substance is eluted.Another subclass of Process Complex is Technique Complex. This class is reserved torepresent a complex of a Process and a Technique used to achieve it. In this case, inputs andoutputs of the two process the main one and the technique are the same. Descriptions could bedifferent though. In a sense, the main process is the goal for the technique process. Consider, forexample a process harvest by centrifugation. Harvest is the goalprocess and centrifugation is atechnique. Both processes have cells in growth medium as their input and cells without themedium as their output.The fourth subclass is Object History. It is used to track substances through their lifetime.Object History for a substance includes all the processes it participates in as well ascomplex substances it is part of during its lifetime.Process Process Complex  ProcessParticipants  There are participants that are common to all the substeps of a ComplexSubsteps processes  List instanceof Process Pointers to descriptions of substeps general parameters and participants are automatically passed on to them when necessaryNote that all processes in the Complex can have the same General parameters, participants,preconditions and effects. For example, they can all be executed at the same temperature. ToOntology for molecular biology156define the distinctions between various types of Complexes, we now introduce frames thatformalize each of them.The additional condition in the Sequence Complex is that all the processes happen one  afteranother.Process Sequence Complex  Process ComplexSubsteps processes  Slotlist instanceof ProcessConditions forall x y  processes this listof items x items y itemsbefore timeinterval x timeinterval y In a Sequence Complex, process occur one after anotherIn a Combination Complex, all processes happen at the same timeProcess Combination Complex  Process ComplexSubsteps processes Slotlist instanceof ProcessConditions forall x y   and item x processes this item y processes this timeinterval x timeinterval y All process occur at the same timeThere can also be some sharing between descriptions of the substeps in the CombinationComplex. For instance, in the Elute description in the earlier chromatography example, therecan be a reference to the rate of an Add process that is part of the same Process ComplexOntology for molecular biology157Process EluteRateofelution  instanceof Quantity...Effects Q rateofelution this rateofaddition this The rate of elution is directly proportional to the rate of addition from the Add process in the same ComplexSince there is no rateofaddition in the Elute process, it will be resolved by going to theparenting Process Complex, and finding rateofaddition in one of other substeps in theComplex.In the case of a Technique Complex, there are two processes the main process and itstechnique. For example, in cells were harvested by centrifugation, harvest is the main processgoal of the whole Complex and centrifugation is a technique, or methodused. All theParticipants and Effects of the two processes are the same, since they are descriptionsof the same event, except that technique description may have more details, like equipment used.Process  Technique Complex  Process ComplexSubsteps goal  instanceof Processmethodused  instanceof ProcessConditions subset Participants goal thisParticipants methodused this Participants of the goal process are the subset of the technique process participants Technique may have some extra participants, like equipmentsubset Effects goal xEffects methodused x Effects of the goal process are the subset of the technique process effectsOntology for molecular biology1586.4 Subontology of RelationsRelations are firstclass objects in our Ontology. This enables us to reason about relations,categorize and group them.All relations can be either category relations or instance relations. Category relations have thesame value for all instances of a certain category  a pair of categories for a binary relation.Instance relations are only true for specific instances. For example, for any instance of Cellcategory well call it cellN, it is true that iscompartmentalized cellN. Thus, iscompartmentalized is a category property for the category Cell. On the other hand, it is not truethat, for example, for any instance of Nucleotidesequencesite  siteN and anyinstance of a Plasmid plasmidK the relation isasite siteN, plasmidK holds. Thisrelation is true for some specific instances of the two categories isasite SmaI, pRS415is true. Note that being a category or an instance relation is not so much a description of arelation per se, but of a relation with specific domain and range categories. To facilitateunderstanding of the text, in the Relations section here, we would not emphasize whether aspecific relation is one or the other, but will use a category name in the case of category relation.Compositionalrelationspartwhole relationsSpatialrelationsFunctionalrelationsRelationsBinaryRelationsPropertiesUnaryCompositionalpropertiesSpatialpropertiesFunctionalpropertiesPhysicalpropertiesFigure 627. The top level of the Relations hierarchyOntology for molecular biology159Compositional relationspartwhole relations SpatialrelationsFunctional relationsiscomponentofisportionofissegmentofisasiteisinsideisnexttoisapositioninsequenceisexpressediscompatibleisattachedtoparttowholerelationswholetopartrelations isparticipantina ComplexresistanttoismountedonisdepositedonfixedinRelationsBinary RelationsProperties UnaryissolebuildingblockCompositionalpropertiesSpatialpropertiesFunctional propertiesisasequencecircularsequencelinearsequenceisanNdimensionalgrid1dimensionalgrid2dimensionalgrid3dimensionalgridisadoublehelixisstructuredishomogeneousiscompartmentalizedsurroundsispartofPhysical propertiesisaliveisactiveisradioactivelengthamount ofsubstanceweightFigure 628. Partial taxonomy of Relations.Ontology for molecular biology160The toplevel categorization of relations is based on their arity unary relations propertiesand Binary relations see Figure 627. We limit ourselves to only unary and binaryrelations as first class objects, but the model could be easily extended to handle higherarityrelations.Property frame looks as followsRelation Property  RelationObject instanceof TangibleThingValueObject is an instance that exhibits this property and value is a slot to record the value of theproperty.For most of the properties in our ontology, the value of a property can be True or False. Forexample, the value of iscompartmentalized Cell is True and the value of ishomogeneouscell is False. Properties can also have string or numeric values. Forexample, amountofsubstance Population will have a numeric value.A Binary Relation frame is presented belowRelation Binary relation  RelationArgument1 instanceof TangibleThingArgument2 instanceof TangibleThingSymmetricalInverse instanceof Binary relationValueThe meaning of each slot is the following argument1 and argument2 objects in the relation.Ontology for molecular biology161 symmetrical or not the value of this slot represents whether the relation issymmetrical. Binary relations are asymmetrical by default, i.e. relation A, Bdoes not imply relation B, A. And most of the relations we considered areasymmetrical in practice. Thus, the default value for this slot is No. For some of thebinary relations, however, this default needs to be overridden. For example, isnextto is a symmetrical relation. inverse almost every relation has its opposite. That is, if A is a relation and Aa,bis true, then oppositeA b,a is true, too. For example, if A is a partof B, then Biswhole to A. Note that if a relation is symmetrical see the previous slot, it is anopposite of itself. value that is true if the relation holds between two specific individuals or classes ofindividuals and false if it does not.For example, consider the relation issolebuildingblock. Its domain and range areDecomposable Objects. It is not a symmetrical relation e.g. the fact that aminoacids are solebuilding blocks of proteins does not imply that proteins are solebuilding blocks of amino acidsin fact, proteins are not parts of amino acids at all. The opposite to this relations is the relationmadeof proteins are madeof amino acids. The value of issolebuildingblockamino acid, protein is True.Both properties and binary relations are subclassified into three major categories see Figure 627 compositional often referred to as partwhole relations spatial relations and functionalrelations. These three subcategories are not disjoint. Properties also have the fourth subcategory, physical properties for properties that are not descriptive of the objects and changeOntology for molecular biology162through its life time e.g. length, weight, amount of substance, etc. We now discuss what each ofthese subcategories mean for properties and binary relations separately.6.4.1 Properties unary relationsThere are four subclasses of Property compositional properties, spatial properties, physicalproperties and functional properties.6.4.1.1 Compositional propertiesCompositional properties have to do with the internal structure of an object for example,whether it has a rigorous internal structure where everything is in its own place e.g. parts of acar within a car or whether all the parts are freefloating in the object and dont have theirassigned places e.g. cell components within a cell. Another example of compositional propertyis whether the object is homogeneous or heterogeneous.A side note on homogeny and granularity.Note that the value of this property ishomogeneous often depends on the level ofgranularity that we are considering usually this level is dictated by common sense and the needof the application. A purified chemical or distilled water are each homogeneous substances if wedont go beyond the level of individual molecules all molecules of a specific chemical or allwater molecules are the same. However, if we consider single atoms that constitute distilledwater, it would be heterogeneous since there are two different elements hydrogen and oxygen.Another issue that affects whether something is homogeneous or heterogeneous is the specificclassification adopted in the model. For instance, consider protein and amino acids. In our model,amino acid is a bottomlevel category that has 20 species, 20 specific amino acids. If we definehomogeny as consisting of instances of the same bottomlevel category, then protein is aOntology for molecular biology163homogeneous substance. If we require that homogeneous substance also needs to havecomponents of the same species, then protein is heterogeneous.6.4.1.2 Spatial propertiesSpatial properties describe the topological structure of an object mainly, its shape see Figure 629. An object may have any of these properties only if it is structured i.e. isstructuredA is true.SpatialpropertiesisasequencecircularsequencelinearsequenceisanNdimensionalgrid1dimensionalgrid2dimensionalgrid3dimensionalgridisadoublehelixiscompartmentalizedFigure 629. Spatial propertiesAt the top level of the subhierarchy of spatial properties, an objects structure can be describedas a double helix, sequence circular or linear, Ndimensional grid, or a compartmentalizedstructure. A DNA molecule is an example of a doublehelix structure plasmid is a circularsequence a cell is a compartmentalized structure and all of its parts are inside the cellwall,which in turn is also a cell part. Beyond the categories currently shown in the hierarchy, furtherOntology for molecular biology164classification may include, for example division of gridlike structures into periodic structurese.g. a protein crystal and nonperiodical structures e.g. a DNA strand.6.4.1.3 Functional propertiesFunctional properties describe how the object expresses itself to the outside world see Figure 630. These properties are usually highly domainspecific. In our domain, they would include suchproperties as whether an object is alive, whether it is active, whether it has been radioactivelylabeled, etc.Functional properties Physical propertiesisaliveisactiveisradioactive lengthamount ofsubstanceweightFigure 630. Subhierarchies of Functional and Physical properties6.4.1.4 Physical propertiesPhysical properties are the ones that are neither structural do not describe the internal structureof an object, nor functional see Figure 630. These properties are usually not descriptive of thewhole category of objects and change over a lifetime of an object instance. We include suchcharacteristics as length, weight, and amount of substance in this class. Other physical propertiescan include, for example, color, temperature, pH, or age of an object.6.4.2 Binary relationsBinary relations are subdivided into the same three categories as properties compositional partwhole relations, spatial relations and functional relations.Ontology for molecular biology1656.4.2.1 Compositional RelationsCompositional partwhole relations are relations between a whole and its parts. This categoryincludes all the different partwhole relations that are present in our domain e.g. mixture and itscomponents Complex and its components, site on a nucleotide sequence fragment, portion of aDNA, etc. There are two parallel hierarchies under the Compositional Relations category one forrelation of part to a whole, and the other for the opposite relations from a whole to a part.The different kinds of partwhole relations capture the various ways that parts of an objectconstitute the whole iscomponentof used to relate a component of a mixture to the whole mixture.Components are freefloating in the whole and do not have their fixed places. ispartof is similar to iscomponentof except that it is used for structuredcollections parts are fixed in specific locations of the whole. Think about the differencebetween components of a cell free floating inside the cell wall and parts of a car fixedin their positions issolebuildingblock relation is used to represent composition of substancessuch as simple proteins that consist solely of aminoacids. In this case we can say that aprotein is madeof aminoacids and aminoacids are sole building blocks of the protein.Madeof in the wholetopart hierarchy is the inverse of issolebuildingblock. isparticipantinaComplex is a relation specific to our ontology sinceComplexes are not present in most of other ontologies. This relation connectsparticipants in a Complex to the Complex itself. In the containedliquid ComplexOntology for molecular biology166example, liquid and container are said to be participantsinaComplex, containedliquidComplex in this case isportionof is used to relate a part that is of the same class structure as the whole.For example, a portion of  a nucleotide sequence is also a nucleotide sequence. A portionof a mixture is also a mixture. The relation between a whole and its portion is similar tothe relation between stuff and pieceofstuff. However, the domain of the relation doesnot have to be stuff in the case of nucleotide sequence and its portion, the latter does nothave the same properties as the whole and nucleotide sequence is not stuff isasite is a relation specific to our domain that relates a restriction site on anucleotide sequence.6.4.2.2 Spatial relationsSpatial relations describe how different objects in the domain can be located with respect to eachother spatially. For example, cell components are inside a cell wall something can be mountedon a membrane for an experiment a site on a DNA is located at a specific place on a NucleotideSequence.Several subclasses of Spatial relations that we identify are isportionof isapositioninsequence isinside surrounds opposite to isinside isattachedto and isnextto one of the few symmetrical relations that we found in thedomain. This list is not of course exhaustive and other spatial relations can be added to it. Wewill now consider specifics of some of these relations and their correspondence to the class ofcompositional relations. Spatial and compositional relations are not disjoint and there arecategories that inherit from both.Ontology for molecular biology167Some of the spatial relations in the list above also represent a partwhole relation. For example,being a portion of is both a compositional relation of part to its whole, and a spatial relationbetween the two. The same can be said about a site on a nucleotide fragment on the one hand,the site is a part of the sequence compositional relation, on the other hand, it is a specificlocation on the sequence determined by its coordinates with respect to the beginning and end ofthe sequence spatial relation. Note that a superclass of isasite relation, isapointinsequence, is not considered to be a compositional relation, since a point is an abstractionand cannot be a part of a concrete whole.Relation isattachedto is subdivided into ismountedon and isfixedin tosignify different ways of attaching things in molecular biology A is fixed in B implies thatparticles of A cannot move with respect to particles of B. Note the correspondence between thisand the part of the Process hierarchy that involves the process of physical attachment. Theprocess Attach physically is subclassified with respect to what type of attachmentbetween the participants is created as a result of the process.6.4.2.3 Functional relationsFunctional relations are relations like resistantto, iscompatible, isexpressed,etc. These are different from spatial or compositional relations, since they represent thebehavioral aspect of an object. This part of the relations hierarchy is the most domaindependentstructures and compositions are more or less universal over different domains, but the behaviorof objects is not.Most of the functional relations do not have their inverses unlike the compositional and spatialones. That is, if A isresistantto B, it does not mean that there is any specificfunctional relation from B to A.Ontology for molecular biology168This is not to say that the functional relations are absolutely independent of the previous twogroups they are not. In the natural world, structure determines function, and, hence, thefunctional relations are determined by the structural ones.The functional relations represent how the structural properties exhibit themselves in the objectsbehavior.Ontology for molecular biology1696.5 Strengths and contributions of our approachThe following is a list of features that characterize our ontology and distinguish it from manyothers Object history category conversions object histories record what happens tosubstances through their lifetime. They are used to track substances through processes tostore more complete information and, hence, to provide means for more completeinformation retrieval. This includes processes that change categories of their participantsunlike uses of histories in other projects. Three levels of objects in the ontology categories, category species and instances.Category species is an intermediate level between categories and instances used torepresent such categories that each of their instances have the same intrinsiccharacteristics, specifically, internal structure and functional properties. For example, aspecific kind of amino acid would be a category species. Detailed study and representation of categories that are central in molecular biology, suchas mixtures, populations, experimental processes, etc. Detailed categorization and treatment of relations, in particular partwhole relations. Complexes  joining of several objects in a temporary configuration that, taken as awhole, has meaningful properties. Subclasses of Complex include ContainmentComplex, AttachmentComplex, CompartmentComplex. Detailed classification of experimental processes in molecular biology. Process Complexes  collections of steps treated as a whole. For instance, a processand technique used for it is a Technique Complex. A simple sequence of sequentialOntology for molecular biology170process that has some properties of its own is a Sequence Complex. Object history for aparticular substance is also an example of a Process Complex. Different, but interrelated, views of processes that act on populations microviewdescribed what happens to elements of populations and macroview considers processeffects on population as a whole.1711727. INTELLIGENT INFORMATION RETRIEVALSYSTEM PROTOTYPE MM QUERY SYSTEMTo evaluate the practical usefulness of the ontology, we implemented a proofofconceptprototype of an intelligent information retrieval system MM Query System. This system isdesigned to assist biologists in accessing online texts of research papers.It was implemented on a Macintosh System 7 using Macintosh Common Lisp and, within it,Common Lisp Object System CLOS. For persistent storage, we used WOOD object orienteddatabase available by anonymous ftp from ftp.digitool.compubmclcontribwoodGeneral ArchitectureFigure 71 presents the general architecture of the MM Query system. There are three mainmodules the Graphical User Interface GUI, the Search and Inference Engine and theKnowledge Base. Using the GUI, a biologist can formulate his or her query that is then presentedto the Search and Inference Engine. The Engine accesses the Knowledge Base to find the papersthat match the query and present them back to the user. The Search and Inference Engine is alsoinvolved at the stage of annotating the papers with text, since inferencing specific to ourontology is done at that time see Section 7.3.1.1.The Knowledge Base in the MM Query System consists of three major parts see Figure 71the domain ontology, the text of papers and the frames annotating the texts. The frames are basedon the ontology and provide the formal representation of the information in the text. Each frameis also directly linked to the text in fact, the specific part of the text that it represents.MM Query system173When a query is made Figure 72, the Search Engine finds the frames in the database thatmatch the query and the list of papers corresponding to these frames is brought up. When a userchooses to view a specific article, the specific sentences that were linked to the text arehighlighted.We will now describe the three modules of the system separately Section 7.1 presents the UserInterface and different types of queries that a user can make Section 7.2 briefly describes thestructure of the Knowledge Base and Section 7.3 describes the Search and Inference Engine.UserInterfaceText ofpapersFramesSearch and inferenceengineDomainontologyKnowledge BaseFigure 71. The general architecture of the MM Query systemList ofpapers TextList offramesQuerySearchengineFigure 72. Query process a query is submitted to the search engine that produces a list of matchingframes. These frames are linked to papers and the corresponding list of papers is produced as aresponse to the query. For each of the papers its text can be accessed.MM Query system1747.1 User InterfaceA user starts the query process by choosing one of the three types of queries see Figure 73 naturallanguage query not currently implemented, when the question is posed in theform of plain text or keyword list  concept query, when a specific concept or concepts from the ontology is chosen and allthe papers that have this concept are brought up frame fillin query, when not only the concept is chosen, but some fillers of the slots forthis concept are specified as well.  Figure 73. The Search menu We call the last two types of queries concept and frame fillin query ontologicallyguidedqueries. There is also a Bibliographic query which allows the user to find a paper by its author ortitle. The user can choose to be guided through the concepts in the knowledge base in two differentways either alphabetically or hierarchically. In the first case, a list containing all concepts in theTangible thing and Process hierarchies is presented to the user. In the second case, thelist starts with only Tangible Things and Processes in it. By doubleclicking on any ofthe concepts, the list of its subclasses appears as well see Figure 74.MM Query system175  Figure 74. Dialogs for accessing the concepts hierarchically left and alphabetically right.MM Query system176 doubles t randedW3110 Figure 75. A frame fillin dialog for a DNA class short form. In the case of a frame fillin query, after the concept of interest is chosen, the framecorresponding to this concept is brought up. This frame allows the user to fill in some of theattributes of the concept that need to be present in the sought after description. There are severalways in which the domain knowledge specified when classes were defined is used to assist theuser in filling out slot values see Figure 75 If the class definition specifies a list of fillers for a specific slot, this list appears in thepopup menu next to the slot any value from this list can be chosen as a fillin If there is a class restriction on the slot, the list of these categories can be presented to theuser as well. Otherwise, she can browse the list of all categories to fill in the value for theslot The required value can simply be typed in the space providedMM Query system177 More elaborate slot specification not currently implemented is a link to yet anotherframe with the list of its own features. For example, one could be looking for aninsertion process that included a plasmid containing a HindIII restrictionsite.Each of the frames in the system can be presented in either long or short form the user canalternate between the two. Each object in a system has a lot of different slots, many of which itinherits from its parents in the hierarchy, and many of which are not usually used in the queriesor simply are not very important. This proliferation of slots makes the fillin display difficult tounderstand and can complicate users grasp of the main attributes of an object.To rectify this problem, we allow the designer of the frames to specify a slot as belonging to oneof the three categories from the point of view of the interface invisible slots, property slots andbasic slots. Invisible slots usually systemgenerated IDs, pointers to documents, etc. are neverdisplayed to the user. Property slots are only displayed in the long form of frame display, andbasic slots are displayed in both long and short form.After the query is made in the form of a concept list or filledin frames, it is presented to thesearch engine that matches it to the frames in the knowledge base described in Section 7.3. Theresult comes back in the form of a list of relevant papers. The user can then choose any paper orpapers to be displayed. To point out the more relevant part of the paper and to provide simplefeedback of why this particular paper was brought up, the parts of the paper associated with theframe, are highlighted.An important feature of this interface is that it does not depend on the specific knowledge in theknowledge model. Any framebased knowledge model, as long as it follows the formalism, canMM Query system178be plugged in this system and the user will be guided through the new hierarchies and newframes.7.2 The Knowledge BaseAs described earlier Figure 71, the Knowledge Base KB consists of three parts the domainontology, the texts of papers and the frames that annotate the knowledge in those texts and thatconform to the domain ontology.The KB is implemented as an objectoriented database. The ontological categories are defined asLisp classes. Specific roles of the slots, as well as various types of value restrictions are definedusing facets, similar to those in Ontolingua see Section 8.2.5. We implemented facets in CLOSby creating extra class slots with the names containing both the name of the regular slot and thename of the facet. The system supports arbitrary facet names.Frames in the KB are CLOS instances of classes representing the domain ontology. Frames areorganized in persistent storage. This storage and efficient access to it is provided by the WOODdatabase software. There are three indexes containing frames for easier access for the searchengine Frames sorted by ID Frames sorted by class name with the list of all the frames that are direct instances of aspecific class not instances of subclasses at the corresponding nodes Object history frames sorted by IDTexts of papers in the KB are also represented in an objectoriented way each paper isrepresented as an object that contains the title and authors of the paper, its source and the textitself as one of the slot values.MM Query system1797.3 The Search and Inference EngineThe task of the Search and Inference Engine is twofold the Inference engine is involved at thestage of annotating papers with frames, and both, the search and inference componentsparticipate in the query processing. We start this section by describing the inference component.We then describe the search components action at the query processing time.7.3.1 Inference componentThe inferences presented here are done at the two different stages in the process knowledge basecreation Section 7.3.1.1 and query processing Section 7.3.1.2. All the inferences are based onthe specific features of our ontology.7.3.1.1 Inferences at knowledge base creation timeAt the time papers are annotated with frames, when a new instance of a class is being defined, itis added to the database. At the same time, a number of inferences is done as well to trigger othercorresponding changes in the database. These include updates in object histories as well as someinferences related to specific categories in the ontology such as Mixtures and Complexes.The following Object History definition is assumed in all the inferences presented in this sectionProcess Objecthistory  ProcessComplexObject  instanceof TangibleThing The object that this object history describesOriginalprocess  instanceof Process The process that created the objectOriginalobject  instanceof TangibleThing The object that this object was created fromFinalprocess  instanceof Process The process after which the object was destroyed or its fate became unknownProcesses  List instanceof Process List of process that the object participated inComplexobjects  List instanceof TangibleThing List of complex objects that this object was part ofMM Query system180Every time an instance of a Thing or a Process class is created, a number of changespertaining to object histories is triggered. First, for every instance of Tangible Thing, thecorresponding object history is always createddefun createtangiblething xsetf objecthistory xmakeinstance ObjecthistoryObject xSo, after an instance of a Tangible Thing is created, there is a pointer from it stored in itsobjecthistory slot to its object history.The updates to object histories at the time of a Process instance creation are much moreelaborate. Let p be the newly created process. We will now describe various parts of thefunction that is executed every time after a process instance is createddefun createprocess p ...First, for each Participant of the process, its object history is updated to include the currentprocess pforall x member x Participants psetf processes Objecthistory xappend processes Objecthistory xpIn Section 6.1.4 we introduced slot groups used in process description. Most of these slot groupsare used to trigger updates in Participants objecthistories, as well as create new objects.We will list them here again with the corresponding inferences Objectscreated list of new objects and their categories that are created as a resultof a process. For each of the objects in this list, a corresponding object history is created.The following is included in these objecthistoriesMM Query system181 forall x member x Objectscreated psetf  originalobject Objecthistory x  object psetf  originalprocess Objecthistory x  p That is, the originalobject slot of the object history is set to the object that theprocess was applied to if there was one. This reflects the fact that the newly createdobjects are transformants of the original. The fact that the process p was the one thatcreated the new object, is recorded in its object history the originalprocess slot Objectsdestroyed list of objects that are destroyed as a result of the process inthe form of slot names. We can now fill in the finalprocess slot in thecorresponding objects history histories forall x member x Objectsdestroyed psetf   finalprocess Objecthistory x  p Objectsconverted list of conversion slots. The value of each slot is a pairoriginal object or list of objects, and the object it was converted into. The objecthistories of the original objects are updated to include the final process p. Originalobject and originalprocess slots in the newly created objects histories can befilled out as well19forall x member x Objectsconverted p20setf  finalprocess  Objecthistory convertedfrom x                                                19 In the current implementation we make a simplifying assumption, that each conversion consists of asingle object being converted to another single object which is almost always the case, anyway20 x is a pair convertedfrom, convertedto. We use convertedfrom x andconvertedto x to access the corresponding parts of the pair.MM Query system182  psetf originalprocess  Objecthistory convertedto x  psetf originalobject  Objecthistory convertedto x  convertedfrom xMixturesAxiom on page 132 stated that once complex objects are put into a mixture, all their componentsbecome components of the mixture. This is implemented using the following inference ruleevery time an instance x of a Mixture is createdforall x member x identifiedcomponents pforall y iscomponentof y xsetf   identifiedcomponents x   append identifiedcomponents x     yThat is, for every identified component of the Mixture x, its components becomecomponents of x.This type of updates in the slots describing mixture composition could then be used to answerqueries of the type was Y a part of a Mixture M when Y was a part of one of Mscomponents.Process ComplexesThere is a suite of inferences associated with various types of Process Complexes thatrelate the slot values of the Process Complex as a whole with slot values of the substeps.For example, in a Technique Complex consisting of a goal process and a method used toachieve the goal, the object of the whole Complex p is also the object of the substepssetf object goal p object psetf object methodused p object pMM Query system183In fact, this rule could be written in such a way, that if the object slot is bound in any of the threea Technique Complex, the goal step or the methodused step, it is then filled in theother two places as well.For an example of why this rule is useful, consider, for instance, the case when a certain strain ofbacteria is harvested by centrifugation. Although this strain is directly only the object ofharvesting, it would be automatically inferred that it was also the object of centrifugation and thecorresponding query was this strain centrifuged would be answered correctly positively.Similar inference rules possibly pertaining to other parameters of a Process Complexcould be written for other Process Complexes.7.3.1.2 Inferences at query processing timeThere are a number of inference rules that are used at the query processing time that areimplemented in most knowledgebased query systems. These include, for instance,generalization or specialization of the query if there are no or not enough hits, look forinstances of a direct superclass or a subclass of a soughtafter object. The same is true for slotvalues in case of frame fillin query in our system if it is requested that a value of a certain slotbelongs to class A and no or not enough hits are found, the search is conducted for the sameframe with this slot value belonging to a direct superclass or subclass of A.There are some inference rules, however, that are specific to our ontology. The one that is usedmost often is the rule for indirect match of transformants see Figure 76If a substance X is converted into a substance Y and aprocess A is applied to Y, then the process A isindirectly applied to X.MM Query system184This allows us, for instance, in the earlier example of breaking the cells and creating lysate, toinfer that all the processes applied later to the lysate were indirectly applied to the cells as well.In terms of object histories the implementation of this rule looks as followingdeffunction indirectmatchoftransformantsp slotvaluetomatchif slot originalobjectObjecthistory Object pslotvaluetomatchsuccessfulmatchactionHere we assume that the query frame was filled in with a process p and process object slotvalue that was entered in the query is in slotvaluetomatch. Slot is true when thetwo slot values match, which could mean different thing in different implementations. Forinstance, the two values can match if they are exactly equal, or when one is a class name e.g.specified by the user and the other one is an instance of that class, etc.In the implementation itself, the rule presented above is generalized for any slot, not just theobject slot of a Process.The ontology that we developed allows many other sophisticated inferences not currentlyimplemented. These include, but are not limited toSubstanceXSubstanceYConversionProcess A Process A is indirectlyapplied to substance XFigure 76. Illustration of Transformant rule If substance X is transformedinto substance Y and process A is applied to Y, then process A is indirectlyapplied to X.MM Query system185 Multiple applications of the rule above to find the original object further up the chain ofconversions. When an object X is converted into Y and query is made about parts of X participating ina process applied to Y, we can infer that all parts of X are now parts of Y perhaps, insome transformed form and, hence, participate in the process as well. Consider, forinstance, a question as to whether there is sugar in the cake in the cake baking example. More efficient search for queries if the type Was a process A applied to an instance X,since all the processes that X participated in are in its object history already. The samegoes for all the complex objects that X was a part of.Depending on a specific application, one could think of other useful inferences based on theontology developed in Chapter 6, that could not be done using most ontologies.7.3.2 Query processing search componentWe now describe the two sequences of steps corresponding to the two types of queries conceptquery and frame fillin query respectively.When a concept query is made the following sequence of action is executed by the search engine1. Find all the frames in the knowledge base that belong to the concept class or its subclasses specified in the query.2. If no frames are found in Step 1, generalize the query to look for the superclass of theconcept specified in the query. At this point we only generalize the query one level up thehierarchy, but this can be easily adjusted. See page 207 on more discussion ongeneralization and specialization of queriesMM Query system1863. From the list  of frames generated in Steps 1 and 2, generate the list of documentscorresponding to the frames by following the direct links from the frames to the texts4. Present the list of papers to the user.The following is the sequence of steps for a frame fillin query we assume here that only oneframe has been filled out1. Find all the frames instantiating the specified class.2. For each frame found in Step 1, match the value of each slot specified in the query to thecorresponding value of this slot in the frame we describe the slot matching procedureafter this list. If all the slots specialized in the query match the slots in the frame inquestion, the frame is put on the list of frames to be brought up as the result of the query.3. Execute Steps 3 and 4 from the previous list.Matching slot valuesBelow is the list of actions in slot value matching step currently implemented in our prototypeWe will refer to the slot value in the frame from the database as frameslot and to the slotvalue specified by the user on the query as queryslot. We will refer to the frame fillinquery in Figure 75 where we have two filledin query slots Composition and Source, asan example throughout the list below.This list represents possible values for the frameslot. If any of the steps triggers a success,the process stops with a success, and the subsequent steps are not executed.1. Unspecified frameslot if the frameslot in the particular frame instance is notspecified by the user, then success. If, for instance, there is a DNA frame in the knowledgeMM Query system187base that does not have the Source slot filled in, there will be a successful match on theSource slot for the query in Figure 75.2. Exact match if the value of the frameslot equals the value of the queryslot,then success. This will be the case if there is a DNA frame in the knowledge base that hasa Source slot value equal to W3110.3. List member if the value of the frameslot is a list and the value of the queryslot is a member of that list, then success.4. If the value of the queryslot is a class name and the value of the frameslot isan instance of this class, then success.5. If the value of the queryslot is a category species name and the value of theframeslot is an instance of this category species, then success.21. For instance, ifthere is a DNA frame in the knowledge base that has an instance of a category species E.coli strain W3110 as its Source value, it would trigger a success on this slotmatch.6. Indirect match of transformants described in detail in Section 7.3.2 if the originalobject in the object history of the frameslot value matches in any of the fourprevious ways the queryslot value, then success. Theoretically, one can go as farup this chain of original objects as necessary.                                                21 Category species are not separate classes in our implementation. However, in each of the classes thathas category species as its subclass, there is a single slot usually name that is designated as defininga category species. For instance, in an plasmid class, the name slot defines category species. So, inthe matching process, the value of this slot in the instance that frameslot points to is compared to thevalue specified in the queryslot. So if the user looks for an insert process where the target waspUC18 plasmid and there is an insert frame where the target slot points to a plasmid framewith pUC18 in its name slot, the result would be a success.MM Query system188If the slot value was successfully matched at this point, then the next slot specified in the query ismatched. If all the slots trigger the success value, that the frame is added to the list of the framesin the result of the query.189Part IV. Evaluation and Conclusions1908. EVALUATIONWe presented our approach to ontology and formalism evaluation in Chapter 4. This approachconsists of three different evaluation modes the results of each of which are described in thischapter1. Evaluation of conceptual coverage by representing a test set of paragraphs from Materialsand Methods sections Section 8.12. Evaluation of practical usefulness by implementing an inference engine in the MMQuery System prototype that provides cooperative query answering Section 8.23. Evaluation of formality and portability by translation to Ontolingua Section 8.38.1 Evaluation of conceptual coverageThe process that we used to evaluate the conceptual coverage of our ontology was introduced inChapter 4. We will describe it here in more detail and present the results of this evaluation.We started this part of the evaluation by randomly selecting 20 paragraphs from Materials andMethods sections from the 1994 issues of Journal of Bacteriology available on CDROMAmerican Society for Microbiology 1994. We then used the ontology developed in Chapter 6to represent the information in these paragraphs.Several things should be noted before we describe the results of this experiment We did not attempt to represent every single word in the texts, but rather the generalconcepts described there.Evaluation191 Some concepts that were necessary to represent the information in the texts, were not inour knowledge model originally. However, they can be easily added as leaves in theconcept hierarchy. When we summarize our data, we describe the number of conceptsthat needed to be added Similarly, some of the properties of concepts required adding extra slots to alreadyexisting concepts. Since paragraphs were usually not from the beginning of a Materials an Methods section,some of the references in them could not be resolved within the paragraph. For example,a paragraph often started with Cells were grown... where cells refers to some specificstrain specified in the previous paragraph. In this cases we made cells to be an instanceof a general class Bacteria.Figure 81 presents one of the paragraphs in the test set and Figure 82 shows the frames thatwere created for this paragraph. We use set x f in the figure to specify that the variablex gets the value of f. This way we avoid writing nested frames and the list of frames becomesmore readable.In this paragraph, fragments of three plasmids hence, the first 6 frames, 3 for plasmidsthemselves and 3 for the derived fragments are inserted into the fourth plasmid. That is, thereDNA sequencingThe HindIIIBamHI fragment of pMF3 and the EcoRIBamHI fragments of pMF5 andpMF6 were inserted into vector pUC19, yielding pMF7, pMF9, and pMF10, respectively.Plasmid pMF7 was then cleaved by SacI and BamHI, and pMF9 and pMF10 were cleavedby PstI and BamHI endonucleases. The linearized molecules were trimmed byexonuclease III and nuclease S1 treatment, end repaired, and circularized. Hybridizationof the deleted plasmids to the dicF cRNA probe was used as a guide for selection of theplasmids to be sequenced. Sequencing was carried out on doublestranded DNA inaccordance with standard procedures.Figure 81. An excerpt from Faubladier 1994Evaluation192are three Ligate processes which produce three different results 3 new plasmids. Then eachof the three newly created plasmids is cleaved by corresponding endonuclease thus, 3Endonuclease frames and 3 Excisecut frames. Endonuclease was one of the twonew concepts that we had to introduce with this paragraph. Then the outputs of the threeExcisecut processes were treated and circularized the second concept introduced by thisparagraph.For each of the paragraph that we represented, we collected the following information number of sentences Note that this may not be such a good measure of how long orshort a paragraph is, since sentences vary from one to possibly 5 or 6 lines number of conceptual clauses, i.e. clauses that describe a concept total number of frames representing the paragraph and the number of Process andThing frames separately number of concepts that had to be added at the leaves of the hierarchy number of slots that had to be added to the existing concepts number of concepts not represented at all  of concepts that we were able to represent total number of frames  total number ofconcepts. For the paragraph presented in Figure 81 and described above, these measures are the following number of sentences 5 number of conceptual clauses 25 number of frames 26 13 Process frames and 13 Thing framesEvaluation193 set  p1 makeinstance plasmid  name  pMF3set  d1 makeinstance DNA  source  p1  restrictionsitescontained   HindIII BamHIset  p2 makeinstance plasmid  name  pMF5set  d2 makeinstance DNA  source  p2  restrictionsitescontained   EcoRI  BamHIset  p3 makeinstance plasmid  name  pMF6set  d3 makeinstance DNA  source  p3  restrictionsitescontained   EcoRI BamHIset  p4 makeinstance plasmid  name  pUC19set  l1 makeinstance ligate  object  p1  target  p4  new  set  p5   makeinstance plasmid    name  pMF7set  l2 makeinstance ligate  object  p2  target  p4  new  set  p6   makeinstance  plasmid    name  pMF9set  l3 makeinstance ligate  object p3  target  p4  new  set  p7   makeinstance plasmid    name pMF10set  e1 makeinstance endonuclease  name  SacIset  e2 makeinstance endonuclease  name  BamHIset  e3 makeinstance endonuclease  name  PstIset  c1 makeinstance excisecut  object  p5  separationreagent  e1  e2set  c2 makeinstance excisecut  object  p6  separationreagent  e3  e2set  c3 makeinstance excisecut  object  p7  separationreagent  e3  e2set  t1 makeinstance treat  object  new c1  reagent   exonuclease  III  and  nuclease  S1set  t2 makeinstance treat  object new  c2  reagent   exonuclease  III  and  nuclease  S1set  t3 makeinstance treat  object  new  c3  reagent   exonuclease  III  and  nuclease  S1set  cir1 makeinstance circularize  object  new  t1set  cir2 makeinstance circularize  object  new t2set  cir3 makeinstance circularize  object  new  t3set  seq1 makeinstance  sequencing  methodused  standardprocedures Figure 82. Frames representing paragraph in Figure 81Evaluation194 number of concepts added 3 endonuclease, treat, circularize. number of concepts not represented at all linearized, endrepaired.  of concepts represented number of frames  total number of concepts  100  93 The average of this last measure over the 20 paragraphs was 82. This means, that 82 ofconcepts could be represented in our ontology. Appendix C contains all the 20 paragraphs fromthe test set and the frames representing them. We will now list some of the reasons, and give examples of concepts that could not be readilyrepresented in the ontology. Note, that the only knowledge base extensions that we allowed at thetime of evaluation were adding concepts at the bottom level of the hierarchy and adding slots toalready existing concepts. Some of the instances from the list below could have beenaccommodated in the ontology if we allowed more significant changes. Following is the list of some of the problems that we encountered. A sentence is unclear or hard to understand since we do not know what exactly wasmeant by the author, we cannot represent it. Representing goals for processes, e.g. To prepare soluble and membrane fractions, cellswere lysed. Preparing the fractions is the reason for the lysing process. Note, the goalhere is different from what we call goal in a Technique Complex, as in harvestedby centrifugation. Similarly, we did not represent motives of actions Tn3spice was chosen...because... Two out of 20 papers reported on their sequences being deposited into GenBankdatabase. Since this process is not part of an experiment, it is also not represented.Evaluation195 Representing exceptions We used the process described in 3, but used ... bufferinstead of ... buffer.Authors  ofsentences ofclauses ofprocessframes ofThingframesTotal offramesConceptsadded of notrepresentedconcepts22 slotsadded successfullyrepresented1 Pogliano,Beckwith4 13 0 10 10 1 2 0 83.32 Vinella,Dari3 3 3 2 5 0 0 0 1003 Ong, et.al. 6 14 13 4 17 0 2 2 89.54 Brandner,Donohue4 12 13 1 14 2 1 1 93.35 Liu et.al. 3 6 3 4 7 1 2 0 77.86 Ferainet.al.1 2 0 1 1 0 1 0 507 Lee et.al. 4 9 1 3 4 0 22sent0 508 Ong et.al. 2 3 1 0 1 0 1 sent 1 509 Kawula,Lelivelt2 4 0 2 2 0 1 sent 0 5010 Brzoska,et.al.4 8 6 2 8 1 0 1 10011 Walsh,et.al.2 3 3 0 3 0 0 0 10012 Troup et.al. 4 14 5 7 12 1 1 2 92.313 Zha, et.al. 4 15 7 5 12 1 3 0 8014 Shi. et.al. 14 27 16 5 21 0 42sent0 7015 Faubladier,Bouche6 25 13 13 26 2 21sent0 7516 Velascoet.al.2 4 0 4 4 3 0 0 10017 Tudor,Karp1 4 0 4 4 1 0 0 10018 Schmitt,et.al.8 15 2 13 15 3 0 0 10019 Dai et.al. 4 10 2 0 2 0 10020 Heaton,Neuhaus8 20 18 3 21 4 4 844.3 9.7 5.3 4.2 9.5 1.1 1.1 0.2 82.3Table 81. Results of conceptual coverage evaluation.Table 81 summarizes the data from the conceptual coverage evaluation. The last line in the tablecontains the average for each column.Evaluation196As has been mentioned earlier, we represented an average of 82 of concepts in each paragraph.Paragraphs were about 4 sentences long and each sentence contained 23 concepts.It is important to emphasize, that the frames shown in Figure 82 are only the frames createddirectly. The system automatically infers a number of other frames, for example, object histories.This is described  in more detail in Section 7.3.1.8.2 Evaluation of practical usefulnessIntelligent Information Retrieval was the initial goal of our ontology design effort, so the extentto which the ontology supports inferencing for this type of retrieval is an important measure ofour success. In this section we will illustrate the practical usefulness of our ontology by showinghow the ontological structures developed in this work and utilized in the inference enginedescribed in Section 7.3.1 can be used to answer user queries more intelligently.The approach to query answering that relaxes the query and answers it more in a way that aperson does, rather than a machine, is called cooperative answering and has been studied in thefields of Database Management Systems DBMS and Artificial Intelligence AI Cuppens1989, Kaplan 1982. In this approach, the information about the domain, users habits, andhistory of previous queries, is used to determine what information besides the explicitlyrequested one, can be provided to the user Gaasterland 1992.We will start by describing query specification and generalization based on ISA hierarchy andpartof relations that is common in many knowledgebased retrieval systems see, for example,type abstraction hierarchies in Chu 1995, Chu 1994. We will then present several queries thatuse ontological structures specific to our ontology such as object histories, detailed                                                                                                                                                            22 This column contains the number of concepts not represented and, sometimes, the number ofsentences, that were not represented completely.Evaluation197representation of mixtures and complexes and that can not be answered completely by otherknowledgebased systems that do not have these structures.Example paragraphSince many of the queries in this latter group could be illustrated by an excerpt from a paper byGegner et.al. Gegner 1991 presented in Figure 83 same as Figure 13, we will explain theprocesses described in this paragraph here. This excerpt describes a sequence of steps to purifyCheW protein from a certain strain of E. coli  bacteria namely, strain RP3098. This sequence,along with the inputs and outputs of processes, is graphically presented in Figure 84.The sequence starts out with a strain of E. coli  bacteria which is grown to get a necessarynumber of cells. The grown cells contain CheW protein which now needs to be purified. Thepurification process consists of first breaking the cells and then gradually removing substancesother than CheW from the mixture and achieving higher and higher concentration of CheW inGrowth of Cells and Protein Purification.  The cheW and cheA  plasmids wereexpressed in E. coli  mutant strain RP3098 a flhAflhD  mutant, whichwas provided by J.S. Parkinson University of Utah. Cells were grown at 30oC inL broth. . .CheW purification is based on the procedure described by Stock et al. 14 withthe following modifications. Cells were harvested by centrifugation at 5000rpmBeckman JA 10 rotor for 5 min, resuspended in a small volume of buffercontaining 10 mM Mes pH 6.0, 100 mM NaCl, 0.5 mM EDTA, and 50 Mphenylmethylsulfonyl fluoride, and then broken by French press. The lysate wasultracentrifuged at 50,000 rpm Beckman Ti 60 rotor for 1 hr to remove cellulardebris. Protein was precipitated from the supernatant by adding NH42SO4 to40 saturation and pelleted by centrifugation. The pellet was resuspended,dialyzed against the Mes buffer and loaded onto a Whitman DE52 column.Protein was eluted from the column with a linear gradient of 100250 mM NaCl.Fractions containing CheW were concentrated by precipitation with 50NH42SO4 and finally purified by using a Sephadex G100 column 2.5 x 160 cmequilibrated in the Mes buffer containing 0.02 NaN3. CheW was 99 pure asdetermined by Coomassie Blue staining.Figure 83 same as Figure 13. An excerpt from Gegner 1991. Note that purify used at theend of the paragraph is different from the purification in the beginning the latter refers to thewhole sequence of steps described here and the former is just a single substep in the process,referred to as purification as well.Evaluation198the mixture that remains. Along the way, various substances buffers, chemicals are added to themixture and then removed, carrying some of the unwanted stuff away with them. In the end, allthat is left is a mixture 99 of which is CheW protein.We will now turn to describing queries that are answered using the inference engine presented inSection 7.3.1, that, in turn, relies on the ontology we developed. As will be discussed in specificexamples, this approach increases the recall of the information retrieval as compared to otherknowledgebased systems by utilizing the more extensive information stored in our knowledgebase. At the same time, this approach also increases the precision of information retrievalcompared to statistical, keywordbased systems that would bring many incorrect answers basedonly on presence andor proximity of words in a sentence or paragraph.We present the queries in naturallanguage format for easier understanding. Each of the queriesbelow can be easily presented using frame fillin mechanism.Evaluation1998.2.1 Indirect match of transformantsColumnStuff containingCheWLysateBufferCellsGrowthMediumLoadDialyzeCentrifugePrecipitateBreakResuspendCells in growthmediumHarvest byCentrifugationCleanerCellsDirty BufferNH42SO4PelletContains proteinSupernatantResuspendEluteConcentrated byPrecipitationNH42SO4PurifyRemove byultracentrifugationSupernatantContains proteinPelletCellular DebrisE. coli  mutantstrain RP3098...L BrothGrowMes BufferFigure 84. The chart representing the sequence of steps from the excerpt in Figure 83.Rectangles correspond to processes and ovals correspond to substances and mixtures coming inand out of these processes. X signifies that the substance is discarded after the step.Evaluation200Consider the following queryShow me the papers that describe RP3098 cells being ultracentrifuged. 1In the paragraph in Figure 83 the ultracentrifugation process was applied to the lysate and notto the cells directly. So, this paper would normally not be brought up as an answer. However,ultracentrifugation was applied to the lysate which is a direct transformant of the cells. So, itcould be desirable to bring this paragraph as an answer to the query 1. In our system, when aninstance of a break process that produced the lysate, is created, the object history for thisinstance of lysate is updated to contain the cells in the Originalobject slot see Figure 85. So, we can apply the rule on page 184 indirect match of transformants to bring this paper asan answer to the query.RP3098cellsLysateUltracentrifugeBreakObject history for the LysateObject LysateOriginalobject RP3098 cellsOriginalprocess BreakProcesses UltracentrifugeFigure 85. A subsequence including the process of breaking cells into the lysate and then applyingultracentrifugation to the lysate. Since the RP3098 cells are in the object history for this instance of thelysate as its originalobject, it will be inferred that the ultracentrifugation was indirectly appliedto the cells.Note that a keywordbased inference engine that considers proximity of words or simply their copresence in the same document and that would bring this paper as an answer, would also displaythis document as an answer to a queryEvaluation201Show me the papers that describe J.S. Parkinson being ultracentrifuged.8.2.2 Using object histories to answer queries.Consider the following queryShow me the papers where pMF7 was obtained from pUC19 2This query does not specify the process by which plasmid pUC19 should have been transformedinto plasmid pMF7. However, we can use a frame for an object history directly to specify thisquery see Figure 86Object historyObject pMF7Original object pUC19Original processProcessesFigure 86. Frame representation for query 2. Only part of an Object History frame is presented here.The excerpt in Figure 87 same as Figure 81 from a paper by Faubladier et.al. is brought up bythe system as an answer to this query. In this excerpt, DNA fragment specifically, the HindIIIBamHI fragment of a pMF3 plasmid is inserted into the pUC19 plasmid, thereby transformingthe latter into pMF7.Note again, that a keywordbased search engine that will bring this document as an answer to theDNA sequencing To locate dicFhomologous sequences precisely, deletion mutantswere isolated and subjected to sequencing. The HindIIIBamHI fragment of pMF3 and theEcoRIBamHI fragments of pMF5 and pMF6 were inserted into vector pUC19, yieldingpMF7, pMF9, and pMF10, respectively. Plasmid pMF7 was then cleaved by SacI andBamHI, and pMF9 and pMF10 were cleaved by PstI and BamHI endonucleases. Thelinearized molecules were trimmed by exonuclease III and nuclease S1 treatment, endrepaired, and circularized. Hybridization of the deleted plasmids to the dicF cRNA probewas used as a guide for selection of the plasmids to be sequenced. Sequencing wascarried out on doublestranded DNA in accordance with standard procedures.Figure 87 same as Figure 81. An excerpt from Gegner 1991Evaluation202query above will probably bring this document as an answer toShow me the papers where pMF7 was obtained from pMF9This, of course, would be incorrect.For another example of using object histories directly to answer queries, consider the followingqueryShow me the papers where an object was centrifuged and then boiled 3Here an object itself is not specified, but a subsequence of processes that  this object hasundergone, is. Since part of a history for an object in our ontology is the complete partiallyordered sequence of processes that this object participated in, we can form this query as shown inFigure 88.Object historyObjectOriginal objectOriginal process centrifuge boilProcessesFigure 88. Frame representation for query 3. Only part of an Object History frame is presented here.The excerpt in Figure 89 from a paper by Shi et.al. is brought up by the system as an answer tothis query. In this excerpt, cells are harvested by centrifugation i.e. centrifuge is a part of atechnique complex, resuspended and then boiled. Note that in this example the boil process doesnot directly follow centrifugation. The important fact is that both processes are applied to thesame objects cells.Evaluation203In some experiments, samples were taken directly from the growth culture. In thesecases, cells were collected from the growth culture by centrifugation, resuspended in SDSloading buffer 8, 14, and stored at 70oC. They were boiled for 5 min before being loadedonto SDS gels.Figure 89. An excerpt from Gegner 19918.2.3 Using mixture components for indirect match of inputs and outputsConsider the following queryShow me the papers where NaCl was used in the resuspension of RP3098 4The sentence that describes the resuspension process in this paper isCells... were resuspended in a small volume of buffer containing 10 mM Mes pH6.0, 100 mM NaCl, 0.5 mM EDTA, and 50 M phenylmethylsulfonyl fluoride.However, there are two mixtures present the Mes buffer with NaCl as one of its componentsand the mixture RP3098 cells and this buffer see Figure 810. The rule on page 182 will addNaCl as well as all the other components of the buffer to the frame describing the latter mixture.E.coliStrain RP3098BufferIdentifiedcomponents Mes NaCl EDTA phenylmethylsulfonyl fluorideMixtureIdentifiedcomponentsFigure 810. Representation of the input mixture in theresuspension process before the inference rule on page 182 isapplied. The representation is simplified significantly for thepresentation purposes,Evaluation204Now, the question of whether a substance containing NaCl participated in a resuspension processcan be easily answered in a positive manner and the paper will be brought up as the result.8.2.4 Technique abstractionConsider the following queryThe pellet was ... loaded onto a Whitman DE52 column. Protein was eluted fromthe column with a linear gradient of ...Even though it is not explicitly mentioned here, this sequence of events describes achromatography process use of a column is an indication of that. Chromatography is thetechnique  for these experiment substeps see Figure 811. It is easy to imagine a querypertaining to this techniqueShow me the papers where chromatography was used in the process of purifyingCheW 5Chromatography Object Substeps   Load   Elute Elute Object CheW Target chromatography columnLoad Object pellet contains CheW Target chromatography columnFigure 811. Illustration of implicit technique recognition. Arrows represent reference pointers in thiscase.So, this paper should be brought up as the result. However, this answer is possible only if weconsider the chromatography combination complex the presence of which could be inferred bythe presence of two other process, load and elute applied to a chromatography complex. Besides,Evaluation205the object of the two process load and elute  the protein, would be automatically placed in theobject of the Process Complex, by a rule very similar to the rule on page 182.This problem is similar to the problem of inferring the plans of agents based on their actions iscalled plan recognition Allen 1994 in natural language.8.2.5 Using partwhole relations to answer queriesOntology knowledge can also be used to improve query answering based on partwhole relationsbetween objects. However, not every partwhole relation could generally be used for thispurpose. From the partonomy relations that we categorized see Figure 628 only binaryrelations isportionof and issolebuildingblockof can produce satisfactoryresults.Consider the following queryShow me the papers where S.pombe amber suppressor tRNA was inserted into E.coli JR104. 6In the paragraph in Figure 812 plasmid pACYC that has the tRNA vector mentioned in thequery as its segment, is inserted into E. coli JR104 strain. Since the relation between tRNAvector and the pACYC plasmid is isasegmentof which is a subclass of isaSeparation of in vivoaminoacylated and uncharged tRNAs.  S. pombe ambersuppressor tRNA was isolated from E. coli JR104 transformed with pACYC vectorcarrying the tRNA gene and compatible plasmids with synthetase genes. Transformantswere grown under selective conditions in  M9 glucose medium supplemented withampicillin, chloramphenicol, and, when  necessary, arginine and tryptophan. tRNAisolation was performed at 4oC and pH 4.5 45..Figure 812. An excerpt from WeygandDurasevic 1994Evaluation206portionof, we can infer that the tRNA vector was also inserted into the E. coli strain andbring this paragraph as an answer to the query23. Figure 813 illustrates this example.Isportionof Arg1 tRNA gene Arg2  pACYC plasmidInsert Object pACYC plasmid Target E.coli JR104Figure 813. Illustration of the use of partwhole relations to answer queries. pACYC plasmid is insertedinto E. coli strain and the tRNA gene is a segment of the plasmid. Therefore, it can be inferred that thegene was inserted into the bacterial strain.Note that it would usually be incorrect to use the same type of reasoning for other types of parttowhole relations. Consider the queryWas cheW broken by a French pressand the example in Figure 83. There plasmid cheW isinside the cells that are beingbroken. However, the break process is only applied to the cells and not to the plasmids that areinside these cells.The query example 6 uses the fact that if a process is applied to an object A then it is alsoapplied to an object B that is a portion of A or any part of A. The opposite is generally not truethat is, if a process is applied to a portion of A, it is not necessarily applied to A itself. Considerfor example the following process from the paragraph in Figure 87The HindIIIBamHI fragment of pMF3 and the EcoRIBamHI fragments of pMF5and pMF6 were inserted into vector pUC19, yielding pMF7, pMF9, and pMF10,respectively.                                                23 When a bacterial strain is transfomed with a plasmid, the plasmid is in fact inserted in the bacteria.Evaluation207The HindIIIBamHI fragment that is a portion of pMF3 plasmid is inserted into another plasmid.It would be incorrect to bring this paragraph is an answer to the queryShow me the papers where pMF3 is inserted into pUC19.Even though a part of the pMF3 plasmid is inserted into pUC19, the whole plasmid is not.8.2.6 Generalization of queries based on a concept hierarchyOne of the most common and straightforward use of ontology knowledge for intelligentinformation retrieval is the use of ISA information present in most ontologies. This is calledgeneralizationspecification of a query.For instance, when someone is looking for information on collie, and no documents are found,the list of documents on dogs could be suggested to the user assuming that collie is a subcategory of dog in the corresponding ISA hierarchy.For an example from our domain, turn back to the paragraph in Figure 83 and consider thefollowing queryShow me the papers where cell lysate was centrifuged. 9In the process sequence described in Figure 83, an ultracentrifugation process is applied to  thelysate. Since ultracentrifugation is a subclass of centrifugation, this paragraph can be brought inas an answer to the query. Note, however, that going down the hierarchy that is, bringing thepapers where a subclass of a process in the query is described, as in the next section is usuallymore reliable than going up the concept hierarchy. The user may or may not accept a paper thattalks about centrifugation when the query was about ultracentrifugation.Evaluation2088.2.7 Specialization of queries based on a concept hierarchyAs generalization of a query can be used to increase the recall of information retrieval,specialization of a query can increase the precision by narrowing down a search field. In the firstexample, if a user asks for all the documents about dogs, and the list of relevant documents is toolarge, the user can be prompted to choose specific breed from a list of subcategories of dog.Similarly, if there are too many papers on measuring concentration of some substance, the usercan be prompted to choose a specific measuring method or equipment.Specialization can also be used to increase the recall of queries. For an example refer to aparagraph in Figure 814 and consider the following queryShow me the papers where a PstIHincII fragment was separated from pYT935plasmid. 8The process described in the paper and used in the corresponding frame is Excisecut. Thisprocess is a subclass of Separate. That is, we can say that Excisecut ISA Separate.Therefore, the paragraph in Figure 814 should be brought as an answer to query 7.Cloning and sequencing of DNA Standard procedures were used for cleavage,ligation, and transformation of DNA 20. To determine the nucleotide sequence of thereplication region derived from mycobacterial plasmid pMSC262, pYT935 was employedinstead of pYT937 5 Fig. 1. This plasmid contains a 2.5kb HincIIPstI fragment of thereplication region of pMSC262 and is more convenient than a 2.3kb HindIIIPstI fragmentof pYT937 when the commercially available digestion kit is used. The 2.5kb PstIHincIIfragment was excised from pYT935 and cloned into M13mp18 and M13mp19 phagevectors.Figure 814. An excerpt from Qin 19948.2.8 Summary of query examplesIn this section we have presented a number of queries that could be answered more fully whenthe ontology knowledge is used. Queries 1 through 6 employ the knowledge that is specific toour ontology and is generally not present in others and therefore would generally not beanswered fully by knowledgebased systems that do not have this information. This includes, asEvaluation209object histories, category conversions, mixtures, specific partwhole relations. Queries 7 and8 use an ISA hierarchy that is common to most knowledgebased systems a specific ISAhierarchy that we designed for molecular biology domain as used in these examples.As demonstrated by some of the query examples above, using ontology knowledge has anadvantage of increasing query recall and at the same time not significantly affecting precisionunlike keywordbased systems.8.3 Evaluation of formality and portability translation to OntolinguaTo validate the formality and portability of our formalism, we translated the ontology intoOntolingua Farquhar 1996 which has become a standard repository for ontologies forknowledge sharing.Ontolingua supports framebased formalism, and, thus, it lends itself easily as a translation targetfor our formalism. Although not all the features of our formalism could be translated directly intoOntolingua, the information could still be stored in most cases, using facets and then extractedback if necessary.The following data is compiled from the summary of the EMB ontology provided by theOntolingua Server. The EMB ontology includes the following ontologies from the Ontolingualibrary Frameontology, KIFextensions, KIFlists, KIFnumbers,KIFsets and Simpletime.In the Ontolingua terms there are24 164 175 classes 11 11 relationsEvaluation210 84 90 functions We use facets extensively to store various features that can be expressed in our formalism but notin the standard frame formalism. These features include, for instance, slot belonging to aparticular slot group, list of possible slot fillers, default values, etc. Figure 815, for instance,demonstrates how a DNA category in the EMB ontology is represented in the Ontolingua Server.The same category is represented in Ontolingua directly25 in 10. In this example, every slot has afacet added to it. We associate a facet SlotFillers with a slot if a list of fillers is available.The value of the facet is the list itself. If fillers not from the list are allowed denoted by ellipsisin our formalism, a facet MoreFillersAllowed with a true value is added to the slotsee, for example, Source slot in Figure 815.                                                                                                                                                            24 The number in parenthesis indicates the corresponding value after adding concepts and slots thatresulted from the conceptual coverage evaluation. 25 Ontolingua Reference manual is available at httpwwwkslsvc.stanford.edu5915docontolinguareferencemanualEvaluation211 Class  DNA Defined in ontology EmbARITY 1DOCUMENTATION Not supplied yet.DOMAINOF Composition, Labeledornot, Source, TypeINSTANCEOF CLASS, RELATION, SETSUBCLASSOF NucleicAcid, DecomposableObject, EMBThing, EMBTop, TangibleThing ...SUPERCLASSOF DNAFragment, Plasmid, Probe, GeneSlotsComposition SlotFillers doublestranded, singlestrandedLabeledornot SlotFillers noSource SlotFillers synthesized MoreFillersAllowed TrueType SlotFillers chromosomal, genomic MoreFillersAllowed True Figure 815. Definition of the DNA class from the Ontolingua Server DEFINEFRAME DNA        OWNSLOTS        ARITY 1 DOCUMENTATION Not supplied yet.         INSTANCEOF CLASS        SUBCLASSOF  NUCLEICACID        TEMPLATESLOTS               SEGMENTOF        SOURCE SLOTFILLERS synthesized MOREFILLERSALLOWED TRUE        TYPE SLOTFILLERS chromosomal genomic MOREFILLERSALLOWED TRUE        WHOLEMOLECULE SLOTFILLERS yes no        STRANDS SLOTFILLERS doublestranded singlestranded        LABELEDORNOT SLOTFILLERS no        SEGMENTSCONTAINED        STARTPOSITION        ENDPOSITION        POSITIONRELATIVETO SLOTFILLERS start of transcription 3 end 5 end        LENGTHINBP        RESTRICTIONSITESCONTAINED LISTELEMENTRESTRICTION TRUE        AXIOMS         DNA X  LENGTHINBP X  ENDPOSITION X STARTPOSITION X Figure 816. Definition of the DNA class in Ontolingua. Since in Ontolingua, all the facets need to be defined outside a class context as functions orrelations before they can be used, we created a number of facets beforehand to be used tospecify various features of the slots. Here is the list of facets that we usedEvaluation212 ParticipantGroupMember, SubstepsGroupmember, ObjectsCreatedGroupsMember, ObjectsDestroyedGroupMember,ObjectsConvertedGroupMember  for specifying a slot group that a slotbelongs to if a slot belongs to a certain slot group, the corresponding facet is thenassociated with this slot and is give a True value. Defaultvalue  for specifying the default value of a slot. Slotfillers  for specifying the list of slotfillers for a slot. When the facet isassociated with a slot, its value is a list of possible filers. A facet MoreFillersAllowed is added to a slot and given a value True if values not from the SlotFillers list could also be used for the slot. Listelementrestriction  used to specify that a specific slot can have a listas its value Slotlist  used to specify that a specific slot is a slot listWe will now repeat the grammar rules for the formalism presented in Chapter 5 and describehow each rule from the grammar can be translated into Ontolingua. We only specify thetranslation of the nonstandard features of the formalism compared to the frame formalism,encoded in the Ontolinguas FRAMEONTOLOGY. It can be seen that none of the information inour formalism is lost in the translation process and all of the translations are well defined.The first group of rules defines the three kinds of framesFrame Thingframe Processframe RelationframeEvaluation213Thingframe Thing classname  superclassesthingframebodyProcessframe Process classname  superclassesprocessframebodyRelationframe Relation classname  superclassesrelationframebodysuperclasses  classname We start the construction of the EMB ontology in Ontolingua by creating a category EMBTopand have the three roots of the subontologies inherit from it. Subontologies names have EMB infront of them EMBThings, EMBProcesses, EMBRelations. These are the onlythree categories with EMB in their names. Thus, even though an Ontolingua frame does not havea type associated with it in our case, Thing, Process, or Relation, one can still extractthis information, if necessary, by  checking which of the EMB classes is among a classsuperclasses.thingframebody  slot  slotgroup Conditions  KIFaxiom  processframebody  slot  slotgroup Conditions  KIFaxiom  Effects  KIFaxiom  relationframebody  slot Conditions  KIFaxiom  This set of rules describes a frame body in our formalism. Slots  are Template slots inOntolingua terms. We describe implementation of slot groups below. Conditions axioms aresimple implication axioms for the class thus, they are added by using Axiom  in the frameEvaluation214definition. Since there needs to be a distinction between the two sets of axioms associated with aProcess, Conditions axioms and Effects, we use Ontolinguas named axiomsmechanism to implement this. Effects axioms in a Process definition are added as a Namedaxioms in the ontology. Each corresponding axiom is named classnameEffectsAxiomnumber.Slots in our formalism are defined by the following rulesslot slotname value restriction List valuerestriction default defaultvalue value restriction list of fillers  class restriction list of filers or class restrictionclass restriction instanceof classname or classnamelist of fillers  fillervalue  ...As mentioned above, slots are Template slots in Ontolingua terms. Slot name and classrestriction are the same as in Ontolingua, so no additional translation is required class namesfrom our slot definition are Range in Ontolingua terms. Since Ontolingua allows more thanone class in the Range, no additions are needed.If a slot value can be a list keyword List in our formalism, we add a Listelementrestriction facet to the slot. Its value is a class or a list of classes to choose from.To specify a default value, a Defaultvalue facet is added.Slotfillers are described by adding a Slotfillers facet to list possible fillers. The facetvalue is a simple list of the values that can be fillers for this slot. If values not only from the listEvaluation215are allowed specified by the ellipsis, a MoreFillersAllowed facet with a True valueis also added.The last set of grammar rules defines slot groupsslotgroup slotgroupname slotgroupmember  slotgroupmemberslotgroupmember slot  slotlistslotlist slotnameSlotlist instanceof  classnameFor each slot group in the ontology Participants, Objectscreated, etc. acorresponding facet is created, e.g. ParticipantsGroupMember, ObjectscreatedGroupMember, etc. Then, if a slot is a member of a particular slot group, thecorresponding facet is added to it and given a value True. There is also a facet SlotListthat is used to define a slot as a slotlist we add this facet with it and give it a True value.This concludes our description of how an ontology expressed using formalism developed inChapter 5 can be translated into a standard ontology repository in Ontolingua. As can be seen inthe discussion above, all the features of the formalism can be easily encoded in Ontolinguawithout loss of information.2169. CONCLUSIONSThe field of ontology design has become very active in the recent years on the premise that it willencourage and enable knowledge sharing and reuse. If knowledge sharing among differentontologies is to be possible in the future, common foundations for ontology development need tobe agreed upon. These foundations should take into account representation requirements ofexperimental sciences. In this Thesis we analyze such requirements and develop an ontology formolecular biology based on these requirements. Since a primary goal of our ontologydevelopment effort is to assist in knowledgebased information retrieval, we also analyze howthe ontology we developed can be used in intelligent information retrieval system and describe aprototype of such system that we implemented.We start this section by placing our ontology in the framework for comparing ontologies that wedeveloped in Chapter 2 Section 2.1.3. We then describe major contributions of our work, andfurther possible extensions.9.1 Applying the framework for comparing ontologies to themolecular biology ontology.We developed a framework for comparing ontologies in Chapter 2 of this Thesis. We would nowlike to place the ontology for molecular biology described in this chapter in this framework.Table 91 contains comparison characteristics from Section 2.1.3 and corresponding values forour ontology.Conclusions217General Purpose of theontologyIntelligent Information RetrievalGeneral or domainspecificDomainspecificDomain Molecular biology experimental SciencesIntegration in a moregeneral ontologySince the toplevel division is at a very general level, it can beintegrated in a more general ontology.Size ca 200 categoriesFormalism FramesImplemented or not Partially implemented in CLOS and WOOD databaseDesignprocessHow was it built 1. Toplevel ontology was created2. Text corpora was used to identify problems3. Ontology was adjusted to deal with the problems from 2.Evaluation Conceptual coverage represent a new test set of randomlyselected paragraphsPractical usefulness proofofconcept Query SystemprototypeTaxonomy General taxonomyorganizationThree subontologies Things, Processes, Relations. Multipleinheritance is allowed.What is in theontologyThings, processes, relationsTreatment of time A small ontology of time under AbstractionsToplevel division Toplevel division of Things Tangible Things vs AbstractionHow tangled or densetaxonomy isNot very tangled, not very denseInternalconceptstructureDo concepts haveinternal structureYesAre there propertiesand rolesYes, both properties unary relations and binary relationsare firstclass objects. There is a hierarchy of all relationsPartwhole relations An extensive hierarchy of partwhole relationsAxioms Are there explicitaxiomsA limited number of axiomsHow are theyexpressedAxioms are expressed in firstorder predicate calculus andare incorporated into category definitions.InferenceMechanismHow is reasoningdoneThere is a limited number of inference rules to processqueriesIs higherorder logicpresentIn the form of defaultsApplications Retrieval mechanism A GUI for viewing categories in the ontology andcorresponding framesUser Interface Graphical User Interface for ontologybased informationretrievalApplications in whichontology was usedMM Query System a prototype of Intelligent InformationRetrieval systemContributions Major strengths andcontributionsContent creationSee Section 9.2Table 91. Ontology for molecular biology in the framework from Section 2.1.3Conclusions2189.2 Major contributions and future workMajor contributions of the work presented here are Analysis of requirements in developing ontology in the domain of experimental sciences. Analysis of the stateoftheart in ontology design today we described 10 projects inontology design and developed a framework for comparing these projects. We then puttheses projects into the developed framework. Development of ontology for molecular biology we presented the EMB ontology forrepresenting molecular biology. Some of the main features of the ontology include notionof category conversions and object histories for objects that change their identity andcategory through processes extensive hierarchy of unary and binary relations notion ofcategory species as the intermediate layer that is present in some cases between classesand instances. Detailed study of major categories specific to the field of molecular biology. Thesecategories include Tangible Things specifically, Mixtures and Populations andtemporary configurations of objects, Complexes singlestep and multistep processescomponent and functional relations and properties. Extension of framebased formalism to express the developed ontology that include slotgroups to identify slots with common semantic role, axiom groups to express differentsets of axioms specifically, to distinguish between axioms expressing preconditions andeffects of processes and other features. Implementation of a proofofconcept prototype of an intelligent information retrievalsystem MM Query system demonstrates how the developed ontology can be used toConclusions219improve recall of a queryanswering system by using inference rules that employ theknowledge contained in the ontology. Analysis of ontology evaluation techniques. We considered three evaluation methodsevaluating conceptual coverage of an ontology by using a training and then a test set ofparagraphs evaluating its practical usefulness by developing a proofofconceptprototype and evaluating the formality and portability of formalism by translating theontology expressed in it, to Ontolingua.There are many possible extensions of this work that can be undertaken in further research. Someof them are listed below More detailed representation of all the concepts and addition of new concepts to theontology. A more detailed study of the interrelationship of Things and Relations subontology. Application of this ontology to natural language processing task. Development of efficient query processing methods based on this ontology. Addition of other inferences based on the ontology. The ultimate goal implementation of a fullfledged naturallanguage processing andintelligent information retrieval system that would outperform existing statisticalbasedsystems. Achieving the ultimate goal in the list above would, of course, take many doctoral dissertationsand other research projects in the field. We believe that the work presented here is a step in thedirection towards this goal.220 Bibliography221 Allen, J. 1994. Natural Language Understanding. Menlo Park, CA BenjaminCummingsPublishing Company. Altman, R.B., Abernethy, N.F. and Chen, R.O. 1997. Standardized Representations of theLiterature Combining Diverse Sources of Ribosomal Data. In 5th International Conference onIntelligent Systems in Molecular Biology, 1524. Halkidiki, Greece AAAI Press. American Society for Microbiology 1994. ASM Journals on CDROM. Ausubel, F.M., ed. Current protocols in molecular biology. 1987,  New York Greene Pub.Associates and WileyInterscience. Baclawski, K. 1996. Long time, no see Categorization in information science. In Essays on theFuture In Honor of the 80th Birthday of Nick Metropolis, ed. S. Hecker and G. C. Rota,Birkhauser Boston. Baclawski, K. and Fridman, N. 1994. MMQuery Database support for the annotation andretrieval of  biological research articles. NUCCS9408. Northeastern University, Boston. Baclawski, K., Futrelle, R., Hafner, C., Pescitelli, M., Fridman, N., Li, B. and Zou, C. 1993a.MMQuery Materials  Methods Knowledge Base and Query System. NUCCS9306.Northeastern University. Baclawski, K., Futrelle, R., Hafner, C., Pescitelli, M.J., Fridman, N., Li, B. and Zou, C. 1993b.Dataknowledge bases for biological papers and techniques. In Proceedings of the Symposium onAdvanced Data Management for the Scientist and Engineer, 2328 AAAS. Barr, A. and Feigenbaum, E.A. 1981. STRIPS. In The Handbook of Artificial Intelligence, 128134. Stanford, CA HeurisTech Press. Bibliography222 Bateman, J.A., Magnini, B. and Rinaldi, F. 1994.  The Generalized Italian, German, EnglishUpper Model. In ECAI94 Workshop Comparison of Implemented Ontologies. Amsterdam. Bernstein, F.C., Koetzle, T.F., Williams, G.J.B., Mayer, E.F.J., Bryce, M.D., Rodgers, J.R.,Kennard, O., Simanouchi, T. and Tasumi, M. 1977. The protein data bank. Journal ofMolecular Biology 112 535542. Brachman, R.J., McGuiness, D.L., PatelSchneider, P.F., Resnik, L.A. and Borgida, A. 1991.Living with Classic When and how to use KLONElike language. In Principles of SemanticNetworks, ed. J. F. Sowa, 401456. Morgan Kaufmann. Brachman, R.J. and Schmolze, J.G. 1985. An Overview of the KLONE KnowledgeRepresentation System. Cognitive Science 9 171216. Broglio, J., Callan, J.P., Croft, W.B. and Nachbar, D.W. 1995. Document Retrieval andRouting Using the INQUERY System. In Third Text REtrieval Conference TREC3.Gaithersburg, MD National Institute of Standards and Technology,  special publication 500225. Brown, R. 1958. How shall a thing be called Psychological Review 65 1421. Buckley, C., Salton, G., Allan, J. and Singhal, A. 1995. Automatic Query Expansion UsingSMART  TREC 3. In Third Text REtrieval Conference TREC3. Gaithersburg, MD NationalInstitute of Standards and Technology,  special publication 500225. Callan, J.P., Croft, W.B. and Harding, S.M. 1992. The INQUERY Retrieval System. InDEXA92. Campbell, A. and Shapiro, S. 1995. Ontologic Mediation An Overview. In Workshop on BasicOntological Issues In Knowledge Sharing, 1625. Montreal, Canada. Bibliography223 Chu, W.W., Crdenas, A.F. and Taira, R.K. 1995. KMeD A KnowledgeBased MultimediaMedical Distributed Database System. Information Systems 202 7596. Chu, W.W. and Chen, Q. 1994. A Structured Approach for Cooperative Query Answering.IEEE Transactions on Knowledge and Data Engineering 65 738748. Cohen, P.R. and Perrault, C.R. 1979. Elements of planbased theory of speech acts. CognitiveScience 3 177212. Collins, J.W. and Forbus, K.D. 1987. Reasoning About Fluids Via Molecular Collections. InSixth National Conference on Artificial Intelligence, 590594. Seattle, WA AAAI Press. Cuppens, F. and Demolombe, R. 1989. Cooperative Answering a methodology to provideintelligent access to Databases. In Expert Database Systems, ed. L. Kerschberg, 621642. TheBenjaminCummings Publishing Company, Inc. Dahlgren, K. 1988. Naive Semantics for Natural Language Understanding. Boston, MAKluwer Academic. Dahlgren, K. 1990. Naive Semantics and Robust Natural Language Processing. In Symposiumon Textbased Intelligent Systems AAAI Spring Symposium Series, 59. Stanford UniversityAAAI. Dahlgren, K. 1995. A linguistic ontology. International Journal on HumanComputer Studies4356 809818. de Kleer, J. and Brown, J.S. 1984. A qualitative physics based on confluences. ArtificialIntelligence 24 783. Bibliography224 Farquhar, A., Fikes, R. and Rice, J. 1996. The Ontolingua Server a Tool for CollaborativeOntology Construction. In Tenth Knowledge Acquisition for KnowledgeBased SystemsWorkshop. Banff, Canada. Finin, T., McKay, D., Fritzson, R. and McEntire, R. 1994. KQML An Information andKnowledge Exchange Protocol. In Knowledge Building and Knowledge Sharing, ed. K. Fuchiand T. Yokoi, Ohmsha and IOS Press. Forbus, K.B. 1988a. Qualitative Physics Past, Present and Future. In Qualitative Reasoningabout Physical Systems, ed. D. S. Weld and J. de Kleer, 1140. San Mateo, California MorganKaufmann Publishers, Inc. Forbus, K.D. 1984. Qualitative Process Theory. Artificial Intelligence 24 85168. Forbus, K.D. 1988b. Introducing Actions into Qualitative Simulation. UIUCDCSR881452.Qualitative Reasoning Group, Department of Computer Science, University of Illinois. Frakes, W.F. 1992. Introduction to Information Storage and Retrieval Systems. In InformationRetrieval Data Structures and Algorithms, ed. W. Frakes and R. BaezaYates, 113. EnglewoodCliffs, NJ Prentice Hall. Freifelder, D. 1987. Molecular Biology. Boston Jones and Bartlett Publishers, Inc. Fridman Noy, N. and Hafner, C. 1997. The State of the Art in Ontology Design A Survey andComparative Review. AI Magazine 183 5373. WordNet . ftpclarity.princeton.edupubwordnet Princeton University. Gaasterland, T., Godfrey, P. and Minker, J. 1992. An Overview of Cooperative Answering.Journal of Intelligent Information Systems 12 123157. Bibliography225 Gegner, J.A. and Dahlquist, F.W. 1991. Signal transduction in bacteria CheW forms areversible complex with the protein kinase CheA. Proceedings National Academy Sciences 88750754. Genesereth, M.R. and Fikes, R.E. 1992. Knowledge Interchange Format, Version 0.3,Reference Manual. Logic921. Knowledge Systems Laboratory, Stanford University. Genesereth, M.R. and Nilsson, N.J. 1987. Logical Foundations of Artificial Intelligence. LosAltos, CA Morgan Kaufmann Publishers, Inc. GmezPrez, A. 1996. Towards a Framework to Verify Knowledge Sharing Technology.Expert Systems with Applications 114 519529. GmezPrez, A., Juristo, N. and Pazos, J. 1995. Evaluation and Assessment of the KnowledgeSharing Technology. In Towards Very Large Knowledge Bases, ed. N. J. I. Mars, 289296. IOSPress. Gruber, T.R. 1992. Ontolingua A Mechanism to Support Portable Ontologies. KnowledgeSystems Laboratory, Stanford University. Gruber, T.R. 1993a. Toward Principles for the Design of Ontologies Used for KnowledgeSharing. KSL 9304. Knowledge Systems Laboratory, Stanford University. Gruber, T.R. 1993b. A Translation Approach to Portable Ontology Specification. KnowledgeAcquisition 5 199220. Gruninger, M. and Fox, M.S. 1995. Methodology for the Design and Evaluation of Ontologies.In Workshop on Basic Ontological Issues in Knowledge Sharing, IJCAI95. Montreal. Guarino, N. 1994a. The Ontological Level. In Philosophy of Cognitive Sciences, ed. R. Casati,B. Smith and G. White, Vienna HolderPichlerTempsky. Bibliography226 Guarino, N., Carrara, M. and Giaretta, P. 1994b. Formalizing Ontological Commitments. InTwelfth National Conference on Artificial Intelligence AAAI 94, 560568. Seattle, WashingtonAAAI Press The MIT Press. Guha, R.V. and Lenat, D.B. 1994. Enabling Agents to Work Together. Communications ofACM 377 127142. Hafner, C., Baclawski, K., Futrelle, R., Fridman, N. and Sampath, S. 1994. Creating aKnowledge Base of Biological Materials and Methods. In 2nd International Conference onIntelligent Systems in Molecular Biology, 147155. Stanford, CA AAAI Press. Hafner, C. and Fridman, N. 1996. Ontological Foundations for Biology Knowledge Models. In4th International Conference on Intelligent Systems in Molecular Biology, 7887. St. Louis, MOAAAI Press. Harman, D. 1993. Overview of the First TREC Conference. In Sixteenth Annual InternationalACM SIGIR Conference, 3647. Pittsburgh, PA ACM. Harman, D. 1995. Overview of the Third Text REtrieval Conference TREC3. In Third TextREtrieval Conference TREC3. Gaithersburg, MD National Institute of Standards andTechnology,  special publication 500225. Hayes, P. 1985. The Second Naive Physics Manifesto. In Formal Theories of theCommonsense World, ed. J. R. Hobbs and R. C. Moore, 137. Norwood, New Jersey AblexPublishing Corporation. Hayes, P.J. 1990. Naive Physics I Ontology for liquids. In Readings in Qualitative Reasoningabout Physical Systems, ed. D. S. Weld and J. de Kleer, 484502. Morgan Kaufmann, San Mateo,CA. Bibliography227 He, B. and Zalkin, H. 1994. Regulation of Escherichia coli purA by Purine Repressor, OneComponent of a Dual Control Mechanism. Journal of Bacteriology 1764 Hovy, E. and Knight, K. 1993. Motivation Shared Knowledge Resources An Example fromthe Pangloss Collaboration. In Workshop on Knowledge Sharing and Information Interchange,IJCAI93. Chamberry, France. FlyBase A Database of the Drosophila Genome . httpflybase.bio.indiana.edu . The RiboWeb Project . httpsmiweb.stanford.eduprojectshelixriboweb.html Section onMedical Informatics, Stanford University School of Medicine, Stanford, CA. Stanford KSL Network Services . httpwwwkslsvc.stanford.edu5915 Stanford University,Palo Alto, CA. Ontolingua System Reference Manual . httpwwwkslsvc.stanford.edu5915docontolinguareferencemanual Knowledge Systems Lab, StanfordUniversity. Upper Cyc Ontology . httpwww.cyc.comcyc21cover.html Cycorp. The Generalized Upper Model 2.0 . httpwww.darmstadt.gmd.depublishkometgenumnewUM.html IPSIGMD, Darmstadt, Germany. TOVE Manual . httpwww.ie.utoronto.caEILtoveontoTOC.html Department of IndustrialEngineering, University of Toronto. GenBank Overview . httpwww.ncbi.nlm.nih.govWebGenbankindex.html National Center forBiotechnology Information. Bibliography228 Unified Medical Language System . httpwwwkss.nlm.nih.govDocsumls.fact.html NationalLibrary of Medicine, Bethesda, MD. Humphreys, B.L. and Lindberg, D.A.B. 1993. The UMLS project making the conceptualconnection between users and the information they need. Bulletin of the Medical LibraryAssociation 812 170. Iwasaki, Y. and Simon, H.A. 1986. Causality in Device Behaviour. In Qualitative Reasoningabout Physical Systems, ed. D. S. Weld and J. de Kleer, 631645. San Mateo, California MorganKaufmann Publishers, Inc. Kaplan, S.J. 1982. Cooperative responses from a portable natural language query system.Artificial Intelligence 192 165187. Karp, P.D. 1993. A Qualitative Biochemistry and Its Application to the Regulation of theTrytophan Operon. In Artificial Intelligence and Molecular Biology, ed. L. Hunter, 289325.AAAI Press The MIT Press. Karp, P.D., Riley, M., Paley, S.M. and PelligriniToole, A. 1996. EcoCyc Encyclopedia of E.coli Genes and Metabolism. Nucleic Acids Research 241 3240. Kawasaki, S., Moriguchi, R., Sekiya, K., Nakai, T., Ono, E., Kume, K. and Kawahara, K. 1994.The Cell Envelope Structure of the LipopolysaccharideLacking GramNegative BacteriumSphingomonas paucimobilis. Journal of Bacteriology 1762 284290. Knaus, D., Mittendorf, E. and Schuble, P. 1995. Improving a Basic Retrieval Method by Linksand Passage Level Evidence. In Third Text REtrieval Conference TREC3. Gaithersburg, MDNational Institute of Standards and Technology,  special publication 500225. Bibliography229 Lakoff, G. 1987. Women, Fire and Dangerous Things. Chicago, IL The University of ChicagoPress. Lehman, F. 1995. Combining Ontologies, Thesauri, and Standards. In IJCAI Workshop onBasic Issues in Knowledge Sharing, 8494. Montreal, Canada. Lenat, D.B. 1990a. Cyc Toward programs with common sense. Communications of ACM338 3049. Lenat, D.B. 1995. CYC A LargeScale Investment in Knowledge Infrastructure.Communications of ACM 3811 3338. Lenat, D.B. and Guha, R.V. 1990b. Building large knowledgebased systems  representationand inference in the Cyc project. Reading, Mass AddisonWesley Pub. Co. Liu, B.L., Hessel, A., Cheng, H.Y.M. and Sanderson, K.E. 1994. The XbaIBlnICeuIGenomic Cleavage Map of Salmonella paratyphi B. Journal of Bacteriology 1764 10141024. Mahesh, K. and Nirenburg, S. 1995. A Situated Ontology for Practical NLP. In Workshop onBasic Ontological Issues In Knowledge Sharing. Montreal, Canada. Miller, G.A. 1990. WordNet An Online Lexical Database. International Journal ofLexicography 3, 4 235312. Minsky, M. 1981. A Framework for Representing Knowledge. In Readings in KnowledgeRepresentation, ed. R. Brachman and H. Levesque, 245262. Morgan Kaufmann Publishers,INC. Rabiner, L.R. 1989. A Tutorial on Hidden Markov Models and Selected Applications in SpeechRecognition. In Proc. IEEE, 257285. Bibliography230 Rosch, E. 1978. Principles of Categorization. In Cognition and Categorization, ed. R. E. and B.B. Lloyd, 2748. Hillside, NJ Lawrence Erlbaum Publishers. Russell, S.J. and Norvig, P. 1995. Artificial Intelligence A Modern Approach. EnglewoodCliffs, New Jersey Prentice Hall. Schatz, B.R. 1997. Information Retrieval in Digital Libraries Bringing Search to the Net.Science 275 327334. Shapiro, S.C. 1979. The SNePS semantic network processing system. In Associative NetworksThe Representation and Use of Knowledge by Computers, ed. N. V. Findler, 179203. NewYork Academic Press. Skoog, D.A. and Leary, J.J. 1992. Principles of instrumental analysis. Fort Worth SaundersCollege Pub. Sowa, J.F. 1990. Crystallizing theories out of knowledge soup. In Intelligent Systems State ofthe Art and Future Directions, ed. Z. W. Ras and M. Zemankova, 456487. New York EllisHorwood. Sowa, J.F. 1991. Toward the Expressive Power of Natural Language. In Principles of SemanticNetworks, ed. J. F. Sowa, 157190. San Mateo, California Morgan Kaufmann Publishers, Inc. Sowa, J.F. 1995a. Distinctions, Combinations, and Constraints. In Workshop on BasicOntological Issues In Knowledge Sharing. Montreal, Canada. Sowa, J.F. 1995b. Toplevel ontological categories. International Journal on HumanComputerStudies 4356 669685. Bibliography231 Sowa, J.F. 1997. Knowledge Representation Logical, Philosophical, and ComputationalFoundations. Boston, MA PWS Publishing Company. Forthcoming. Speel, P.H. 1995. Selecting Knowledge representation systems. Ph.D. thesis, University ofTwente, Enschede, the Netherlands. Uschold, M. 1996a. Building Ontologies Towards a Unified Methodology. In Expert Systems96, the 16th Annual Conference of the British Computer Society Specialist Group on ExpertSystems. Cambridge, UK. Uschold, M., ed. EuroKnowledge Glossary. 1996b,  ESPRIT Project 9806, available fromftpftp.aiai.ed.ac.ukpubprojectseuroknowdelvrblsglossary.ps. Uschold, M. and Gruninger, M. 1996c. Ontologies Principles, Methods and Applications.Knowledge Engineering Review 112 van der Vet, P.E., Jong, H.d., Mars, N.J.I., Speel, P.H. and Stal, W.G.t. 1994a. PliniusIntermediate report. UTKBS9410. University of Twente, The Netherlands. van der Vet, P.E. and Mars, N.J.I. 1993. Structured System of Concepts for Storing, Retrievingand Manipulating Chemical Information. Journal of Chemical Information and ComputerSciences 33 564568. van der Vet, P.E., Speel, P.H. and Mars, N.J.I. 1994b. The Plinius ontology of ceramicmaterials. In ECAI94 Workshop on Comparison of Implemented Ontologies, 187205.Amsterdam. Voorhees, E.M. 1993. Using WordNet to Disambiguate Word Senses for Text Retrieval. InSixteenth Annual International ACM SIGIR Conference, 171180. Pittsburgh, PA ACM. Bibliography232 Weld, D.S. 1986. The Use of Aggregation in Causal Simulation. Artificial Intelligence 30 134. WeygandDurasevic, I., Nalaskowska, M. and Soll, D. 1994. Coexpression of EukaryotictRNASer and Yeast SeryltRNA Synthetase Leads to Functional Amber Suppression inEscherichia coli. Journal of Bacteriology 1761 232239. Whewell, W. 1847. The philosophy of the Inductive Sciences. London Parker. Winston, M.E., Chaffin, R. and Hermann, D.J. 1987. A Taxonomy of PartWhole Relations.Cognitive Science 11 417444. Wittgenstein, L. 1953. Philosophical Investigations. New York Macmillian. Woolf, H.B., ed. Websters new collegiate dictionary. 1981,  Springfield, MA G.  C. MerriamCompany. Xing, R. and Whitman, W.B. 1994. Purification and Characterization of the OxygenSensitiveAcetohydroxy Acid Synthase from the Archaebacterium Methanococcus aeolicus. Journal ofBacteriology 1765 12071213. The EMB Ontology  233 Appendix A. The EMB Ontology.  Thing EmbThing  GeneralConcept   Process Process  GeneralConcept Temperature   ProcessDuration   Participants Object     Process Transform  EmbProcess   Process TransformAsCategoryConversion  Transform Participants TransformWith   Object  instanceof TangibleThing Objects Created New  instanceof TangibleThing Objects Destroyed ObjectsDestroyed   Objects Converted Conversion     Process Break  TransformAsCategoryConversion Participants OriginalComponents   Objects Created New  instanceof Lysate Objects Destroyed ObjectsDestroyed   Objects Converted Conversion  Conditions forall x  populationelement x original this Cell x forall x  populationelement x member origcomp this Cellcomponent x forall x  populationelement x member origcomp this exists yand populationelement y original this isinside x y Effects forall x  populationelement x member origcomp this iscomponentof x new   Process Hybridization  TransformAsCategoryConversion   Process Denature  TransformAsCategoryConversion   The EMB Ontology  234 Process ChangeProperties  Transform   Process Amplify  ChangeProperties AmplifyMethod   default Pcr Participants Solution   Object  instanceof Dna   Process Boil  ChangeProperties   Process IncubateGrow  ChangeProperties Participants OriginalMixture  instanceof Mixture Condition forall x  populationelement x organismtogrow this organism x Effects I concentration organismtogrow this original this   Process Heat  ChangeProperties   Relation EmbRelation  GeneralConcept   Thing TangibleThing  EmbThing ObjectName  instanceof String Source   History  instanceof ObjectHistory   Thing Abstraction  EmbThing   Thing DecomposableObject  TangibleThing   Thing Stuff  TangibleThing   Thing NucleicAcid  DecomposableObject   Thing Dna  NucleicAcid SegmentOf  instanceof Gene or Dna or Plasmid DnaSource  Synthesized    ... or instanceof Bacteria Type  Chromosomal   Genomic    ...  WholeMolecule  Yes   No  Strands  DoubleStranded   SingleStranded The EMB Ontology  235  LabeledOrNot  No or instanceof Label SegmentsContained   StartPosition   EndPosition   PositionRelativeTo  Start Of Transcription   3 End   5 End    ...  LengthInBp   RestrictionSitesContained  List  instanceof NucleotideSequenceSite    Thing Rna  NucleicAcid   Thing Trna  Rna   Thing Mrna  Rna   Thing Gene  Dna GeneName   Mutation     Thing Plasmid  Dna PlasmidName   ResistantTo   CompatibleWith     Thing Probe  Dna LabeledOrNot   default T   Thing Organism  DecomposableObject Description  instanceof String   Thing Bacteria  Organism BacteriaName   Mutation   Parent   GenotypeElements     Thing E.Coli  Bacteria  The EMB Ontology  236  Thing S.Lividans  Bacteria   Thing L.Plantrum  Bacteria   Thing A.Caulinodans  Bacteria   Thing S.Cerevisiae  Bacteria   Thing Virus  Organism   Thing Bacteriophage  Virus   Thing Chemical  DecomposableObject   Thing NonOrganicChemical  Chemical   Thing RadioactiveLabel  DecomposableObject   Thing OrganicChemical  Chemical Labeled  No    ... or instanceof Label   Thing Protein  OrganicChemical ProteinType     Thing Enzyme  Protein   Thing OrganicCompound  OrganicChemical   Thing AminoAcid  OrganicCompound   Thing Nucleotide  OrganicCompound   Thing Sugar  OrganicChemical   Thing Cell  DecomposableObject   Thing CellComponent  DecomposableObject   Thing Membrane  CellComponent   Thing Nucleus  CellComponent   Thing Complex  DecomposableObject ComplexName  The EMB Ontology  237 instanceof String Participants Components  instanceof TangibleThing   Thing ContainmentComplex  ComplexClass Conditions forall y  member y rest comp this ispartof y first compthis   Thing CompartmentComplex  ContainmentComplex Conditions forall y  member y rest comp this isinside y first compthis   Thing AttachmentComplex  ComplexClass Object   ObjectToAttachTo   AttachmentType  Conditions isattachedto objecttoattach this objecttoattachto this   Nil SubstanceInConcentration  Substance   Concentration     Thing Population  Stuff   Thing HomogeneousPopulation  Population   Thing Mixture  DecomposableObject Population MixtureName  instanceof String IdentifiedComponents  List  instanceof SubstanceInConcentration  AnyUnidentifiedComponents  Yes   No  default Yes MixtureCharacter  Supernatant   Pellet    ...  MixtureFunction  Medium   Buffer    ...  Description     Thing Gel  Mixture MixtureCharacter   default Medium   Thing GrowthMedium  Mixture MixtureCharacter   The EMB Ontology  238 default Medium   Thing Buffer  Mixture MixtureCharacter   default Medium Ph     Thing Lysate  Mixture IdentifiedComponents   default Cell Components   Thing Equipment  DecomposableObject Model     Thing MeasuringEquipment  Equipment PropertyMeasured     Thing ChromatographyColumn  Equipment   Thing Spectrometer  MeasuringEquipment   Thing Microscope  MeasuringEquipment   Thing Scanner  MeasuringEquipment   Process Centrifuge  Equipment   Thing Plates  Equipment Contain     Process Combine  EmbProcess Objects Created New     Process Stain  Combine Participants StainWith     Process Mix  Combine Participants Reagent  instanceof TangibleThing Solution  instanceof Mixture Object  instanceof Mixture Objects Created New  The EMB Ontology  239 instanceof Mixture   Process Synthesize  Combine MethodUsed     Process Insert  Combine Participants InsertionTarget     Process Attach Physically  Combine AttachmentType  instanceof IsAttachedTo Participants ObjectToAttachTo   Objects Created New  instanceof AttachmentComplex   Process Electroblot  Attach   Process Mount  Attach AttachmentType   default MountOn   Process Ligate  Insert Participants InsertionTarget  instanceof Bacteria or NucleicAcid Object  instanceof Dna Objects Created New  instanceof Bacteria Objects Destroyed ObjectsDestroyed   Objects Converted Conversion  Conditions forall x y  and  x populationelement target this  ypopulationelement cells this isinside x y forall x y  and  x sitescontained object this  y sitescontained target this subset x y Effects forall x  populationelement x new NucleicAcid x forall x y  and  x populationelement object this  ypopulationelement newobject this issegmentof x y forall x y  and  x populationelement new  y populationelement cells this isinside x y   Process Aliquot  Mix   Process Treat  Mix   Process Fix  Mix The EMB Ontology  240   Process ApplyTo  Mix   Process Add  Mix Effects ispartof reagent this object this   Process LoadAdd To A Column  Mix Participants ChColumn  instanceof ChromatographyColumn Object  instanceof Mixture   Process Resuspend  Mix   Process Separate  EmbProcess Participants SeparateFrom  Conditions ispartof objecttoseparate this separatefrom this   Process Assess  EmbProcess PropertyToAssess   MethodUsed  Condition hasproperty objecttoassess this propertytoassess this Effects exists x and value x Record propertytoassess this x   Process Record  Assess Participants EquipmentUsed  instanceof MeasuringEquipment   Process Autoradiography  Record   Process MeasureQuantify  Assess Participants EquipmentUsed  instanceof MeasuringEquipment   Process Count  Measure FeatureToCount     Process ObserveDetermineExamine  Assess Participants EquipmentUsed  instanceof RecordingEquipment   Process PurifyRemove From Medium  Separate Participants Object  instanceof TangibleThing Solution  The EMB Ontology  241 instanceof Mixture SeparateFrom  Effects I concentration object this separatefrom this   Process Fragment  Separate Participants Components   Medium   Objects Created New  List  instanceof TangibleThing  Objects Destroyed ObjectsDestroyed  Conditions forall x y  and member x components this  y or objecttoseparate this medium this iscomponent x y Effects forall x  member x component this or exists s and  s setofnewobjects forall m  member m s newobjects s iscomponent xs fatenotknown x   Process Electrophoresis  Fragment Participants Medium  instanceof Gel   Process SpreadOnPlates  Fragment Participants SpreadOn  instanceof Plates   Process ExciseCut  Fragment   Process RemoveFrom  Fragment   Process Centrifuge  Fragment Speed   Participants EquipmentUsed  instanceof Equipment   Process Ultracentrifuge  Centrifuge   Process Elute  Purify PeakOfElution   Participants ChColumn  instanceof ChromatographyColumn Objects Created New     Process Dry  Purify   The EMB Ontology  242 Process Precipitate  Purify   Process Dialyze  Purify Participants Solution  instanceof Mixture DialyzeAgainst  instanceof Membrane   Process Harvest  Purify   Process Wash  Purify   Process Isolate  Purify   Process Dehydrate  Purify   Process ProcessComplex  EmbProcess Substeps Processes  instanceof EmbProcess   Process SequenceComplex  ProcessComplex ComplexGoal   Substeps  List  instanceof EmbProcess  Condition forall x y   processes this listof items x items y itemsbefore timeinterval x timeinterval y   Process CombinationComplex  ProcessComplex Conditions forall x y  and item x processes this item y processes this timeinterval x timeinterval y   Process TechniqueComplex  ProcessComplex Goal  instanceof EmbProcess MethodUsed  instanceof EmbProcess Condition subset Participants goal this Participants methodused this subset Effects goal x Effects methodused x   Process Chromatography  CombinationComplex Separate AddStep  instanceof Add EluteStep  instanceof Elute   Process ObjectHistory  ProcessComplex Object  instanceof TangibleThing OriginalProcess  instanceof EmbProcess OriginalObject   The EMB Ontology  243 FinalProcess  instanceof EmbProcess ComplexObjects  List  instanceof TangibleThing  Substeps Processes     Thing Quantity  Abstraction QuantityName     Thing Location  Abstraction   Thing NucleotideSequenceSite  Location   Relation Property  EmbRelation Object  instanceof TangibleThing PropertyValue  instanceof String or Number   Relation BinaryRelationInEmb  EmbRelation Arg1  instanceof TangibleThing Arg2  instanceof TangibleThing   Relation CompositionalProperty  Property   Relation IsHomogeneous  CompositionalProperty PropertyValue  T   False    Relation IsStructured  CompositionalProperty PropertyValue  T   False    Relation SpatialProperty  Property   Relation IsCompartmentalized  SpatialProperty PropertyValue  T   False    Relation IsASequence  SpatialProperty PropertyValue  T   False    Relation IsAnNDimensionalGrid  SpatialProperty PropertyValue  T   False   The EMB Ontology  244  Relation 1DimensionalGrid  IsAnNDimensionalGrid PropertyValue  T   False    Relation 2DimensionalGrid  IsAnNDimensionalGrid PropertyValue  T   False    Relation 3DimensionalGrid  IsAnNDimensionalGrid PropertyValue  T   False    Relation IsADoubleHelix  SpatialProperty PropertyValue  T   False    Relation CircularSequence  IsASequence PropertyValue  T   False    Relation LinearSequence  IsASequence 1DimensionalGrid PropertyValue  T   False    Relation PhysicalProperty  Property   Relation LengthOfObject  PhysicalProperty PropertyValue  instanceof Number   Relation AmountOfSubstance  PhysicalProperty PropertyValue  instanceof Number   Relation Weight  PhysicalProperty PropertyValue  instanceof Number   Relation FunctionalProperty  Property   Relation IsAlive  FunctionalProperty PropertyValue  T   False    Relation IsActive  FunctionalProperty PropertyValue  T   False   The EMB Ontology  245  Relation IsRadioactive  FunctionalProperty PropertyValue  T   False    Relation CompositionalRelation  BinaryRelationInEmb   Relation SpatialRelation  BinaryRelationInEmb   Relation FunctionalRelation  BinaryRelationInEmb   Relation IsExpressed  FunctionalRelation   Relation IsResistantTo  FunctionalRelation   Relation IsCompatible  FunctionalRelation   Relation IsNextTo  SpatialRelation   Relation IsInside  SpatialRelation Opposite     Relation Surrounds  SpatialRelation Opposite     Relation IsAttachedTo  SpatialRelation   Relation IsMountedOn  IsAttachedTo   Relation FixedIn  IsAttachedTo   Relation IsAPositionInSequence  SpatialRelation   Relation PartToWholeRelation  CompositionalRelation   Relation IsPortionOf  SpatialRelation PartToWholeRelation   Relation IsSegmentOf  IsPortionOf   Relation IsASite  SpatialRelation PartToWholeRelation   Relation IsPartOf  PartToWholeRelation   Relation IsComponentOf  PartToWholeRelation   Relation IsSoleBuildingBlock  PartToWholeRelation The EMB Ontology  246   Relation IsParticipantInAComplex  PartToWholeRelation   Thing Time  Abstraction   Thing TimeRange  Time DurationOf  instanceof Number StartTimeOf  instanceof Number EndTimeOf  instanceof Number   Training Set 247  Appendix B. The Training Set.  Appendices B and C contain the paragraphs and the corresponding frames from the training andthe test set correspondingly. We use the formalism presented in Chapter 5 for instance definitionwith the following additions that add to the operational semantics of instance definition To create names for instances that can be crossreferences from other frames, the setstatement is usedset variablename instancedefinitionFor example set protein1 makeinstance protein proteintype CheW We use parenthesis to delimit each instance and each instance name assignment. Forexampleset protein1makeinstance proteinproteintype CheWThe training set presented in this Appendix contains 20 paragraphs. The test set in Appendix Calso contains 20 paragraphs. Training Set 248Signal Transduction in bacteria CheW forms a reversible complex with the protein kinase CheAGegner, J.A. and Dahlquist, F.W.Proceedings National Academy of Sciences 88 Pages 750754Growth of Cells and Protein Purification.  The cheW and CheA  plasmids were expressed in E.coli  mutant strain RP3098 a flhAflhD  mutant, which was provided by J.S. ParkinsonUniversity of Utah. Cells were grown at 30oC in L broth....CheW purification is based on the procedure described by Stock et al. 14 with the followingmodifications. Cells were harvested by centrifugation at 5000rpm Beckman JA 10 rotor for 5min, resuspended in a small volume of buffer containing 10 mM Mes pH 6.0, 100 mM NaCl,0.5 mM EDTA, and 50 M phenylmethylsulfonyl fluoride, and then broken by French press. Thelysate was ultracentrifuged at 50,000 rpm Beckman Ti 60 rotor for 1 hr to remove cellulardebris. Protein was precipitated from the supernatant by adding NH42SO4 to 40 saturationand pelleted by centrifugation. The pellet was resuspended, dialyzed against the Mes buffer andloaded onto a Whitman DE52 column. Protein was eluted from the column with a lineargradient of 100250 mM NaCl. Fractions containing CheW were concentrated by precipitationwith 50 NH42SO4 and finally purified by using a Sephadex G100 column 2.5 x 160 cmequilibrated in the Mes buffer containing 0.02 NaN3. CheW was 99 pure as determined byCoomassie Blue staining.set bacteria1makeinstance Ecolistrain RP3098mutation tset protein1makeinstance proteinproteintype CheWset complex1makeinstance Complexclassname protein in bacteriacomponents list bacteria1 protein1set mixture1makeinstance mixtureidentifiedcomponents list complex1makeinstance mixturename L brothmixturefunction mediumset grow1makeinstance incubategroworiginalmixture mixture1object bacteria1set tc1makeinstance techniquecomplexobject bacteria1goal makeinstance harvestsolution mixture1method makeinstance centrifugeequipmentused Beckman JA 10 rotorspeed 5000 rpmprocessduration 5 min Training Set 249set buffer1makeinstance buffername Mesidentifiedcomponentslist Mes NaCl EDTA phenylmethylsulfonyl fluorideset resuspend1makeinstance resuspend solution buffer1object mixture1set break1makeinstance breakobject bacteria1set ultrac1makeinstance ultracentrifugeseparatefrom new break1object protein1set load1makeinstance loadobject new ultrac1column makeinstance chromatographycolumn name Whitman Training Set 250Coexpression of Eukaryotic tRNASer and Yeast SeryltRNA Synthetase Leads to FunctionalAmber Suppression in Escherichia coliIvana WeygandDurasevic, Malgorzata Nalaskowska, Dieter Soll176 19941. January                Pages 232239Separation of in vivoaminoacylated and uncharged tRNAs. S. pombe amber suppressor tRNA was isolated from E. coli JR104 transformed with pACYCvector carrying the tRNA gene and compatible plasmids with synthetase genes. Transformantswere grown under selective conditions in M9 glucose medium supplemented with ampicillin,chloramphenicol, and, when necessary, arginine and tryptophan. tRNA isolation was performedat 4oC and pH 4.5 45. The charged tRNA was electrophoresed on acidic 6.5 polyacrylamide8 M urea gels at 4oC for 24 h at 12 Vcm. The portion of the gel around the xylene cyanol dye,which contained the tRNA of interest, was electroblotted onto a Nytran membrane prior tohybridization with 532Plabeled oligodeoxyribonucleotide probes 1 x 106 to 2 x 106 cpmml.The hybridization and posthybridization washes were as described above.set gene1makeinstance genename tRNAset plasmid1makeinstance plasmidname pACYCsegmentscontained gene1set e1makeinstance Ecolistrain JR104set ins1makeinstance ligateobject plasmid1insertiontarget e1conversion insertiontarget newset medium1makeinstance mixturename M9 glucoseidentifiedcomponents ampicillin chloramphenicolarginine tryptophanmixturefunction mediumset mix1makeinstance mixtureidentifiedcomponents list new ins1 medium1set grow1makeinstance incubategroworiginalmixture mix1object new ins1set gel1makeinstance gelname acidic 6.5 polyacrylamide8 M ureaset el1makeinstance electrophoresismedium gel1object new ins1 Training Set 251temperature 4degCprocessduration 24hnew portion of the gel around the xylene cyanol dyeset mem1makeinstance membranename Nytranset blot1makeinstance electroblotobject new el1objecttoattachto mem1set probe1makeinstance probename oligodeoxyribonucleotidelabeledornot 5sup32Pset hybr1makeinstance hybridizationobject new el1transformwith probe1 Training Set 252Regulation of Escherichia coli purA by Purine Repressor, One Component of a Dual ControlMechanismBin He, Howard Zalkin176 19944. FebruaryPlasmid constructionTo clone the purA control region, a segment of purA from nucleotides 478 to 103, numberedrelative to the start of transcription Fig. 1, was amplified by PCR 20 from chromosomal DNAof E. coli W3110. The amplified fragment, containing SmaI and BamHI adapters, was ligatedinto the SmaI and BamHI sites of pRS415 to yield a purAlacZ transcriptional fusion in plasmidpBH599. Plasmid pRS415 contains an intact lacZ coding sequence and ribosomebinding site butlacks a promoter. Plasmids pBH140 and pBH170 were constructed as a source of the purAcontrol region for the gel retardation assay. First, a 140bp fragment of purA from nucleotides 193 to 54 was amplified by PCR. Second, this fragment, containing EcoRI and BamHI adapters,was subcloned into the EcoRIBamHI site of pUC118, resulting in plasmid pBH140. In a similarway, a 178bp fragment from nucleotides 72 to 103 was constructed and was ligated into theEcoRI and BamHI sites of pUC118 to give plasmid pBH170.set e1makeinstance Ecolistrain W3110set dna1makeinstance dnasource e1type chromosomalset gene1makeinstance genename purAsegmentof dna1set fr1makeinstance dnasegmentof gene1startposition 478endposition 103positionrelativeto start of the transcriptionrestrictionsitescontained SmaI BamHIset amp1makeinstance amplifyobject fr1set plasmid1makeinstance plasmidname  pRS415segmentscontained SmaI BamHIset plasmid2makeinstance plasmidname pBH599segmentscontainedpurAprm1lacZ transcriptional fusionset lig1makeinstance ligateobject fr1 Training Set 253insertiontarget plasmid1new plasmid2conversion insertiontarget newset fr2makeinstance dnasegmentof gene1startposition 193endposition 54lengthinbp 140positionrelativeto start of the transcriptionrestrictionsitescontained EcoRI BamHIset amp2makeinstance amplifyobject fr2set plasmid3makeinstance plasmidname  pUC118segmentscontained EcoRI BamHIset plasmid4makeinstance plasmidname pBH140set lig2makeinstance ligateobject fr2insertiontarget plasmid3new plasmid4conversion insertiontarget newset fr3makeinstance dnasegmentof gene1startposition 72endposition 103lengthinbp 176positionrelativeto start of the transcriptionrestrictionsitescontained EcoRI BamHIset amp3makeinstance amplifyobject fr3set plasmid5makeinstance plasmidname pBH170set lig3makeinstance ligateobject fr3insertiontarget plasmid3new plasmid5conversion insertiontarget new Training Set 254Translation Initiation Factor IF1 Is Essential for Cell Viability in Escherichia coliHelen S. Cummings, John W. B. Hershey176 19941. January                Pages 198205Strain constructionsSelection of M13mp11CatinfA lysogens was basically as described elsewhere 3, 21. Therecipient strain HSC920 Table 1 was grown to midlog phase at 370C. BacteriophageM13mp11CatinfA was heated at 700C for 20 min to kill host bacteria prior to incubationwith the recipient cells at multiplicities of infection of 102, 103, and 104. Phage and recipientcells were mixed and incubated at 370C for 60 min with gentle shaking, and lysogens wereselected by spreading ca. 1 x 107 cells on LB plates containing IPTG and either Cm or Spc.set bac1makeinstance bacteriophagename lysogendescription M13mp11CatinfAOmegaset e1makeinstance Ecolistrain HSC920set grow1makeinstance incubategrowobject e1temperature 37degCset heat1makeinstance heattemperature 70degCprocessduration 20minobject bac1set mix1makeinstance mixtureidentifiedcomponents list bac1 e1set grow2makeinstance incubategrowobject mix1temperature 37degCprocessduration 60minset tc1makeinstance techniquecomplexobject bac1goal selectmethod makeinstance spreadonplatesspreadon makeinstance platesname LB platescontain IPTG and either Cm or Spc Training Set 255Purification and Characterization of the OxygenSensitive Acetohydroxy Acid Synthase from theArchaebacterium Methanococcus aeolicusRuye Xing, William B. Whitman176 19945. March                  Pages 12071213vii Hydroxyapatite chromatographyA hydroxyapatite column 2.2 by 5 cm was equilibrated with basic buffer. After application ofthe diluted enzyme from the phenyl Sepharose chromatography step, the column was washedwith 20 ml of basic buffer and a linearly increasing gradient generated from 40 ml of basic bufferand 40 ml of 0.5 M KH2PO4 pH 7.5 in basic buffer at a flow rate at 4 mlh. Enzyme activityeluted as a single peak at about 0.2 M KH2PO4. Fractions containing activity were pooled 17ml and dialyzed overnight against 2 liters of 0.1 M TrisCl buffer pH 7.5 containing 20volvol glycerol, 0.5 mM dithiotreitol, and 0.5 mM disodium EDTA. Purified enzyme wasstored at 200C.set col1makeinstance chromatographycolumnname hydroxyapatiteset buffer1makeinstance buffername basicset load1makeinstance loadsolution buffer1column col1set load2makeinstance loadsolution the diluted enzyme from the phenyl Sepharose chromatography stepcolumn col1set mix1makeinstance mixtureidentifiedcomponents buffer1 KHinf2POinf4set chrom1makeinstance chromatographyaddstep makeinstance loadsolution mix1column col1elutestep makeinstance eluteobject enzyme activitypeakofelution 0.2 M KHinf2POinf4new fractions containingactivityset buffer2makeinstance buffername TrisClpH 7.5identifiedcomponents glycerol dithiotreitol disodium EDTAset dialyze1makeinstance dialyzeobject new elutestep chrom1outsidebuffer buffer2 Training Set 256The Cell Envelope Structure of the LipopolysaccharideLacking GramNegative BacteriumSphingomonas paucimobilisSatoko Kawasaki, Ryozo Moriguchi, Kachiko Sekiya, Toyotsugu Nakai, Eriko Ono, KatsumiKume, Kazuyoshi Kawahara176 19942. January                Pages 284290Immunogoldlabeling electron microscopy. i Wholemount method The cell suspensionwas mounted on the carbonFormvarcoated grid and dried. The grid was incubated in PBScontaining 5 BSA for 30 min and then in PBS containing the purified antiGSL4A IgG for 30min at room temperature. Subsequently the grid was incubated in PBS containing 3 goat  antirabbit IgG conjugated to 10nm gold particles Enzymed Laboratories, Inc., San Francisco,Calif. for 30 min at room temperature. The preparation was examined with electronmicroscopes, JEM1200EX JEOL, Tokyo, Japan and H500 Hitachi, Tokyo, Japan.ii Thinsection postembedding methodCells were fixed first in 2.5 glutaraldehyde in PBS for 1 h and postfixed in 1 OsO4 for 1 h,dehydrated in graded ethanols and propylene oxide, and embedded in epoxy resins. Ultrathinsections were preparated by an ultramicrotome LKB, Stockholm, Sweden and deposited onnickel grids. The same procedure used for the wholemount method was applied, except for theadditional pretreatment with 1 H2O2 for 3 min before goldlabeled antiIgG staining. After theimmunogold staining, the sections were stained with 4 uranyl acetate and 0.4 lead citrate in0.1 M NaOH.set mount1makeinstance mountobject cellsuspensionobjecttoattachto carbonFormvarcoated gridset dry1makeinstance dryobject new mount1set buffer1makeinstance buffername PBSidentifiedcomponents purified antiGSL4A IgGset grow1makeinstance incubategrowobject new mount1originalmixture makeinstance mixture    identifiedcomponents buffer1 new mount1processduration 30minset buffer2makeinstance buffername PBSidentifiedcomponents goat antirabbit IgG 10nm gold particlesset grow1makeinstance incubategrowobject new mount1originalmixture makeinstance mixture    identifiedcomponents buffer2 new mount1processduration 30mintemperature room temperature Training Set 257set ex1makeinstance observeequipmentused makeinstance microscopemodel JEM1200EXset ex1makeinstance observeequipmentused makeinstance microscopemodel H500 Training Set 258The Cell Envelope Structure of the LipopolysaccharideLacking GramNegative BacteriumSphingomonas paucimobilisSatoko Kawasaki, Ryozo Moriguchi, Kachiko Sekiya, Toyotsugu Nakai, Eriko Ono, KatsumiKume, Kazuyoshi Kawahara176 19942. January                Pages 284290Fluorescence microscopyCells from an overnight culture were harvested and washed with PBS. Cell suspension in anappropriate concentration was dried on slide glass plate, fixed with acetone, and treated withpurified antiGSL4A IgG for 30 min at room temperature. Next, it was treated with fluoresceinconjugated goat antirabbit IgG The Binding Site Ltd., Birmingham, United Kingdom in 100fold dilution with PBS for 1 h at room temperature. After the reaction, the preparation was sealedunder cover glass in the mounting medium, Immunon Lipshaw, Pittsburgh, Pa., and observedwith a fluorescence microscope BH2 Olympus, Tokyo, Japan.set bacteria1makeinstance bacteriaset buffer1makeinstance buffername PBSset mix1makeinstance mixtureidentifiedcomponents bacteria1 buffer1set harvest1makeinstance harvestobject bacteria1set wash1makeinstance washobject bacteria1solution buffer1set dry1makeinstance dryobject bacteria1solution mix1set fix1makeinstance fixobject bacteria1reagent acetoneset treat1makeinstance treatobject bacteria1reagent purified antiGSL4A IgGprocessduration 30 mintemperature room temperatureset mix2makeinstance mixtureidentifiedcomponents buffer1 fluoresceinconjugated goat antirabbitIgGset treat2makeinstance treatobject bacteria1 Training Set 259reagent mix2processduration 1htemperature room temperatureset observe1makeinstance observeobject new treat2equipmentused fluorescence microscope BH2 Olympus, Tokyo, Japan Training Set 260New Outer MembraneAssociated Protease of Escherichia coli K12Andreas Kaufmann, YorkDieter Stierhof, Ulf HenningBacterial strains, plasmids, phage, and growth conditionsThe bacterial strains used are listed in Table 1. For most cloning and sequencing experiments,plasmids pUC18 or 19 58 were used. pTK61 21, a derivative of pBR322 1, carries a hybridgene coding for the B subunit of the cholera toxin of Vibrio cholerae fused to the  subunit of theimmunoglobulin A IgA protease of Neisseria gonorrhoeae and specifies resistance toampicillin. In order to have this plasmid together with the cloned ompP gene in the same cell,ompP was transferred to pACYC184 2, effecting resistance to chloramphenicol. An E. coligene bank in gt11 59 was purchased from Clontech Laboratories, Palo Alto, Calif. The donorfor this library was the K12 strain W1485 26. Cells were grown in LB medium 30,supplemented, when required, with glucose 0.5, maltose 0.5, for cells to be infected withphage , isopropylthiogalactoside IPTG 1 mM, ampicillin 100 gml, or chloramphenicol25 gml.set plasmid1makeinstance plasmidname pUC18set plasmid2makeinstance plasmidname 19 58set plasmid3makeinstance plasmidname pTK61source makeinstance plasmid name pBR322segmentscontained a hybrid gene coding for the B subunit of the cholera toxinof Vibrio cholerae fused to the beta subunit of the immunoglobulin A IgA proteaseof Neisseria gonorrhoeaeresistantto amplicillinset gene1makeinstance genename ompPset plasmid4makeinstance plasmidname pACYC184set insert1makeinstance insertobject gene1target plasmid4set ec1makeinstance ecolistrain W1485set mix1makeinstance growthmediumname LBidentifiedcomponents glucose maltoseisopropylthiogalactoside ampicillin chloramphenicolset grow1makeinstance incubategrowobject ec1originalmixture mix1 Training Set 261 Training Set 262Thermoinducible Filamentation in Escherichia coli due to an Altered RNA Polymerase betaSubunit Is Suppressed by High Levels of ppGppDaniel Vinella, Richard Dari176 19944. February               Pages 966972Miscellaneous techniquesOptical density was measured at 600 nm in a PM6 spectrophotometer with a 1cm optical path.Morphological observations were made with a Jenamed phasecontrast microscope Zeiss, Jena,Germany. DAPI 4,6diamidino2phenylindole staining was carried out as describedpreviously 18.set measure1makeinstance measurepropertytoassess opticaldensityequipmentused PM6 spectrophotometer with a 1cm optical pathset observe1makeinstance observepropertytoassess morphologyequipmentused Jenamed phasecontrast microscope Zeiss, Jena, Germanyset stain1makeinstance stainstainwith DAPI 4prm1,6diamidino2phenylindole Training Set 263Physical and Genetic Map of the Serpulina hyodysenteriae B78T ChromosomeRichard L. Zuerner, Thaddeus B. Stanton176 19944. February               Pages 10871092Southern blot analysisFollowing gel electrophoresis, genomic DNA was fragmented in the gel by UV irradiation,denatured, and transferred to nylon membranes HybondN Amersham Corp., ArlingtonHeights, Ill. 38. DNA hybridization analysis was done as described previously 39, 40.Radioactive probes were synthesized either with 32PdATP ca. 3,000 Cimmol by nicktranslation or with 32PUTP ca. 650 Cimmol ICN Pharmaceuticals, Irvine, Calif. byrunoff transcription 39. Probes were synthesized from either genomic restriction fragmentsisolated from agarose gels with Gelase Epicenter Technologies, Madison, Wis., specific clonedDNA, or PCR products.set dna1makeinstance dnatype genomicset fragment1makeinstance fragmentobject dna1medium gelset tc1makeinstance techniquecomplexobject dna1goal  fragment1method UV irradiationset den1makeinstance denatureobject dna1set att1makeinstance attachobject dna1objecttoattachto nylon membranesset probe1makeinstance probesource synthesized with alphasup32PdATP ca.3,000 Cimmol by nicktranslationset probe2makeinstance probesource synthesized with alphasup32PUTP ca.650 Cimmol Training Set 264Regulation of the Bacillus anthracis Protective Antigen Gene CO2 and a transActing ElementActivate Transcription from One of Two PromotersTheresa M. Koehler, Zhihao Dai, Mary KaufmanYarbrayTABLE 1. Plasmids and strains used in this study coli DH5F with selection for ampicillinresistance. Plasmid pXO1 fragments were cloned into the multicloning site on pUTE29 togenerate pUTE33, pUTE34, and pUTE35 Table 1 see Fig. 5. Bifunctional plasmids containingpXO1 DNA inserts were transformed into the dam4 E. coli strain GM1684. Plasmid DNA fromthe E. coli GM1684 clones was electroporated into B. anthracis with selection for tetracyclineresistance.set p1makeinstance plasmidname pXO1set p2makeinstance plasmidname pUTE29segmentscontained multicloning siteset p3makeinstance plasmidname pUTE33set p4makeinstance plasmidname pUTE34set p5makeinstance plasmidname pUTE35set c1makeinstance ligateobject p1insertiontarget p2new p3set c2makeinstance ligateobject p1insertiontarget p2new p4set c3makeinstance ligateobject p1insertiontarget p2new p5set e1makeinstance ecolistrain GM1684set t1makeinstance ligateobject p1insertiontarget e1set d1makeinstance DNAsource e1type plasmid Training Set 265set o1makeinstance organismname B.anthracisset i1makeinstance insertobject d1target o1set tc1makeinstance techniquecomplexgoal i1method electroporate Training Set 266DnaK Mutants Defective in ATPase Activity Are Defective in Negative Regulation of the HeatShock Response Expression of Mutant DnaK Proteins Results in FilamentationJohn S. McCartyFor the experiments examining heat shock protein expression, steadystate expression at 30oCwas determined ca. 5 min prior to the temperature shift by aliquoting 0.5 ml of culture into 0.5ml of warm medium containing 10 Ci of 35Smethionine. Protein was precipitated by additionof 110 volume of 100 trichloroacetic acid followed by incubation on ice for at least 30 min.Protein was pelleted by spinning for at least 30 min in an Eppendorf centrifuge and washed withacetone at 20oC. Pellets were dried and resuspended in 100 ml of 1x loading buffer, boiled for 5min, vortexed, and spun in an Eppendorf centrifuge for 10 min. The specific activity of the lysatewas determined by counting an aliquot in Hydrofluor National Diagnostics with a scintillationcounter Beckman. Proteins were analyzed by separation by 10 PAGE 27. For each sample,500,000 cpm was loaded per lane, and bands were visualized by autoradiography with Kodak XOmat films.set c1makeinstance cellset m1makeinstance mixturemixturecharacter mediumidentifiedcomponents sup35Smethionineset a1makeinstance aliquotsolution m1object c1set p1makeinstance proteinset add1makeinstance addobject p1reagent trichloroacetic acidset inc1makeinstance incubategrowtemperature iceduration 30 minobject p1set tc1makeinstance techniquecomplexgoal precipitatemethod add1 inc1set cent1makeinstance centrifugeobject p1equipment Eppendorf centrifugeduration 30 minset w1makeinstance washobject p1solution acetonetemperature 20degCset d1 Training Set 267makeinstance dryobject p1set b1makeinstance buffername 1x loading bufferset r1makeinstance resuspendobject p1solution b1set boil1makeinstance boilobject p1duration 5 minset cent2makeinstance centrifugeobject p1equipment Eppendorf centrifugeduration 10 minset count1makeinstance countpropertytoassess specific activity of the lysateequipmentused scintillation counter Beckmanfeaturetocount aliquotset el1makeinstance electrophoresismedium PAGEobject p1set autor1makeinstance autoradiographyequipmentused Kodak XOmat filmsobject newobjects el1 Training Set 268Analysis of the Replication Region of a Mycobacterial Plasmid, pMSC262Minghui Qin, Hatsumi Taniguchi, Yasuo MizuguchiCloning and sequencing of DNAStandard procedures were used for cleavage, ligation, and transformation of DNA 20. Todetermine the nucleotide sequence of the replication region derived from mycobacterial plasmidpMSC262, pYT935 was employed instead of pYT937 5 Fig. 1. This plasmid contains a 2.5kbHincIIPstI fragment of the replication region of pMSC262 and is more convenient than a 2.3kbHindIIIPstI fragment of pYT937 when the commercially available digestion kit is used. The 2.5kb PstIHincII fragment was excised from pYT935 and cloned into M13mp18 and M13mp19phage vectors. By using restriction endonuclease sites and an exonuclease IIImung beannuclease digestion kit Takara Shuzo Co. Ltd., Kyoto, Japan, sets of deletion derivatives wereconstructed. Furthermore, as spontaneous deletion and rearrangements occurred around the SphIsite, we obtained deletion fragments from the PvuII site, by using the kit described above, andalso smaller fragments 0.5 kb by using NarI nucleotide positions np 29, 270, and 1144,HindIII np 210, SphI np 617, PvuI np 878 and 1486, and PvuII np 1231 restrictionendonucleases in the PvuIIHindIII region Fig. 2. We determined the nucleotide sequences ofthese fragments on both strands by the dideoxynucleotide chain termination method FIG. 1.Structures of MycobacteriumE. coli shuttle vectors pYT937, pYT935, and pMT933. The blacksections show a 2.3kb fragment or a 2.5kb fragment of pMSC262 whose sequence has beendetermined. The white and crosshatched sections denote E. coli vectors pACYC177,pACYC184, and pUC19. The designation ori indicates a replication origin of pACYC177 orpACYC184.set p2makeinstance plasmidname pMSC262type mycobacterialset f1makeinstance DNAfragmentsegmentof replication regionsource p2lengthinbp 2500sitescontained HincII PstIset p1makeinstance plasmidname pYT935segmentscontained f1set ex1makeinstance exciseseparatefrom p1newobjects f1set ph1makeinstance bacteriophagename M13mp18set ph2makeinstance bacteriophagename M13mp19set c1makeinstance ligateobject f1 Training Set 269target ph1set c2makeinstance ligateobject f1target ph2set ob1makeinstance observepropertytoassess nucleotide sequencesmethodused dideoxynucleotide chain termination method Training Set 270Streptomyces lividans Glycosylates the Linker Region of a 1,4Glycanase from CellulomonasfimiEdgar Ong, Douglas G. Kilburn, Robert C. Miller, Jr., R. Antony J. WarrenBacterial strains and plasmidsE. coli JM101 and DH5F, S. lividans 66 TK64, and plasmids pIJ680cex, pTZEO7 PTIS,pTLM1, and pUC121.1cex PTIS were described previously 27, 39, 41, 48, 49, 65 PTISstands for portable translation initiation site, a DNA adapter for the E. coli consensus ribosomebinding site, available commercially from Pharmacia.set e1makeinstance Ecolistrain JM101set e2makeinstance Ecolistrain DH5alphaFprm1set s1makeinstance Slividansstrain 66 TK64set p1makeinstance plasmidname pIJ680cexset p3makeinstance plasmidname pTLM1set p2makeinstance plasmidname pTZEO7segmentscontained PTISset p4makeinstance plasmidname pUC121.1cexsegmentscontained PTIS Training Set 271Autogenous Translational Regulation of the Ribosomal MvaL1 Operon in the ArchaebacteriumMethanococcus vannieliiMarkus Hanner, Christine Mayer, Caroline Kohrer, Georg Golderer, Peter Grobner, WolfgangPiendlRadiolabelled proteins were separated by polyacrylamide gel electrophoresis on sodium dodecylsulfate SDS15 to 25 polyacrylamide gradient gels 34. After autoradiography, the bandswere cut out of the dried gel and radioactivity was measured by liquid scintillation counting.Alternatively, the bands in the autoradiograms were quantified with a scanner Vilber LourmatBioprofil.set p1makeinstance proteinlabeled yesset g1makeinstance gelname sodium dodecyl sulfate SDS15 to 25 polyacrylamide gradient gelsset el1makeinstance electrophoresismedium g1object p1set autor1makeinstance autoradiographyobject newobjects el1set cut1makeinstance excisecutobject newobjects el1separatefrom g1set measure1makeinstance measurepropertytoassess radioactivitymethodused liquid scintillation countingset measure2makeinstance measurepropertytoassess radioactivityequipmentused scanner Vilber Lourmat Bioprofil Training Set 272Isolation of the hemF Operon Containing the Gene for the Escherichia coli AerobicCoproporphyrinogen III Oxidase by In Vivo Complementation of a Yeast HEM13 MutantBarbara Troup, Martina Jahn, Christoph Hungerer, Dieter JahnBacterial and yeast strains and growth conditionsAll strains used in this study are described in Table 1. E. coli strains were cultured on LuriaBertani medium at 37oC 34. Ampicillin was used at a concentration of 100 gml. The hemedeficient mutants of S. cerevisiae were cultured on YPD medium containing 50 g of hemin perml 38, 49.set e1makeinstance Ecoliset m1makeinstance growthmediumname LuriaBertaniidentifiedcomponents amplicillinset g1makeinstance incubategrowobject e1originalmixture makeinstance mixture identifiedcomponents e1 m1temperature 37 deg Cset s1makeinstance Scerevisiaemutation hemedeficientset m2makeinstance growthmediumname YPDidentifiedcomponents heminset g2makeinstance incubategrowobject s1originalmixture makeinstance mixture identifiedcomponents s1 m2 Training Set 273Identification of a Putative Alternate Sigma Factor and Characterization of a MulticomponentRegulatory Cascade Controlling the Expression of Pseudomonas syringae pv. syringae Pss61 hrpand hrmA GenesYingxian Xiao, Sunggi Heu, Jinseong Yi, Yang Lu, Steven W. HutchesonNucleotide sequence analysisThe 2.3kb EcoRI fragment carrying complementation group II was cloned into pBluescriptIISK Stratagene, La Jolla, Calif., and nested deletion derivatives were created by usingexonuclease III after KpnI and XhoI digestion of the isolated plasmid Stratagene. Forcomplementation group XIII, the inclusive 3kb BamHIHindIII fragment as well as a set of PstI,SstI, and EcoRV fragments internal to the BamHIHindIII fragment were also cloned intopBluescriptII SK . For both regions, the constructed plasmids were transformed into E. coliDH5, and plasmids from randomly selected colonies were isolated by using acidphenol 59aor a commercial plasmid isolation kit QIAGEN, Chatsworth, Calif.. The nucleotide sequencewas obtained by using Sequenase 2.0 United States Biochemical Corp., Cleveland, Ohio,doublestranded templates, and, in most cases, vector primer sites. Gaps apparent in the sequenceof either strand after compilation of the data were filled by using synthetic oligonucleotideprimers. Compressions were resolved by using dITP in the reaction mixtures. Sequence datawere analyzed by using the algorithms of the University of Wisconsin Genetics Computer Grouppackage 7.2 10.set f1makeinstance DNAfragmentsitescontained EcoRIlengthinbp 2300segmentscontained complementation group IIset f2makeinstance DNAfragmentsitescontained BamHI HindIIIlengthinbp 3200set f3makeinstance DNAfragmentsitescontained  PstI SstI EcoRVset p1makeinstance plasmidname pBluescriptII SKsupset c1makeinstance ligateobject f1target p1set c2makeinstance ligateobject f2target p1set c3makeinstance ligateobject f3target p1set e1makeinstance Ecolistrain DH5alpha Training Set 274set ins1makeinstance insertobject new c2target e1set ins2makeinstance insertobject new c3target e1set rec1makeinstance recordpropertytoassess nucleotide sequenceequipmentused Sequenase 2.0 United States Biochemical Corp., Cleveland,Ohioset observe1makeinstance observepropertytoassess nucleotide sequencemethodused the algorithms of the University of Wisconsin Genetics ComputerGroup package 7.2 Training Set 275Lactobacillus plantarum ldhL Gene Overexpression and DeletionThierry Ferain, Dominique Garmyn, Nathalie Bernard, Pascal Hols, Jean DelcourTransformationElectrotransformation of E. coli and L. plantarum was performed as described by Dower et al.10 and Josson et al. 18, respectively. PCR amplification of DNAL. plantarum chromosomal DNA was amplified by PCR with 1 to 5 g of DNA in a final volumeof 100 l containing deoxyribonucleoside triphosphates 200 M each, oligonucleotides 25 Meach, 50 M tetramethylammonium chloride, and 2.5 U of Taq DNA polymerase BoehringerMannheim and the buffer supplied with the enzyme. Amplification was performed as follows,with a LEP Scientific PREMIII heating block cycle 1, 99oC for 5 min, 40oC for 1 min, and 72oCfor 2 min cycles 2 to 29, 92oC for 1 min, 42oC for 1 min, and 72oC for 2 min and cycle 30, 92oCfor 1 min, 42oC for 1 min, and 72oC for 10 min. Singlestranded DNA for sequencing reactionswas synthesized by asymmetric PCR adapted from the work of McCabe 25.set e1makeinstance Ecoliset l1makeinstance Lplantrumset dna1makeinstance DNAtype chromosomalsource l1set m1makeinstance mixtureidentifiedcomponents deoxyribonucleoside triphosphates oligonucleotides tetramethylammonium chloride Taq DNA polymerase Boehringer Mannheim buffer supplied with the enzymeset amp1makeinstance amplifyobject dna1solution m1method PCRset sc1makeinstance sequencecomplexobject dna1complexgoal amp1substeps cycle 1, 99 deg C for 5 min, 40 deg C for 1 min, and 72 deg C for 2min    cycles 2 to 29, 92 deg C for 1 min, 42 deg C for 1 min, and 72 deg Cfor 2 min    cycle 30, 92 deg C for 1 min, 42 deg C for 1 min, and 72 deg C for10 minset d2makeinstance DNAcomposition singlestrandedset s1makeinstance synthesizeobject d2method asymmetric PCR adapted from the work of McCabe Training Set 276Azorhizobium caulinodans Respires with at Least Four Terminal OxidasesChristopher L. Kitts, Robert A. LudwigBacterial strains, mutant isolations, and growth mediaA. caulinodans wildtype strain ORS571 16 was subjected to vector insertion mutagenesis withplasmid pVP2021 as previously described 15. The random insertion library so obtained wasscreened for mutants unable to oxidize the artificial esup donor tetramethylpphenylenediamine TMPD. Candidate colonies on agar plates were transferred to sterileWhatman no. 1 filters, which were then soaked 10 min in a 1 TMPD0.1 ascorbic acidsolution. Strains which failed to show diagnostic blue spots on filters were purified, retested, andscreened for additional phenotypes see text. Azorhizobium strains were cultured in either richGYPCS 9 or basal 9 minimal defined medium with 0.2 dipotassium succinate as the Csource and 10 mM either ammonium or nicotinate as the N source. Defined MM mediumconsisted of basal salts plus 0.2 succinate, 0.2 dglucose, 0.1 lglutamate, and 10 mMammonium sulfate.set a1makeinstance Acaulinodansstrain ORS571set p1makeinstance plasmidname pVP2021set i1makeinstance insertobject p1target a1set sp1makeinstance mountobject candidate colonies on agar platesobjecttoattachto sterile Whatman no.1 filtersset resuspend1makeinstance resuspendobject new sp1solution makeinstance mixture identifiedcomponents TMPD   ascorbic acidset purify1makeinstance purifyobject new resuspend1set bacteria1makeinstance bacteriastrain Azorhizobiumset m2makeinstance growthmediumidentifiedcomponents dipotassium succinate ammonium nicotinatename GYPCSset m4makeinstance growthmediumname basal minimal defined MMidentifiedcomponents basal salts succinate dglucose lglutamate ammonium sulfateset m3 Training Set 277makeinstance growthmediumidentifiedcomponents m4 dipotassium succinate ammonium nicotinateset g1makeinstance incubategrowobject bacteria1originalmixture makeinstance mixture identifiedcomponents bacteria1m2set g2makeinstance incubategrowobject bacteria1originalmixture makeinstance mixture identifiedcomponents bacteria1m3 Training Set 278Transmembrane Signalling by a Hybrid Protein Communication from the Domain ofChemoreceptor Trg That Recognizes SugarBinding Proteins to the KinasePhosphatase Domainof Osmosensor EnvZjames W. Baumgartner, Changhoon Kim, Renee E. Brissette, Masayori Inouye, Chankyu Park,Gerald L. HazelbauerBacterial strains and plasmidsThe rbsB102Tn10 insertion was introduced into RU1012 33 by P1 transduction, inactivatingrbsB, the gene for ribosebinding protein, by insertion of the transposon and inactivating rbsK,the gene for ribokinase 16, by a polar effect, creating strain CP919. This strain containsompClacZ1025 and envZKmr 33. In addition, as a derivative of MC4100, which isflhD5301 30, the strain is nonmotile and should not express the genes related to motility andchemotaxis, including the chemoreceptor genes. Transformation with pRB020 see below orpAI12, a pACYC184 derivative 16 carrying intact rbsB and rbsK expressed constitutively froma plasmid promoter, created CP920 and CP924, respectively. Transformation of CP920 withpAI12 created CP921. Plasmid pRB020 codes for Trz1. It is essentially plasmid pGB1 4, aderivative of pKK2232 that carries trg under the control of the tac promoter and also carrieslacIsupq, in which the segment trg that codes for the cytoplasmic domain of Trg is replaced bythe comparable segment of envZ, creating a gene that codes for the protein diagrammed in Fig. 1.The construction of pRB020 required that pGB1 be treated to remove its sole NdeI site. This wasaccomplished by digestion with that endonuclease and then treatment with mung bean nucleaseand ligation. Elimination of the NdeI site, which is located outside of the genes carried on theplasmid, did not have a discernible effect on the LacImediated expression of trg. The pGB1derivative lacking the NdeI site was cleaved with AflII and StuI, and the resulting 0.7kbfragment of trg was replaced by one in which an NdeI site had been previously introduced atcodons 266 and 267 by oligonucleotidedirected mutagenesis, to create pJB34. Plasmids pDR2008 and pJB34 were digested with HindIII and NdeI, and the 1kb fragment of the former wasjoined to the 7kb fragment of the latter to yield pRB020.set b1makeinstance bacteriastrain RU1012set g1makeinstance genename rbsBmutation rbsB102Tn10set s1makeinstance bacteriastrain CP919genotypeelements PhiompClacZ1025 DeltaenvZKmsuprdescription nonmotileset i1makeinstance ligateobject g1target b1new s1set t1makeinstance transformascategoryconversionoriginal makeinstance bacteria strain MC4100new s1 Training Set 279set b1makeinstance bacteriastrain CP920set b2makeinstance bacteriastrain CP924set b3makeinstance bacteriastrain CP921set p1makeinstance plasmidname pRB020set p2makeinstance plasmidname pAI12segmentscontained intact rbsB and rbsKset t2makeinstance transformascategoryconversionoriginal makeinstance plasmid name pACYC184new p2set i2makeinstance ligateobject p1target s1new b1set i3makeinstance ligateobject p2target s1new b2set i3makeinstance ligateobject p2target b1new b3set p3makeinstance plasmidname pRB020segmentscontained Trz1set p4makeinstance plasmidname pGB1segmentscontained trg lacIsupqset t3makeinstancetransformascategoryconversionoriginal makeinstance plasmidname pKK2232new p2set r1makeinstance removeobject NdeI siteseparatefrom p4set cl1makeinstance excisecutobject newobjects r1 Training Set 280components AflII StuIset t4makeinstancetransformascategoryconversionoriginal newobjects cl1new makeinstance plasmid name pJB34set comb1makeinstance combineobject list new t4    makeinstance plasmidname pDR200newobject p3Test Set281Appendix C. The Test Set.Genetic and Molecular Characterization of the Escherichia coli secD Operon and Its ProductsKit Johnson Pogliano, Jon BeckwithReagents35SMethionine and 35SdATP were purchased from Amersham Corporation Arlington Heights,Ill.. Sequenase U.S. Biochemicals, Cleveland, Ohio was used for all sequencing reactions,which were performed on doublestranded plasmid DNA. Restriction enzymes, T4 DNApolymerase, and T4 DNA ligase were purchased from New England Biolabs, Inc. Beverly,Mass. and used as suggested by the manufacturer. Antilactamase antibody was purchasedfrom 5symbl3, Inc. Boulder, Col. antiserum which recognized both DegP and maltosebinding protein MBP was prepared by K. Strauch antialkaline phosphatase was prepared byC. Gardel antiOmpA was kindly provided by Carol Kumamoto.set c1makeinstance chemicalname 35SMethioninesource Amersham Corporation Arlington Heights, Ill.set c2makeinstance chemicalname 35SdATPsource Amersham Corporation Arlington Heights, Ill.set c3makeinstance chemicalname Sequenasesource U.S. Biochemicals, Cleveland, Ohioset e1makeinstance enzymename Restrictionsource New England Biolabs, Inc. Beverly, Mass.set e2makeinstance enzymename T4 DNA polymerasesource New England Biolabs, Inc. Beverly, Mass.set e3makeinstance enzymename T4 DNA ligasesource New England Biolabs, Inc. Beverly, Mass.set c4makeinstance chemicalname Antibetalactamase antibodysource 53, Inc. Boulder, Col.set c5makeinstance chemicalname antiserumsource prepared by K.Strauchset c6makeinstance chemicalname antialkaline phosphataseTest Set282source prepared by C. Gardelset c6makeinstance chemicalname antiOmpAsource provided by Carol Kumamotoset p1makeinstance plasmidstrands doublestrandedset s1makeinstance sequencingobject p1sequencingreagent c3Test Set283Thermoinducible Filamentation in Escherichia coli due to an Altered RNA Polymerase  SubunitIs Suppressed by High Levels of ppGppDaniel Vinella, Richard DariMiscellaneous techniquesOptical density was measured at 600 nm in a PM6 spectrophotometer with a 1cm optical path.Morphological observations were made with a Jenamed phasecontrast microscope Zeiss, Jena,Germany. DAPI 4prm1,6diamidino2phenylindole staining was carried out as describedpreviously 18.set me1makeinstance spectrometername spectrophotometermodel PM6set m1makeinstance measurepropertytoassess optical densityequipmentused me1set mi1makeinstance microscopename Jenamed phasecontrast microscopemodel Zeiss, Jena, Germanyset o1makeinstance observepropertytoassess morphologicalequipmentused mi1set s1makeinstance stainstainwith DAPI 4,6diamidino2phenylindoleTest Set284Streptomyces lividans Glycosylates the Linker Region of a 1,4Glycanase from CellulomonasfimiEdgar Ong, Douglas G. Kilburn, Robert C. Miller, Jr., R. Antony J. WarrenProtein analysesProteins were resolved by sodium dodecyl sulfatepolyacrylamide gel electrophoresis SDSPAGE 34. Protein bands were visualized by staining with Coomassie blue 42. Proteinconcentrations were determined by a dye binding assay with bovine serum albumin as thestandard 4. The concentrations of the purified preparations were determined from their A280swith the extinction coefficients obtained for the purified proteins 56. To determine Nterminalamino acid sequences, proteins were resolved by SDSPAGE and electroblotted 0.5 A, 30 to 60min onto polyvinylidene difluoride membranes Immobilon Millipore 40. Stained bandswere excised from the membranes and sequenced directly by automated Edman degradation withan Applied Biosystems model 470A gasphase sequencer.set p1makeinstance proteinset g1makeinstance gelname sodium dodecyl sulfatepolyacrylamideset e1makeinstance electrophoresisobject p1medium g1electrophoresistype SDSPAGEset v1makeinstance observeset s1makeinstance stainstainwith Coomassie blueset pc1makeinstance Processcomplexobject new e1processes v1 s1set m1makeinstance measurepropertytoassess concentratonmethodused dye binding assay with bovine serum albumin as the standardset m2makeinstance measureobject purified preparationspropertytoassess concentratonmethodused dye binding assay with bovine serum albumin as the standardset seq1makeinstance sequencingpropertytoassess Nterminal amino acid sequencesset e2makeinstance electrophoresisobject p1medium g1electrophoresistype SDSPAGETest Set285set mem1makeinstance membranename polyvinylidene difluoridesource Immobilon Milliporeset e3makeinstance electroblotobject new e2objecttoattachto mem1processduration 30 to 60 minset sc1makeinstance Sequencecomplexsubsteps e2 e3set tc1makeinstance techniquecomplexgoal seq1method sc1set ex1makeinstance excisecutobject new e3set seq3makeinstance equipmentname gasphase sequencermodel 470Asource Applied Biosystemsset seq2makeinstance sequencingmethodused Edman degradationequipmentused seq3Test Set286The Rhodobacter sphaeroides Cytochrome c2 Signal Peptide Is Not Necessary for Export andHeme AttachmentJanine P. Brandner, Timothy J. DonohueCellular fractionationCells were grown until midexponential phase, harvested by centrifugation, and washed prior tocell lysis 5. To prepare soluble and membrane fractions, cells were lysed by sonication 37 andextracts were separated by ultracentrifugation 11. To more precisely determine the location ofcyt c2, cells were separated into cytoplasmic, periplasmic, CM, and outer membrane OMfractions 6, 30, 37. For these studies, malate and succinate dehydrogenase activities weremeasured as described previously 23.set b1makeinstance bacteriaset g1makeinstance incubategrowobject b1terminatingcondition midexponential phaseset tc1makeinstance techniquecomplexobject b1goal makeinstance harvestmethod makeinstance centrifugeset w1makeinstance washobject b1set l1makeinstance lysisset tc2makeinstance techniquecomplexobject b1goal l1method makeinstance sonicateset u1makeinstance ultracentrifugeset tc3makeinstance techniquecomplexobject new l1goal makeinstance separatemethod u1set sep1makeinstance separateobject new u1set m2makeinstance measurepropertytoassess malate and succinate dehydrogenase activitiesTest Set287The XbaIBlnICeuI Genomic Cleavage Map of Salmonella paratyphiBshuLin Liu, Andrew Hessel, HaiYing Mary Cheng, Kenneth E. SandersonLuriaBertani medium 10 g of tryptone, 5 g of yeast extract, 10 g of NaCl, 3.5 ml of 1 M NaOHwas used for the cultivation of all strains solid medium also contained 1.5 agar. Tetracyclinewas used at 20 gml. Strains were maintained in 15 glycerol at 700C, and a single colony wasisolated prior to use.set m2makeinstance growthmediumname LuriaBertani mediumidentifiedcomponents 0 g of tryptone, 5 g of yeast extract, 10 g of NaCl, 3.5ml of 1 M NaOHset st1makeinstance bacteriaset m3makeinstance mixtureidentifiedcomponents m2 st1set g1makeinstance incubategrowobject st1originalmixture m3set med2makeinstance mixtureidentifiedcomponents 15 glycerolset s1makeinstance storeobject st1temperature 70 deg Cset is1makeinstance isolateobject st1Test Set288Lactobacillus plantarum ldhL Gene Overexpression and DeletionThierry Ferain, Dominique Garmyn, Nathalie Bernard, Pascal Hols, Jean DelcourNucleotide sequence accession numberThe ldhL nucleotide sequence reported in this paper will appear in EMBL, GenBank, and DDBJdata bases under accession number X70926.set d2makeinstance DNAname ldhL nucleotide sequenceTest Set289Molecular Cloning, Chromosomal Mapping, and Sequence Analysis of Copper Resistance Genesfrom Xanthomonas campestris pv. juglandis Homology with Small Blue Copper Proteins andMulticopper OxidaseYungAn Lee, Mavis Hendson, Nickolas J. Panopoulos, Milton N. SchrothTn3spice insertion mutagenesisTn3spice 39 was chosen to mutagenize the Cur genes because insertional mutants producedwith this transposon reporter system also could be used for subsequent analyses of geneexpression. Tn3spice insertion derivatives of plasmid pXjCu10, which carries the Cur genes ofX. campestris pv. juglandis, were obtained by the method described by Rahme et al. 57. Theposition of insertion and orientation of the transposon were mapped by single and doubledigestions with various restriction endonucleases. These Tn3spice constructs were subsequentlymobilized into XC143, XJNF1, or XJS1 by triparental matings.set g2makeinstance genename Cusuprsource X. campestris pv. juglandisset p1makeinstance plasmidname pXjCu10segmentscontained g2set t1makeinstance decomposableobjectname Tn3spiceset i3makeinstance insertobject t1target p1set mob1makeinstance mobilizeobject t1Test Set290Streptomyces lividans Glycosylates the Linker Region of a 1,4Glycanase from CellulomonasfimiEdgar Ong, Douglas G. Kilburn, Robert C. Miller, Jr., R. Antony J. WarrenEnzyme assayCex activity was measured with pnitrophenyldcellobioside Sigma as the substrate. Oneunit released 1 mol of pnitrophenol per min at 370C and pH 7.set m1makeinstance measurepropertytoassess Cex activityreagent pnitrophenylbetadcellobioside Sigma as the substrateTest Set291Mutations in a Gene Encoding a New Hsp70 Suppress Rapid DNA Inversion and bgl Activation,but Not proU Derepression, in hns1 Mutant Escherichia coliThomas H. Kawula, Michael J. LeliveltNucleotide sequence accession numberThe DNA sequence of hscA and 769 flanking bases has been deposited in the GenBank data baseunder accession number V01827. The small open reading frame ORF preceding the hscA geneis identified in the data base submission and has been designated yfhE by National Center forBiotechnology Information, GenBank.set g1makeinstance genename hscAset d1makeinstance DNAsegmentscontained g1 769 flanking basesTest Set292The pho RegulonDependent Ugp Uptake System for Glycerol3Phosphate in Escherichia coli Istrans Inhibited by PiPius Brzoska, Martina Rimmele, Katarzyna Brzostek, Winfried BoosDetermination of external 32Pi liberated from internal 32PG3P To 0.3 ml of bacteriumfree filtrate, 1 mol of carrier Pi and 3 trichloroacetic acid were added.Subsequently, 50 l of 10 N sulfuric acid and 50 l of 10 ammonium molybdate in water wereadded. After the addition of 1 ml of isobutanolbenzene 11, the mixture was vortexedvigorously for 1 min. After phase separation, 0.5 ml of the upper phase was counted with 10 mlof scintillation fluid.set m1makeinstance mixtureidentifiedcomponents 1 mumol of carrier Pinfi and 3 trichloroaceticacidset a1makeinstance addobject m1solution bacteriumfree filtrateset m2makeinstance mixtureidentifiedcomponents 50 mul of 10 N sulfuric acid and 50 mul of 10ammonium molybdate in waterset a2makeinstance addobject m2solution new a1set a3makeinstance addobject isobutanolbenzenesolution new a2set v1makeinstance vortexmanner vigorouslyprocessduration 1 minobject new a3set sep1makeinstance separateseparationtype phase separationset c1makeinstance measurereagent scintillation fluidTest Set293Affinity of Glucose Transport in Saccharomyces cerevisiae Is Modulated during Growth onGlucoseMichael C. Walsh, Hans P. Smits, Marcel Scholte, KarelData analysisKinetic parameters were determined by using EadieHofstee plots, and all data were analyzed bycomputerassisted nonlinear regression by using Enzfitter software. Standard errors wereestimated by Enzfitter.set o1makeinstance observepropertytoassess kinetic parametersmethodused EadieHofstee plotsset a1makeinstance assessmethodused computerassisted nonlinear regression using Enzfitter softwareset a2makeinstance assessmethodused Enzfitterpropertytoassess standard errorsTest Set294Isolation of the hemF Operon Containing the Gene for the Escherichia coli AerobicCoproporphyrinogen III Oxidase by In Vivo Complementation of a Yeast HEM13 MutantBarbara Troup, Martina Jahn, Christoph Hungerer, Dieter JahnConstruction of the E. coli genomic library in yeast expression vector pG1E. coli K12 genomic DNA was isolated as described previously 1 and partially digested withSau3A. Sizefractionated fragments from 5 to 10 kb were ligated into the BamHI site of pG136, a yeastE. coli shuttle vector that contains the promoter for the glyceraldehyde3phosphatedehydrogenase gene 3 and the terminator for the 3phosphoglycerate kinase gene 14 from S.cerevisiae. The TRP1 and ampicillin resistance genes were used for plasmid selection in S.cerevisiae and E. coli, respectively. The library was amplified in E. coli DH5.set s1makeinstance Ecolistrain K12set d1makeinstance DNAsource s1type genomicset i1makeinstance isolateobject d1set d2makeinstance digestobject d1reagent Sau3Aset s1makeinstance Scerevisiaeset e1makeinstance Ecoliset g1makeinstance genename 3phosphoglycerate kinasesource s1set g2makeinstance genename glyceraldehyde3phosphate dehydrogenaseset p1makeinstance plasmidsource e1name pG1segmentscontained g1 g2restrictionsitescontained BamHIset sep1makeinstance separateobject p1separationreagent ampicillin resistance genesset l1makeinstance ligateobject new d2target p1Test Set295set am1makeinstance amplifyobject new l1reagent E. coli DH5alphaTest Set296Identification and Characterization of the Terminators of the lys and P Transcripts ofBacteriophage MuJiping Zha, Zhong Zhao, Martha M. HoweGalK and lactamase assaysA 1ml sample of earlylogphase cells grown in supplemented M56 medium at 300C was addedto 20 l of lysis buffer 100 mM EDTA, 100 mM dithiothreitol, 50 mM TrisHCl pH 8.0 and15 l of toluene and shaken vigorously for 15 min at 370C. Then, two 20l portions diluted ifnecessary were added to duplicate 80l reaction mixtures final assay conditions 34 1 mMdithiothreitol, 3.2 mM NaF, 4 mM MgClinf2, 100 mM TrisHCl pH 7.9, 1.6 mM ATP, and0.9 mM d114Cgalactose specific activity, 4.5 x 106 dpmmol, and the mixtures wereincubated for 15 min at 320C. Following transfer of a 30l sample to a Whatman DE81 filter andwashing with water equiv75 ml, the radioactivity on the filters was counted in 6 ml of BiosafeII scintillation fluid RPI. Blanks with cellfree medium had less than 1,000 cpm. GalK unitswere expressed as nanomoles of galactose phosphorylated per minute per milliliter of cells at anOD650 of 1.0.set m1makeinstance growthmediumname supplemented M56set c1makeinstance bacteriaset g1makeinstance incubategrowobject c1originalmixture m1temperature 30 deg Cterminatingcondition early log phaseset b1makeinstance buffername lysis bufferidentifiedcomponents 100 mM EDTA, 100 mM dithiothreitol, 50 mM TrisHCl pH8.0set m2makeinstance mixtureidentifiedcomponents b1 tolueneset s1makeinstance shakeobject c1solution m2manner vigorouslyprocessduration 15 mintemperature 37 deg Cset m3makeinstance mixtureidentifiedcomponents 1 mM dithiothreitol, 3.2 mM NaF, 4 mM MgClinf2, 100 mMTrisHCl, 1.6 mM ATP, and 0.9 mM d1sup14Cgalactose specific activity, 4.5 x10sup6 dpmmumolset a1makeinstance addobject new s1solution m3Test Set297set g2makeinstance incubategrowobject new a1processduration 15 mintemperature 32 deg Cset d1makeinstance mountobject new a1objecttoattachto Whatman DE81 filterset w1makeinstance washobject new d1solution waterset co1makeinstance countobject new d1propertytoassess radioactivityequipmentused Biosafe II scintillation fluid RPITest Set298Isolation and Phenotypic Characterization of Myxococcus xanthus Mutants Which Are Defectivein Sensing Negative StimuliWenyuan Shi, Thilo Kohler, David R. ZusmanAssays for chemotaxis and sporulationChemotaxis assays were performed in petri plates under conditions that establish steep and stablechemical gradients, as previously described 13. In this study, the gradient plates were made byputting the bottom part of a small Falcon culture dish into a regular Fisher brand petri dish. Thesmaller plate was filled with one medium, and the larger one was filled with another. A 1mmagar layer was then overlaid to bridge the two compartments. Modification of FrzCD in M.xanthus was studied by Western blotting immunoblotting, since methylated FrzCD has fasterelectrophoretic mobility than demethylated FrzCD on sodium dodecyl sulfatepolyacrylamide gelelectrophoresis SDSPAGE gels 8, 9. The Western immunoblotting was performed accordingto a procedure described previously 8, 9, 14, with the following change MOPS buffer 8 mMMgSO4 and 10 mM MOPS pH 7.6 was used instead of CFS buffer during the protein samplepreparation. In some experiments, samples were taken directly from the growth culture. In thesecases, cells were collected from the growth culture by centrifugation, resuspended in SDSloading buffer 8, 14, and stored at 700C. They were boiled for 5 min before being loaded ontoSDS gels. For fruiting, 20 l of cells about 108 cells was placed on fruiting plates CF mediumwith 1.5 agar and incubated at 320C for 2 to 3 days. Fruitingbody myxospores were examinedafter 6 days of incubation on CF medium. The DMSO spores or glycerol spores were examined 3h after the addition of 0.5 M DMSO or 0.5 M glycerol to exponentialphase cells. All sporeswere examined by microscopy. They are refractile spherical cells that are resistant to 1 SDSand a temperature of 550C.set f1makeinstance decomposableobjectname FrzCD in M. xanthusset g1makeinstance gelname sodium dodecyl sulfatepolyacrylamideset b1makeinstance buffername MOPSidentifiedcomponents 8 mM MgSOinf4 and 10 mM MOPS pH 7.6set b2makeinstance bacteriaset g2makeinstance incubategrowobject b2set tc1makeinstance techniquecomplexobject b2goal makeinstance harvestmethod makeinstance centrifugeset b3makeinstance buffername SDS loadingTest Set299set r1makeinstance resuspendobject b2solution b3set st1makeinstance storeobject new r1temperature 70 deg Cset bo1makeinstance boilobject object r1processduration 5 minset e1makeinstance electrophoresisobject f1medium g1electrophoresistype SDSPAGEset dep1makeinstance mountobject b2objecttoattachto fruiting plates CF medium with 1.5 agarset g3makeinstance incubategrowobject new dep1temperature 32 deg Cterminatingcondition exponentialphaseprocessduration 2 to 3 daysset ex1makeinstance observeobject object g3equipmentused CF mediumset ad1makeinstance addobject object g3reagent DMSOset ad2makeinstance addobject object g3reagent glycerolset mi1makeinstance microscopeset ob2makeinstance observeobject new ad2equipmentused m1set ob1makeinstance observeobject new ad1equipmentused m1Test Set300Division Inhibition Gene dicF of Escherichia coli Reveals a Widespread Group of ProphageSequences in Bacterial GenomesMarlene Faubladier, JeanPierre BoucheDNA sequencingTo locate dicFhomologous sequences precisely, deletion mutants were isolated and subjected tosequencing. The HindIIIBamHI fragment of pMF3 and the EcoRIBamHI fragments of pMF5and pMF6 were inserted into vector pUC19, yielding pMF7, pMF9, and pMF10, respectively.Plasmid pMF7 was then cleaved by SacI and BamHI, and pMF9 and pMF10 were cleaved byPstI and BamHI endonucleases. The linearized molecules were trimmed by exonuclease III andnuclease S1 treatment, end repaired, and circularized. Hybridization of the deleted plasmids tothe dicF cRNA probe was used as a guide for selection of the plasmids to be sequenced.Sequencing was carried out on doublestranded DNA in accordance with standard procedures.set p1makeinstance plasmidname pMF3set d1makeinstance DNAsource p1restrictionsitescontained HindIII BamHIset p2makeinstance plasmidname pMF5set d2makeinstance DNAsource p2restrictionsitescontained EcoRI BamHIset p3makeinstance plasmidname pMF6set d3makeinstance DNAsource p3restrictionsitescontained EcoRI BamHIset p4makeinstance plasmidname pUC19set l1makeinstance ligateobject p1target p4new set p5 makeinstance plasmid name pMF7set l2makeinstance ligateobject p2target p4new set p6 makeinstance plasmid name pMF9set l3makeinstance ligateobject p3target p4Test Set301new set p7 makeinstance plasmid name pMF10set e1makeinstance endonucleasename SacIset e2makeinstance endonucleasename BamHIset e3makeinstance endonucleasename PstIset c1makeinstance excisecutobject p5separationreagent e1 e2set c2makeinstance excisecutobject p6separationreagent e3 e2set c3makeinstance excisecutobject p7separationreagent e3 e2set t1makeinstance treatobject new c1reagent exonuclease III and nuclease S1set t2makeinstance treatobject new c2reagent exonuclease III and nuclease S1set t3makeinstance treatobject new c3reagent exonuclease III and nuclease S1set cir1makeinstance circularizeobject new t1set cir2makeinstance circularizeobject new t2set cir3makeinstance circularizeobject new t3set seq1makeinstance sequencingmethodused standardproceduresTest Set302Exogenous Methionine Increases Levels of mRNAs Transcribed from pcbAB, pcbC, and cefEFGenes, Encoding Enzymes of the Cephalosporin Biosynthetic Pathway, in AcremoniumchrysogenumJavier Velasco, Santiago Gutierrez, Francisco J. Fernandez, Ana T. Marcos, Clara Arenos, JuanF. MartinMicrobial strainsA. chrysogenum Cephalosporium acremonium ATCC 11550 wild type original isolate ofBrotzu, A. chrysogenum CW19 ATCC 36225, an improved cephalosporinproducing strain,and A. chrysogenum C10 ATCC 48272, a strain producing high levels of cephalosporin,released by Panlabs 6, were used for the methionine induction studies. Escherichia coli ESS2231, a lactam supersusceptible strain, was used for routine assays of penicillin N andcephalosporin C.set a1makeinstance Achrysogenumstrain ATCC 11550source Panlabsset a2makeinstance Achrysogenumstrain CW19 ATCC 36225source Panlabsset a3makeinstance Achrysogenumstrain C10 ATCC 48272source Panlabsset e1makeinstance Ecolistrain ESS 2231Test Set303Translocation of an Outer Membrane Protein into Prey Cytoplasmic Membranes byBdellovibriosJohn J. Tudor, Mary Ann KarpSynchronous cultures and isolation of bdelloplastsSynchronous cultures were prepared as previously described 22 by combining 2 x 1010 B.bacteriovorus 109J organisms and 1 x 1010 E. coli W7M5 organisms with weakened cell walls seeabove in 3 mM N2hydroxyethylpiperazineN2ethanesulfonic acid HEPES1 mM CaCl20.1 mM MgCl2, adjusted to pH 7.2 with NaOH 21.set b1makeinstance Bbacteriovorusstrain 109Jset e2makeinstance Ecolistrain Winf7Minf5set m1makeinstance mixtureidentifiedcomponents N2hydroxyethylpiperazineN2ethanesulfonic acidHEPES CaClinf20.1 mM MgClinf2 NaOHset m2makeinstance mixtureidentifiedcomponents m1 b1 e2Test Set304Mutation of flgM Attenuates Virulence of Salmonella typhimurium, and Mutation of fliARepresses the Attenuated PhenotypeClare K. Schmitt, Stephen C. Darnell, Vernon L. Tesh, Bruce A. D. Stocker, Alison D. ObrienMedia, enzymes, biochemicals, and radionuclidesStrains were routinely grown in L broth or brain heart infusion broth. When necessary, thefollowing antibiotics Sigma Chemical Co., St. Louis, Mo. were added to the medium at theindicated final concentrations in micrograms per milliliter ampicillin, 100 tetracycline, 10and chloramphenicol, 15. Motility agar 10 g of tryptone, 5 g of NaCl, 5 g of agar all per literwas used to test the motility phenotypes of the strains. Restriction endonucleases and calfintestinal alkaline phosphatase were purchased from Bethesda Research Laboratories BoehringerMannheim, Indianapolis, Ind. or New England Biolabs, Beverly, Mass. T4 DNA ligase andSequenase were obtained from the U.S. Biochemicals Corporation, Cleveland, Ohio. TheGeneAmp PCR kit was purchased from PerkinElmer Cetus, Norwalk, Conn. Enzymes wereused according to the manufacturers instructions. Radionuclides were purchased from NewEngland Nuclear Research Products, Boston, Mass.set b1makeinstance bacteriaset m1makeinstance growthmediumname L brothset m2makeinstance growthmediumname brain heart infusion brothset a1makeinstance antibioticname ampicillinset a2makeinstance antibioticname tetracyclineset a3makeinstance antibioticname chloramphenicolset g1makeinstance incubategrowobject b1originalmixture makeinstance mixture    identifiedcomponents m1 a1 a2 a3set g2makeinstance incubategrowobject b1originalmixture makeinstance mixture    identifiedcomponents m2 a1 a2 a3set m3makeinstance mixturename motility agaridentifiedcomponents tryptone NaCl agarset c1makeinstance endonucleaseTest Set305source Bethesda Research Laboratories Boehringer Mannheim, Indianapolis,Ind. or New England Biolabs, Beverly, Massset c2makeinstance chemicalname calf intestinal alkaline phosphatasesource Bethesda Research Laboratories Boehringer Mannheim, Indianapolis,Ind. or New England Biolabs, Beverly, Massset c3makeinstance chemicalname Sequenasesource U.S. Biochemicals, Cleveland, Ohiosentences list elt sentences doc 12set c4makeinstance chemicalname T4 DNA Ligasesource U.S. Biochemicals, Cleveland, Ohioset eq1makeinstance equipmentname GeneAmp PCR kitsource PerkinElmer Cetus, Norwalk, Connset c5makeinstance chemicalname Radionuclidessource New England Nuclear Research Products, Boston, Mass.Test Set306Mutations in ftsZ That Confer Resistance to SulA Affect the Interaction of FtsZ with Gtpkang Dai, Amit Mukherjee, Yifan Xu, Joe LutkenhausGTPbinding and GTPase assaysNucleotide binding to FtsZ proteins transferred to nitrocellulose was carried out as describedpreviously 24, except the compositions of the blocking and washing buffers were altered. Inthis study the blocking buffer contained 50 mM TrisHCl pH 7.5, 2 mM dithiothreitol, 0.2Tween 20, 10 mM MgCl2, 200 mM NaCl, and 0.5 bovine serum albumin BSA, and thewashing buffer was the same as the blocking buffer except that it lacked BSA. The nitrocellulosefilterbinding assay was used to determine GTP binding to native protein and was done asdescribed previously 24. Three modifications were made to the GTPase assay describedpreviously i the GTP concentration in the reaction mixture was increased to 5 mM, ii theMgCl2 concentration was increased to 15 mM because of the high GTP concentration, and iiithe assay was carried out at 300C.set b1makeinstance buffername blocking bufferidentifiedcomponents TrisHCl dithiothreitol Tween 20 MgClinf2NaCl bovine serum albumin BSAset b2makeinstance buffername washing bufferidentifiedcomponents TrisHCl dithiothreitol Tween 20 MgClinf2NaClTest Set307Role of the dAlanyl Carrier Protein in the Biosynthesis of dAlanylLipoteichoic AcidMichael P. Heaton, Francis C. NeuhausPurification of L. casei membrane fragmentsThe mLTA used as the acceptor for measuring the incorporation of dalanine was isolated in theform of purified membranes from L. casei. The extracts of latelogphase cultures were preparedas described for the isolation of Dcl 25. Membranes were prepared according to the method ofReusch and Neuhaus 40. Lowspeed centrifugation was used to remove glass beads after celldisruption, and the supernatant fraction was clarified by four cycles of centrifugation at 10,000 xg for 15 min. The membrane pellet was collected by ultracentrifugation at 200,000 x g for 90 minand homogenized in a minimal amount of 30 mM bisTris pH 6.5. Membrane fragments werewashed by three cycles of centrifugation at 10,000 x g, collected by ultracentrifugation at200,000 x g, and homogenized in 30 mM bisTris pH 6.5. The washed membranes weresuspended in 30 mM bisTris pH 6.5 to a concentration of 20.7 mg of membrane protein per mlbicinchoninic acid protein assay and frozen at 800C. This preparation of membrane fragmentsretained full dalanine incorporation activity for at least 9 months when stored at 800C.set l1makeinstance LCaseiset b1makeinstance buffername bisTrisidentifiedcomponents bisTrisset m1makeinstance membranesource l1set d1makeinstance disruptobject l1transformwith glass beadsset c1makeinstance centrifugeobject new d1speed lowset c21makeinstance centrifugeobject l1speed 10000processduration 15 minset c22makeinstance centrifugeobject new c21speed 10000processduration 15 minset c23makeinstance centrifugeobject new c22speed 10000processduration 15 minset c24makeinstance centrifugeobject new c23Test Set308speed 10000processduration 15 minset u1makeinstance ultracentrifugeobject new c24speed 20000processduration 90 minset h1makeinstance homogenizeobject new u1medium b1set c31makeinstance centrifugeobject m1speed 10000set c32makeinstance centrifugeobject new c31speed 10000set c33makeinstance centrifugeobject new c32speed 10000set tc1makeinstance techniquecomplexgoal makeinstance wash object m1method makeinstance sequencecomplex       substeps list c31 c32 c33set u2makeinstance ultracentrifugeobject new c33speed 20000set h1makeinstance homogenizeobject new u2medium b1set r1makeinstance resuspendobject new u2reagent b1set f1makeinstance freezeobject new r1temperature 80 deg CTest Set309
