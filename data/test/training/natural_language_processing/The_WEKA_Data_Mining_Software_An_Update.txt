The WEKA Data Mining Software An UpdateMark Hall Eibe Frank, Geoffrey Holmes, Bernhard PfahringerPeter Reutemann, Ian H. WittenPentaho Corporation Department of Computer ScienceSuite 340, 5950 Hazeltine National Dr. University of WaikatoOrlando, FL 32822, USA Hamilton, New Zealandmhallpentaho.com eibe,geoff,bernhard,fracpete,ihwcs.waikato.ac.nzABSTRACTMore than twelve years have elapsed since the first publicrelease of WEKA. In that time, the software has been rewritten entirely from scratch, evolved substantially and nowaccompanies a text on data mining 35. These days, WEKAenjoys widespread acceptance in both academia and business, has an active community, and has been downloadedmore than 1.4 million times since being placed on SourceForge in April 2000. This paper provides an introduction tothe WEKA workbench, reviews the history of the project,and, in light of the recent 3.6 stable release, briefly discusseswhat has been added since the last stable version Weka 3.4released in 2003.1. INTRODUCTIONThe Waikato Environment for Knowledge Analysis WEKAcame about through the perceived need for a unified workbench that would allow researchers easy access to stateoftheart techniques in machine learning. At the time of theprojects inception in 1992, learning algorithms were available in various languages, for use on different platforms, andoperated on a variety of data formats. The task of collectingtogether learning schemes for a comparative study on a collection of data sets was daunting at best. It was envisionedthat WEKA would not only provide a toolbox of learningalgorithms, but also a framework inside which researcherscould implement new algorithms without having to be concerned with supporting infrastructure for data manipulationand scheme evaluation.Nowadays, WEKA is recognized as a landmark system indata mining and machine learning 22. It has achievedwidespread acceptance within academia and business circles, and has become a widely used tool for data miningresearch. The book that accompanies it 35 is a populartextbook for data mining and is frequently cited in machinelearning publications. Little, if any, of this success wouldhave been possible if the system had not been released asopen source software. Giving users free access to the sourcecode has enabled a thriving community to develop and facilitated the creation of many projects that incorporate orextend WEKA.In this paper we briefly review the WEKA workbench andthe history of project, discuss new features in the recent3.6 stable release, and highlight some of the many projectsbased on WEKA.Figure 1 The WEKA Explorer user interface.2. THE WEKA WORKBENCHThe WEKA project aims to provide a comprehensive collection of machine learning algorithms and data preprocessingtools to researchers and practitioners alike. It allows usersto quickly try out and compare different machine learningmethods on new data sets. Its modular, extensible architecture allows sophisticated data mining processes to be builtup from the wide collection of base learning algorithms andtools provided. Extending the toolkit is easy thanks to asimple API, plugin mechanisms and facilities that automatethe integration of new learning algorithms with WEKAsgraphical user interfaces.The workbench includes algorithms for regression, classification, clustering, association rule mining and attribute selection. Preliminary exploration of data is well catered forby data visualization facilities and many preprocessing tools.These, when combined with statistical evaluation of learningschemes and visualization of the results of learning, supportsprocess models of data mining such as CRISPDM 27.2.1 User InterfacesWEKA has several graphical user interfaces that enable easyaccess to the underlying functionality. The main graphicaluser interface is the Explorer. It has a panelbased interface, where different panels correspond to different datamining tasks. In the first panel, called Preprocess panel,data can be loaded and transformed using WEKAs datapreprocessing tools, called filters. This panel is shown inPage 10Volume 11, Issue 1SIGKDD ExplorationsFigure 2 The WEKA Knowledge Flow user interface.Figure 1. Data can be loaded from various sources, includingfiles, URLs and databases. Supported file formats includeWEKAs own ARFF format, CSV, LibSVMs format, andC4.5s format. It is also possible to generate data using anartificial data source and edit data manually using a dataseteditor.The second panel in the Explorer gives access to WEKAsclassification and regression algorithms. The correspondingpanel is called Classify because regression techniques areviewed as predictors of continuous classes. By default,the panel runs a crossvalidation for a selected learning algorithm on the dataset that has been been prepared in thePreprocess panel to estimate predictive performance. It alsoshows a textual representation of the model built from thefull dataset. However, other modes of evaluation, e.g. basedon a separate test set, are also supported. If applicable,the panel also provides access to graphical representationsof models, e.g. decision trees. Moreover, it can visualizeprediction errors in scatter plots, and also allows evaluationvia ROC curves and other threshold curves. Models canalso be saved and loaded in this panel.Along with supervised algorithms, WEKA also supports application of unsupervised algorithms, namely clustering algorithms and methods for association rule mining. Theseare accessible in the Explorer via the third and fourth panelrespectively. The Cluster panel enables users to run aclustering algorithm on the data loaded in the Preprocesspanel. It provides simple statistics for evaluation of clustering performance likelihoodbased performance for statistical clustering algorithms and comparison to true clustermembership if this is specified in one of the attributes inthe data. If applicable, visualization of the clustering structure is also possible, and models can be stored persistentlyif necessary.WEKAs support for clustering tasks is not as extensive asits support for classification and regression, but it has moretechniques for clustering than for association rule mining,which has up to this point been somewhat neglected. Nevertheless, it does contain an implementation of the mostwellknown algorithm in this area, as well as a few otherones. These methods can be accessed via the Associatepanel in the Explorer.Perhaps one of the most important task in practical datamining is the task of identifying which attributes in thedata are the most predictive ones. To this end, WEKAsExplorer has a dedicated panel for attribute selection, Select attributes, which gives access to a wide variety of algorithms and evaluation criteria for identifying the most important attributes in a dataset. Due to the fact that it ispossible to combine different search methods with differentevaluation criteria, it is possible to configure a wide rangeof possible candidate techniques. Robustness of the selectedattribute set can be validated via a crossvalidationbasedapproach.Note that the attribute selection panel is primarily designedfor exploratory data analysis. WEKAs FilteredClassifieraccessible via the Classify panel should be used to applyattribute selection techniques in conjunction with an underlying classification or regression algorithm to avoid introducing optimistic bias in the performance estimates obtained. This caveat also applies to some of the preprocessing toolsmore specifically, the supervised onesthat areavailable from the Preprocess panel.In many practical applications, data visualization providesimportant insights. These may even make it possible toavoid further analysis using machine learning and data mining algorithms. But even if this is not the case, they mayinform the process of selecting an appropriate algorithmfor the problem at hand. The last panel in the Explorer,called Visualize, provides a colorcoded scatter plot matrix, along with the option of drilling down by selecting individual plots in this matrix and selecting portions of thedata to visualize. It is also possible to obtain informationregarding individual datapoints, and to randomly perturbdata by a chosen amount to uncover obscured data.The Explorer is designed for batchbased data processingtraining data is loaded into memory in its entirety and thenprocessed. This may not be suitable for problems involvinglarge datasets. However, WEKA does have implementationsof some algorithms that allow incremental model building,which can be applied in incremental mode from a commandline interface. The incremental nature of these algorithms isignored in the Explorer, but can be exploited using a morerecent addition to WEKAs set of graphical user interfaces,namely the socalled Knowledge Flow, shown in Figure 2.Most tasks that can be tackled with the Explorer can alsobe handled by the Knowledge Flow. However, in additionto batchbased training, its data flow model enables incremental updates with processing nodes that can load andpreprocess individual instances before feeding them into appropriate incremental learning algorithms. It also providesnodes for visualization and evaluation. Once a setup of interconnected processing nodes has been configured, it canbe saved for later reuse.The third main graphical user interface in WEKA is theExperimenter see Figure 3. This interface is designedto facilitate experimental comparison of the predictive performance of algorithms based on the many different evaluation criteria that are available in WEKA. Experimentscan involve multiple algorithms that are run across multipledatasets for example, using repeated crossvalidation. Experiments can also be distributed across different computenodes in a network to reduce the computational load for individual nodes. Once an experiment has been set up, it canbe saved in either XML or binary form, so that it can bePage 11Volume 11, Issue 1SIGKDD ExplorationsFigure 3 The WEKA Experimenter user interface.revisited if necessary. Configured and saved experimentscan also be run from the commandline.Compared to WEKAs other user interfaces, the Experimenter is perhaps used less frequently by data mining practitioners. However, once preliminary experimentation hasbeen performed in the Explorer, it is often much easier toidentify a suitable algorithm for a particular dataset, or collection of datasets, using this alternative interface.We would like to conclude this brief exposition of WEKAsmain graphical user interfaces by pointing out that, regardless of which user interface is desired, it is important toprovide the Java virtual machine that is used to run WEKAwith a sufficient amount of heap space. The need to prespecify the amount of memory required, which should beset lower than the amount of physical memory of the machine that is used, to avoid swapping, is perhaps the biggeststumbling block to the successful application of WEKA inpractice. On the other hand, considering running time, thereis no longer a significant disadvantage compared to programswritten in C, a commonlyheard argument against Java fordataintensive processing tasks, due to the sophistication ofjustintime compilers in modern Java virtual machines.3. HISTORY OF THE WEKA PROJECTThe WEKA project was funded by the New Zealand government from 1993 up until recently. The original fundingapplication was lodged in late 1992 and stated the projectsgoals asThe programme aims to build a stateoftheart facility fordeveloping techniques of machine learning and investigatingtheir application in key areas of the New Zealand economy.Specifically we will create a workbench for machine learning,determine the factors that contribute towards its successfulapplication in the agricultural industries, and develop newmethods of machine learning and ways of assessing their effectiveness.The first few years of the project focused on the developmentof the interface and infrastructure of the workbench. Mostof the implementation was done in C, with some evaluationroutines written in Prolog, and the user interface producedFigure 4 Back then the WEKA 2.1 workbench user interface.using TCLTK. During this time the WEKA1 acronym wascoined and the Attribute Relation File Format ARFF usedby the system was created.The first release of WEKA was internal and occurred in1994. The software was very much at beta stage. The firstpublic release at version 2.1 was made in October 1996.Figure 4 shows the main user interface for WEKA 2.1. InJuly 1997, WEKA 2.2 was released. It included eight learning algorithms implementations of which were provided bytheir original authors that were integrated into WEKA using wrappers based on shell scripts and data preprocessingtools written in C. WEKA 2.2 also sported a facility, basedon Unix Makefiles, for configuring and running largescaleexperiments based on these algorithms.By now it was becoming increasingly difficult to maintainthe software. Factors such as changes to supporting libraries, management of dependencies and complexity of configuration made the job difficult for the developers and theinstallation experience frustrating for users. At about thistime it was decided to rewrite the system entirely in Java,including implementations of the learning algorithms. Thiswas a somewhat radical decision given that Java was lessthan two years old at the time. Furthermore, the runtimeperformance of Java made it a questionable choice for implementing computationally intensive machine learning algorithms. Nevertheless, it was decided that advantages suchas Write Once, Run Anywhere and simple packaging anddistribution outweighed these shortcomings and would facilitate wider acceptance of the software.May 1998 saw the final release of the TCLTKbased system WEKA 2.3 and, at the middle of 1999, the 100Java WEKA 3.0 was released. This nongraphical versionof WEKA accompanied the first edition of the data miningbook by Witten and Frank 34. In November 2003, a stable version of WEKA 3.4 was released in anticipation ofthe publication of the second edition of the book 35. Inthe time between 3.0 and 3.4, the three main graphical userinterfaces were developed.In 2005, the WEKA development team received the SIGKDDData Mining and Discovery Service Award 22. The award1The Weka is also an indigenous bird of New Zealand. Likethe wellknown Kiwi, it is flightless.Page 12Volume 11, Issue 1SIGKDD ExplorationsFigure 5 Capabilities and technical information metadata.recognized the longevity and widespread adoption of WEKA.In 2006, Pentaho Corporation became a major sponsor ofthe software and adopted it to form the data mining andpredictive analytics component of their business intelligencesuite. Pentaho is now an active contributer to the code base,and the first author is currently the maintainerinchief ofthe software. As of this writing, WEKA 3.6 released in December 2008 is the latest version of WEKA, which, giventhe evenodd version numbering scheme, is considered to bea featurestable version.4. NEW FEATURES SINCE WEKA 3.4Many new features have been added to WEKA since version 3.4not only in the form of new learning algorithms,but also preprocessing filters, usability improvements andsupport for standards. As of writing, the 3.4 code line comprises 690 Java class files with a total of 271,447 lines ofcode2 the 3.6 code line comprises 1,081 class files with atotal of 509,903 lines of code. In this section, we discusssome of the most salient new features in WEKA 3.6.4.1 CoreThe largest change to WEKAs core classes is the addition ofrelationvalued attributes in order to directly support multiinstance learning problems 6. A relationvalued attributeallows each of its values to reference another set of instancestypically defining a bag in the multiinstance setting.Other additions to WEKAs data format include an XMLformat for ARFF files and support for specifying instanceweights in standard ARFF files.Another addition to the core of WEKA is the Capabilitiesmetadata facility. This framework allows individual learning algorithms and filters to declare what data characteristics they are able to handle. This, in turn, enables WEKAsuser interfaces to present this information and provide feedback to the user about the applicability of a scheme for thedata at hand. In a similar vein, the TechnicalInformationclasses allow schemes to supply citation details for the algorithm that they implement. Again, this information isformatted and exposed automatically by the user interface.Figure 5 shows technical information and capabilities for theLogitBoost classifier.Logging has also been improved in WEKA 3.6 with the ad2As computed by the Unix command wc l.dition of a central log file. This file captures all informationwritten to any graphical logging panel in WEKA, along withany output to standard out and standard error.4.2 Learning SchemesMany new learning algorithms have been added since WEKA3.4 and some existing ones have been improved. An example of the latter category is instancebased learning, wherethere is now support for pluggable distance functions andnew data structuressuch as ball trees and KD treestospeed up the search for nearest neighbors.Some of the new classification algorithms in WEKA 3.6 include Bayesian logistic regression 13 the BLR method fortext categorization, with both Gaussian and Laplacepriors. Bestfirst decision tree 28 builds a decision tree usinga bestfirst search strategy. Decision table naive Bayes hybrid 15 a hybrid learnerthat combines decision tables and naive Bayes. Discriminative multinomial naive Bayes 30 a simple Bayesian classifier with discriminative parameterlearning for text categorization. Functional trees 12 decision trees with oblique splitsand linear functions at the leaves. Gaussian processes 26 implements the wellknownGaussian process method for regression. Simple CART 3 a decision tree learner that implements minimal costcomplexity pruning. Variants of AODE 39 17 Averaged OneDependenceEstimators with subsumption resolution AODEsr andweighted AODE WAODE. Wrapper classifiers allow the well known algorithmsprovided by the LibSVM 5 and LibLINEAR 9 thirdparty libraries to be used in WEKA.In addition to these algorithms, an entire package of multiinstance algorithms has been added to WEKA since version 3.4, most of which were first distributed in the separateMILK package for multiinstance learning 37.WEKA 3.6 also has new meta algorithms that can bewrapped around base learning algorithms to widen applicability or enhance performance Nested dichotomies 10 8 an approach for handlingmulticlass classification problems with a hierarchy oftwoclass classifiers. Dagging 32 a meta classifier similar to Bagging,which supplies disjoint subsets of the training data tothe chosen base learning algorithm. Rotation forest 24 generates an ensemble classifierby training a base learner on a randomly selected subspace of the input data that has been rotated usingprincipal component analysis.Page 13Volume 11, Issue 1SIGKDD ExplorationsThe set of clustering algorithms has also been expanded withthe following members CLOPE clusterer 38 a fast clustering scheme fortransactional data. Sequential information bottleneck clusterer 29 a clusterer that was implemented primarily for documentclustering.4.3 Preprocessing FiltersJust as the list of learning schemes in WEKA has grown,so has the number of preprocessing tools. Some of the newfilters in WEKA 3.6 include Add classification adds the predictions of a classifierto a data set. Add ID  adds an ID attribute to a data setuseful forkeeping track of instances. Add values adds the labels from a given list to anattribute if they are missing. Attribute reorder  changes the order of the attributesin a data set. Interquartile range tags instances as containing outliers and extreme values based on interquartile ranges. Kernel filter 2 converts a given set of predictor variables into a kernel matrix. Numeric cleaner  cleanses numeric values that exceed a threshold or are too close to a certain value byreplacing them with usersupplied defaults. Numeric to nominal  converts a numeric attribute tonominal by simply adding all the observed numericvalues to the list of nominal values. Partitioned multifilter  applies a supplied list of filtersto a corresponding set of attribute ranges and combines the result into a new data set. Propositional to multiinstance and vice versa converts to and from multiinstance format. Random subset  selects a random subset of attributes. RELAGGS 19 converts relational data into propositional data using aggregation. Reservoir sample 33 processes instances incrementally and performs reservoir sampling, for downsamplingdata sets that do not fit in main memory. Subset by expression filter instances according to auserspecified expression. Wavelet 25 performs a wavelet transformation onthe data.Figure 6 The GUI Chooser.Figure 7 The SQL viewer.4.4 User InterfacesAside from the aforementioned exposure of capabilities andtechnical information meta data, there has been further refinement and improvement to the GUIs in WEKA sinceversion 3.4. The GUI ChooserWEKAs graphical startpointhas undergone a redesign and now provides accessto various supporting user interfaces, system informationand logging information, as well as the main applications inWEKA. Figure 6 shows the revamped GUI Chooser.Scatter plots, ROC curves, trees and graphs can all be accessed from entries under the Visualization menu. TheTools menu provides two new supporting GUIs SQL viewer  allows userentered SQL to be run againsta database and the results previewed. This user interface is also used in the Explorer to extract data froma database when the Open DB button is pressed. Bayes network editor  provides a graphical environment for constructing, editing and visualizing Bayesiannetwork classifiers.Figures 7 and 8 show the SQL viewer and Bayes networkeditor respectively.Often it is useful to evaluate an algorithm on synthetic data.As mentioned earlier in this paper, the Explorer user interface now has a facility for generating artificial data setsPage 14Volume 11, Issue 1SIGKDD ExplorationsFigure 8 The Bayesian network editor.Figure 9 The Explorer with an Experiment tab addedfrom a plugin.using WEKAs data generator tools. Artificial data suitable for classification can be generated from decision lists,radialbasis function networks and Bayesian networks as wellas the classic LED24 domain. Artificial regression data canbe generated according to mathematical expressions. Thereare also several generators for producing artificial data forclustering purposes.The Knowledge Flow interface has also been improved itnow includes a new status area that can provide feedback onthe operation of multiple components in a data mining process simultaneously. Other improvements to the KnowledgeFlow include support for association rule mining, improvedsupport for visualizing multiple ROC curves and a pluginmechanism.4.5 ExtensibilityA number of plugin mechanisms have been added to WEKAsince version 3.4. These allow WEKA to be extended invarious ways without having to modify the classes that makeup the WEKA distribution.New tabs in the Explorer are easily added by writing a classthat extends javax.swing.JPanel and implements the interface weka.gui.explorer.Explorer.ExplorerPanel. FigFigure 10 A PMML radial basis function network loadedinto the Explorer.ure 9 shows the Explorer with a new tab, provided by a plugin, for running simple experiments. Similar mechanisms allow new visualizations for classifier errors, predictions, treesand graphs to be added to the popup menu available in thehistory list of the Explorers Classify panel. The Knowledge Flow has a plugin mechanism that allows new components to be incorporated by simply adding their jar file andany necessary supporting jar files to the .knowledgeFlowplugins directory in the users home directory. These jarfiles are loaded automatically when the Knowledge Flow isstarted and the plugins are made available from a Pluginstab.4.6 Standards and InteroperabilityWEKA 3.6 includes support for importing PMML models Predictive Modeling Markup Language. PMML is avendoragnostic, XMLbased standard for expressing statistical and data mining models that has gained widespreadsupport from both proprietary and opensource data miningvendors. WEKA 3.6 supports import of PMML regression,general regression and neural network model types. Importof further model types, along with support for exportingPMML, will be added in future releases of WEKA. Figure 10shows a PMML radial basis function network, created by theClementine system, loaded into the Explorer.Another new feature in WEKA 3.6 is the ability to readand write data in the format used by the well known LibSVM and SVMLight support vector machine implementations 5. This complements the new LibSVM and LibLINEAR wrapper classifiers.5. PROJECTS BASED ON WEKAThere are many projects that extend or wrap WEKA insome fashion. At the time of this writing, there are 46such projects listed on the Related Projects web page ofthe WEKA site3. Some of these include Systems for natural language processing. There area number of tools that use WEKA for natural language processing GATE is a NLP workbench 113httpwww.cs.waikato.ac.nzmlwekaindexrelated.htmlPage 15Volume 11, Issue 1SIGKDD ExplorationsBalie performs language identification, tokenization,sentence boundary detection and namedentity recognition 21 Senseval2 is a system for word sense disambiguation Kea is a system for automatic keyphraseextraction 36. Knowledge discovery in biology. Several tools usingor based on WEKA have been developed to aid dataanalysis in biological applications BioWEKA is anextension to WEKA for tasks in biology, bioinformatics, and biochemistry 14 the Epitopes Toolkit EpiTis a platform based on WEKA for developing epitopeprediction tools maxdView and Mayday 7 providevisualization and analysis of microarray data. Distributed and parallel data mining. There are a number of projects that have extended WEKA for distributed data mining WekaParallel provides a distributed crossvalidation facility 4 GridWeka provides distributed scoring and testing as well as crossvalidation 18 FAEHIM and Weka4WS 31 make WEKAavailable as a web service. Opensource data mining systems. Several well knownopensource data mining systems provide plugins toallow access to WEKAs algorithms. The KonstanzInformation Miner KNIME and RapidMiner 20 aretwo such systems. The R 23 statistical computing environment also provides an interface to WEKA throughthe RWeka 16 package. Scientific workflow environment. The Kepler Wekaproject integrates all the functionality of WEKA intothe Kepler 1 opensource scientific workflow platform.6. INTEGRATION WITH THE PENTAHOBI SUITEPentaho corporation is a provider of commercial open sourcebusiness intelligence software. The Pentaho BI suite consistsof reporting, interactive analysis, dashboards, ETLdata integration and data mining. Each of these is a separate opensource project, which are tied together by an enterpriseclassopen source BI platform. In late 2006, WEKA was adoptedas the data mining component of the suite and since thenhas been integrated into the platform.The main point of integration between WEKA and the Pentaho platform is with Pentaho Data Integration PDI, alsoknown as the Kettle project4. PDI is a streaming, enginedriven ETL tool. Its rich set of extract and transform operations, combined with support for a large variety of databases,are a natural complement to WEKAs data filters. PDI caneasily export data sets in WEKAs native ARFF format tobe used immediately for model creation.Several WEKAspecific transformation steps have been created so that PDI can access WEKA algorithms and be usedas both a scoring platform and a tool to automate modelcreation. The first of these, shown in Figure 11, is calledWeka Scoring. It enables the user to import a serializedWEKA model classification, regression or clustering or asupported PMML model and use it to score data as partof an ETL transformation. In an operational scenario thepredictive performance of a model may decrease over time.4httpkettle.pentaho.orgFigure 11 Scoring open sales opportunities as part of anETL transformation.Figure 12 Refreshing a predictive model using the Knowledge Flow PDI component.This can be caused by changes in the underlying distribution of the data and is sometimes referred to as conceptdrift. The second WEKAspecific step for PDI, shown inFigure 12, allows the user to execute an entire KnowledgeFlow process as part of an transformation. This enablesautomated periodic recreation or refreshing of a model.Since PDI transformations can be executed and used as asource of data by the Pentaho BI server, the results of datamining can be incorporated into an overall BI process andused in reports, dashboards and analysis views.7. CONCLUSIONSThe WEKA project has come a long way in the 16 yearsthat have elapsed since it inception in 1992. The successit has enjoyed is testament to the passion of its communityand many contributors. Releasing WEKA as open sourcesoftware and implementing it in Java has played no smallpart in its success. These two factors ensure that it remainsmaintainable and modifiable irrespective of the commitmentor health of any particular institution or company.8. ACKNOWLEDGMENTSMany thanks to past and present members of the Waikatomachine learning group and the external contributers for allthe work they have put into WEKA.Page 16Volume 11, Issue 1SIGKDD Explorations9. REFERENCES1 I. Altintas, C. Berkley, E. Jaeger, M. Jones, B. Ludscher, and S. Mock. Kepler An extensible system fordesign and execution of scientific workflows. In In SSDBM, pages 2123, 2004.2 K. Bennett and M. Embrechts. An optimization perspective on kernel partial least squares regression. InJ. S. et al., editor, Advances in Learning Theory Methods, Models and Applications, volume 190 of NATO Science Series, Series III Computer and System Sciences,pages 227249. IOS Press, Amsterdam, The Netherlands, 2003.3 L. Breiman, J. H. Friedman, R. A. Olshen, and C. J.Stone. Classification and Regression Trees. WadsworthInternational Group, Belmont, California, 1984.4 S. Celis and D. R. Musicant. Wekaparallel machinelearning in parallel. Technical report, Carleton College,CS TR, 2002.5 C.C. Chang and C.J. Lin. LIBSVM a library forsupport vector machines, 2001. Software available athttpwww.csie.ntu.edu.twcjlinlibsvm.6 T. G. Dietterich, R. H. Lathrop, and T. LozanoPerez.Solving the multiple instance problem with axisparallelrectangles. Artif. Intell., 89123171, 1997.7 J. Dietzsch, N. Gehlenborg, and K. Nieselt. Maydaya microarray data analysis workbench. Bioinformatics,22810101012, 2006.8 L. Dong, E. Frank, and S. Kramer. Ensembles of balanced nested dichotomies for multiclass problems. InProc 9th European Conference on Principles and Practice of Knowledge Discovery in Databases, Porto, Portugal, pages 8495. Springer, 2005.9 R.E. Fan, K.W. Chang, C.J. Hsieh, X.R. Wang,and C.J. Lin. LIBLINEAR A library for large linearclassification. Journal of Machine Learning. Research,918711874, 2008.10 E. Frank and S. Kramer. Ensembles of nested dichotomies for multiclass problems. In Proc 21st International Conference on Machine Learning, Banff,Canada, pages 305312. ACM Press, 2004.11 R. Gaizauskas, H. Cunningham, Y. Wilks, P. Rodgers,and K. Humphreys. GATE an environment to supportresearch and development in natural language engineering. In In Proceedings of the 8th IEEE InternationalConference on Tools with Artificial Intelligence, pages5866, 1996.12 J. Gama. Functional trees. Machine Learning,553219250, 2004.13 A. Genkin, D. D. Lewis, and D. Madigan. Largescale bayesian logistic regression for text categorization.Technical report, DIMACS, 2004.14 J. E. Gewehr, M. Szugat, and R. Zimmer. BioWekaextending the weka framework for bioinformatics.Bioinformatics, 235651653, 2007.15 M. Hall and E. Frank. Combining naive Bayes and decision tables. In Proc 21st Florida Artificial IntelligenceResearch Society Conference, Miami, Florida. AAAIPress, 2008.16 K. Hornik, A. Zeileis, T. Hothorn, and C. Buchta.RWeka An R Interface to Weka, 2009. R package version 0.316.17 L. Jiang and H. Zhang. Weightily averaged onedependence estimators. In Proceedings of the 9th Biennial Pacific Rim International Conference on Artificial Intelligence, PRICAI 2006, volume 4099 of LNAI,pages 970974, 2006.18 R. Khoussainov, X. Zuo, and N. Kushmerick. Gridenabled Weka A toolkit for machine learning on thegrid. ERCIM News, 59, 2004.19 M.A. Krogel and S. Wrobel. Facets of aggregation approaches to propositionalization. In T. Horvath andA. Yamamoto, editors, WorkinProgress Track at theThirteenth International Conference on Inductive LogicProgramming ILP, 2003.20 I. Mierswa, M. Wurst, R. Klinkenberg, M. Scholz, andT. Euler. Yale Rapid prototyping for complex datamining tasks. In L. Ungar, M. Craven, D. Gunopulos, and T. EliassiRad, editors, KDD 06 Proceedingsof the 12th ACM SIGKDD international conference onKnowledge discovery and data mining, pages 935940,New York, NY, USA, August 2006. ACM.21 D. Nadeau. Baliebaseline information extraction Multilingual information extraction from text with machine learning and natural language techniques. Technical report, University of Ottawa, 2005.22 G. PiatetskyShapiro. KDnuggets news on SIGKDDservice award. httpwww.kdnuggets.comnews2005n132i.html, 2005.23 R Development Core Team. R A Language and Environment for Statistical Computing. R Foundation forStatistical Computing, Vienna, Austria, 2006. ISBN 3900051070.24 J. J. Rodriguez, L. I. Kuncheva, and C. J. Alonso. Rotation forest A new classifier ensemble method. IEEETransactions on Pattern Analysis and Machine Intelligence, 281016191630, 2006.25 K. Sandberg. The haar wavelet transform.httpamath.colorado.educourses57202000SprLabsHaarhaar.html, 2000.26 M. Seeger. Gaussian processes for machine learning. International Journal of Neural Systems, 142004, 2004.27 C. Shearer. The CRISPDM model The new blueprintfor data mining. Journal of Data Warehousing, 54,2000.28 H. Shi. Bestfirst decision tree learning. Masters thesis,University of Waikato, Hamilton, NZ, 2007. COMP594.Page 17Volume 11, Issue 1SIGKDD Explorations29 N. Slonim, N. Friedman, and N. Tishby. Unsuperviseddocument classification using sequential informationmaximization. In Proceedings of the 25th InternationalACM SIGIR Conference on Research and Developmentin Information Retrieval, pages 129136, 2002.30 J. Su, H. Zhang, C. X. Ling, and S. Matwin. Discriminative parameter learning for bayesian networks. In ICML2008, 2008.31 D. Talia, P. Trunfio, and O. Verta. Weka4ws a wsrfenabled weka toolkit for distributed data mining on grids.In Proc. of the 9th European Conference on Principles and Practice of Knowledge Discovery in DatabasesPKDD 2005, pages 309320. SpringerVerlag, 2005.32 K. M. Ting and I. H. Witten. Stacking bagged anddagged models. In D. H. Fisher, editor, Fourteenthinternational Conference on Machine Learning, pages367375, San Francisco, CA, 1997. Morgan KaufmannPublishers.33 J. S. Vitter. Random sampling with a reservoir. ACMTransactions on Mathematical Software, 1113757,1985.34 I. H. Witten and E. Frank. Data Mining Practical Machine Learning Tools and Techniques with Java Implementations. Morgan Kaufmann, San Francisco, 2000.35 I. H. Witten and E. Frank. Data Mining PracticalMachine Learning Tools and Techniques. Morgan Kaufmann, San Francisco, 2 edition, 2005.36 I. H. Witten, G. W. Paynter, E. Frank, C. Gutwin,and C. G. NevillManning. Kea Practical automatickeyphrase extraction. In Y.L. Theng and S. Foo, editors, Design and Usability of Digital Libraries CaseStudies in the Asia Pacific, pages 129152. InformationScience Publishing, London, 2005.37 X. Xu. Statistical learning in multiple instance problems. Masters thesis, Department of Computer Science, University of Waikato, 2003.38 Y. Yang, X. Guan, and J. You. CLOPE a fast andeffective clustering algorithm for transactional data. InProceedings of the eighth ACM SIGKDD internationalconference on Knowledge discovery and data mining,pages 682687. ACM New York, NY, USA, 2002.39 F. Zheng and G. I. Webb. Efficient lazy elimination foraveragedone dependence estimators. In Proceedings ofthe Twentythird International Conference on MachineLearning ICML 2006, pages 11131120. ACM Press,2006.Page 18Volume 11, Issue 1SIGKDD Explorations
